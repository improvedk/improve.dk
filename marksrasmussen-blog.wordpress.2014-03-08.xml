<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2014-03-08 14:35" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Mark S. Rasmussen - Blog</title>
	<link>http://improve.dk</link>
	<description></description>
	<pubDate>Sat, 08 Mar 2014 14:35:01 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://improve.dk</wp:base_site_url>
	<wp:base_blog_url>http://improve.dk</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>orca</wp:author_login><wp:author_email>mark@improve.dk</wp:author_email><wp:author_display_name><![CDATA[Mark S. Rasmussen]]></wp:author_display_name><wp:author_first_name><![CDATA[Mark S.]]></wp:author_first_name><wp:author_last_name><![CDATA[Rasmussen]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>Arrival at Vegas</title>
		<link>http://improve.dk/arrivalatvegas/</link>
		<pubDate>Wed, 26 Jul 2006 02:01:47 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/26/arrival-at-vegas.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So I finally arrived at Vegas!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/pool1_4.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/pool1_4-300x199.jpg" alt="pool1_4" width="300" height="199" class="alignnone size-medium wp-image-1446" /></a></div></div>

<h2>Lack of space</h2>

<p>After a grueling trip of about 24 hours I finally arrived at our house in Vegas. As expected the overseas flight was a living hell due to my size and the lack of space in tourist class. To make it even worse, since I last flew with SAS, all passenger seats in tourist class now has their own little TFT monitor. Why is that bad? That is bad because these monitors run off a computer placed below one of the seats in the foot area. Naturally i got the seat which had the computer, so while I was already struggling with the lack of space, I now only had half the foot space that everyone else did.</p>

<p>On the plus side, all overseas SAS flights now have onboard internet via WIFI. How cool is that, surfing on the internet at an altitude of 30k feet?</p>

<h2>Immigration troubles</h2>

<p>At Chicago I almost didn't make it through immigration.</p>

<p>I had my Pokernet t-shirt on with a little Pokernet logo and some cards. Besides my t-shirt, the immigration officer could naturally also see that my destination was Vegas, so by putting 2 and 2 together, he figured i was headed there to gamble (duh). He politely asked me, 'Are you a professional gambler?'. I smiled and answered him honestly, 'No I am not'.</p>

<p>Officer: 'Are you here to play the WSOP?'<br/>
Me: 'Yes I am'<br/>
Officer: 'Did you put down the money yourself?'<br/>
Me: 'Yes i did'<br/>
Officer: 'So nobody is sponsoring your entry? You have paid everything yourself?'<br/>
Me: 'I won my entry in an online satellite tournament, so no, i didn't put down the 10 grand myself'<br/>
Officer: 'What site was that?'<br/>
Me: 'Party Poker'</p>

<p>And then he gave me the whole long speech. "You should now, you're really out on a line here". He warned me that they did not look kindly upon foreign poker players entering the US and playing their tournaments while bringing back home the money they won. He did let me go though. I have no idea where that speech came from. I guess it might be due to the Goodlatte bill that is currently a very hot topic in the House/Senate.</p>

<h2>Pokernet camp</h2>

<p>I am staying in the house that Pokernet has set up. We're probably around 10-11 guys staying there at the moment, and how can you expect anything but a mess when 10 poker playing guys are living together?</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/house1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/house1_2-300x199.jpg" alt="house1_2" width="300" height="199" class="alignnone size-medium wp-image-1448" /></a></div></div>

<p>The house is great. Everybody's beating me in pool, but whatever, it's great fun trying anyways :D We've got In'n'Out burgers nearby, a 7-Eleven, taco thingy, Burgerking and so forth.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/house2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/house2_2-300x199.jpg" alt="house2_2" width="300" height="199" class="alignnone size-medium wp-image-1449" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/house3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/house3_2-300x199.jpg" alt="house3_2" width="300" height="199" class="alignnone size-medium wp-image-1450" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1181</wp:post_id>
		<wp:post_date>2006-07-26 02:01:47</wp:post_date>
		<wp:post_date_gmt>2006-07-26 02:01:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arrivalatvegas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="pokernet"><![CDATA[PokerNet]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[arrival-at-vegas]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>475</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-08-06 11:51:33</wp:comment_date>
			<wp:comment_date_gmt>2006-08-06 11:51:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<b>Shuffle up and deal!</b>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Grand Canyon Trip</title>
		<link>http://improve.dk/grandcanyon/</link>
		<pubDate>Wed, 26 Jul 2006 00:25:44 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/26/grand-canyon-trip.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So today we decided to take a trip to the Grand Canyon just outside Las Vegas. I've been to the Grand Canyon once before on an earlier trip when I was seven, but honestly I couldn't remember it that well besides it being hot as hell and, well, grand.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_flight_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_flight_2-300x199.jpg" alt="gc_flight_2" width="300" height="199" class="alignnone size-medium wp-image-1459" /></a></div></div>

<p>We took the large package consisting of a 40 minute flight in a small plane that took us over the Grand Canyon to a small indian run airfield on top of the Grand Canyon edge, a busride along the edge of the Grand Canyon, a helicopter trip into the Canyon and finally a boatride on the actual Colorado River.

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_1_2-300x199.jpg" alt="gc_1_2" width="300" height="199" class="alignnone size-medium wp-image-1460" /></a></div></div>

<p>After we landed we got on a bus that drove us along the edge of the Grand Canyon into a supposedly native indian village. Like all american things, this was as fake as the average breast on a Las Vegas woman. I didn't even wanna go see it, I mean, the indian building was the most modern building we'd seen all day, far surpassing the airport buildings.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_2_2-200x300.jpg" alt="gc_2_2" width="166" height="250" class="alignnone size-medium wp-image-1462" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_3_2-200x300.jpg" alt="gc_3_2" width="166" height="250" class="alignnone size-medium wp-image-1463" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_4_2-200x300.jpg" alt="gc_4_2" width="166" height="250" class="alignnone size-medium wp-image-1464" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_5_2-200x300.jpg" alt="gc_5_2" width="166" height="250" class="alignnone size-medium wp-image-1465" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_6_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_6_2-300x199.jpg" alt="gc_6_2" width="300" height="199" class="alignnone size-medium wp-image-1466" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_7_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_7_2-300x199.jpg" alt="gc_7_2" width="300" height="199" class="alignnone size-medium wp-image-1467" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_heli1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_heli1_2-300x199.jpg" alt="gc_heli1_2" width="300" height="199" class="alignnone size-medium wp-image-1468" /></a></div></div>

<p>After taking the bus back to the indian airfield, we got into the helicopter that was awaiting us. This was my first time riding a helicopter, and all I can say is that my boyhood dream of becoming a helicopter pilot was enforced... Seriously, when (not if) I get rich, I'm gonna take that license, no matter what.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_heli2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_heli2_2-300x199.jpg" alt="gc_heli2_2" width="300" height="199" class="alignnone size-medium wp-image-1469" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_heli3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_heli3_2-300x199.jpg" alt="gc_heli3_2" width="300" height="199" class="alignnone size-medium wp-image-1470" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_heli4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_heli4_2-300x199.jpg" alt="gc_heli4_2" width="300" height="199" class="alignnone size-medium wp-image-1471" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_boat1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_boat1_2-300x199.jpg" alt="gc_boat1_2" width="300" height="199" class="alignnone size-medium wp-image-1472" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_boat2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_boat2_2-300x199.jpg" alt="gc_boat2_2" width="300" height="199" class="alignnone size-medium wp-image-1473" /></a></div></div>

<p>At the bottom of the canyon we got onto a pontoon boat that took us about a mile upriver. At that point the boat turned around and drifted slowly towards the camp again, while the guide told us about the history of the Grand Canyon.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_boat3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_boat3_2-300x199.jpg" alt="gc_boat3_2" width="300" height="199" class="alignnone size-medium wp-image-1474" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/gc_boat4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/gc_boat4_2-300x199.jpg" alt="gc_boat4_2" width="300" height="199" class="alignnone size-medium wp-image-1475" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1182</wp:post_id>
		<wp:post_date>2006-07-26 02:25:44</wp:post_date>
		<wp:post_date_gmt>2006-07-26 00:25:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grandcanyon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="grand-canyon"><![CDATA[Grand Canyon]]></category>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[grand-canyon-trip]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>$1500 NLHE WSOP Event #37</title>
		<link>http://improve.dk/wsop37/</link>
		<pubDate>Wed, 26 Jul 2006 02:48:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/26/1500-nlhe-wsop-event-37.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/wsop1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/wsop1_2-300x199.jpg" alt="wsop1_2" width="300" height="199" class="alignnone size-medium wp-image-1477" /></a></div></div>

<p>Finally the day arrived, I've just turned 21! At four minutes past midnight I registered for my WSOP Players card at the Rio, while being registered I got a good chat with the girl behind the counter, she laughed a bit when she saw my 'I support single moms' t-shirt - she said she liked it.</p>

<p>I also got an application made for my ITIN number, just in case I make a major cash in one of the tournaments, it would be a serious bad beat if I were forced to leave behind 30% of my winnings due to US tax laws.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/wsop2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/wsop2_2-300x199.jpg" alt="wsop2_2" width="300" height="199" class="alignnone size-medium wp-image-1479" /></a></div></div>

<p>I arrive at a semi-good table. There's about four players that I quickly recognize as being good players, whereof one of them has a highly tuned luckbox. The luckbox quickly becomes the chipleader at the table, bullying others around. There's no doubt that he was a good player, but seriously, he just hit his hands. There was also a noshow at my table that had yet to show up when I busted after about three and a half hours, he had around t300 left (starting stack = 1500). I guess he was a better player than me, he must've read Harrington, he played kinda tight.</p>

<p>The first guy went out after about 10 minutes in a sick sick hand. Two limpers (the luckbox in the BB) see a flop of 779r, they both get all in. The first limper shows 99 for the flopped full house, too bad that our luckbox just flopped quads with his 77! That is without doubt the sickest beat i've seen live, mind you that I haven't played much live though.</p>

<p>The luckbox quick get's irritated with me as i'm sitting a couple of spots before him, continuously stealing his blinds. It ends up in the inevitable blind battle where I raise with 44 (no spades). He calls. The flop comes QsJs8s. I try to make a CR/bluff, but unfortunately he pushes and I'm forced to fold, having about t1000 left.</p>

<p>After this battle I suddenly stop getting hands, i get absolutely nothing. And before i know it, blinds are at 100/200 and i'm sitting with like t600 left. It's foleded to me in LMP. I look down and see a nice couple of ladies and i push it in. It's folded around to the luckbox who again goes into the tank while giving me the smirky look. He calls about 400 chips more into the pot of about 900 and shows 75o. Great, I'm a good favorite with about 82%. Unfortunately the flop comes 725r, he flopped two pair. The turn brings another 5 which brings me down to a total of two outs, the last two queens. Unfortunately the river is a blank jack, and i'm eliminated from the tournament at around midways into the 100/200 level.</p>

<p>Also I just received a second confirmation email from Harrah's for my main event entry, they've suddenly moved my starting day from 1B to 1A. It doesn't matter much to me as i'm already in Vegas, but seriously, how can Harrah's change ones starting day three days before the tournament starts? What if I'd already made plans? This is no $1000 event we're talking about, this is the $10.000 WSOP Main Event. Once again Harrah's shows it's incompetence.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1183</wp:post_id>
		<wp:post_date>2006-07-26 02:48:55</wp:post_date>
		<wp:post_date_gmt>2006-07-26 02:48:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wsop37</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[1500-nlhe-wsop-event-37]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cash Session #1</title>
		<link>http://improve.dk/cashsession1/</link>
		<pubDate>Wed, 26 Jul 2006 13:31:43 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/26/cash-session-1.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So I finally got into my first ever real poker cash game at a casino. My main game is without doubt tournaments, I rarely play cash games as I don't think they're nearly as interesting, also I'm far worse at cash games than at tournaments. When I do get into cash games online, I usually play the NL25 games at Party, I've had lots of problems beating even NL50/100.</p>

<p>I was planning for playing the NL1/2 games in Vegas, but the Rio has 2/5 as it's lowest, and i didn't really want to travel further into the strip as I were going to the Rio anyways. So here I was, signing up with the brush for the first Vegas cash game, a $2/5 NL game with a max buyin of $500.</p>

<p>After my name was called for I was assigned a seat at table 199, we were playing 9-handed. I sat down, pulled up five benjamins (benjamins were live at the table, no other notes were allowed as table money) and put them on the table. Within five minutes the chip runner came and took three of my benjamins and turned them into chips. After tipping off the chip runner, I was ready to gamble.</p>

<p>Playing live cash was a lot different than playing online. Within five minutes I'd already categorized most of the players at my table. There were a single female at the end of the table who clearly only played the nuts, she must've had a VPIP of like 5-10%. Then there were like 3-4 people who limped anything. And had they thrown their first nickel into the pot, they were calling most raises behind. Lucrative LPP's, they were.</p>

<p>Also there were three guys who had clearly played some time together as the chatter was going on lively, just as they also ordered drinks én masse.</p>

<p>I had full control over the table, I really felt comfortable playing even though the stakes were much higher than my 'usual' game. I worked my stack up to about $1k when I ran into a very nasty hand. At this point in the game, one of the LPP's had left the game, and instead another serious very tight rock had taken his seat. Like the nut peddling woman, this guy also only played prima hands. So i pick up QsQc in the CO. A couple of limps to villain1 (the rocky man, stack ~ $600) who also limps. Another limp before the rocky woman (villain2, stack ~ $110) who also limps. I raise it up to $35 to get the worst limpers out. I get two callers, both rocks, great. The flop comes 5d2cTd, and the rocky man bets $80 rather quickly. The woman calls all in and the action's on to me. Now, I didn't fear the woman as she was already all in and she was shortstacked, I was more careful with the guy as he had a healthy stack himself, and i knew he had to have something to bet out there. I called to keep the pot size under control. The turn brought the money card: the Qd! The guy checked it over to me, i bet $200. He thought for a couple of seconds before he called. The river brought the case Ad. The guy instantly pushed his last chips, around $300. FUCK. I went into the tank. Again, this had no influence on the woman at all, I was only thinking about the man, what did he have? He limped preflop, that could've been AK/AQ maybe, definitely nothing worse than that. The way he played it, it would've had to be suited, and since the Ad was on the board, it couldn't have been in diamonds, so no flush. I gave him respect and gave up my hand. He flipped over KdKc for the rivered nut flush. The woman then flipped over AsAh for a rivered set of aces. Wow, talk about a rigged fucked up game. AA vs KK vs QQ, and both AA and KK smooth limped / called preflop, crazy stuff!</p>

<p>This terrible hand brought me down to around $500 again, my starting stack. To avoid tilt and too much thought in general, I left my chips at the table and went to get something to eat. Clever decision.</p>

<p>Later on I had another interesting hand. I get Qs9s on the button. Everybody limps before me, literally, everybody, so i limp with the hopes of flopping a flush, straight or something good. The SB raises it up to $20, and again everbody limps, as do I. The flop comes QhAh9h which gave me bottom two pair, though it was a monotone board. It's checked around to a semi-aggresive player that had a serious tendency to overplay his hands, he bets around $200 into the middle. The pot is like $160 before this. Now what would he bet so hard here? He certainly wouldn't do it with the made flush, most likely it's a hand that's scared of the flush, it could easily be AK. To shorten it up, i go into the tank and conclude that the risk of him having AQ / the made flush is simply too great, so i fold. The rocky guy from earlier instapushes his stack of like $1k, and the action's back to the semi-aggresive player. He thinks for a long timem and finally mucks his hand, he shows it to the table... AdQd. The rocky guy won't tell what he had. It is however later on suggested that it was a bad laydown, I'm very satisfied with my laydown though.</p>

<p>As the night progressed we got increasingly shorthanded, much to my joy. We played 5-handed for a long time, and I loved it since clearly nobody else knew how to adapt. In this period of time i brought my stack up to around 950ish again. The chat was getting really friendly since we'd all been playing together for like 5-6 hours, only one of the guys were talking in toungs sine he'd been drinking all night.</p>

<p>It was clear that the people respected me and my game very much, and they could see that I was an above average player. At one time one of the guys (Kyle) asked me where i was from. I gave him a taunting smile instead of answering (he could see the joke), so he started guessing: "Sweden? Norway? Finland?" I told him to try the last scandinavian country. A couple of seconds passed before he finally guess, "Holland?".</p>

<p>I ended the session at around 4:45 AM when our table broke up due to it being only 4-handed.</p>

<p><strong>Result for this session: </strong><span style="color: #008040;"><strong>$422</strong><br/>
</span><strong>Overall cash game result: <span style="color: #008040;">$422</span></strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1184</wp:post_id>
		<wp:post_date>2006-07-26 15:31:43</wp:post_date>
		<wp:post_date_gmt>2006-07-26 13:31:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cashsession1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[cash-session-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[Mads]]></wp:comment_author>
			<wp:comment_author_email>djbobo@mailinator.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dorup.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-07-26 20:58:03</wp:comment_date>
			<wp:comment_date_gmt>2006-07-26 20:58:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>What Happens In Vegas Stays In Vegas</title>
		<link>http://improve.dk/whathappensstays/</link>
		<pubDate>Thu, 27 Jul 2006 15:07:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/27/what-happens-in-vegas-stays-in-vegas.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So tonight I woke up at 7:30 PM for some reason. I have no idea how I could sleep that late, I mean, it wasn't more than like 6:30 AM when I got back from the Rio last night. But whatever, it was great to get some sleep. At around 10 PM we went to the Pokerteam DK party at their house on the other side of the strip. Great party, lots of danish poker players, cool to have a danish gathering. Norsemen were holding their own party in a house right next to us. It was also cool to put faces on guys like bad_ip and zweig, they were much younger / teenageish than I'd imagined.</p>

<p>Due to a promise we all made, I will have to sum up the rest of the night in the following picture:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/spearmint1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/spearmint1_2-300x199.jpg" alt="spearmint1_2" width="300" height="199" class="alignnone size-medium wp-image-1486" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1185</wp:post_id>
		<wp:post_date>2006-07-27 17:07:45</wp:post_date>
		<wp:post_date_gmt>2006-07-27 15:07:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>whathappensstays</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[what-happens-in-vegas-stays-in-vegas]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>477</wp:comment_id>
			<wp:comment_author><![CDATA[Gene]]></wp:comment_author>
			<wp:comment_author_email>anders_nielsen@bigfoot.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pokerland.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-07-28 11:20:18</wp:comment_date>
			<wp:comment_date_gmt>2006-07-28 11:20:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sjuft!!!<br />Hope you guys are having a good time :-) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Cash Session #2</title>
		<link>http://improve.dk/cashsession2/</link>
		<pubDate>Fri, 28 Jul 2006 09:15:36 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/28/cash-session-2.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So today I got up a bit earlier, at around 4 PM. At about 9 PM I took a cab into the Rio together with a couple of the other guys to pick up my Main Event registration, this time there were no problems, thank god.</p>

<p>I decided to sit down for some cash games since I was nowhere near ready to head for bed, so I bought into the usual 2/5 NL game for $500. Today I got a somewhat worse table than last time, worse in the way that people were a lot better. Most of the guys at the table knew how to play, though only a couple seemed to be really good. There were a couple of nits among them, one guy constantly complaining about everything, even when I politely told the table that I had seen the color of a card the dealer had dealt. He asked me which color it was, "Red", "Haha, that's easy to say, they're both red" - well excuse me, it's fine with me if you wanna play those cards when half the table knows about it.</p>

<p>I catch no cards at all, I just sit tight and blind down. There's a friendly young guy to my left who's clearly a good player who I'd chatted a bit with. I get 72o in the BB, he raises it to 20 UTG, everybody folds to me, I call. The flop comes Kd5c2s. Check, he bet's 30, I call. Turn comes with a blank, something like 8h. I bet out 50, he thinks for a short while and then calls. The river comes with another blank, a 3 of some kind. I bet out 80, I'm trying not to make it too large, i want it to look as if I'm milking him with my flopped set. He goes into the tank, looks at me - I just smile back at him. He finally mucks K9o, and he's clearly frustrated when i table my 72o. I had to loosen up the table a bit, it was simply getting too tight'n'nitty.</p>

<p>There's sitting this donk a couple of seats to my right, he's the only real donator at the table. He's just won a major put with a runner runner flush against another guys TPTK, allin on the turn. I get QcQs in EP, raise to around 35. Two callers, including the donkey. Flop comes something like Td5c3c, a perfect safe flop for me. I bet out 3/4 pot, he calls. Turn comes with the 8c, I bet out around 1/2 pot, he calls again. River comes with a complete blank, and this time I bet out around 1/2 pot again. He ponders for a couple of seconds and then announces "Call". I was pretty sure I had him beat, until he tables Kc6c for the second nut flush. Now, I could handle being beat, but why the f*** could he not just bet/raise his hand so he would get paid? Damned donkey.</p>

<p>Down to around 260. I get KK in the EP, I raise it to 40, donkey calls. Flop comes very safe again, Jh5s7d, the pots around 100. I bet around 80, and the donkey moves all in. Since i only had around 260 from the beginning, I am now facing a rather large pot with a short stack, so naturally I have to call, again I expect i'm good, he probably has something like AT. Unfortunately he tables 55 and I'm dead.</p>

<p>Overall a crappy session. I had okay control over the table, flopped pretty good, caught some okay hands at times, but constantly someone else outflopped me.</p>

<p><strong>Result for this session: </strong><span style="color: #ff0000;"><strong>$647</strong><br/>
</span><strong>Overall cash game result: <span style="color: #ff0000;">$225</span></strong></p>

<p>The incompetence of most dealers continue to amaze me. I've had several dealers that were simply too slow and inexperienced to deal a poker game. Some of them are so fat that they can't reach more than halfway around the table compared to others, again slowing the game down. Also today I had a situation, a lot of limpers, somebody raises to 15, a lot of callers, somebody calls all in for $3 more. Then the dealer stops, "I don't even know if that's a raise, anybody know?", dude, that's an overcall!</p>

<p>Of course there are also positive moments. I had my best dealer ever today, a guy called James from Sudan. He dealt those cards at amazing haste, had total control, always great and fast information, "Raise it up, call, call, fold, three to the flop" and so forth. Later on I had an asian woman, Mimi, incredibly sweet. Not the fastest dealer of all, but constantly smiling at people, even the dorky nits. I just couldn't help tipping her a dime when she left, saying she did a good job.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/wsop3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/wsop3_2-300x199.jpg" alt="wsop3_2" width="300" height="199" class="alignnone size-medium wp-image-1488" /></a></div></div>

<p>Tomorrow is the big day. Tomorrow is my main event day. Tomorrow is the day my luck turns. Tomorrow is the day I'm gonna build my chipstack through the roof.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1186</wp:post_id>
		<wp:post_date>2006-07-28 11:15:36</wp:post_date>
		<wp:post_date_gmt>2006-07-28 09:15:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cashsession2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[cash-session-2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Main Event!</title>
		<link>http://improve.dk/mainevent2006/</link>
		<pubDate>Sun, 30 Jul 2006 15:06:33 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/30/main-event.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today was the big day. Today was the day that I was going to play the WSOP 2006 Main Event with a $10k buy in!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/day1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/day1_2.jpg" alt="day1_2" width="512" height="768" class="alignnone size-full wp-image-1491" /></a></div></div>

<p>I guess it was a bad "decision" to only sleep 5 hours that night. I woke up at around 6 AM and couldn't sleep any more. Not because I was overly nervous, though I guess the excitement might've played in unconsciously.</p>

<p>I got at my table at about 11:50 AM, pretty unknown table, no one I recognized, I suppose that's good. I quickly took the lead at our table, I was clearly the one playing the most aggressive game. I raised a lot of drawing hands, TJ in position, 67s and so forth. I took down a lot of minor pots, including a sizeable 3k pot towards a 2+2'er sitting to my left (Durron597).</p>

<p>At one point we got a new player to the table, a real American original. He was constantly laughing in a dumb way, acting kind of retarded. He'd painted his fingernails white with royal flush symbols on each fingernail on both hands, yuck! At one point Norman Chad came over to me asking why I'd misspelled "Scrub" on my cap (I had a cap with the text "SKRUB" on it), one of the production managers had seen it and wondered what the story was. He asked if it was because I was one of those dumb internet qualifiers (in a jokingly way). Of course I answered, "Yeah, I AM one of those dumb internet qualifiers, though that isn't the reason for the misspelling". And then i give him the story of it being a Danish poker slang word for having luck / a good run of cards. The original went totally nuts when Norm came over talking to me, he was totally excited that one of the known ESPN commentators was at our table, so he made him aware of his fingernail painting, obviously very proud of it. Before long he'd convinced Norm to get the ESPN TV crew over to film it. While this was going all, I, together with my end of the table, were laughing our buts off.</p>

<p>After the first break I got absolutely no hands. I tried squeezing the pot sometimes but it seemed like the table had picked up on my style, and people weren't playing nearly as scared as they began with, so all in all I had to slow down a touch. After about 6 hours or so from the start I was moved to table 128, having about 15k in chips. This table was a catastrophe for me position wise. On my direct right were <a href="http://en.wikipedia.org/wiki/Norm_MacDonald" target="_blank">Norm MacDonald</a>, and two spots to my left were <a href="http://pokerdb.thehendonmob.com/player.php?a=r&amp;n=42675" target="_blank">Mark Vos</a>.</p>

<p>Norm had around 45k in chips, and Mark had around 35-40k also, they were without doubt the two chipleaders of the tournament, and I was sitting right in between, great!</p>

<p>I still didn't pick up any hands, so I was just sitting tight. I tried squeezing a couple of times as well as bluffing it down on the flop, but the players at this table were far better players than on my first table, so it was a lot more difficult.</p>

<p>After about 30 minutes came a crazy hand. Blinds are about 50/100. Norm raises it preflop, Mark is the sole caller. The flop comes 9QJ. Norm bets. Mark raises. Norm thinks for a bit and then pushes all in. The all in push from Norm was a major overbet. Mark thinks for about a minute before he calls and tables QJ, beating Norms black aces. This was a major call for Mark, top two is a great hand, but 9QJ is a very dangerous flop, and Norm could easily have had a set, even KT was possible. No help for Norm and he's almost out, Mark doubling up to an incredible chiplead. Norm is steaming and he plays a couple of terrible hands and ends up busting with KK towards an Ax hand catching an ace.</p>

<p>Luckily Mark was playing very tight passive after gaining the massive chip lead, I feared he'd be raising me out of most pots, luckily he didn't. A new guy joined our table in Norms place, Flaminio from Italy. Very cool dude, got a good chat with him and he rooted for me when I was in tight spots. Chatting it up with players during the poker play is one of the greatest moments when playing poker. Although we're battling it out against each other, you make some great friends.</p>

<p>The rest of my time at table 128 wasn't really that spectacular, I didn't get any great hands (my best hand all day was QQ), so nothing special really happened. At one point I had around 17k, I raised it preflop with A9o in MP, one guy called from the button. Flop comes three rags, 256 or something like that. I bet out around half pot. He comes over the top with a sizeable bet. I can't really figure out what hand he should have that would've hit that flop. A set wouldn't raise, on overpair would've raised me preflop. I put him on TJ-AK, some kind of overcard combination. I come over the top. He gets into the tank, thinking for a long time before he pushes his last chips in. I instamuck while puking into my water bottle. After this i had around 7k chips left.</p>

<p>I worked my way up to around 11k in chips before i got moved to my last table of the day at around 12 AM. This new table was a lot better for me. The players could clearly play poker, but they were so easy to read, and they were playing very scared. I picked up a lot of pots by simply playing the players. I received no cards at all during these final four hours, but i really ruled the table. When we had about 30 minutes left it got even better, everybody were playing soooo scared since they wouldn't want to bust 30 minutes before we ended the day.</p>

<p>At one time i raised with QJ in LP (i had around 17k). A guy in the SB looked at me while thinking for some time. He sighed, really letting me know that he didn't like the situation. Finally he said "oh what the heck" and shoved in his chips. I instamucked. He was so clearly acting, and his hand was shaking like a bunny having sex, it was so obvious he had a great hand. He tabled AA while looking a bit sad that he didn't get my call. He asked me if there was any amount I would've called. "Nope, you shake too much". Clearly he was not aware at all that he was shaking, and even less of it being a tell. Normally I wouldn't notify a player of me picking up their tells, but we had 20 minutes left of the day and all odds are against me ever playing with him again. This also enabled me to constantly hit his blind and push him off hands as he was clearly scared of me.</p>

<p>The day ended with me having 18.425 chips, about 2/3rds of the average of about 27k. I am extremely satisfied with my play during the 1st day of the main event. This was without doubt the best poker I had ever played! I got no cards all day. I had no real hands that made my day, most of it was simply me playing the people instead of the cards. What surprised me the most was the fatigue such an event imposes upon you. I mean, how hard can it be to play cards for 16 straight hours? Pretty god damn hard! You have to be constantly concentrated for 16 hours straight, follow the action, remember all action and everything. From about 12 AM everybody were yawning. I was so ready to sleep when we were done at about 4 AM.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1187</wp:post_id>
		<wp:post_date>2006-07-30 17:06:33</wp:post_date>
		<wp:post_date_gmt>2006-07-30 15:06:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mainevent2006</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[main-event]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Santana</title>
		<link>http://improve.dk/santana/</link>
		<pubDate>Sun, 30 Jul 2006 17:21:04 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/30/santana.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When I went to bed yesterday (after the Main Event) at around 7 AM, I didn't think of setting my clock. I mean, I didn't have to get up before around 5-6 PM, I'd be long awake before that.</p>

<p>Anyways, someone knocks on my door hard while I sleep. I look at my cellphone to see the time, my eyes are all hazy. Hot damn, it's like 6:25 PM, yikes, I guess I really needed that sleep. We had to be at the MGM Grand at 7:30 PM since we were going to see Santana live that night.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/Santana_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/Santana_2.jpg" alt="Santana_2" width="800" height="533" class="alignnone size-full wp-image-1493" /></a></div></div>

<p>We couldn't get a cab, so we decided to go out to the street and see if we could get one. After standing there for like 30 minutes without being able to hail a cab we're getting kind of nervous as the clock's around 7 PM, and it takes about 20 minutes to get to the strip. We decide to walk into the nearest 7-eleven and see if we can get a ride with someone. After a couple of tries we get in touch with an American guy that says that although he has a pickup, he'd take us, although he'd have to talk with his wife first. He goes outside, has a quick chat with his wife, and then he waves us out. Really cool guy / couple, they drove us straight to the MGM Grand entrance. While he insisted on not taking any money, I threw $50 into the backseat of his pickup and said I insisted. He smiled, gave me his hand and said thanks.</p>

<p>We quickly met up with the others and went into the MGM Grand Arena. Damn what a place. That hall is so unbelievable big, and it was inside the MGM itself, everything in Vegas is just extremely large. Mark Hamilton was warming up, I guess he was okay, but the sound was far too loud so it really ruined the experience.</p>

<p>At about 9 PM Santana came on. It started out with a video of a white peace dove flying, it was so grand a scenery / experience, one couldn't avoid getting goose bumps simply due to the feeling. It's impossible to describe a concert, but it was breathtaking, Santana is nothing short of amazing on the guitar. I really liked his small speeches in between the songs. After a short speech of us having to be thankful to god for being born into this world, he said, "We are opposite of George Bush... Compassion. Humanity. Kindness... We are opposite of George Bush". The hall went into an uproar of applause, it was so great.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1188</wp:post_id>
		<wp:post_date>2006-07-30 17:21:04</wp:post_date>
		<wp:post_date_gmt>2006-07-30 17:21:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>santana</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="post_tag" nicename="santana"><![CDATA[Santana]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cash Session #3</title>
		<link>http://improve.dk/cashsession3/</link>
		<pubDate>Sun, 30 Jul 2006 15:40:02 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/30/cash-session-3.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After Santana I went to Rio with Abuello to see if we could get an update on how Mika (Miwala) was doing in the Main Event, and Danes in general. While we didn't find Mika (later on I found out he busted earlier on to a nasty rivered flush vs. rivered full house hand), I did meet Hostrup (Carl) waiting for cash game entry. I signed up for the $2/5 NL game also.</p>

<p>After about 10 minutes I got called over the speaker, my seat was ready. Luckily I got a seat at Hostrups table, in fact I got the seat directly right of Hostrup. It was seat #1, yuck, the seats right next to the dealer sucks.</p>

<p>The game was really juicy, there were some really awful players at our table. Carl and I really lagged up the game, raising a lot. We also Mississippi straddled each time we could (explanation later on). No one could blame us for colluding, we really battled it out the two of us. At one point i loose around $300 in a pot. I can't remember exactly what happened, but I semi-bluff reraise Carl all in on a board like xxJ with 77 (both X's being lower than 7). He calls and shows QQ, takes down the pot. I rebuy for another $500.</p>

<p>At one point I get into a pot with an obviously non-experienced player sitting across me. He has around $400, I have about $1.000. I can't really remember neither the hand nor the action, but that's not the point of the story either. I bet on the flop, and he goes into the tank, clearly pondering of doing a reraise. He asks me how much I have left, I simply answer, "I've got you covered". He insists on hearing how much I have, fair enough, "I have about a k" (k = $1.000). He then thinks a bit longer, and then he asks me how many bills I have. Seriously, that's one retarded question, it does not friggin matter, I have him covered. So now I answer him in a bit more irritated way, "It does not matter, I have you covered!". He continues to insist on knowing how many bills I have. I end up counting the bills and more or less yelling it at him. He then thinks for a bit longer and AGAIN he asks how many chips I have. I HAVE YOU COVERED; THAT IS ALL YOU NEED TO KNOW!". He then goes on defending on why it matters to know how many bills I have. Oh my god I got upset with this guy. I have you fucking covered, would you please just act and shut the fuck up? He ends up folding, clearly irritated over being taught how the mechanics of the game. I don't mind as I was on a pure bluff, I really considered showing my hand as that would've put him on an incredible steamer. I didn't though as I feared it would've resulted in him leaving the game.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/07/money_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/07/money_2.jpg" alt="money_2" width="800" height="533" class="alignnone size-full wp-image-1495" /></a></div></div>

<p>The session ends in me winning a brutal hand over Hostrup (sorry). I get KQo in the SB and bet out 35 (I were first due to a Mississippi straddle). Hostrup is the sole caller. Flop comes with a beautiful 9TJ, two of a suit. I bet out around $60 I think. Hostrup then raises to $200. Earlier on Hostrup has pushed me out of a lot of pots, including a very similar situation where he showed a flush draw. So I mutter, "You have the flush draw, eh?". Make it $500! Hostrup thinks for a moment then pushes his stack in, I guess he had around $7-800, I instacall. He shows black queens for an overpair + open ended straight draw. The turn brings a 9 which pairs the board, yuck. At this point I already imagined the Q/9 on the river to fill up his boat. I was excited over the 4 that came along on the river. A $1500 pot is not that normal in a $2/5 game.</p>

<p>A Mississippi straddle is a weird straddle. It originated on the each coast and is usually only played there. It enables you to straddle when you're on the button (you get 1st choice over an UTG straddle). It effectively improves your already good position as the SB is now first to act preflop (worsening their already terrible positions), and at the same time you double the stakes. So in a game were you have an edge, this is an absolute must-do. You improve your position and heighten the stakes, an even better opportunity to get the fishes money.</p>

<p><strong>Result for this session: <span style="color: #008040;">$1327</span> </strong><br/>
<strong>Overall cash game result: <span style="color: #008040;">$1102</span></strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1189</wp:post_id>
		<wp:post_date>2006-07-30 17:40:02</wp:post_date>
		<wp:post_date_gmt>2006-07-30 15:40:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cashsession3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[cash-session-3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cash Session #4</title>
		<link>http://improve.dk/cashsession4/</link>
		<pubDate>Mon, 31 Jul 2006 14:04:52 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/07/31/cash-session-4.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I got up at my usual time today, around 6 PM. We were headed to Ballys to get drunk and maybe play some drunk poker. We got a seat in their 1/2 NL game pretty quickly.</p>

<p>I didn't really like Ballys poker room. It didn't consist of more than 6-7 tables max so it's a small room. The chairs were very good, a lot better than at the Rio. The tables on the other hand, I hated the felt. It's hard to describe, but it felt a lot softer than at Rio, meaning that cards were more often sticking to the felt, chips weren't sliding the same way. I can't believe that I at my fourth cash game session already talk about how minor differences of the table felt actually has an influence on my liking of the room, I shouldn't be noticing this before I'd become a regular nit at a poker room.</p>

<p>I dumped about $450 at the table playing totally laggy, straddling, minraising, bluffing nits and everything... With no success. Most of my money ended up at Mikael and Rune so I guess it's not totally wasted.</p>

<p>After leaving the poker table we went to play some video poker. Video poker is absolutely GREAT if you want to get drunk. You just sit up at the bar and play. While you play, drinks are on the house. I ended up being stuck about $60 playing jacks or better, but if you play it optimally (I did not) you can really get wasted for as little as $20.</p>

<p>After Ballys we were supposed to go the the Vodoo Bar at the Rio, but after a thorough consideration of our looks we came to the conclusion that there was no way in hell we were going to be let in. Oh well, some stayed at the video poker tables, I went with Helge and Thijs to the Rio cash games.</p>

<p>I got a seat at the 2/5 NL game right away (there's never any queues at 2 AM). The table actually wasn't that juicy, there were a couple of good players, and the rest weren't exactly good, but they knew how to play. There were one real nit at the table. He was a typical WPT look a like, big glasses, cap, very serious look at his face all the time. He took like 5 minutes considering to call a $40 raise preflop, finally folding in a really provocative manner. He was so pissed with me since I constantly Mississippi straddled into his big blind, I was really working him up to a major steamer, unfortunately I never got his stack.</p>

<p>To my direct right was a totally wasted American, great guy. We chatted a lot, he was convinced that I was an online player on the Fortune network since he had this Danish guy from Aarhus that had his number dialed when he played online. I kept refusing it, but he didn't really trust me. I had great success in manipulating his play by chatting to him through the hands, I got him to pay me off on my set in a pot of around $350.</p>

<p>There weren't any really big hands this session. I won a lot of minor pots, winning a couple of okay pots with TPTK and so forth. All in all I worked my stack upwards of around $1k. I left at 6 AM since it was getting late and the table really wasn't juicy any more. The wasted American had left, the WPT hero was becoming more and more nitty and there weren't any real donators left.</p>

<p>I got an offer of $5k for 50% of my WSOP ME winnings that I declined. I can't say if the offer really was for real, but my read on the guy was that he was the real deal. I declined it as I don't really need $5k, and I believe that my current position is somewhat more worth. I mean, I've got about 3/4 average stack (18.5k / 26k-ish) and I don't really feel outclassed yet.</p>

<p><strong>Result for this session: <span style="color: #008040;">$466</span></strong><br/>
<strong>Overall cash game result: <span style="color: #008040;">$1568</span></strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1190</wp:post_id>
		<wp:post_date>2006-07-31 16:04:52</wp:post_date>
		<wp:post_date_gmt>2006-07-31 14:04:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cashsession4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[cash-session-4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>478</wp:comment_id>
			<wp:comment_author><![CDATA[Clemen]]></wp:comment_author>
			<wp:comment_author_email>clemen@gronver.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-08-02 21:43:55</wp:comment_date>
			<wp:comment_date_gmt>2006-08-02 21:43:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jeg havde sku taget de 5k]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Nothing Much...</title>
		<link>http://improve.dk/nothingmuch/</link>
		<pubDate>Tue, 01 Aug 2006 07:58:24 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/01/nothing-much.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>... happened today. I got up early (around 2 PM) as I really needed to be able to go to bed early tonight. Tomorrow is the second day of the WSOP Main Event tournament. They're expected the day to last around 15 hours like the first day, so I will need to be well rested, unlike on day one.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/coins_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/coins_2-300x225.jpg" alt="coins_2" width="300" height="225" class="alignnone size-medium wp-image-1557" /></a></div></div>

<p>I went to the New York New York tonight for a dinner party arranged on the 2+2 forums. We met up at the ESPN Zone and got a couple of beers, some above average fast food and then we split up again.</p>

<p>I bought myself a nifty little camera today (Sony DSC-W50) today that is small enough for me to fit it in my pocket. This means I'll be able to take a lot more of pictures during the day as my main camera (Sony DSC-R1) is a bit too large to bring into the Spearmint and such places.</p>

<p>I'm off to bed now (1 AM). We're taking a cab to the Rio tomorrow at around 10 AM, hoping to be able to get some breakfast in there before the crowd starts moving in.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1191</wp:post_id>
		<wp:post_date>2006-08-01 09:58:24</wp:post_date>
		<wp:post_date_gmt>2006-08-01 07:58:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nothingmuch</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[nothing-much]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Main Event Day 2</title>
		<link>http://improve.dk/mainevent2/</link>
		<pubDate>Thu, 03 Aug 2006 03:53:46 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/03/main-event-day-2.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><i>I made it!</i></p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/day3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/day3_2-300x225.jpg" alt="day3_2" width="300" height="225" class="alignnone size-medium wp-image-1553" /></a></div></div>

<p>Before starting on day two, I made myself the promise that I would get a good nights sleep this time, last time I only got about four hours. So I went to bed at around 1 AM that night, falling asleep very quickly while watcing South Park episodes on my laptop. Perfect.</p>

<p>I woke up three hours later at 4 AM. Dammit, this is just not happening. Luckily I fell asleep again.</p>

<p>One hour later I woke up for good. I tried sleeping, but everytime I was close to sleeping, someone made a big roar from the living room in the house (there's always somebody who's awake in the camp). I have decided that if I make it through day three, I'm going to get myself a room at the Rio. After day three we will be playing every day until the 10th of august, so it'll be important that I get some rest.</p>

<p>Before we started, I said to Morten (Abuello) that I was either going out of this day with $100k or with $0. This was my way of saying that I do not care if I bust out early. I don't want to just fold my way through this tourney, just making it into the money. I'm going for the kill. I started out with $18.425, blinds being 250/500 + 50 ante.</p>

<p>Let me start out by saying that I do not take notes during my play, so remembering hands can be quite difficult. As so, many hands will just be vague memories though I will try to get the important factors in.</p>

<p>I certainly proved my statement since I was all in three times during the first five hands. First hand I get is <strong>KcQc</strong>, I raise it up in LP after a couple of limpers. I get a single caller. Flop comes an incidbly beautiful <strong>TcJs7c</strong> giving me not only the second nut flush draw, but also the open ended nut straight draw. I bet out around 3/4 of the pot, pretty hard. He calls. I can't really remember the turn, but it's a total blank like the <strong>5h</strong> or something like that. Now the opponent bets out, I think for about 10 seconds before I push it all in. He folds.</p>

<p>Next hand I get <strong>TsJs</strong> in LP. There's about 6 limpers to me (who would've though this is a $10k buyin tournament?) so I limp. Flop comes something like <strong>Tc6sQs</strong>, pretty good. It's checked all the way around. Turn comes with another spade, blank otherwise. IIRC, I bet, get raised, I push all in, he folds.</p>

<p>A couple of hands go by when I get a red pair of threes: <strong>3h3d</strong>. I raise it up from EMP, get a single caller in the blinds. Flop comes <strong>Kh2d7c</strong>. He bets out about 2/4 of the pot. Now I don't know why, but my read (after only 4 hands previous to this one) and my instinct tells me that he is weak, so I call with the intention of making a move on him on the turn. The turn comes with the most beautiful card ever: <strong>3s</strong>. He instantly pushes... I instantly call and shows him the set of threes. He's devastated as he turns over his AKo and realizes that he's drawing dead. I rake in yet another nice pot. I get a nice start, being up to around 40k after a very short time period.</p>

<p>Today was the first time ever that I wore sunglasses during play. Up until now I'd been kinda sceptical about it, didn't really think it'd make a difference. Boy was I wrong. Wearing the sunglasses made an enormous difference. I suddenly had the ability to look and stare at everybody at the table without them knowing. Also I recognized that nobody were able to stare me down as they otherwise could when I weren't wearing the sunglasses. On the contrary I was much better at staring at them, probably because I subconsciously realized that they couldn't look at me in the same way.</p>

<p>At one point I get a black pair of sevens: <strong>7s7c</strong> in LP. I raise it up. A new internet pro-ish guy sitting in seat one pushes his short stack of around 12k into the middle. Folded around to me. This player had been at my table for around 30 minutes, he'd made a lot of correct shortplay moves, pushing it in LP, pushing into weak preflop raises and such. All this made me pretty certain that he was a good player, and therefor I knew that he'd make this move on me with pretty much any pair, all aces, no matter the kicker, and a lot of hands like TJ, KJ and the likes. So I called with my sevens. I clearly announced 'Call' at the table, wherafter the dealer knocked in front of me, signalling for us to show our cards. I flipped my cards over, placing them in front of me, but still near me. As the other guy was turning over his cards, the dealer suddenly takes both my cards, flips them over and mucks them. The table broke out into an uproar. I had clearly announced CALL, and several people at the table confirmed this, even those at the other end of the table. I called my hand, black sevens, and so did about three other people at the table that had clearly seen my hand when I flipped it over. Now some guy to my right starts talking about it being a dead hand as it had touched the muck - which is the correct ruling albeit extremely unfair to me as this was 100% a dealer error. Luckily he didn't really force it through, and while the dealer looked kinda embarrased (although he at no point excused to me), he started wading through the mucked cards to find my black sevens. While he looked for my sevens, he also showed up a red seven, removing one of my outs. The dealer finally found my cards and placed them on the table, signalling to the other guy that he should flip over his cards (he seemed afraid to do so, with good reason). He flipped over AKo, a classical coinflip. Flop + turn were blanks, unfortunately the river ace gave him the winning hand and he won a nice pot of around 25k.</p>

<p>There can and should be no doubt that I were extremely lucky when I drew my table on the end of day 1A. The table consisted purely of no-names, and there were not a single player that I really feared. Most of them played ABC poker, and most were a bit too weak for their own good. I'll try to explain a couple of the key persons at the table.</p>

<p>To my left was sitting an old gentleman, I'd guess he was around 65 - I didn't ask. He was a great player to have at the table. Besides him being a really friendly guy, he was playing very usual tight ABC poker - very common to the elder generations of players in my experience so far.</p>

<p>To my right were an OK guy, he played his hands too weak, was very easy to run over during hands and so forth - most of the players at the table were exactly like this guy.</p>

<p>Further to my right was a shortstacked guy (he was the one that mumbled about the dead hand rule), he probably had around 15k when he entered today. At no point did he have more than 20k. He ended the day with around 9k. I have no idea of how he did it, but somehow he survived more than 15 all ins. He played extremely tight for a short stack, definitely not the correct shortstack strategy. As an example, one guy in EP limps, shortstack limps, and the guy to my direct right limps also. I look down at <strong>Js2h</strong> and raise it up to 5k (blinds 600/1200 + 100) to take down the pot. Everybody folds. I later find out that the shortstack guy had <strong>AdTd</strong> - he didn't raise (easy push being a shortstack), and even worse, he folded to my raise. The guy to my direct right folded AJ. This both shows how awful several of these main event players are, as well as how much respect I got from the table.</p>

<p>At the other end of the table sat a played that I really got irritated with. I don't know if he's just slow in general, really inexperienced at live poker or if he was just trying to be a bitch on purpose. He was constantly taking a long time to make his decisions. There could be 5 limpers to him preflop, then he'd take a minute to ponder over his hand, and then he'd fold. I mean, come on, how frigging hard can it be? Also, in one hand, he'd just won a big hand in the previous hand with AA (this guy got AA 7 times during the hand, they all held up) so he was stacking his chips. The action got around to him, and he didn't follow the action so it was like 10-15 seconds before he realized that the whole table was looking at him, waiting for him to make a decision. "Oh, it's on me?". He looked at his cards, put them down again, and then he kept stacking his chips. The dealer knocked in front of him to kinda signal that we were still waiting for him. He looked at his cards again, and blimey if he didn't make a few corrections to his chipstack at that moment, correcting a couple of edges here and there. And THEN he folded his hands as if it was 72o - which it could've easily been.</p>

<p>At our lunch break I ate at the All American grill in the Rio together with Rune who was also still in. By coinscidence I sat next to this slow guy from my own table. We got into a short conversation and I found out he was russian. He had this terrible american way of speaking - with russian accent. Everytime he met someone new he started out with "Hey man", "Oh man", "Man, " argh, stop it!</p>

<p>I have the deepest respect of good players having a large stack, Jason Strasser for instance, he really deserves it. This russian guy also had a large stack, but it was not due to his play. He played pretty loose, but not the good loose aggresive style, just plain loose passive. He was pretty easy to push around though. He'd received AA 7 times during the day (I have yet to see AA during the whole main event *hint* day three dealers! */hint*), and all the times he got doubled up.</p>

<p>Near the end of the day I got <strong>JdQd</strong> in EP. I raised it up to 4k as was becoming common to my style (though everyone still respected me and treated me as a very TAG'ish player). The russian was the sole caller. Flop come <strong>Ad9s7c</strong> - or something similar. I bet 5k on the flop (pot around 12k) - this was the normal bet sizes, remember that 2k came from the antes alone. He thought for about 10 seconds and then called. The turn was a total blank, probably the <strong>3c</strong>. I bet out 9k this time. He though for probably 30 seconds, I could easily see that he really did not like this, but he ended up calling nevertheless. The river brought the last and final blank, a<strong> 5h</strong> (or similar). Now, I didn't like having invested this much in the pot, beating nothing but lesser air then I had, but still, if I checked, I'd loose the pot for sure. My only option was to bet out (I was pretty sure I could push him out also), so I pushed in 15k. During the 5-10 minutes he used to think of the hand, several times he held his cards in a position as if he was going to fold - not looking for reads as he was clearly not looking at me (he was looking into the air in a surrendering way). Yet he ended up calling... With <strong>As2d</strong>. My god, the whole table suddenly lived up. One thing was that I had to show my pure bluff, but what really made the table "Oh my god" was his hand, A2o! Now, a couple of the less good players gave him the standard "Nice call" while most others were padding my back saying I made a good play, while being totally non understanding of his call. How did he call my 4k bet preflop with A2o? He'd be dominated in most cases, I was raising from EP. I bet out strong during all streets, there was no way he could put me on anything but AK/AQ/set. I wouldn't have bet an underpair this way the whole way. Before contemplating if he just really had a good read on me and he made a superb play... Trust me, this guy was not the type to utilize reads.</p>

<p>Oh well, that crazy russian hand brought me down to around 70k with only 30 minutes to go. Dammit, I was up to 120k shortly before, if I'd won that hand, I'd be around 160-170k.</p>

<p>Just before ending the day, I got <strong>6h6d</strong> in the MP. I raised it up, an anonymous (playing <i>extremely</i> tight the couple of hours he'd been at the table) bigstack called as the only caller. The flop was kinda good, though a bit scary: <strong>6cTc7d</strong>. I made the standard bet of 5k. He called pretty quickly. The turn brought a <strong>Qh</strong>, I bet 8k, again he called rather quickly. Now, I was starting to fear if he was holding 89 since he was calling that quickly. The river brought the case <strong>6s</strong>, now all of my straight fears were gone, I had quads! I bet out 10k, and again he called rather quickly. He looked pretty stunned to see my quads. I don't think he had the straight any more, he probably had the ten, maybe some kind of TJ combination. After all he had just seen my JQs bluff shortly before.</p>

<p>This last hand brought me up to ~$95.400 which I think is close enough to my projected goal of $100k to be satisfying. The average is around $76k so I'm well above average. The play will commence on friday at noon, day 3. When I make it through day three also, I'm going to rent a room at the Rio so I'll be able to get my sleep - it will without doubt be necessary.</p>

<p>Again this friday I've drawn a pretty good table for me:
154 1 Marius Sorensen $35,800<br/>
154 2 David Pham $112,300<br/>
154 3 Jim McCrink $88,100<br/>
154 4 Mark Rasmussen $95,400<br/>
154 5 George Watson $24,100<br/>
154 6 David Hony $54,400<br/>
154 7 Bo Sehlstedt $65,400<br/>
154 8 Paul Kitsos $50,400<br/>
154 9 Martin Virgen $197,500<br/>
154 10 Jon Nakatani $23,000<br/>
154 Average $74,640</p>

<p>I'm sitting together with a fellow dane, Marius Sørensen. To the first four places on my right I've got semi-shortstacks, including one real shortstack of only 24k. All your blinds are belong to me! There are only two players with stacks larger than mine, Martin Virgen which seems to play mostly low limit events - he won his ME entry through a live super satellite. David Pham on the other hands is probably one to watch out for.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1192</wp:post_id>
		<wp:post_date>2006-08-03 03:53:46</wp:post_date>
		<wp:post_date_gmt>2006-08-03 03:53:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mainevent2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[main-event-day-2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stripwalk</title>
		<link>http://improve.dk/stripwalk/</link>
		<pubDate>Thu, 03 Aug 2006 16:24:47 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/03/stripwalk.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today I got up relatively early at about 1 PM. Before I knew of it, it had somehow become 7 PM, and several of us were starting to become quite hungry. We weren't really in the mood for the usual fast food, and neither of use were turned on by the local sushi bar. Instead we went a couple hundred meters down Eastern Avenue to a local placed called 'The T-Bird'. The scenery was a classical 60's highway truckerstop place. It was kinda sad as it really looked like it was stuck in the 60's.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip1_2-300x224.jpg" alt="strip1_2" width="300" height="224" class="alignnone size-medium wp-image-1544" /></a></div></div>

<p>When our waitress (very hot youngish blonde) came to take our orders, Morten wanted to order onion rings as a side dish, as well as french fries for his main order. There were some confusion as to whether he could do as he wanted, so this little conversation took place:</p>

<p>Morten: "Can I do that?"<br/>
Her: "You can have whatever you want"</p>

<p>Now Morten slowly looked at hear from top to bottom, slightly pausing on the breast area, whereafter he muttered a slowrolled "Okaaaay". I guess you should've been there, we all cracked up for sure... I'm not sure if she got the "joke".</p>

<p>When we got back we decided to go to our local casino / resort, the Green Valley Ranch. Just before we were about to lave, I got an SMS from my cousin Dennis. Dennis and a couple of his friends were in Vegas also, and he was asking if we could meet up tonight. Despite some communicational problems we managed to find each other outside the Circus Circus (I used about 10 minutes just looking for the Strip exit from that place... God I hate Circus Circus.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip2_2-300x224.jpg" alt="strip2_2" width="300" height="224" class="alignnone size-medium wp-image-1545" /></a></div></div>

<p>As Dennis and his friends were all below 21, we couldn't drink or anything, so we decided to go for a stripwalk instead, seeing some of the most fascinating strip hotels.</p>

<p>The without doubt most fascinating hotel I have seen thus far is the Venetian. The way they have recreated the Venetian canals, gondolas, the sky, walkways and everything is nothing but amazing.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip3_2-225x300.jpg" alt="strip3_2" width="187" height="250" class="alignnone size-medium wp-image-1546" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip4_2-225x300.jpg" alt="strip4_2" width="187" height="250" class="alignnone size-medium wp-image-1547" /></a></div></div>

<p>After the Venetian we went to Bally's / Paris to see the recreation of Paris and the Eiffel Tower.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip6_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip6_2-225x300.jpg" alt="strip6_2" width="187" height="250" class="alignnone size-medium wp-image-1548" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip7_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip7_2-300x225.jpg" alt="strip7_2" width="300" height="225" class="alignnone size-medium wp-image-1549" /></a></div></div>

<p>After taking a trip by the Rio and the Luxor we split up as it was nearing 3 AM, Dennis and his friends were headed back towards LA at 11 AM that very next morning.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/strip9_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/strip9_2-300x224.jpg" alt="strip9_2" width="300" height="224" class="alignnone size-medium wp-image-1550" /></a></div></div>

<p>After arriving back home at the camp, I and a couple of other guys that were awake watched some mexian/hispanic tv show that we understood absolutely nothing of, but it contained an overload of totally hot chicks, so we didn't really mind not understanding what they said.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1193</wp:post_id>
		<wp:post_date>2006-08-03 16:24:47</wp:post_date>
		<wp:post_date_gmt>2006-08-03 16:24:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stripwalk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Relaxation</title>
		<link>http://improve.dk/relaxation/</link>
		<pubDate>Fri, 04 Aug 2006 10:15:44 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/04/relaxation.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today was a weird day. Yesterday was the day that the WSOP Day 2B was played. Since we (me and Rune - the only two left in the WSOP ME from the camp) both played on 2A, we had the day off. Today is the official WSOP ME break day before we start on the 5 day marathon beginning from tomorrow, friday, day 3.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/relax_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/relax_2-225x300.jpg" alt="relax_2" width="187" height="250" class="alignnone size-medium wp-image-1542" /></a></div></div>

<p>Neither of us wanted to do anything big today as it's very important that we get our sleep and are ready for the big and long day tomorrow. I got up somewhere between 2 PM and 5 PM, don't really remember when exactly. We ordered dinner through Dominos (absolutely excellent online ordering service!), so we didn't have to leave the house at all.</p>

<p>I joined Rune into the Rio at about 11 PM since he needed to register for his ITIN number in the event that he cashes in the WSOP - which all odds are beginning to speak in favor of. Without an ITIN (Individual Taxpayer Identification Number) the USA will hold back 30% of your winnings to pay the american taxes. Being an alien you don't have to pay these taxes, but if you have not registered for an ITIN number, you're shit outta luck.</p>

<p>After being beat endlessly in pool (seriously, I suck at it) I decided to head for bed early tonight (1 AM). Tomorrow at noon, history will unfold!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1194</wp:post_id>
		<wp:post_date>2006-08-04 10:15:44</wp:post_date>
		<wp:post_date_gmt>2006-08-04 10:15:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>relaxation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Main Event day 3</title>
		<link>http://improve.dk/mainevent3/</link>
		<pubDate>Sun, 06 Aug 2006 13:15:48 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/06/main-event-day-3.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>At last I got a good nights sleep before the big day, day three of the 2006 WSOP Main Event!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay13_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay13_2-300x225.jpg" alt="partay13_2" width="300" height="225" class="alignnone size-medium wp-image-1529" /></a></div></div>

<p>I had my strategy totally planned, I knew all about the guys at my table (as written in an earlier blog entry), knew about the chip stacks, who to bully and so forth. I was prepared.</p>

<p>My strategy was to play pretty tight and semi passive up until the bubble (which would probably arrive after 4-5 hours). Utilizing this strategy would avoid marginal situations that could bust me before the bubble, as well as establishing a great tight passive image that I could use on the bubble to steal a lot of pots.</p>

<p>I started out great, folded all hands for the first 15 minutes at my table, then something unexpected occurred. I heard a couple of "Sir..." behind my back, though I didn't relly think about it. Then someone tapped me and my shoulder and said "Excuse me sir...", I looked around and there were a floor man. "We need to move you sir, please rack up your chips and follow me". Shit, this was <i>not</i> what I needed! I had no choice though, very bad timing resulted in our table needing a man to be moved, and I was just about to receive the big blind (qualifying me to be moved), dammit!</p>

<p>I sit down at my new table, luckily I don't see any immediatly recognizable faces which is good. The bad news is that the average stack on this table were vastly larger than at my old table, there were probably not more than one or two stacks smaller than mine, and there were a couple of 200k stacks, yuck!</p>

<p>After playing about 10 minutes on the table I realized that my tight passive strategy wouldn't hold up on this table. Most of the players were playing a good loose aggresive strategy which resulted in me being stolen from constantly, a lot of raised pots and so forth. It was clear to me that I had to make a stand to avoid being stolen too much from, and in general to survive / build my stack before the bubble.</p>

<p>About half an hour in I receive a hand, <strong>4s4c</strong> in MP. My stack is around 90k, blinds are 800/1600 + 200 ante. I raise it up to 5k, I get a single caller on the button, a big stack with around 250k. My read on this guys is that he's playing a lot of pots (which isn't that bad when you're a big stack), though he seems to be playing rather bad postflop, and also he seems to be playing a bit too loose aggresive for his own good.</p>

<p>The flop comes something like <strong>As5h9d</strong>. I bet out around 7k, my standard bet, no matter if I hit or miss. He calls. The turn comes with the <strong>Td</strong>. I don't want to invest too much into this pot with my weak holding so I check. He thinks for 10 seconds before he also checks. His check here reassures me he doesn't have anything on this flop, at least nothing strong. Also there are no obvious draws, so I'm actually feeling pretty good. He might have the 5 or a smaller pair that hasn't hit. Now the turn brings a <strong>Kc</strong> which I can't really see improving his hand. I still don't want to invest too much, I'd puke if I bet out here and he raised me, since I'd have to fold. I check, he thinks for about 20 seconds before he bets out 10k. 10k is a rather weak bet, and it confirms my suspicion that he's weak, I'm pretty sure he'd bet stronger if he had a better hand. I think for 30 seconds before I say "Make it 25k" - so much for playing tight passive...</p>

<p>He sighs and folds his hand. Great start! I'm up to around 120k. When the bubble bursts, the average stack will be about 100k, so I'm in a great spot here.</p>

<p>A bit later I get into a almost identical hand with the same opponent. I get <strong>2h2d</strong> in MP, raise it up to 5k, he calls in the blinds. The flop comes <strong>Kd3h7d</strong>. He checks, I check. Flop comes with a non diamond ace, suit doesn't matter. It goes check check again. River brings an unimportant rag (again no diamond). He bets out about 7500 into a pot of around 20k. I'm not really sure I made the correct decision here, I feel he may have a drawing hand like TJ, JQ or some kind of diamond combination that hasn't hit. I call and he shows A9 for the turned ace, and he takes it down. In hind sight I'm not sure I should've called, but following my reads had worked pretty good so far. After this hand I'm down to around 85k.</p>

<p>After some time I receive <strong>TsTc</strong> in the big blind, my stack's around 80k. It's folded around to a rather aggresive good swedish player who'd stolen a lot previously. He makes it 6k preflop. I quickly make it 14k. He thinks shortly and then calls. Flop comes <strong>Ad2c9d</strong>. The pot's a good 30k so I bet out 20k, he quickly pushes all in, yuck. I'm pretty sure he wouldn't do this without having hit the flop as were even stacked and loosing this hand would bust him from the tournament, pretty close to the bubble. I also can't see him doing this with a hand having hit neither the 2 nor the 9, so I'm pretty sure he has a raggy ace or possibly a mid pair. Now, I could call and bust him if he had 33-88, though it is possible that he had JJ-AA also, either making a tricky preflop play with the AA's or simply putting me on a resteal (which would be a reasonable assumption due to his history of steals), hence not believing I've hit the ace. I simply can't see myself calling this, so I end up folding, bringing my stack down around 40k, possibly a bit less.</p>

<p>At this point we're only about 30 away from the money, so suddenly my strategy changes. Now my main priority is no longer to build my stack, it's simply to make the money and then reconsider at that point. The next hour is a boring hour, I hate shortstacked play on the bubble as I have no options, and I'm too easy to push around with a lot of big stacks on the table. I end up not playing any hands at all, even folding AJ to a LP raise (I won't run the risk of them busting me only 5 people away from the $15k bubble).</p>

<p>A bit before hitting the money, Jacob Juhl joins my table, sitting right across the table from me. He's a great guy, rooting for me to make the money, thanks!</p>

<p>We finally hit the money, at this point my stack's around 26k, terrible. An Acemag reporter comes by to check on mine and Jacob's stack and I tell him, "I'm either out in 5 minutes, or I've tripled". The WSOP Main Event payout structure is absolutely terrible, it's increidbly flat, you need to hit top 81 before the prizes start to really increase. The next 5 or 6 prize steps from top 873 increase the prize by only $1k or so, thereafter it increases by $2k for some steps. The flat structure really makes it necessary to gamble after you've hit the money, you have to build a stack to go deep, hence my quote to the Acemag reporter.</p>

<p>Just a few hands later I receive<strong> JhQh</strong> in the blinds. An EP weak player (very easy to push off hands) raises to 6k (blinds 1k/2k + 300 ante). I push my 26k in, knowing I probably have to live cards in case he calls, though I naturally run the risk of him having AA/KK/QQ, AQ, AJ or other terrible hands. He folds and I rake in the pot of a round 34k.</p>

<p>A couple of hands later I receive <strong>KsJs</strong> in late position. It's folded around to me, and although I have rethought this hand a lot, I can't see me folding this. I raise it up to 6k (which is the table standard). The bigstack loose aggro caller calls from the blinds, and a rather anonymous player calls from the button. The flop comes with a perfect <strong>Jh3d5c</strong>. Since the pot's already about 25k due to the calls, antes and blinds, I simply push in my about 25k. The button player thinks shortly and then announces call, the laggy player folds. He tables AJ, I'm in very bad shape, I'm dominated - looking for a K to help me out. Unfortunately I don't improve, and I'm out.</p>

<p>After the bubble burst people are busting like crazy. We're probably loosing about 5 people per minute (about 90 tables left). When you bust out the procedure is to stand up and wait for you to be escorted out by an official, to make sure you get the correct bustout place recorded and so forth. This is great in theory, but when 50 people bust out within 10 minutes, they're seriously understaffed. This resulted in me having to stand at my table for 10 minutes, just thinking about the bust, nothing else. It was terrible not being able to simply walk away. Right after a bust - especially from the greatest tournament of all times - you feel incredibly flat. Could you avoid the bust? What did I do wrong? All the prize money I could've won.</p>

<p>After the 10 minutes had passed, the floor man instructing me to wait had to excuse them being so slow to escort people out, after which he simply escorted me out himself (though it wasn't his duty to do so). I didn't blame him as he was in no way to be blamed for it. After busting, you get escorted to a podium in the middle where your seat / name is reported, and then you get a little yellow sticker with your bustout position (#822) as wells as your prize money. This poses a problem as your bustout position isn't reliant on the time you actually bust, but on the order in which you receive your bustout note. I was just 2 places away from a higher payout step (+$1k), so if I hadf just stood around 30 seconds more, I would've received $1k more. Of course this is primarily a problem around the bubble when so many people bust, but still, it doesn't seem reasonable.</p>

<p>I got the money in cash, and wow, what a feeling. Although I have a bankroll of more than $15k, never before had I held such a large bunch of benjamins ($100 bills) in my hand. I felt terribly nervous, walking around with that much cash in my pocket. Luckily I met up with Frederik and his father who were also on their way home, we took a cab together.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay1_2-225x300.jpg" alt="partay1_2" width="187" height="250" class="alignnone size-medium wp-image-1531" /></a></div></div>

<p>After arriving at home, telling everybody about how I busted and leaving the cash in my backpack, we prepared to head for town. The others were planning to go the the Aladdin and play some crazy donkfest cash games, although I'd just busted, I couldn't resist joining. I got a quick bath, and off we went.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay2_2-300x225.jpg" alt="partay2_2" width="300" height="225" class="alignnone size-medium wp-image-1532" /></a></div></div>

<p>By coincidense we met up with Klaphat and a couple of his friends so we ended up being 10 people, just perfect for a private game! We convinced the Aladdin to open up a table for us. Due to Nevada laws they couldn't make it private, but since we were 10 people, it wouldn't be an issue.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay3_2-300x225.jpg" alt="partay3_2" width="300" height="225" class="alignnone size-medium wp-image-1533" /></a></div></div>

<p>The game was $1/2 NL. It was an absolutely crazy game. There were straddling everywhere, all ins in the dark, pot sweetening and delicious suckouts.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay4_2-300x225.jpg" alt="partay4_2" width="300" height="225" class="alignnone size-medium wp-image-1534" /></a></div></div>

<p>I started out by being stuck $600 within 30 minutes. Then started the most incredible run I've ever experienced. I flopped sets everywhere, rivered quads, flopped two pair with my 52o (which I ofcourse had to limp with in MP no matter any amount of raises) and so forth. In about an hour I built my stack up to around $1500 (and we're still talking about a $1/2 NL, $200 max buyin game).</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay5_2-225x300.jpg" alt="partay5_2" width="187" height="250" class="alignnone size-medium wp-image-1535" /></a></div></div>

<p>Without boring you, I'll just say that in the next couple of hours I managed to dump away all of my stack (most of it to the creepy lucky luckbox Mikael) so I ended up being stuck $600 again.</p>

<p>After busting I went over to the bar where I found Morten and Rune totally wasted due to playing video poker and receiving free drinks.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay12_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay12_2-300x225.jpg" alt="partay12_2" width="300" height="225" class="alignnone size-medium wp-image-1536" /></a></div></div>

<p>We all decided to head out to Spearmint Rhino. And you simply can't drive out to the Spearmint in anything but a limo, se we walked over to Caesars Palace and got a limo.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay8_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay8_2-300x225.jpg" alt="partay8_2" width="300" height="225" class="alignnone size-medium wp-image-1537" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay10_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay10_2-300x225.jpg" alt="partay10_2" width="300" height="225" class="alignnone size-medium wp-image-1538" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/partay11_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/partay11_2-300x225.jpg" alt="partay11_2" width="300" height="225" class="alignnone size-medium wp-image-1539" /></a></div></div>

<p>Unfortunately the rest of the night belongs under the "What happens in Vegas, stays in Vegas" category...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1195</wp:post_id>
		<wp:post_date>2006-08-06 13:15:48</wp:post_date>
		<wp:post_date_gmt>2006-08-06 13:15:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mainevent3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[main-event-day-3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sleepy $1500 NLHE</title>
		<link>http://improve.dk/sleepy/</link>
		<pubDate>Mon, 07 Aug 2006 04:27:29 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/07/sleepy-1500-nlhe.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I got back home from Spearmint at around 7:30 AM, pretty wasted to say the least. I know from experience that setting my alarm clock on my cell phone won't help as I'll just keep sleeping if I don't have a life threatening reason to get out of bed, so I'd just sleep until I woke up.</p>

<p>I woke up just three hours later at around 11 AM... Hmm, I really did plan to get just a little bit more slep, or else I'd be completely burned out that night. I closed my eyes for a second... When I woke up again it was dark outside, it was 8:30 PM, yikes, that was a bit longer than I'd anticipated.</p>

<p>I had planned on playing the $1500 NLHE WSOP event on the next day, so this really fucked up my plans as my sleeping pattern was now pretty awkward. The WSOP event started at 11 AM that very next morning, and the event will run for up to 12 hours, so there would be no doubt that I'd be near death if I were to last that long.</p>

<p>I ended up getting a 20 minute power nap that night before I took a cab to the Rio at 9 AM to get some breakfast, register for the WSOP event and get myself prepared.</p>

<p>I was actually quite awake even though I'd been up for some hours by that time, so I felt prepared. The tournament was a short experience unfortunately, and I can't blame anyone but myself. I made a terrible call in a pot that should've been an easy laydown.</p>

<p>I had around 1800, I'd just been moved to a new table, having Hassan Habib right across the table, and Vanessa Rousso (very cute) to my right. I get <strong>A</strong>h<strong>J</strong>c in MP with a single caller before me (blinds 25/25). I make it 150, I get two callers. The flop comes <strong>J</strong>s<strong>3</strong>d<strong>2</strong>d which is nearly perfect for me. Checked to me, I bet out around 350 out, both callers call again. The turn comes with a scary <strong>6</strong>d. Now suddenly the EP caller bets out the pot, effectively putting me all in. I pondered over this bet a long time, why would he bet out this hard if he'd made his flush? Wouldn't he either be going for the checkraise or simply betting less strongly to induce a raise? I ended up reasoning with myself that he must've had some kind of semi weak holding like KJ, TJ, 9J or something similar, and he wanted to take down the pot now using the scare card / bet. I pushed all in. Both callers instacalled - yuck. The LP caller showed 22 for the flopped set, and the EP caller show <strong>7</strong>d<strong>9</strong>d. I was drawing dead. The river brought the <strong>3</strong>s to fill up the LP caller, raking in a massive pot.</p>

<p>Having just 125 chips left I managed to triple up. Unfortunately I busted out with AQs against Vanessa's AKo, fair'n'square. I didn't last more than one and a half our. I really can't believe I didn't manage to fold that hand now that I've thought it through.</p>

<p>It's now 7:30 PM and I'm going to bed. I wanna be really rested when I'm playing the next $1500 NLHE event tomorrow (there are two $1500 NLHE events left that I'm going to play).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1196</wp:post_id>
		<wp:post_date>2006-08-07 04:27:29</wp:post_date>
		<wp:post_date_gmt>2006-08-07 04:27:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sleepy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sleepy-1500-nlhe]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fresh $1500 NLHE</title>
		<link>http://improve.dk/freshnlhe/</link>
		<pubDate>Tue, 08 Aug 2006 09:45:13 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/08/fresh-1500-nlhe.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today was the second last $1500 NLHE event of this years WSOP. I went to bed at 8 PM the night before and slept all the way until 9 AM so I couldn't blame my performance on lack of sleep today - unfortunately.</p>

<p>I had Bill Chen (2-time WSOP bracelet winner in the 2006 series!) and Max Pescatori (1-time WSOP bracelet winner in the 2006 series) to my left, there were definitely a couple of other pros at the table, but those were the only two I really recognized. Also Joe Hachem was sitting at the table right next to mine.</p>

<p>The funny thing about these $1500 events is that they're actually a lot tougher than the main event! The pro/amateur ratio on the tables are a lot less than in the main event. Also due to the small stack structure you really can't afford to make any mistakes. Max played a very crazy game, making some insane preflop pushes, trying to push people off hands. He'd been caught with J7o, 22, 99 and various other weird hands, and amazingly he'd won even though he went in as an underdog every time. Bill played rather ABC, but I noticed he'd made a lot of squeeze plays. In general it seemed like he had great perception of the table situation and he was able to take down a lot of pots without going to showdown.</p>

<p>I started out absolutely great! Though I do not remember all the hands any more, I managed to build my chipstack up to chipleader status within the first couple of hours, having nearly 18k when the average was around 3k. Unfortunately my luck ended suddenly. It started out in a pot where I had TT on the button. Blinds are 100/200. LP pushes all in for about 1500. I look down on my tens, I just smooth call, I don't want to risk all of my stack by isolating since Max was sitting on a stack of around 10-12k himself. After my call, Bill pushes his stack in, and Max folds. I count up Bills chips, around 4000... Hmm, I'd seen him do this before and I was pretty convinced that he was trying to squueze me out with a mediocre hand since LP could've had any two more or less, so I called. Bill showed QQ, yuck, LP showed 97s, more or less as expected. The flop didn't help me, and to make things worse, I'd overseen a couple of pinks in Bills stack, so he didn't have around 4k, he had 6k, ouch.</p>

<p>I made a couple of great calls on the flop later on with marginal hands, nothing held up unfortunately. In a series of about four or five showdowns that I didn't win, my stack simply dwindled away. When our table broke up I had about 3k left with blinds of 150/300 + 25 ante. I was moved to table 1 and by chance Bill sat to my direct left again. Second hand at the table it gets folded around to me, I've got black jacks, I push. BB thinks for a while and then calls with AT. Flop comes: AT8, Turn: T, River: no jack. I'm out. Bill gives me his hand and congratulates me on my play and gives me consolation for busting out in this way. At this time there were around 80 left in the tournamnet (420 to start), payout to top 45. Dammit.</p>

<p>Tomorrow is the very last WSOP event of this years world series. It's also a $1500 NLHE event. It's going to be tough getting up since it starts at 10 AM, but I'm destined to give this my very best try... This is my last chance at getting a bracelet and thereby setting the record for youngest bracelet winner ever.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1197</wp:post_id>
		<wp:post_date>2006-08-08 09:45:13</wp:post_date>
		<wp:post_date_gmt>2006-08-08 09:45:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>freshnlhe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[fresh-1500-nlhe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[fresh1500nlhe]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>No more $1500 NLHE and $1/2 NL</title>
		<link>http://improve.dk/nomore1500nlhe/</link>
		<pubDate>Thu, 10 Aug 2006 03:10:44 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/10/no-more-1500-nlhe-and-12-nl.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The last $1500 NLHE event was starting at 10 AM, so I really had to get up early. Though I'd never be able to do so at home, I actually managed to get up at 8 AM and get to the Rio at 9 AM. When I registered I was told that the tournament wasn't starting until 11 AM though - it seems I messed up in the dates, the last $1500 event was actually tomorrow, not today.</p>

<p>After eating breakfast I still had one and a half hours of time to kill... So I found myself a free CardPlayer magazine and sat down at a slot machine. One of the female attendants came over jokingly asking me why I'd just sit there playing the slots while reading the magazine, I didn't really look like the typical slot player, hardly interested in the slot machine itself. I ran good, really good. When I went back to play I'd built up a surplus of $800 on the slot machine, not bad!</p>

<p>The tournament itself was yet another disappointment. I finally today realized how awfully bad the structure is. I ran card dead for the first hour, and at that point I only had around $800 back, 20 BBs. These tournaments start with $1500 stacks, 25/25 blinds that rise every hour (about 25 hands/hour). It is simply a disgrace to call these events for WSOP events, and even more of a disgrace that there are bracelets for the winner of these events, since there's rarely more than 350-400 participants.</p>

<p>A couple of pictures showing the final four tables of the WSOP ME:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/wsop4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/wsop4_2-300x225.jpg" alt="wsop4_2" width="300" height="225" class="alignnone size-medium wp-image-1518" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/wsop5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/wsop5_2-300x225.jpg" alt="wsop5_2" width="300" height="225" class="alignnone size-medium wp-image-1519" /></a></div></div>

<p>Later in the day I went to the Mirage with a couple of the others to play some $2/5 NL. Mirage had a nice room, although I don't really like their cards (KEM) when compared to the WSOP Copag cards. Also their brush was working a manual list that wasn't visible to players. To sum up the play, I ended down around $900, most of it due to the last pot I played. Me and Joachim had just agreed that this would be our last hand before we'd go (I was UTG, just before the BB). So I look down, and what do I see? Black kings! I raise it up to $20. I get a single caller in MP from an extremely tight player - really, really tight. The flop comes 646r. I bet out 3/4 pot, he calls. At this point I really only fear hands like 44, 66 and pairs 77-AA. 66 is unlikely though, so is QQ-AA as he'd have reraised me preflop with those holdings. Turn is another 6 which counterfeits his 44 full house in case he has that one. I bet 3/4 pot, he calls. River is a jack, a pretty blank card unless he has JJ, I'm pretty sure he'd have raised me earlier with JJ though. I bet out 1/2 pot, and he immediatly goes all in. I have to call as the pot is now very big. He turns up A6o for the turned quads, and he rakes in the almost $1k pot. I have no idea how these awfully tight players suddenly wake up, calling a $20 UTG raise with utter crap.</p>

<p>Later on we went to the Venetian to play some $1/2 donk NL. Venetian has a spectacular room! Great scenery, great tables (although I don't like their felt as much as the Rios) and above average cocktail services. Also this was the juiciest $1/2 table I have <i>ever</i> seen, it is unbelievable, I can't even describe it. Just imagine people calling down with ace high all the time, that about sums it up. I ended up $32 after about 5 hours play due to me donking it up with the other sjufts at the table.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1198</wp:post_id>
		<wp:post_date>2006-08-10 03:10:44</wp:post_date>
		<wp:post_date_gmt>2006-08-10 03:10:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nomore1500nlhe</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="wsop"><![CDATA[WSOP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[no-more-1500-nlhe-and-12-nl]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hooters!</title>
		<link>http://improve.dk/hooters/</link>
		<pubDate>Fri, 11 Aug 2006 16:12:15 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/11/hooters.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today there was to be no gambling... A day I never thought was possible. After I got up at around 5 PM I went with Morten to the Hooters hotel &amp; casino to dine and look around. The Hooters girls are in a class of their own, they're much nicer than most of the Spearmint girls, I simply have to stay at this hotel at some point!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/las-vegas-130_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/las-vegas-130_2-300x225.jpg" alt="las vegas 130_2" width="300" height="225" class="alignnone size-medium wp-image-1515" /></a></div></div>

<p>Unfortunately when we got our pics taken we didn't switch cameras, so I've got the picture of Sally (our lovely waitress) together with Morten and vice versa, but nevermind, Sally's what's interesting in this picture.</p>

<p>Afterwards we went to the Las Vegas premium outlets to do some shopping. Damn it's cheap! I went nuts in the Tommy Hilfiger shop, expecting the bill to be around $5-600 (which I'd still perceive as cheap)... It didn't pass $200. You can really do some scoops here when it comes to clothe shopping!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/nightstrip_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/nightstrip_2-300x225.jpg" alt="nightstrip_2" width="300" height="225" class="alignnone size-medium wp-image-1516" /></a></div></div>

<p>Afterwards we went to the Stratosphere to enjoy the view and look at the rides. Unfortunately due to all our shopping bags we couldn't take the rides as we didn't really feel like leaving our bags on the ground in the mean time. I might go to the Stratosphere one of the next days, I really wanna take the Big Shot ride.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1199</wp:post_id>
		<wp:post_date>2006-08-11 16:12:15</wp:post_date>
		<wp:post_date_gmt>2006-08-11 16:12:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hooters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>-EV</title>
		<link>http://improve.dk/negativeev/</link>
		<pubDate>Fri, 11 Aug 2006 16:44:11 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/08/11/ev.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Today we wanted to try a buffet, not something I've done a lot of over here (except the Aladdin buffet which wasn't really that good). Me and three others went to the Wynn, a rather new and very grand hotel to test their buffet. Compared to the Aladdin this one was far superior. Only downside is that their speciality was seafood, which isn't exactly my kinda thing. Anyways, it was great food and a great scenery!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown1_2-300x225.jpg" alt="downtown1_2" width="300" height="225" class="alignnone size-medium wp-image-1498" /></a></div></div>

<p>After eating at the Wynn we went downtown to Fremont Street to see the incredible lightshows.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown3_2-300x225.jpg" alt="downtown3_2" width="300" height="225" class="alignnone size-medium wp-image-1499" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown13_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown13_2-300x225.jpg" alt="downtown13_2" width="300" height="225" class="alignnone size-medium wp-image-1501" /></a></div></div>

<p>Hanging above Fremont Street is a "monitor" of unimagineable size, literally covering the whole street. On this monitor area shows are being shown each our from 7 PM until midnight. Different shows are shown at different times, unfortunately we only had the time to see one of them (as we arrived near midnight). Although the picture quality isn't really that great due to lack of light and very changing light conditions, it should be rather easy to notice that the show contained a lot of lightly clothed women - not bad!</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown4_2-225x300.jpg" alt="downtown4_2" width="187" height="250" class="alignnone size-medium wp-image-1502" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown5_2-225x300.jpg" alt="downtown5_2" width="187" height="250" class="alignnone size-medium wp-image-1503" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown6_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown6_2-225x300.jpg" alt="downtown6_2" width="187" height="250" class="alignnone size-medium wp-image-1504" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown7_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown7_2-225x300.jpg" alt="downtown7_2" width="187" height="250" class="alignnone size-medium wp-image-1505" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown8_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown8_2-225x300.jpg" alt="downtown8_2" width="187" height="250" class="alignnone size-medium wp-image-1507" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown9_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown9_2-225x300.jpg" alt="downtown9_2" width="187" height="250" class="alignnone size-medium wp-image-1508" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown10_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown10_2-225x300.jpg" alt="downtown10_2" width="187" height="250" class="alignnone size-medium wp-image-1509" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown12_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown12_2-225x300.jpg" alt="downtown12_2" width="187" height="250" class="alignnone size-medium wp-image-1510" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown11_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown11_2-300x225.jpg" alt="downtown11_2" width="300" height="225" class="alignnone size-medium wp-image-1511" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/08/downtown2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/08/downtown2_2-300x225.jpg" alt="downtown2_2" width="300" height="225" class="alignnone size-medium wp-image-1512" /></a></div></div>

<p>Afterwards we went into the 4 Queens casino &amp; hotel to play some serious -EV games! I had major SKRUB in the Texas Holdem table game, hitting several bonuses with a max bonus bet of $50 (all of downtown is low stakes unfortunately). On one hand I hit AA with $50 on the bonus field, giving 30:1 back - not bad. Afterwards I made a major hit on a "Wheel of Fortune" slot machine, netting around $500. All in all I ended up around $1500-$2000 purely by playing -EV games... -EV - I say not!</p>

<p>Tomorrow is my last day over here. I really could've used a week or two more, I am not looking forward to the prospect of going home. Sure it's going to be nice to see folks at home, get a glass of real milk, eat real food and so forth, but I'm not looking forward to the amount of work and school stuff waiting for me to come home.</p>

<p>Tomorrow we've talked about visiting the Las Vegas Gun Shop to try some AK47's, UZI's and similar cool guns. Afterwards we might take a trip to the Stratosphere to finally try some of the rides. We'll round off the night by seing Jay Leno at the Mirage at 10:30 PM that night.</p>

<p>My plane leaves at around 8 AM saturday. Due to the recent terrorist plots discovered in the UK, I'm not really sure how much trouble I'll have while flying home. I'm fearing I might not have enough transit time in the airports due to the increased security checks and so forth. Worst case scenario is that I'll be forced to get a later plane, delaying my arrival time at home.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1200</wp:post_id>
		<wp:post_date>2006-08-11 16:44:11</wp:post_date>
		<wp:post_date_gmt>2006-08-11 16:44:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>negativeev</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ev]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Securing .NET Code Presentation</title>
		<link>http://improve.dk/securingdotnet/</link>
		<pubDate>Sun, 29 Oct 2006 22:02:31 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/10/28/securing-net-code.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>During the last couple of weeks, I have been giving lectures on the subject of .NET code protection at some of the danish universities.</p>

<p>Part of being a Microsoft Student Partner is exactly this, travelling the universities and spreading knowledge of the Microsoft platform. Naturally .NET is the most exciting topic to talk about as the primary audience mostly consists of computer scientists.</p>

<p>Due to my work as a MSP I've got my 2006 Tech-Ed conference entry ticket paid, so I'm taking a short trip to Barcelona on the 8th of november untill the 11th of november. Hopefully I'll get a lot of hands-on experiences with the new technologies and platforms, I can't wait!</p>

<p><a href="http://www.improve.dk/articles/dotnet/securing-dotnet-code/">Read my article on securing .NET code here</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1202</wp:post_id>
		<wp:post_date>2006-10-29 23:02:31</wp:post_date>
		<wp:post_date_gmt>2006-10-29 22:02:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>securingdotnet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="msp"><![CDATA[MSP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[securing-net-code]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unix to the Rescue</title>
		<link>http://improve.dk/unix-to-the-rescue/</link>
		<pubDate>Mon, 13 Nov 2006 01:12:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/11/13/unix-to-the-rescue.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A picture says more than a 10^3 words (it hang at my hotel in Barcelona during TechEd):</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/11/unixfireextinguisher_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/11/unixfireextinguisher_2.jpg" alt="unixfireextinguisher_2" width="576" height="768" class="alignnone size-full wp-image-1617" /></a></div></div>

<p>So how would you intepret this image? Let me know...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1211</wp:post_id>
		<wp:post_date>2006-11-13 02:12:55</wp:post_date>
		<wp:post_date_gmt>2006-11-13 01:12:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unix-to-the-rescue</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="teched"><![CDATA[TechEd]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Invaluable IE Addon Tools</title>
		<link>http://improve.dk/invaluable-ie-addon-tools/</link>
		<pubDate>Sun, 19 Nov 2006 05:28:00 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/11/19/invaluable-ie-addon-tools.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As a programmer we strive to make our everyday lives easier. The very engine behind all innovation is lazyness, after all, if it weren't for us being lazy, why would we use - and by that, have a need - for things like automobiles, computers and so forth?</p>

<p>I often meet people who aren't aware of the many great tools that aid developers when debugging websites in Internet Explorer. I'll mention a few of the most valuable ones that I use here.</p>

<p>If you know of any great tools that I've failed to mention, please let me know!</p>

<h2><a href="http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&amp;displaylang=en">Internet Explorer Developer Toolbar</a></h2>

<p>The IE developer toolbar places itself in the Internet Explorer toolbar area.</p>

<ul>
	<li>Easily traverse the web page DOM. </li>
	<li>Quickly disable features like javascript, cookies, popup blocker, etc. </li>
	<li>Outline tables, cells, divs, images and so forth to easily be able to tell where your elements are on the webpage. </li>
	<li>Quick links for validation of HTML, CSS and various other parts of your website through the W3 validator. </li>
	<li>Resize your browser window to common resolutions. </li>
	<li>Easily clear the cache, cookies or even your session - so you won't have to restart IE.</li>
</ul>

<p>These are just some of the features the developer toolbar has, <a href="http://www.microsoft.com/downloads/details.aspx?familyid=e59c3964-672d-4511-bb3e-2d5e1db91038&amp;displaylang=en">see a full list of features at the download page.</a></p>

<h3><a href="http://www.fiddlertool.com/fiddler/version.asp">Fiddler</a></h3>

<p>Fiddler enables you to catch incoming and outgoing HTTP requests and debug them before they're sent or received. This enables you to follow the HTTP stream and debug possible problems. You can even set debug points and modify the requests and respones before they arrive at their destination. This is especially great if you're developing applications that make requests behind-the-scene, like for instance, Flash applications that make HTTP requests themselves.</p>

<h3><a href="http://www.httpwatch.com/">HttpWatch</a></h3>

<p>HttpWatch is a more user friendly version of Fiddler. HttpWatch doesn't have nearly as many features, you can't set debug points or modify the requests/responses. What HttpWatch does have to offer is a much more slick and fast user interface, and direct integration into IE. Unless I have to use debug points I much prefer to use HttpWatch during my daily work. HttpWatch however is not free.</p>

<h3><a href="http://www.blunck.se/iehttpheaders/iehttpheaders.html">ieHttpHeaders</a></h3>

<p>Suggested by Steve McCoole. ieHttpHeaders fall into the same category as Fiddler and HttpWatch, it gives a live display of the HTTP requests/responses. ieHttpHeaders only shows the headers, although both HttpWatch and Fiddler does this too, ieHttpHeaders is free (beats HttpWatch) and it's neatly integrated into IE itself (beats Fiddler), so it definitely has value.</p>

<h3><a href="http://www.microsoft.com/windows/ie/ie6/previous/webaccess/webdevaccess.mspx">IE Powertoys for WebDevs</a></h3>

<p>Don't worry, although it says Internet Explorer 5, it works great in both IE6 and IE7. This WebDev powertoy enables a great feature in the IE context menu, "View partial source". How many times have you not looked through a webpages source in Notepad, searching for a specific section? With the partial source view function you can simply highlight any part of the website and select "view partial source" and a window will open up, showing only that part of the webpages source, neat!</p>

<h3><a href="http://www.ieforge.com/InlineSearch/HomePage">Inline Search</a></h3>

<p>This tools mimics Firefox's inline search function to near perfection. I for one love Firefox's search function as it's very quick to use and it doesn't use a bulky modal dialog. This tool gives the exact same functionality in IE, it simply overwrites the usual search dialog.</p>

<h3><a href="http://www.thundermain.com/FullSource.html">FullSource</a></h3>

<p>Suggested by Steve McCoole. FullSource enables you to view the actual current source code of the page you're viewing. That is, not the source code that was originally served to IE, but the source code that IE is currently rendering, including any DOM manipulations caused by JavaScript, XSL transformations etc.</p>

<h2>Non IE addons</h2>

<p>Although the next two tools are not IE specific, I simply have to mention them as I use them to a great extent.</p>

<h3><a href="http://iconico.com/colorpic/">ColorPic</a></h3>

<p>This is by far the best color picker tool that I've come across. It makes it a snap to pick colors with pixel precision, no matter if it's from a webpage, application or windows itself.</p>

<h3><a href="http://www.spadixbd.com/freetools/jruler.htm">JRuler</a></h3>

<p>JRuler is exactly what the name implies, an onscreen ruler that can be used anywhere. It has great support for measuring in various units. Although there is a builtin ruler in the IE developer toolbar, this one also works outside IE.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1215</wp:post_id>
		<wp:post_date>2006-11-19 05:28:00</wp:post_date>
		<wp:post_date_gmt>2006-11-19 05:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>invaluable-ie-addon-tools</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fiddler"><![CDATA[Fiddler]]></category>
		<category domain="post_tag" nicename="tools"><![CDATA[Tools]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Invaluable Internet Explorer Addons]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>487</wp:comment_id>
			<wp:comment_author><![CDATA[Steve McCoole]]></wp:comment_author>
			<wp:comment_author_email>mccoole@smm.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-11-20 20:04:57</wp:comment_date>
			<wp:comment_date_gmt>2006-11-20 20:04:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'd add the following to your already great list:<br /><br />ieHttpHeaders - displays headers live as they are sent and received.  <a rel="nofollow external" href="http://www.blunck.se/iehttpheaders/iehttpheaders.html" title="http://www.blunck.se/iehttpheaders/iehttpheaders.html" rel="nofollow">www.blunck.se/.../iehttpheaders.html&lt;br</a> <br />ieDocMon - see event sinks and sources as they fire.  <a rel="nofollow external" href="http://www.cheztabor.com/IEDocMon/index.htm" title="http://www.cheztabor.com/IEDocMon/index.htm" rel="nofollow">http://www.cheztabor.com/IEDocMon/index.htm&lt;br</a> <br />fullsource - displays the complete source from the IE dom model so you can see the result of DOM manipulation by Jscript, etc.  Good if you need the whole page as the browser currently sees it.  <a rel="nofollow external" href="http://www.thundermain.com/FullSource.html" title="http://www.thundermain.com/FullSource.html" rel="nofollow">http://www.thundermain.com/FullSource.html&lt;br</a> <br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>488</wp:comment_id>
			<wp:comment_author><![CDATA[EuGeNe]]></wp:comment_author>
			<wp:comment_author_email>eugene@ieforge.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ieforge.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-11-21 07:26:42</wp:comment_date>
			<wp:comment_date_gmt>2006-11-21 07:26:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for mentioning Inline Search on your blog. You seem to be very much into web development tools integrated to IE. Maybe you'll be interested in our latest add-on Companion.JS [<a rel="nofollow external" href="http://www.ieforge.com/CompanionJS" title="http://www.ieforge.com/CompanionJS" rel="nofollow">http://www.ieforge.com/CompanionJS</a>] a simple yet powerful JavaScript tool for IE users.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>489</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-11-21 08:20:24</wp:comment_date>
			<wp:comment_date_gmt>2006-11-21 08:20:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the suggestions!<br /><br />@Steve<br />I've decided not to include ieDocMon as I believe the IE DevToolbar contains this functionality as well as a lot more, so I'd rather prefer to have just one of the tools. The other two seems like great addons!<br /><br />@EuGeNe<br />Thanks for dropping by, and kudos for offering Inline Search for free, it's a great tool! I see great potential for CompanionJS, though what I would really like to see in a tool like this was for it to simply show the complete markup, coloring/marking the exact location of the error together with an error description. Currently it gives you a stack trace which is nice, but if my problem warrants a stack trace, I'll probably use Visual Studio / Script Debugger. My primary pain is when there's an error in some weird line in the middle of my page and I have to browse around the markup to find that one line with the error. I'm not only interested in the failing script itself, usually I'll want to see the surrounding markup as well. I'll be following the future development :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>490</wp:comment_id>
			<wp:comment_author><![CDATA[wojtek]]></wp:comment_author>
			<wp:comment_author_email>w.migas@polsource.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-05-10 23:04:28</wp:comment_date>
			<wp:comment_date_gmt>2007-05-10 23:04:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great job]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>491</wp:comment_id>
			<wp:comment_author><![CDATA[Another http traffic analyzer]]></wp:comment_author>
			<wp:comment_author_email>pkhach@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.httpdebugger.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-16 18:49:57</wp:comment_date>
			<wp:comment_date_gmt>2008-10-16 18:49:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The price for HttpWatch starts from $395, there are some other good http analyzers. For example http debugger ($50) <a rel="nofollow external" href="http://www.httpdebugger.com" title="http://www.httpdebugger.com" rel="nofollow">http://www.httpdebugger.com</a> or fiddler (free) <a rel="nofollow external" href="http://www.fiddlertool.org" title="www.fiddlertool.org" rel="nofollow">www.fiddlertool.org</a>. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>492</wp:comment_id>
			<wp:comment_author><![CDATA[Deenanath]]></wp:comment_author>
			<wp:comment_author_email>dinumishra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-07 13:35:18</wp:comment_date>
			<wp:comment_date_gmt>2009-03-07 13:35:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[we don't any Addons for javascript tracking something like Firefox error console.<br />If found please let me know... :)<br /><br />Thanx in advance]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>493</wp:comment_id>
			<wp:comment_author><![CDATA[vijay]]></wp:comment_author>
			<wp:comment_author_email>vijayasimha@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-13 19:02:24</wp:comment_date>
			<wp:comment_date_gmt>2009-07-13 19:02:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Do you know of any addons that I can use to set the httpheaders. Like firefox has &quot;Modify headers&quot; which I can use to set the headers. <br /><br />thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Multi Monitoring With Style</title>
		<link>http://improve.dk/multi-monitoring-with-style/</link>
		<pubDate>Wed, 29 Nov 2006 02:46:06 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/11/29/multi-monitoring-with-style.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As a developer I strive to increase my productivity. In contrast to most people I know, I'm able to multitask at an unusual level. I often sit at my desktop, working on several projects at the same time (literally), I may also watch multiple movies/tv-series at the same time and so forth.

<p>So how do we increase productivity? I'll stick with the hardware/software aspect and ignore the psychological issues (which are not to be neglected, the definitely play a big part as some people just seem to be unable to multitask at any level).

<p>The one thing that has increased my productivity the most was when I bought my my dual-monitor setup (two 20" Dells). Having dual monitors is a world of difference in contrast to having just a single monitor, no matter the size of that single monitor. I've had several discussions with friends who would rather have a single 24" monitor instead of two 20" or two 17-19" (there's no real difference between 17-19" monitors as they all support the same resolution). I would any day choose two low grade 17" monitors over a single 24" monitor, simply because ones productivity is a lot greater when having dual monitors. But why?

<p>The problem with multi tasking on a single monitor is that we tend to - and Windows is built for - have our windows maximized. Maximizing windows is great, it saves us a lot of work, moving windows around so all the open windows fit, resizing them and so forth. By maximizing them we simply have to double click the titlebar and we're done. But that's not all good. The problem with maximizing windows is that we can only have a single active window at a time, requiring us to alt-tab around between the windows, or even worse, moving our mouse between the start menu and the actual window content area, wasting a lot of time.

<p>Having multiple monitors enables you to have multiple maximized windows at the same time, as maximizing a window will only maximize it on the monitor it's currently at. You'd be surprised at how often having just two maximized windows is all you need when working. As a developer we'll usually have Visual Studio and Internet Explorer running (for web development), or possibly VS + SQL Server Management Studio and so forth. It also gives one a much better perception of the current work task as you can have a lot of arbitrary information lying around on the secondary monitor while working on the primary monitor.

<p>Let me talk a bit about how to optimally place your monitors.

<h2>Dual monitor setup</h2>

<p>The most intuitive thing to do when setting up a dual monitor setup is to place both monitors on each side of the center point, in effect, placing you directly in between both monitors, having a great view on both of them.

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/11/monitorsetup_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/11/monitorsetup_2.jpg" alt="monitorsetup_2" width="407" height="186" class="alignnone size-full wp-image-1596" /></a></div></div>

<p>This however, is not optimal! You should place yourself directly in front of one of the monitors, the <i>primary</i> one. You will be concentrating your focus on just one of the monitors for 90% of the time, very very rarely will you need to actually look at both monitors at the same time. Placing yourself in the middle will (although you may not be consciously aware of it) cause you to twist your neck to one side continuously. By placing the primary monitor straight ahead of you, you can sit at a normal angle for most of the time, and it feels natural to look over on the other monitor when you actually need it.
<h2>Quad monitor setup</h2>
What's the next natural step after dual monitors? Quad monitors of course!

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/11/monitor_old_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/11/monitor_old_2.jpg" alt="monitor_old_2" width="800" height="533" class="alignnone size-full wp-image-1597" /></a></div></div>

<p>This was my second setup, after my dual monitor setup. Let me give you a warning right now and here, you should <i>not</i> get a setup like this unless you have a really explicit need for quad monitors. I loved this setup while I was setting it up, I loved it for about a week (simply because I had to, after all it wasn't really that cheap). But the fact is that it's utterly useless. Again, you'll have to position the primary monitor right in front of you, but on most quad monitor stands, it's not really possible to customize the setup very much. Also the lower monitors will simply be too low for you to look at them naturally (and the top ones will be too high), so this setup will cause you to constantly sit in a bad position, not really having any monitors feeling natural to look at.</p>

<h2>Triple monitor setups</h2>

<p>Before I had my quad setup, I had three of those 20" Dell's. That was actually a quite good setup, and that's what I'm going to describe here. Unfortunately you'll have to do with a picture of my current setup (two 20"'s with a center 30") as I can't find any pictures of my trip-20"'s setup.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/11/monitor_current1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/11/monitor_current1_2.jpg" alt="monitor_current1_2" width="800" height="533" class="alignnone size-full wp-image-1598" /></a></div></div>

<p>Having three monitors is a great solution if you really need a lot of monitor real estate. The obvious advantage is that there's a center monitor that will quite naturally become the primary monitor. The two side/satellite monitors will become secondary monitors where you'll keep all the arbitrary info while working. Again, the most important factor here is that you'll be able to work on your primary monitor while looking at a an angle that feels natural.</p>

<h2>Required hardware</h2>

<p>Most people think it requires a lot of expensive hardware to run multiple monitors - that's a myth! Most graphics cards today actually come with dual monitor outputs. It doesn't matter if ones VGA and the other's a DVI output, as long as you're able to connect your monitors, it'll work. If you're going to buy a new graphics card, please do yourself a favor and get one with DVI outputs as it delivers a better picture on TFT's.</p>

<p>As for monitors, you really should get yourself monitors that support the same height resolution. It's a pain when you can't move your mouse clearly from one monitor to the other since the resolution doesn't allow you to do so.</p>

<h2>Software</h2>

<p>Windows is great at automatically setting up your x-monitor system. It'll automatically recognize the monitors and stretch your desktop across all monitors. You don't need any 3rd party software to run multiple monitors.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/11/monitorproperties_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/11/monitorproperties_2.jpg" alt="monitorproperties_2" width="404" height="451" class="alignnone size-full wp-image-1600" /></a></div></div>

<p>In the usual display properties control panel, you'll be able to arrange your monitors and setup how they should behave when you move your mouse from one monitor to the other. If the physical left monitor appears to be on the right side of your center monitor, simply switch them around here.</p>

<p>You should note that there essentially three different multi monitor modes (I'll be using nVidia terms as that's what I'm using).</p>

<ul>
	<li>DualView makes each monitor act as an individual monitor, that means you'll be able to maximize windows on that monitor and make it behave as a stand alone monitor.</li>
	<li>Clone does what the name implies, it simply clones the contents of your primary monitor onto your secondary monitor.</li>
	<li>Horizontal span will combine all of your monitors to one giant monitor. It's highly unusable as maximizing a window will cause it to be maximized across all monitors - which isn't really that useful as you'll probably have some space between the displays, causing an interruption in the middle of your favorite application.</li>
</ul>

<h2>UltraMon</h2>

<p>While you don't <i>need</i> any 3rd party software to run multiple monitors, you're going to need some to do it effectively! When you connect multiple monitors to Windows, it'll only show your taskbar on the primary monitor, and it's a pain in the ass to move your mouse all the way from the secondary monitor to the primary monitor, just to switch applications. UltraMon will put a taskbar on all of your monitors. The UltraMon taskbar works just like the Windows one, it'll only show the windows that are currently on that particular monitor. Also UltraMon enables you to setup keyboard shortcuts for moving a window from one monitor to another, I use Ctrl+Alt+Shift+Left/Right for moving a window to the previous/next monitor. UltraMon does a lot more, but these are the most important features. Oh yeah, it also enables you to make multi monitor wallpapers:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/11/monitor_current2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/11/monitor_current2_2.jpg" alt="monitor_current2_2" width="800" height="533" class="alignnone size-full wp-image-1601" /></a></div></div>

<p>UltraMon is a bargain at $39 for a non time limited version. <a href="http://www.realtimesoft.com/ultramon/">Click here to go the the UltraMon website</a>.</p>

<p>There's a free alternative to UltraMon, MultiMon. While in my experience MultiMon did not work as stable and feature complete as UltraMon, it's great if you don't wanna spend the $39. <a href="http://www.mediachance.com/free/multimon.htm">Click here to go the the MultiMon website</a>.</p>

<h2>allSnap</h2>

<p>allSnap makes all your window snap to the edges of your monitor(s), it may also snap to other windows, it can be customized to any way you like. allSnap is great when you have to have several windows open on one monitor, it makes it a lot quicker for you to resize the windows so you utilize your full monitor area.<a href="http://www.cs.utoronto.ca/~iheckman/allsnap/">Click here to go the the allSnap website</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1218</wp:post_id>
		<wp:post_date>2006-11-29 03:46:06</wp:post_date>
		<wp:post_date_gmt>2006-11-29 02:46:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multi-monitoring-with-style</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="tools"><![CDATA[Tools]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<category domain="post_tag" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Using Multiple Monitors Properly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>494</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email>simon@800px.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.800px.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-11-29 10:41:08</wp:comment_date>
			<wp:comment_date_gmt>2006-11-29 10:41:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have a triple head setup, use a Matrox P750 to drive three 17 inch monitors. At the time that gave me the most square inches for my buck. Anyway to get to the point, the matrox card comes with some nice little desktop apps that do most of the stuff described above.<br /><br />On a side note I can't imagine having an even number of monitors other than two. I gravitate to the center and that means that you are staring at a line.<br /><br />What I really want is for a manufacturer to bring out monitors with the thinnest edging possible.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>495</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-11-29 21:35:44</wp:comment_date>
			<wp:comment_date_gmt>2006-11-29 21:35:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I hear ya, I'd also love to see some thin edged monitors so you could make some really tight setups with as little air as possible in between the monitor surfaces.<br /><br />And you're right, any even number of monitors besides two is going to be a failure, a failure I paid dearly to realize :)<br /><br />Do you by any chance have the names of those apps that come with the Matrox card?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>496</wp:comment_id>
			<wp:comment_author><![CDATA[Robert]]></wp:comment_author>
			<wp:comment_author_email>pocket5s@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://thebull.macsimumweb.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-12-28 22:23:58</wp:comment_date>
			<wp:comment_date_gmt>2006-12-28 22:23:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark, I'm glad you found my post on the same topic and referred me here. I really like the idea of the triple monitor setup you have there. I did come really, really close to buying a 20&quot; Dell as the start of my dual monitor setup. However I bought a laptop instead. Yea, a bit of a downgrade, but I do enjoy sitting on the couch and working.<br /><br />However I'm not going to give the idea of a dual (or even triple) setup for my desktop. I know there will be times when I just plain need the real estate to work effectively.<br /><br />Great post. I'm sure I'll refer back when I get around to setting up my own duals.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>497</wp:comment_id>
			<wp:comment_author><![CDATA[Governor]]></wp:comment_author>
			<wp:comment_author_email>renzer@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.simplerake.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-25 02:29:32</wp:comment_date>
			<wp:comment_date_gmt>2007-01-25 02:29:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, i just wanted to ask how you got 3 monitors set up. Do you have like 2 GFX cards like a AGP and a PCI or what? i world really like to know because i want to set my computer up with 2monitors and a tv. right now i have the tv and 1 monitor sat up. This is all outputs on my GFXcard, but i also have a output on a onboard gfxcard, but i dont think it will run at the same time as the agp ? In the bios i have to choose between AGP/onboard... ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>498</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-14 12:29:08</wp:comment_date>
			<wp:comment_date_gmt>2007-02-14 12:29:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Governor, sorry I haven't replied, didn't see your comment until now.<br /><br />I have a motherboard with dual PCI Express slots, so I'm running two PCI Express graphics cards. You can use an AGP+PCI solution, but it really won't be as fast as dual PCIE.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>499</wp:comment_id>
			<wp:comment_author><![CDATA[Ysangkok]]></wp:comment_author>
			<wp:comment_author_email>ysangkok@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-09-15 14:20:37</wp:comment_date>
			<wp:comment_date_gmt>2008-09-15 14:20:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you only did 2D work you could just plug a million PCI cards in :P OLOLOLOLOLOLOLOLOL]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>500</wp:comment_id>
			<wp:comment_author><![CDATA[Don]]></wp:comment_author>
			<wp:comment_author_email>spycq@gmx.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-20 14:45:37</wp:comment_date>
			<wp:comment_date_gmt>2008-10-20 14:45:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice Post, I really like your 3-monitor-setup.<br /><br />What monitors did you use?<br /><br />BTW: Are you playing poker online (There are some chips on the table and there is a calculator (maybe for the odds :-D)).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>501</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-20 18:00:00</wp:comment_date>
			<wp:comment_date_gmt>2008-10-20 18:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Don<br /><br />Yep, I play poker. Not as much as I used to though (poker was the main reason I got the setup in the first place).<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>502</wp:comment_id>
			<wp:comment_author><![CDATA[brett t]]></wp:comment_author>
			<wp:comment_author_email>brett701@gmail.co</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-22 13:28:27</wp:comment_date>
			<wp:comment_date_gmt>2008-10-22 13:28:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[im planning on gtting a new setup in the next couple days just putting together my thoughts.  i have a 24inch monitor hooked up to a 15 inch monitor.   i have had dul 24 inch monitors in the past and i have had a 60 INch high res monitor.  however, ive made alot of errors.  i am tryig to find the best solution for multitabling poker.  i play heads up mostly, but i typically am playing a total of 10 tables or so.   the 24 ich monitor seems to be sort of tricky because the tables are almost too small when u put alot of tables. ay ideas?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>503</wp:comment_id>
			<wp:comment_author><![CDATA[Hana]]></wp:comment_author>
			<wp:comment_author_email>chethananc@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-09-20 23:33:24</wp:comment_date>
			<wp:comment_date_gmt>2010-09-20 23:33:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, found your writeup extremely helpful in my search for a multi-monitor setup. Among the 2 triple monitor setups that you described, do you like the three 20&quot; monitors (or) the two 20&quot; sides with a 30&quot; center? <br /><br />From multi-tasking efficiency plus minimal strain on the eye perspectives, is this the optimal setup that you have found so far?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>504</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-28 15:36:52</wp:comment_date>
			<wp:comment_date_gmt>2011-07-28 15:36:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@brett t<br />Go for 20&quot;'s. 20&quot;'s are perfect for poker playing - 4 tables in normal resolutkon. Three of those and you'll have 12 tables running in good resolution. A wide screen 30&quot; also works fine for 9 or 12 tabling.<br /><br />@Hana<br />Definitely prefer my current setup of a center 30&quot; and two 20&quot;'s. My latest setup has one vertical 20&quot; on the right side and a horizontal 20&quot; on the left side. Vertical 20&quot; is perfect for website reading, horizontal 20&quot; is perfect for secondary applications, while the center 30&quot; is used for primary applications.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Running Vista, MSDNAA Update</title>
		<link>http://improve.dk/running-vista-and-msdnaa-update/</link>
		<pubDate>Sat, 02 Dec 2006 22:09:14 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/01/running-vista-msdnaa-update.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am now officially running Vista! Although I have been somewhat skeptical about Vista so far, I must admit that my first impression of Vista is quite positive.</p>

<p>It seems that most Microsoft affiliated Vista users brag about their high System Rating scores, most of them being in the 4+ area. How about aiming at who can get the lowest score? Well say hello to my laptop:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/vista_exp_index_2.jpg"><img class="alignnone size-full wp-image-1714" alt="vista_exp_index_2" src="http://improve.dk/wp-content/uploads/2006/12/vista_exp_index_2.jpg" width="560" height="482" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/vista_exp_index_2.jpg"><img class="alignnone size-full wp-image-1714" alt="vista_exp_index_2" src="http://improve.dk/wp-content/uploads/2006/12/vista_exp_index_2.jpg" width="560" height="482" /></a></div></div>

<p>I've installed Vista on my Dell Latitude X1 laptop that boasts a puny 1.1Ghz Pentium M CPU and 512MB memory, and the graphics card isn't even worth mentioning. To my surprise Vista actually seems to run quite well on my laptop. Naturally I'm unable to run the Aero user interface as my laptop is no where capable of that, but even the non-aero user interface looks quite neat. Another plus is that Vista was able to use my sound card, wifi, bluetooth and my laptop specific function keys without me installing any drivers, very nice (in a Borat-ish voice).</p>

<p>The Windows XP user interface never turned me on. In fact, the first thing I do on a new XP installation (after unplugging the network cable) is to revert the user interface back to the good old classic Windows 2000 look, ahhh, the memories. Although Vístas interface looks a lot more professional, one does get the feeling that it really is nothing more than a new user interface running on top of all the old components.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/vista_cmd_2.jpg"><img class="alignnone size-full wp-image-1715" alt="vista_cmd_2" src="http://improve.dk/wp-content/uploads/2006/12/vista_cmd_2.jpg" width="549" height="333" /></a></div></div>

<p>For instance, look at this command prompt that I've opened. It clearly shows that the Vista interface attempts to put a Vista border around the classic 2k style window, creating some sort of ugly double-border look.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/vista_2kstyle_2.jpg"><img class="alignnone size-full wp-image-1716" alt="vista_2kstyle_2" src="http://improve.dk/wp-content/uploads/2006/12/vista_2kstyle_2.jpg" width="580" height="406" /></a></div></div>

<p>If you switch back to the 2k look you get a bit disappointed. In my opinion the user interface looks very messy, there are no clear lines that indicate the various parts of the window. This isn't just an issue with the "My Computer" window as indicated in the above picture, but in most Vista windows. Compare it to the Vista look below:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/vista_look2_2.jpg"><img class="alignnone size-full wp-image-1717" alt="vista_look2_2" src="http://improve.dk/wp-content/uploads/2006/12/vista_look2_2.jpg" width="560" height="394" /></a></div></div>

<p>Here the "Organize, views, system properties" line is clearly marked using a gradient color, giving a much cleaner look. I know it's probably blasfemi, but I really wished that they'd spent a bit more time making a nice 2k look as well.</p>

<p>It's sad that all I'm mentioning here is the user interface, but that really is what counts on a first impression basis. I haven't used Vista more than about an hour, so I'm going to save any indepth analysis for later on when I know what I'm talking about.</p>

<h2>MSDNAA</h2>

<p>It seems that Vista is already out on MSDNAA in some countries. Though there is no official date we're hoping to have Vista out on MSDNAA in Denmark sometime in December. Vista Business will be available through MSDNAA, not Ultimate - the Media Center capabilities of Vista Ultimate includes some rather expensive codecs which cannot currently be put onto MSDNAA, I do however hope that it will be possible later on.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1219</wp:post_id>
		<wp:post_date>2006-12-02 23:09:14</wp:post_date>
		<wp:post_date_gmt>2006-12-02 22:09:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-vista-and-msdnaa-update</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="msdnaa"><![CDATA[MSDNAA]]></category>
		<category domain="post_tag" nicename="vista"><![CDATA[Vista]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[running-vista-msdnaa-update]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Installing Office 2007 on Vista</title>
		<link>http://improve.dk/installing-office-2007-on-vista/</link>
		<pubDate>Mon, 04 Dec 2006 02:57:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/04/installing-office-2007-on-vista.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ok, so I'd promised myself that I would at least give it a month before I'd install Vista on my desktop computer as I simply will not be able to cope with having major problems here. For work purposes I simply have to have a functional desktop computer.

<p>Oh to heck with that! Having tried Vista on my laptop, I craved for seeing it expose it's full potential on a more capable machine. I fell into the pressure. I did it. I installed Vista on my desktop.

<p>I've blogged the whole process, moving from the usual XP environment to Vista, all the new features, annoyances, problems and so forth. I won't be blogging about all of it as there's simply too much, instead I'll be releasing an article shortly describing the whole process. For now, I'll stick to a problem I had when I tried to install Office 2007 on the newly installed Vista machine (a problem which Google couldn't remedy). It was an absolutely fresh install on a formatted drive, all that I'd installed so far were some device drivers. Barring this, Office 2007 should install without a hitch right? Guess not.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_1_2.jpg"><img class="alignnone size-full wp-image-1697" alt="officeinstall_1_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_1_2.jpg" width="619" height="522" /></a></div></div>

<p>I started the installation without problems, chose my setup configuration and began the actual installation. After about 6-7 minutes it was at the end of the installation according to the process bar. An hour later it was still at the end of the process bar without anything visibly happening. I checked the task manager, it was constantly using 10-15% CPU. I gave it another hour as I had to go eat anyways.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_2_2.jpg"><img class="alignnone size-full wp-image-1699" alt="officeinstall_2_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_2_2.jpg" width="619" height="522" /></a></div></div>

<p>After the second hour it had still not moved anywhere, I'd guess you can call it dead by now. I cancelled the setup (by clicking the red X), but this time it hung again, halfways in the uninstall. Half an hour later I killed the process as nothing was happening.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_3_2.jpg"><img class="alignnone size-full wp-image-1700" alt="officeinstall_3_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_3_2.jpg" width="432" height="351" /></a></div></div>

<p>Then this friendly fella popped up, teling me that the uninstallation probably didn't go as planned, well woope de doo. Clicking "Uninstall using recommended settings" performed the uninstall without problems (I seriously wonder what the "recommended" settings are, seeing as there are no settings in regards of an uninstall).

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_4_2.jpg"><img class="alignnone size-full wp-image-1701" alt="officeinstall_4_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_4_2.jpg" width="486" height="157" /></a></div></div>

<p>Reinitiating the Office 2007 install from the DVD resulted in this error - it gets more and more cryptic. I have sucessfully used this DVD to install Vista on Windows XP without problems, so it can't be the DVD. I then resorted to the true swizz army knife of any software developer - a reboot.

<p>After rebooting I initiated the install again, and what do you know, it actually went all the way through this time without any problems. Finally! Or so I thought at least.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_5_2.jpg"><img class="alignnone size-full wp-image-1702" alt="officeinstall_5_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_5_2.jpg" width="700" height="79" /></a></div></div>

<p>"Failed to register a VB Script DLL. Reinstall or run Regsvr32.exe Vbscript.dll to self register. 'C:Program FilesMicrosoft OfficeOffice12FORMS1033scdrestl.ico' is not a valid icon file."

<p>When starting up Outlook, I receive this error message (during the "Setting up accounts" initialization phase). Clicking OK (or the red X) resulted in Outlook closing down and me receiving yet another almost identical message:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_6_2.jpg"><img class="alignnone size-full wp-image-1703" alt="officeinstall_6_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_6_2.jpg" width="484" height="159" /></a></div></div>

<p>"'C:Program FilesMicrosoft OfficeOffice12FORMS1033scdrestl.ico' is not a valid icon file."

<p>More or less the same error message, though this time the title of the dialog was "SetPoint" - the mouse/keyboard driver software for my Logitech diNovo keyboard - what the fudge?

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_7_2.jpg"><img class="alignnone size-full wp-image-1704" alt="officeinstall_7_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_7_2.jpg" width="486" height="157" /></a></div></div>

<p>OK, it told me to either "self register" or uninstall. As I have no idea what "self register" incorporates (I tried to regsvr32 Vbscript.dll to no avail, and I hardly think a .ico file can be regsvr32'ed), I went for the uninstall. But this all to familiar dialog box popped up. After about five reboots and several torn images of Bill Gates I realized the I was not going to get this bugger uninstalled (this dialog also appeared through the "Programs and Features" control panel when trying to uninstall from there). So what's the next step?

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_8_2.jpg"><img class="alignnone size-full wp-image-1705" alt="officeinstall_8_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_8_2.jpg" width="800" height="564" /></a></div></div>

<p>Please do not ask me how, I really can't remember how I dug myself in here, the important thing is that I did. I tried running both .MSI files. I have no idea what they did, the just executed with no GUI and then closed again in about one second. After running these MSI's, I was suddenly able to run the Office installer again. It acted as though Office wasn't even installed on my system so I couldn't uninstall. I decided to just do an install again, hopefully overwriting any buggy files that might have caused the problem.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_5_21.jpg"><img class="alignnone size-full wp-image-1709" alt="officeinstall_5_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_5_21.jpg" width="700" height="79" /></a></div></div>

<p>Well, the good news is that the install went through problem free. The bad news is that the main problem persisted.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_9_21.jpg"><img class="alignnone size-full wp-image-1710" alt="officeinstall_9_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_9_21.jpg" width="800" height="549" /></a></div></div>

<p>I dug out the 2KB .ICO file that seemingly was corrupt (and was able to bring down Microsoft Outlook 2007 - talk about David vs. Goliath!). Windows Photo Gallery (the Vista pendant of the XP Preview application) wasn't able to display the ICO file. As it was able to display all of the other .ICO's in the same folder I think it's safe to conclude that the file was somehow damaged.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_10_2.jpg"><img class="alignnone size-full wp-image-1711" alt="officeinstall_10_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_10_2.jpg" width="188" height="75" /></a></div></div>

<p>Then I took the damaged SCDRESTL.ICO file and prepended the file name with an underscore. Afterwards I simply took a copy of one of the other working .ICO files (SCDRESTS.ICO) and renamed it SCDRESTL.ICO.

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2006/12/officeinstall_11_2.jpg"><img class="alignnone size-full wp-image-1712" alt="officeinstall_11_2" src="http://improve.dk/wp-content/uploads/2006/12/officeinstall_11_2.jpg" width="777" height="420" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1220</wp:post_id>
		<wp:post_date>2006-12-04 02:57:07</wp:post_date>
		<wp:post_date_gmt>2006-12-04 02:57:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>installing-office-2007-on-vista</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="office"><![CDATA[Office]]></category>
		<category domain="post_tag" nicename="vista"><![CDATA[Vista]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Installing Office 2007 on Vista]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>506</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-11 16:53:02</wp:comment_date>
			<wp:comment_date_gmt>2011-06-11 16:53:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to be of help! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>505</wp:comment_id>
			<wp:comment_author><![CDATA[Sami]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-10 21:19:56</wp:comment_date>
			<wp:comment_date_gmt>2011-06-10 21:19:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So, I realize that you wrote this post way back in '06 and who knows if you'll even see this comment, but...you are my HERO!!!  I've been trying for a week to get office '07 to work on my computer (had to remove '10 because for whatever reason it, Vista, and my internet email were incompatible).  I looked at every microsoft help file and private forum I could find and tried every suggestion, but until yours nothing worked.  So, thank you very much for your clever fix!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SetPoint Volume Control In Vista</title>
		<link>http://improve.dk/setpoint-volume-control-in-vista/</link>
		<pubDate>Mon, 04 Dec 2006 03:25:41 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/04/setpoint-volume-control-in-vista.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It seems Logitech has some pretty functional SetPoint drivers out for Vista already (SetPoint is the all-purpose driver software for all their keyboards and mice).</p>

<p>The ony thing that did not work was the volume control. I could turn it up and down and the visual volume meter would respond (the SetPoint generated one, not the Vista one), but nothing would actually happen.</p>

<p>Fortunately there's an easy solution.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/setpoint_1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/setpoint_1_2.jpg" alt="setpoint_1_2" width="778" height="523" class="alignnone size-full wp-image-1693" /></a></div></div>

<p>Navigate to "C:Program FilesLogitechSetPoint". Now make sure that the "SetPoint.exe" process is NOT running - you may have to click Ctrl+Shift+Escape and end the process in the task manager.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/setpoint_2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/setpoint_2_2.jpg" alt="setpoint_2_2" width="377" height="513" class="alignnone size-full wp-image-1694" /></a></div></div>

<p>Now rightclick SetPoint.exe and select "Properties". Navigate to the Compatibility pane and set it to run in compatibility mode as Windows XP (Service Pack 2). After this, double click SetPoint.exe to restart the process. Your volume control should now work!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1221</wp:post_id>
		<wp:post_date>2006-12-04 03:25:41</wp:post_date>
		<wp:post_date_gmt>2006-12-04 03:25:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setpoint-volume-control-in-vista</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="vista"><![CDATA[Vista]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SetPoint Volume Control Vista]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>512</wp:comment_id>
			<wp:comment_author><![CDATA[mindweaver]]></wp:comment_author>
			<wp:comment_author_email>mindweaver@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-15 09:44:33</wp:comment_date>
			<wp:comment_date_gmt>2007-01-15 09:44:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome! thanks alot. Can't believe it was that simple :) I have worked on this all day, trying different keystroke apps. <br /><br />Again, thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>513</wp:comment_id>
			<wp:comment_author><![CDATA[Rick Manfre]]></wp:comment_author>
			<wp:comment_author_email>megamanfre@comcast.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-03-21 00:38:02</wp:comment_date>
			<wp:comment_date_gmt>2007-03-21 00:38:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This fix actually hasnt worked for me. Im using Vista, Setpoint 3.3, with an MX3000 keyboard. Volume controls will only click the volume up once or down once, and if I manually raise or lower the volume, the second I use the volume control, it will go back to minimal, and only moving one click. I can mute, but not unmute with my keyboard as well. Any ideas? Ive been scouring the internet and havent found anything that works.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>514</wp:comment_id>
			<wp:comment_author><![CDATA[Paul Coddington]]></wp:comment_author>
			<wp:comment_author_email>mail@paulcoddington.info</wp:comment_author_email>
			<wp:comment_author_url>http://paulcoddington.info/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-11-22 06:38:01</wp:comment_date>
			<wp:comment_date_gmt>2007-11-22 06:38:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found several problems with the Vista release of SetPoint (4.00) which caused me to roll back my system (and, sorry to say, your solution for the volume control did not work for me):<br /><br />1. Volume control does not work: slightest touch in either direction toggles volume between maximum and minimum (no inbetween).<br /><br />2. System always boots at maximum volume.<br /><br />3. Sound quality severely degraded: less ambient, less dynamic, muddier.  Like going back to iTunes from WMP11 (I suspect in both cases it is bypassing the 24bit 48kHz setting and using 16bit 44.1kHz and forcing the soundcard to use lesser quality circuitry paths rather than its &quot;studio quality&quot; components).<br /><br />4. System sometimes boots with loud hissing from speakers. Cold boot required to fix.<br /><br />5. Mouse spontaneously gets stuck in zoom mode for no apparent reason.  Everything clicked on starts receiving a continuous stream of zoom commands. The 100% button does not undo the result (when it finally decides to stop, that is).<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>515</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan M]]></wp:comment_author>
			<wp:comment_author_email>whistlermace@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-01-05 19:14:40</wp:comment_date>
			<wp:comment_date_gmt>2008-01-05 19:14:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very helpful and easy solution. Thanks very much]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>516</wp:comment_id>
			<wp:comment_author><![CDATA[Martin Barr-David]]></wp:comment_author>
			<wp:comment_author_email>martbd@optusne.com.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-02-25 19:36:47</wp:comment_date>
			<wp:comment_date_gmt>2009-02-25 19:36:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To fix Setpoint fault, disable all audio devices then reenable them.   ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Running IE6 and IE7 at the Same Time</title>
		<link>http://improve.dk/running-ie6-and-ie7-at-the-same-time/</link>
		<pubDate>Mon, 04 Dec 2006 21:40:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/04/running-ie6-and-ie7-at-the-same-time.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ever since IE7 came out developers have had the problem of whether they should upgrade or not. If they chose to upgrade, they wouldn't be able to test their sites in IE6 any longer as installing IE7 would uninstall IE6. There are 3rd party hacks that allow both versions to be installed at the same time, but they will not simulate a true IE6 / IE7 environment.</p>

<p>In recognition of this problem, Microsoft has put out a free Virtual PC 2004 (VPC itself has also been made a free download) image containing a pre-activated Windows XP SP2 installation as well as IE6 and the IE7 readiness toolkit. The image will self destruct on the 1st of april 2007, there'll probably be another solution out by then.</p>

<p><a href="http://blogs.msdn.com/ie/archive/2006/11/30/ie6-and-ie7-running-on-a-single-machine.aspx">Click here to go to the Microsoft IEBlog for further information and download links</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1222</wp:post_id>
		<wp:post_date>2006-12-04 21:40:45</wp:post_date>
		<wp:post_date_gmt>2006-12-04 21:40:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>running-ie6-and-ie7-at-the-same-time</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Running IE7 and IE7 at the Same Time]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>517</wp:comment_id>
			<wp:comment_author><![CDATA[Jesper]]></wp:comment_author>
			<wp:comment_author_email>info@codeodyssey.com</wp:comment_author_email>
			<wp:comment_author_url>http://codeodyssey.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-07 00:01:55</wp:comment_date>
			<wp:comment_date_gmt>2007-01-07 00:01:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I have used the VPC-image and it works great. I can also recommend the service <a rel="nofollow external" href="http://browsershots.org/" title="http://browsershots.org/" rel="nofollow">http://browsershots.org/</a>. It's great for watching how web sites appear in IE6 and many other browsers.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Missing Windows Mobile Device Center</title>
		<link>http://improve.dk/missing-windows-mobile-device-center/</link>
		<pubDate>Fri, 08 Dec 2006 20:08:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/08/missing-windows-mobile-device-center.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In an effort to get my HTC TyTN Windows Mobile 5 based PDA to synchronize with my Vista system, I downloaded the newest release of ActiveSync (4.2). This is what happens when you try to install ActiveSync on Vista:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/wmdc5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/wmdc5_2.jpg" alt="wmdc5_2" width="572" height="293" class="alignnone size-full wp-image-1687" /></a></div></div>

<p>After searching for a solution it became apparent that Vista was born with the successor of ActiveSync, namely the Windows Mobile Device Center (WMDC in short, which is not to be mistaken for the Weapons of Mass Destruction Commission, which shares the same acronym).</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/wmdc6_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/wmdc6_2.jpg" alt="wmdc6_2" width="435" height="509" class="alignnone size-full wp-image-1688" /></a></div></div>

<p>And whadda ya know, there it is, Windows Mobile Device Center. It really does come preinstalled, neat.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/wmdc1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/wmdc1_2.jpg" alt="wmdc1_2" width="357" height="268" class="alignnone size-full wp-image-1689" /></a></div></div>

<p>But... If it's pre installed, why is this all I get when I run the WMDC? Apparently it's perfectly able to recognize that my device is connected.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/wmdc3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/wmdc3_2.jpg" alt="wmdc3_2" width="377" height="454" class="alignnone size-full wp-image-1690" /></a></div></div>

<p>And furthermore it's also able to recognize the name of the device, as well as the operating system, PPC 5.1 / Windows Mobile 5. But why is it not able to synchronize then?</p>

<p>For some reason the Windows Mobile Device Center is NOT preinstalled after all, or at least the actual Device Center isn't, only the connectivity parts are. To use the Windows Mobile Device Center you'll have to <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=C23C8E6A-A72D-4AEF-9663-31CE2FEFBADA&amp;displaylang=en">download the Beta 3 version of WMDC</a> and install it.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/wmdc2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/wmdc2_2.jpg" alt="wmdc2_2" width="800" height="600" class="alignnone size-full wp-image-1691" /></a></div></div>

<p>After installing the Beta 3 version of WMDC it runs perfectly. It really seems to be a lot more snappy and intuitive than the old ActiveSync.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1223</wp:post_id>
		<wp:post_date>2006-12-08 20:08:07</wp:post_date>
		<wp:post_date_gmt>2006-12-08 20:08:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>missing-windows-mobile-device-center</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mobile-device-center"><![CDATA[Mobile Device Center]]></category>
		<category domain="post_tag" nicename="vista"><![CDATA[Vista]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Missing Windows Mobile Device Center]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Making URL Rewriting on IIS 7 Work Like IIS 6</title>
		<link>http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/</link>
		<pubDate>Mon, 11 Dec 2006 01:48:31 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/11/making-url-rewriting-on-iis-7-work-like-iis-6.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Upgrading to IIS 7 should be rather transparent, unfortunately that is not the case when it comes to URL rewriting as we knew it from IIS 6. In IIS 6 all we had to do was to add a wildcard mapping making sure that all requests went through the ASPNET ISAPI process. After this was done, one could create a global.asax file that would either pass requests directly through or rewrite the URL based on an internal algorithm.</p>

<p><b>UPDATE: Please see my <a href="http://improve.dk/archive/2009/10/14/how-to-do-url-rewriting-on-iis-7-properly.aspx">updated post</a> on how to do proper URL rewriting using IIS 7.</b></p>

<p>I didn't really expect this to be a problem when I first requested http://localhost for the first time after setting up my site on IIS 7 (all default settings).</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur1_2.jpg" alt="iis7ur1_2" width="885" height="740" class="alignnone size-full wp-image-1666" /></a></div></div>

<p>Unfortunately this was what I was presented with. Anyone having worked with wildcard mappings from IIS 6 will recognize this, this is the result you'll get after adding a wildcard mapping without having created your URL rewriting functionality. After adding a wildcard map the IIS will not automatically find a default file (by design).</p>

<p>This however, is not the problem cause here. I already have my URL rewriting functionality written in my global.asax BeginRequest method and I'd really like to just reuse my current code. Although the new IIS has a whole new bunch of features - one of them being a new "more correct" way of doing URL rewriting -, I really just wan't to get my website up and running again so I can continue my work.</p>

<p>What I present below is a quick'n'dirty hack that will get my old URL rewriting code to work again. It may not be the IIS 7 way of doing it, and it may not work in your case, it depends on the type of URL mapping you're doing in your project. In short, <a href="http://en.wikipedia.org/wiki/Your_mileage_may_vary">YMMV</a>.</p>

<h2>My scenario</h2>

<p>For this website, improve.dk, all URL's except static files are requested as though they were folders. That means you will not see any pages ending in anything but a /. Any static files are requested as usual. That means I can be sure that a regular expression like *.* will catch all static files, while * will catch all pages - as well as the static files!</p>

<h2>How I got URL rewriting to work like IIS 6</h2>

<p>Start by opening the IIS Manager and selecting your website.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur2_2.jpg" alt="iis7ur2_2" width="1024" height="570" class="alignnone size-full wp-image-1667" /></a></div></div>

<p>Now enter the "Handler Mappings" section:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur3_2.jpg" alt="iis7ur3_2" width="1024" height="570" class="alignnone size-full wp-image-1668" /></a></div></div>

<p>Notice the "StaticFile" handler. Currently it's set to match * and catch both File and Directory requests. If you look back at the first image, you'll notice that the error message details that the handler causing the 404 error is the StaticFile handler. As I know that all my static files will have a file extension (also I don't care for directory browsing), I'll simply change my StaticFile handler so it only matches *.* - and only files.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur4_2.jpg" alt="iis7ur4_2" width="461" height="372" class="alignnone size-full wp-image-1669" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur5_2.jpg" alt="iis7ur5_2" width="461" height="372" class="alignnone size-full wp-image-1670" /></a></div></div>

<p>Your StaticFile handler should now look like this:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur6_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur6_2.jpg" alt="iis7ur6_2" width="670" height="55" class="alignnone size-full wp-image-1671" /></a></div></div>

<p>Now, if you go back and make a request to http://localhost you'll still get the 404 error, but this time the request is not handled by the StaticFile handler, actually it doesn't get handled by any handler at all:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur7_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur7_2.jpg" alt="iis7ur7_2" width="202" height="65" class="alignnone size-full wp-image-1672" /></a></div></div>

<p>What needs to be done now is that we need to map any and all requests to the aspnet_isapi.dll isapi file - just like we would usually do in IIS 6.</p>

<p>Add a new Script Map to the list of Handler Mappings and set it up like this:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur8_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur8_2.jpg" alt="iis7ur8_2" width="461" height="372" class="alignnone size-full wp-image-1673" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur9_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur9_2.jpg" alt="iis7ur9_2" width="461" height="372" class="alignnone size-full wp-image-1674" /></a></div></div>

<p>Click OK and click <i>Yes</i> at the confirmation dialog:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur10_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur10_2.jpg" alt="iis7ur10_2" width="480" height="172" class="alignnone size-full wp-image-1675" /></a></div></div>

<p>Now if you make a request to either http://localhost or any other file you'll get the following error:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur11_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur11_2.jpg" alt="iis7ur11_2" width="870" height="340" class="alignnone size-full wp-image-1676" /></a></div></div>

<p>Looking throug the Event log reveals the cause of the error:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur12_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur12_2.jpg" alt="iis7ur12_2" width="640" height="442" class="alignnone size-full wp-image-1677" /></a></div></div>

<p>The aspnet_isapi.dll file cannot be used as a Handler for websites running in the new IIS 7 Integrated Mode, thus we will need to make our website run in classic .NET mode. Right click your website node in the IIS Manager and select Advanced Settings. Select the "Classic .NET AppPool" and close the dialog boxes:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur13_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur13_2.jpg" alt="iis7ur13_2" width="328" height="222" class="alignnone size-full wp-image-1678" /></a></div></div>

<p>Now you should be able to make a request to http://localhost and see it work. Your URL rewriting should work as a charm aswell:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur14_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur14_2.jpg" alt="iis7ur14_2" width="865" height="647" class="alignnone size-full wp-image-1679" /></a></div></div>

<p>But obviously somethings wrong. Making a request to any static file will reveal the problem:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur15_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur15_2.jpg" alt="iis7ur15_2" width="865" height="647" class="alignnone size-full wp-image-1680" /></a></div></div>

<p>"Failed to Execute URL", what a great descriptive error. Fortunately you won't have to spend hours ripping out hair... As I have already done that - at least I'll save a trip or two to the barber.</p>

<p>The problem is that the static files are being processed by the aspnet_isapi.dll file instead of simply sending the request along to the StaticFile handler. If you click the "View Ordered List..." link in the IIS Manager from the Handler Mappings view, you'll see the order in which the handlers are being executed for each request:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur16_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur16_2.jpg" alt="iis7ur16_2" width="812" height="733" class="alignnone size-full wp-image-1681" /></a></div></div>

<p>When you add a new Script Map it'll automatically get placed at the very top of the line taking precedence over any other handlers, including the StaticFile one.</p>

<p>What we have to do is to move our Wildcard handler to the very bottom, below the StaticFile handler. By letting the StaticFile handler have precedence over our Wildcard handler we ensure that any static files (matching *.*) gets processed correctly while any other URL's gets passed along to our own Wildcard handler that'll do the URL rewriting and make business work as usual:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur17_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur17_2.jpg" alt="iis7ur17_2" width="847" height="734" class="alignnone size-full wp-image-1682" /></a></div></div>

<p>After doing so, both static files as well as your custom URL's should execute as they would under IIS 6:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/iis7ur18_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/iis7ur18_2.jpg" alt="iis7ur18_2" width="633" height="436" class="alignnone size-full wp-image-1684" /></a></div></div>

<h2>Disclaimer</h2>

<p>Please notice that this is a hack. This is not the way URL rewriting is supposed to be done under IIS 7. But instead of spending hours upon hours investigating how to do it the right way, this is quick fix to make things work like they did before.</p>

<p>Also please note that this solution is intended to work for my specific situation. Your needs for URL rewriting may not necessarily match mine, so you may have to modify certain settings to suit your specific needs.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1224</wp:post_id>
		<wp:post_date>2006-12-11 01:48:31</wp:post_date>
		<wp:post_date_gmt>2006-12-11 01:48:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-url-rewriting-on-iis7-work-like-iis6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="url-rewriting"><![CDATA[URL Rewriting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Making URL Rewriting on IIS 7 Work Like IIS 6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[making-url-rewriting-on-iis-7-work-like-iis-6]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>579</wp:comment_id>
			<wp:comment_author><![CDATA[dan]]></wp:comment_author>
			<wp:comment_author_email>dj_bayley@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dbnetsolutions.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-08 22:49:03</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 22:49:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[this goes some way to solve my problem however in ASP.net 2.0 on IIS 6.0 i was able to handle static requests using ASP.net , rewrite them and then seemingly the static file would be served.<br /><br />Your solution is the closest I've got to getting this working however with this if I have /myfile.css and I would normally rewrite this to /somefolder/myfile.css this doesnt happen.<br /><br />essentially on IIS 6 I took an imaginary url rewrote it according to where the database said it was physically stored but then it looks as if the static file handler serves it.<br /><br />Any thoughts on this difference?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>580</wp:comment_id>
			<wp:comment_author><![CDATA[Shane]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-01-27 21:49:45</wp:comment_date>
			<wp:comment_date_gmt>2012-01-27 21:49:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the post, it was helpful. I'm running IIS 7.5 on Windows 7 and to get it to work, the newly created wildcard had to be before static and the static needed to be &quot;*&quot; to work under my circumstances.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>581</wp:comment_id>
			<wp:comment_author><![CDATA[dane killian]]></wp:comment_author>
			<wp:comment_author_email>dane@techsys.co.za</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-30 17:03:03</wp:comment_date>
			<wp:comment_date_gmt>2011-05-30 17:03:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi all,<br /><br />Thanks for the article.<br /><br />I found that all that was needed to do, was update the application pool my site was running in, from Integrate, to Classic, and that seams to have solved it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>582</wp:comment_id>
			<wp:comment_author><![CDATA[Parminder Singh]]></wp:comment_author>
			<wp:comment_author_email>parminder.ebs@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://64.244.63.170/HomePage.aspx</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-26 07:51:32</wp:comment_date>
			<wp:comment_date_gmt>2011-08-26 07:51:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,<br /><br />Firstly thanks for your help and post.<br /><br />I have implemented the steps you have written. But I am still getiing the error &quot;Failed to execute URL&quot;. I ahve put wildcard entry below the staticfile. Please help me out on this. I urgently need to impelent this.<br /><br />Thanks &amp; Regards,<br />Parminder Singh]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>583</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Millikan]]></wp:comment_author>
			<wp:comment_author_email>jason.millikan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-02 14:24:40</wp:comment_date>
			<wp:comment_date_gmt>2011-09-02 14:24:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Kick ass article! You helped me get my site up just in time for the demonstration! Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>584</wp:comment_id>
			<wp:comment_author><![CDATA[Vali]]></wp:comment_author>
			<wp:comment_author_email>vl@astor.ro</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-27 00:12:04</wp:comment_date>
			<wp:comment_date_gmt>2012-06-27 00:12:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[THERE IS A SIMPLE TRICK with II7 and 404 can be made to execute whatever aspx you want (like it did in IIS6)<br /><br />You JUST have to add THIS:<br />errorMode=&quot;Custom&quot; existingResponse=&quot;Replace&quot;<br />to the UNDOCUMENTED &lt;httpErrors&gt; !!!<br />it will look like this<br /><br />&lt;httpErrors errorMode=&quot;Custom&quot; existingResponse=&quot;Replace&quot;&gt;<br />&lt;remove statusCode=&quot;404&quot; subStatusCode=&quot;-1&quot; /&gt;<br />&lt;error statusCode=&quot;404&quot; prefixLanguageFilePath=&quot;&quot; path=&quot;/My404.aspx&quot; responseMode=&quot;ExecuteURL&quot; /&gt;<br />&lt;/httpErrors&gt;<br /><br />I found it here:<br /><a rel="nofollow external" href="http://forums.iis.net/p/1153365/1886004.aspx" title="http://forums.iis.net/p/1153365/1886004.aspx" rel="nofollow">http://forums.iis.net/p/1153365/1886004.aspx</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>585</wp:comment_id>
			<wp:comment_author><![CDATA[pankaj verma]]></wp:comment_author>
			<wp:comment_author_email>pankaj4frnds@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/archive/2006/12/11/making-url-rewriting-on-iis7-work-like-iis6.aspx</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-19 07:21:27</wp:comment_date>
			<wp:comment_date_gmt>2012-06-19 07:21:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it works, but i have problem to open its sub folders.<br />please suggest me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>587</wp:comment_id>
			<wp:comment_author><![CDATA[karthik]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-05-30 08:15:43</wp:comment_date>
			<wp:comment_date_gmt>2012-05-30 08:15:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[this post was Written on December 11, 2006. But still its helping large number of people including me. What a great post. Thank you man.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>589</wp:comment_id>
			<wp:comment_author><![CDATA[Rups]]></wp:comment_author>
			<wp:comment_author_email>rupal.sath@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-10-13 11:24:59</wp:comment_date>
			<wp:comment_date_gmt>2012-10-13 11:24:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Due to your amazing post i just came to know exactly my problem.<br /><br />But still i have problem.<br />hope u help me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>572</wp:comment_id>
			<wp:comment_author><![CDATA[Tim]]></wp:comment_author>
			<wp:comment_author_email>tim@digeratisolutions.com.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-05-14 10:02:08</wp:comment_date>
			<wp:comment_date_gmt>2010-05-14 10:02:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>573</wp:comment_id>
			<wp:comment_author><![CDATA[Serdar TOROS]]></wp:comment_author>
			<wp:comment_author_email>serdar.toros@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-06-07 15:12:37</wp:comment_date>
			<wp:comment_date_gmt>2010-06-07 15:12:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[excellent article for solving this problem,<br />thnx a lot...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>574</wp:comment_id>
			<wp:comment_author><![CDATA[Gus]]></wp:comment_author>
			<wp:comment_author_email>gus.sierra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-06-07 17:27:32</wp:comment_date>
			<wp:comment_date_gmt>2010-06-07 17:27:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excelent Article!! all is ok but i have error with rule extension .htm example:<br />&lt;rewrite url=&quot;^~/(es|fr|en)/(website|website|website).htm&quot; to=&quot;~/seccion-website.aspx?Lang=$1&quot; the error is 404.. <br />Any idea??<br />Many Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>566</wp:comment_id>
			<wp:comment_author><![CDATA[Gabriel Porras]]></wp:comment_author>
			<wp:comment_author_email>gabriel@gabrielizalo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.gabrielizalo.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-11 21:58:43</wp:comment_date>
			<wp:comment_date_gmt>2009-07-11 21:58:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Mark... It works for me!<br /><br />We moved to a Win 64 so, as classifieds, I did need to point to Framework64. Both the new Wildcard Script Map and the existing .aspx.<br /><br />Thanks a lot of!!<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>567</wp:comment_id>
			<wp:comment_author><![CDATA[Robert]]></wp:comment_author>
			<wp:comment_author_email>petervdkerk@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-09 19:40:50</wp:comment_date>
			<wp:comment_date_gmt>2009-09-09 19:40:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Evtim Grigorov<br />You say you copied type and name from the web.config?<br />What exactly did you do then?<br /><br />@Others: Im trying to get this to work on IIS7 WITH extensionless URL's. Does anyone have an example web.config and the right configuration in IIS 7?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>568</wp:comment_id>
			<wp:comment_author><![CDATA[Kaan]]></wp:comment_author>
			<wp:comment_author_email>kaan@seznam.cz</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-19 20:31:16</wp:comment_date>
			<wp:comment_date_gmt>2009-09-19 20:31:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How can we access and control IIS? I think, hosting services don't accept this.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>569</wp:comment_id>
			<wp:comment_author><![CDATA[protienshow]]></wp:comment_author>
			<wp:comment_author_email>protienshow@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-26 20:52:53</wp:comment_date>
			<wp:comment_date_gmt>2009-09-26 20:52:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Million Thanks,<br /><br />It took me whole afternoon for me to migrate II6 app to II7 using UrlRewritingNet.<br /><br />This is an must read article for someone who want to get the UrlRewritingNet work in II7 as II6. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>570</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>christrinder@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-02-02 13:26:09</wp:comment_date>
			<wp:comment_date_gmt>2010-02-02 13:26:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you - I've been trying to find the answer to this for a while now and your blog gave me everything I needed to know! I'm sure Windows Server 2008 is a great product, but I'm finding it so hard to work with!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>571</wp:comment_id>
			<wp:comment_author><![CDATA[Luke Stratton]]></wp:comment_author>
			<wp:comment_author_email>luke@lukestratton.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-02-15 19:02:11</wp:comment_date>
			<wp:comment_date_gmt>2010-02-15 19:02:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have just followed these instructions and now everything works, except when I am MEANT to get a 404, I get a 'Failed to execute URL'. Is there a way to fix this?<br /><br />Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>518</wp:comment_id>
			<wp:comment_author><![CDATA[Bryan Peters]]></wp:comment_author>
			<wp:comment_author_email>bryan@urbandude.com</wp:comment_author_email>
			<wp:comment_author_url>http://urbandude.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-12-12 05:26:02</wp:comment_date>
			<wp:comment_date_gmt>2006-12-12 05:26:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent writeup and screenshots!  I went through the same frustration a few weeks back and fumbled my way through the steps you outlined.  I hope the next person finds this helpful - I know I did.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>519</wp:comment_id>
			<wp:comment_author><![CDATA[Derek Hatchard]]></wp:comment_author>
			<wp:comment_author_email>derek@ardentdev.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ardentdev.com/blog</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-12-12 14:13:55</wp:comment_date>
			<wp:comment_date_gmt>2006-12-12 14:13:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In Integrated Mode you can write .NET code to hook into the request lifecycle events for any request.  No need for an explicit wildcard mapping to aspnet_isapi.  Then you can put your URL rewriting logic in a BeginRequest event handler in an HTTP Module (implement IHttpModule).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>520</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-12-12 15:22:38</wp:comment_date>
			<wp:comment_date_gmt>2006-12-12 15:22:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Derek,<br /><br />I'll have to look into the correct way of URL rewriting for sure. But I suppose that the IHttpModule way of doing it is only going to work for IIS7 using Integrated Mode?<br /><br />I'm still pondering as to how we're supposed to develop our applications on IIS7 while deploying to IIS6 hosts. As I'm running Vista I'll have to use IIS7, but my production environment is running IIS6, so currently I'll probably have to live with a hack like this, until IIS7 can be installed on Server 2003.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>521</wp:comment_id>
			<wp:comment_author><![CDATA[Kimsea]]></wp:comment_author>
			<wp:comment_author_email>laokimsea@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-11 04:46:05</wp:comment_date>
			<wp:comment_date_gmt>2007-01-11 04:46:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Do you can write sample code Making URL rewriting on IIS 7 work like IIS 6 and posted. Thank you]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>522</wp:comment_id>
			<wp:comment_author><![CDATA[Sergey P.]]></wp:comment_author>
			<wp:comment_author_email>sergey.perepechin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.godevs.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-14 09:19:54</wp:comment_date>
			<wp:comment_date_gmt>2007-01-14 09:19:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm using urlrewriting.net, it's very useful when you haven't access to IIS. What do you think guys, about this component?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>523</wp:comment_id>
			<wp:comment_author><![CDATA[dts]]></wp:comment_author>
			<wp:comment_author_email>cv@jobs.co.in</wp:comment_author_email>
			<wp:comment_author_url>http://jobs.co.in/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-06 16:42:43</wp:comment_date>
			<wp:comment_date_gmt>2007-02-06 16:42:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I want to uninstall IIS7 and install IIS6. What are the things I need to care about?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>524</wp:comment_id>
			<wp:comment_author><![CDATA[Aaron]]></wp:comment_author>
			<wp:comment_author_email>aaron@hunter.cx</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-13 03:49:42</wp:comment_date>
			<wp:comment_date_gmt>2007-02-13 03:49:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great tutorial. I had worries about upgrading.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>525</wp:comment_id>
			<wp:comment_author><![CDATA[Craig]]></wp:comment_author>
			<wp:comment_author_email>craig@exorsus.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-19 09:35:27</wp:comment_date>
			<wp:comment_date_gmt>2007-02-19 09:35:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much for this article. A few months back, i went through this process - and basically became stuck at around about your &quot;hair pulling&quot; comment - which is suitably descriptive.<br /><br />Well, you solved the final part of my puzzle. In my case, i had figured out it was to do with the ordering - but had missed the modification to the &quot;StaticFile&quot; handler.<br /><br />Thanks for saving me another few hours of hair pulling. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>526</wp:comment_id>
			<wp:comment_author><![CDATA[Mads Kristensen]]></wp:comment_author>
			<wp:comment_author_email>post@madskristensen.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.madskristensen.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-28 20:14:08</wp:comment_date>
			<wp:comment_date_gmt>2007-02-28 20:14:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is great. It really help me. Thanks a lot.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>527</wp:comment_id>
			<wp:comment_author><![CDATA[NiHique]]></wp:comment_author>
			<wp:comment_author_email>kovarik.martin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.thesynergyofdrumsandguitar.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-05-16 20:03:09</wp:comment_date>
			<wp:comment_date_gmt>2007-05-16 20:03:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you! It solved my problems with urlrewriting.net in IIS7 and forms authentication! I was stuck in ordering .... thanks again!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>528</wp:comment_id>
			<wp:comment_author><![CDATA[classifieds]]></wp:comment_author>
			<wp:comment_author_email>richard@iclads.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.iclads.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-05-28 02:55:10</wp:comment_date>
			<wp:comment_date_gmt>2007-05-28 02:55:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent thanks.  I gave up with this back in November with the beta and reinstalled xp.  Got a new machine now, and this solved it.<br /><br />Note.  If you have Vista 64bit then make sure you point to the 64bit version of the isapi dll otherwise it wont work.<br />C:WindowsMicrosoft.NETFramework64v2.0.50727aspnet_isapi.dll<br /><br />Also, when reordering, it didnt alway move the wildcard all the way to the bottom on first attempt, but needed two goes at it.  Wierd.   Anyway thanks again.<br /><br /> ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>529</wp:comment_id>
			<wp:comment_author><![CDATA[Web Design Glasgow]]></wp:comment_author>
			<wp:comment_author_email>iporter@intraspin.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.intraspin.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-04 12:13:09</wp:comment_date>
			<wp:comment_date_gmt>2007-06-04 12:13:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, thanks for your write up.  Is ASPNET ISAPI a rewriting module built into IIS6/7?  And does it depend on ASP.NET, or can you use it with ASP as well.<br /><br />Finally, is there a way to reference a list of associations between an IDs and Names, such that when I have an ID in the querystring, I can replace is with the name?<br /><br />Could you, for example, publish your rewrite rules, if you think they might help?<br /><br />Cheers from Glasgow!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>530</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-04 15:35:51</wp:comment_date>
			<wp:comment_date_gmt>2007-06-04 15:35:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Glasgow<br />It is built into IIS6/7 ASP.NET, it will not work for vanilla ASP.<br /><br />There is no standard builtin way to rewrite URL's containing names to belonging ID's. My rewriting heavily depends on RegEx to match the type of page that's being requested, and then a database lookup is made to determine the proper ID's:<br /><br />// Check for category blog listing<br />m = Regex.Match(path, &quot;^/blog/(?&lt;category&gt;[a-zA-Z]{1}[a-zA-Z0-9\-]+)/?$&quot;);<br />if (m.Success)<br />	htc.RewritePath(&quot;/blog_categorylist.aspx?CategoryID=&quot; + DB.GetScalarString(&quot;SELECT CategoryID FROM tblBlogCategories WHERE FriendlyTitle = '&quot; + m.Groups[&quot;category&quot;].Value.Replace(&quot;'&quot;,&quot;''&quot;) + &quot;'&quot;));]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>531</wp:comment_id>
			<wp:comment_author><![CDATA[Free Wii Girl]]></wp:comment_author>
			<wp:comment_author_email>trafficexchanges@freebiescout.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.freebiescout.com/free-wii.php</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-18 00:25:59</wp:comment_date>
			<wp:comment_date_gmt>2007-07-18 00:25:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's the advantage of removing file extensions (and having files appear like folders)?  I'm in the process of reworking my Free WIi site and this is something I've considered, but I don't want to run the risk of bringing up the wrong file.  I'd appreciate feedback from anyone with more experience.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>532</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-18 00:48:53</wp:comment_date>
			<wp:comment_date_gmt>2007-07-18 00:48:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are several advantages.<br /><br />- It's easier for users to remember the adresses.<br />- You can hide the actual folder structure, increased security as well as an abstraction for the functionality below.<br />- You can make slashable URL's more easily than normally.<br /><br />That's the most important points, though there are probably a lot more. You won't risk anyone bringing up the wrong file as long as you code it properly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>533</wp:comment_id>
			<wp:comment_author><![CDATA[Paolo Labellarte]]></wp:comment_author>
			<wp:comment_author_email>paolo@labellarte.it</wp:comment_author_email>
			<wp:comment_author_url>http://www.labellarte.it/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-10-11 08:11:33</wp:comment_date>
			<wp:comment_date_gmt>2007-10-11 08:11:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's about rewriting the url of gif,jpg and so on.<br />I followed your suggestions, but using urlrewritingnet I receive always error 404 because, I think, they are always processed by StaticFileModule, moving up the wild card mapping the framework can' ececute these files and receive &quot;Failed to Execute URL&quot;.<br />So if url rewrited contains also images pointing to virtual url, no way, it doenst't work. Isn't it ?<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>534</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email>me@mine.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-10-22 07:47:31</wp:comment_date>
			<wp:comment_date_gmt>2007-10-22 07:47:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Has anyone else noticed that when doing this in vista, any time RewritePath is used, it causes a full postback to the rewritten URL? In IIS 6 I know that I could use it, and not see the double post in something like fiddler. With IIS7, I do see it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>535</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin]]></wp:comment_author>
			<wp:comment_author_email>kevin@blueacorn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blueacorn.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-11-29 04:34:46</wp:comment_date>
			<wp:comment_date_gmt>2007-11-29 04:34:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the great article, it saved me a lot of time as well setting up an eCommerce site on IIS7 that is traditionally on IIS6 with URL rewriting and everything configured around that.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>536</wp:comment_id>
			<wp:comment_author><![CDATA[AgentJ]]></wp:comment_author>
			<wp:comment_author_email>jarrodr@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-01-14 10:55:47</wp:comment_date>
			<wp:comment_date_gmt>2008-01-14 10:55:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are a star!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>537</wp:comment_id>
			<wp:comment_author><![CDATA[Alexei]]></wp:comment_author>
			<wp:comment_author_email>alexei.white@nitobi.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.nitobi.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-05 17:32:25</wp:comment_date>
			<wp:comment_date_gmt>2008-04-05 17:32:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent! This is just what I was looking for and it worked perfectly. Thanks for taking the time to document this. Digg'd]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>538</wp:comment_id>
			<wp:comment_author><![CDATA[dukou]]></wp:comment_author>
			<wp:comment_author_email>dukou@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-10 13:21:12</wp:comment_date>
			<wp:comment_date_gmt>2008-04-10 13:21:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you~<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>539</wp:comment_id>
			<wp:comment_author><![CDATA[ASP.NET]]></wp:comment_author>
			<wp:comment_author_email>spavkov@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.aspdotnetfaq.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-21 11:38:33</wp:comment_date>
			<wp:comment_date_gmt>2008-04-21 11:38:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this post!<br />Just what i was looking for..]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>540</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Irving]]></wp:comment_author>
			<wp:comment_author_email>mike@mike-irving.co.uk</wp:comment_author_email>
			<wp:comment_author_url>http://www.mike-irving.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-01 21:34:37</wp:comment_date>
			<wp:comment_date_gmt>2008-05-01 21:34:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article, your process makes the setup a doddle!<br /><br />IIS 7 seems to give and take quite a lot, but on the whole I like it.<br /><br />Mike.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>541</wp:comment_id>
			<wp:comment_author><![CDATA[E. B.]]></wp:comment_author>
			<wp:comment_author_email>eb@eb0123.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-09 10:39:29</wp:comment_date>
			<wp:comment_date_gmt>2008-06-09 10:39:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I see IIS released the URL Rewriting module<br /><a rel="nofollow external" href="http://learn.iis.net/page.aspx/461/creating-rewrite-rules-for-url-rewrite-module/" title="http://learn.iis.net/page.aspx/461/creating-rewrite-rules-for-url-rewrite-module/" rel="nofollow">learn.iis.net/...</a> <br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>542</wp:comment_id>
			<wp:comment_author><![CDATA[Lawrence Staff]]></wp:comment_author>
			<wp:comment_author_email>home@lozza.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-08 14:46:34</wp:comment_date>
			<wp:comment_date_gmt>2008-07-08 14:46:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've followed your excellent instructions &amp; now my url rewriting works fine now but default pages aren't. If I say go to <a rel="nofollow external" href="http://localhost/testsite" title="http://localhost/testsite" rel="nofollow">http://localhost/testsite</a> or <a rel="nofollow external" href="http://localhost/testsite" title="http://localhost/testsite" rel="nofollow">http://localhost/testsite</a>/ I get the &quot;Failed to execute URL&quot; error message but if I go to <a rel="nofollow external" href="http://localhost/testsite" title="http://localhost/testsite" rel="nofollow">http://localhost/testsite</a>/default.aspx it's fine. Do I need to replicate the default page functionality in my url rewriting code now?<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>543</wp:comment_id>
			<wp:comment_author><![CDATA[Lawrence Staff]]></wp:comment_author>
			<wp:comment_author_email>home@lozza.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-08 15:15:20</wp:comment_date>
			<wp:comment_date_gmt>2008-07-08 15:15:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've now amended my error handling in global.asax.cs to redirect to path + default.aspx if the error is a &quot;Failed to Execute URL&quot; error. It's nasty but it's only needed on my local version.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>544</wp:comment_id>
			<wp:comment_author><![CDATA[eCommerce Consulting]]></wp:comment_author>
			<wp:comment_author_email>kevin@blueacorn.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.blueacorn.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-10 00:31:15</wp:comment_date>
			<wp:comment_date_gmt>2008-07-10 00:31:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Almost a year later and I still find this article useful.  Don't ever take this down =)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>545</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-10 09:24:26</wp:comment_date>
			<wp:comment_date_gmt>2008-07-10 09:24:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Lawrence,<br />To do this hack, we basically bypass any of the existing modules - including the default page module. As you're onto yourself, you'll have to recreate the default page functionality yourself.<br /><br />@eCommerce Consulting<br />I use my own article now and then as well, it's going nowhere :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>546</wp:comment_id>
			<wp:comment_author><![CDATA[adu]]></wp:comment_author>
			<wp:comment_author_email>adu33@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ipage.asia/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-05 04:29:07</wp:comment_date>
			<wp:comment_date_gmt>2008-08-05 04:29:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there any update for this post? I have the same problem as yours. I couldnt find any sample codes that works on IIS 7 to make asp file URL REWRITE]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>547</wp:comment_id>
			<wp:comment_author><![CDATA[Sam]]></wp:comment_author>
			<wp:comment_author_email>sam.critchley@shivam.com.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-07 05:40:52</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 05:40:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Instead of creating your wildcard hander as an ISAPI handler why don't you create a managed handler pointing to System.Web.UI.PageHandlerFactory thus negating the need to run is Classic ASP mode... am I missing something?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>548</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-07 18:40:35</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 18:40:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Sam,<br /><br />As you'll notice I mention a couple of times in the first sections of the post, I'm well aware that this hack is not the correct way of solving the issue. However, this was a fresh installation of Vista back in 2006, I had a website I needed to make some changes to, and I didn't really care to do a lot of rewriting - especially not as it was going to run on IIS6 on the production server.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>549</wp:comment_id>
			<wp:comment_author><![CDATA[Jd]]></wp:comment_author>
			<wp:comment_author_email>john@dalys.us</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 01:52:09</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 01:52:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have been trying to get this to work in windows vista 64bit and so far no luck. I am not sure what I am doing wrong, I have followed your steps and still no luck.<br /><br />I either get the following error<br />HTTP Error 404.4 - Not Found<br /><br />or <br /><br />failed to execute url<br /><br />depends on whether or not I use the 64bit isapi or not.<br />and I have the wildcard set up to use the following isapi file<br /><br />C:WindowsMicrosoft.NETFramework64v2.0.50727aspnet_isapi.dll<br /><br />Any help you can give on this would be appreciated. Thanks.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>550</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 13:25:34</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 13:25:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@jd,<br />The 404 might be because you do not have a default file handler after having it setup like this. This / will no longer get mapped to /default.aspx - just a guess.<br /><br />Failed to execute URL should contain more info on what's going wrong. Have you by any chance set your IIS to run in 32bit mode? That'll require you to select the 32 bit DLL's instead of the 64 bit ones.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>551</wp:comment_id>
			<wp:comment_author><![CDATA[JD]]></wp:comment_author>
			<wp:comment_author_email>john@dalys.us</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 13:59:35</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 13:59:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How do you set up IIS 7 in 32bit mode? I didn't even think that was possible, but I have only being getting into IIS 7.0, so I could have set it 32bit mode without realising I did it. :)<br /><br />As to the 404, correct me if I am wrong, but did I miss read the article. I was under the impression that the setup allowed you to do extentionless urls, and that with .aspx wouldn't be handle by the statichandler. <br /><br />What I am trying to use is urlrewriter.net component, which works perfectly in xp, but under the version of windows that I am using it gives me the weird errors called out above.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>552</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 18:49:22</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 18:49:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can do extensionless urls, but the files still need to be there. Somehow a file has to handle the request, and you have to provide the mapping between an arbitrary request and a specific file. Normally, when you go to /folder/, the file /folder/default.aspx will be invoked due to the default file handler in IIS7/IIS6. When you strip out this handler, your request won't be handled at all and you might get a 404 error. Thus, your handler needs to make sure it handles the /folder/ request to some file - not necessarily default.aspx though.<br /><br />I have no experience with urlrewriter.net so it might be a specific problem in regards to that component. If you've followed my instructions on every point, it should work normally.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>553</wp:comment_id>
			<wp:comment_author><![CDATA[JD]]></wp:comment_author>
			<wp:comment_author_email>john@dalys.us</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-10 04:18:48</wp:comment_date>
			<wp:comment_date_gmt>2008-08-10 04:18:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, that was what it was, as sson as i created a folder and set up a default page on the folder. It worked, I guess I misread the post originally now that I see it working.<br /><br />Pity though, because urlrewriter works very well under xp, but I have not found much on how to get it to work in Vista. Thank you for your help.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>564</wp:comment_id>
			<wp:comment_author><![CDATA[gp]]></wp:comment_author>
			<wp:comment_author_email>belthur@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-02 13:59:54</wp:comment_date>
			<wp:comment_date_gmt>2009-05-02 13:59:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Thank you<br /><br />This is an awesome post. You saved me from trashing a fresh install of 7 and going back to XP....Now that I have my IIS 6 apps working, need to figure out to integrate my other IIS 7 applications.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>565</wp:comment_id>
			<wp:comment_author><![CDATA[Juan]]></wp:comment_author>
			<wp:comment_author_email>rustique@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-06-10 09:04:44</wp:comment_date>
			<wp:comment_date_gmt>2009-06-10 09:04:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the help. I am using urlrewrinting.net's componant and by simply setting my application pool to clasic solved all my problems. Maybe it will work for someone else without having to go through all those steps.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>554</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-10 10:37:15</wp:comment_date>
			<wp:comment_date_gmt>2008-08-10 10:37:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm pretty sure urlrewriter.net can also do the default file mapping. Although I don't have any hands on experience with it, I know lots of people recommending it, and default file handling is a pretty basic feature requirement.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>555</wp:comment_id>
			<wp:comment_author><![CDATA[John Bailo]]></wp:comment_author>
			<wp:comment_author_email>jabailo@texeme.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-15 18:55:34</wp:comment_date>
			<wp:comment_date_gmt>2008-08-15 18:55:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm trying to use a URLRewriter in IIS 6.0   <br /><br />The issue is it works in a virtual directory but not at the root/website level.  The wildcard appmap to aspnet_isapi.dll doesn't seem to fire when applied at the website level -- I just get a 404 error.  Is this your experience?  Any suggestions for me?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>563</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-13 17:06:55</wp:comment_date>
			<wp:comment_date_gmt>2009-01-13 17:06:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Daniel<br /><br />Actually, in my testing I have had no problems checking in the web.config. What's added is a system.webserver section - which is valid under IIS6, but ignored. That means IIS7 will use the new settings while IIS6 will remain unaffected.<br /><br />Also, as long as you don't make the change on the webserver level, it will only affect that single website, and thus it should not require you to move it into a different app pool, unless you have other reasons to do so (I do in my case since I need to the pool as x32 for unrelated causes).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>562</wp:comment_id>
			<wp:comment_author><![CDATA[Daniel Saidi]]></wp:comment_author>
			<wp:comment_author_email>daniel.saidi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.saidi.se/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-13 09:41:30</wp:comment_date>
			<wp:comment_date_gmt>2009-01-13 09:41:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A million thanks - this really saved my day when looking into EpiServer CMS 5 R2 on Vista/IIS7.<br /><br />A quick note, however. In the EpiServer project, we are targeting IIS6. In fact, all developers save me are running XP/IIS6. So, since the fixes will affect web.config, it is best to check out the file non-exclusively and then make sure to not check it, since that will cause problems with IIS6.<br /><br />Since the fixes are quickly applied, it is better to repeat them each time the web.config is changed, instead of going through the trouble with dedicated IIS7 file versions etc.<br /><br />Also, it is worth mentioning (altough it is probably obvious for most people) that sites that require this fix are best to be run as a separate site/application pool. If not, the fixes will affect the entire default web site.<br /><br />Once again, a million thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>560</wp:comment_id>
			<wp:comment_author><![CDATA[Evtim Grigorov]]></wp:comment_author>
			<wp:comment_author_email>egrigorov@melontech.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-20 16:50:20</wp:comment_date>
			<wp:comment_date_gmt>2008-11-20 16:50:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi all,<br /><br />I haven't read all the comments. I had the same fuckin problem. Without being sure, I suspect it may be causing by some kind of unability to read the URLRewrite type and name from the web.config file. <br /><br />What I did without being very knowledgeable about this is to go to IIS7 -&gt; mysite -&gt; MOdules   and then &quot;Add managed module&quot;.<br />Type there the name/type as they are in your web.config.  It may wanr you the type is not found but don't pay attention. Save the changes and give a try to reload the page.<br />It worked for me just great.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>561</wp:comment_id>
			<wp:comment_author><![CDATA[aaron]]></wp:comment_author>
			<wp:comment_author_email>rossano.aaron@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-12 04:09:11</wp:comment_date>
			<wp:comment_date_gmt>2009-01-12 04:09:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great and well written. it was so easy to follow the instructions, i've had it setup for iis6 but needed the help to convert it to iis7.<br />thank you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>559</wp:comment_id>
			<wp:comment_author><![CDATA[Dennis Wong]]></wp:comment_author>
			<wp:comment_author_email>denniswong288@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-08 16:54:23</wp:comment_date>
			<wp:comment_date_gmt>2008-11-08 16:54:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br /><br />Your last comment on &quot;Please notice that this is a hack. This is not the way URL rewriting is supposed to be done under IIS 7. &quot; is quite a concern for me.<br /><br />Doesn't this URLRewriter work properly with IIS7?<br /><br />I can't find any other suitable URLRewriter, except for URLRewriting.net, which is in a foreign language.<br /><br />I do not really want to &quot;hack&quot; the server to do something...<br /><br />Please advise.<br /><br />Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>557</wp:comment_id>
			<wp:comment_author><![CDATA[mizzo]]></wp:comment_author>
			<wp:comment_author_email>michal.kubis@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-09-18 13:51:58</wp:comment_date>
			<wp:comment_date_gmt>2008-09-18 13:51:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you, this article solved my problem. I didn't know that handlers are in specified order. Or better, I didn't noticed order link in IIS7 ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>558</wp:comment_id>
			<wp:comment_author><![CDATA[kral oyun]]></wp:comment_author>
			<wp:comment_author_email>chatkapi25@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.keloyun.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-04 18:32:27</wp:comment_date>
			<wp:comment_date_gmt>2008-11-04 18:32:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep, that was what it was, as sson as i created a folder and set up a default page on the folder. It worked, I guess I misread the post originally now that I see it working.<br /><br />Pity though, because urlrewriter works very well under xp, but I have not found much on how to get it to work in Vista. Thank you for your help. thanksss <br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>556</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-16 02:44:58</wp:comment_date>
			<wp:comment_date_gmt>2008-08-16 02:44:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wildcard mapping certainly works at the website level as well. Make sure you've setup the wildcard mapping at the website level as well, and not just the vdir.<br /><br />Also, rule out the basics first - setup a global.asax that just Respond.Ends to make sure it's hit, and nothing else is affecting it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>575</wp:comment_id>
			<wp:comment_author><![CDATA[Gus]]></wp:comment_author>
			<wp:comment_author_email>gus.sierra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-06-09 12:05:47</wp:comment_date>
			<wp:comment_date_gmt>2010-06-09 12:05:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The problem has been solved, but now the problem is in <a rel="nofollow external" href="http://www.misitio.com" title="www.misitio.com" rel="nofollow">www.misitio.com</a> the error is &quot;Failed to Execute URL.&quot; :-(( any ideas?? many thanks and sorry for my lenguage im spanish]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>577</wp:comment_id>
			<wp:comment_author><![CDATA[Repairman]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.deverhuisservice.nl/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-21 08:47:10</wp:comment_date>
			<wp:comment_date_gmt>2012-04-21 08:47:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@chaosuk  Correct! Thanks allot. Application works in 'Integrated mode'<br />You don't need to run UrlRewriter in ClassicMode when you just add the following in the web.config:<br /><br />    &lt;modules runAllManagedModulesForAllRequests=&quot;true&quot;&gt;<br />      &lt;add type=&quot;Intelligencia.UrlRewriter.RewriterHttpModule,Intelligencia.UrlRewriter&quot; name=&quot;UrlRewriter&quot; preCondition=&quot;&quot; /&gt;<br />    &lt;/modules&gt;<br /><br /><br />With IIS 7, 7.5 be sure you look at this too:<br /><a rel="nofollow external" href="http://social.technet.microsoft.com/wiki/contents/articles/2944.migrate-asp-net-applications-to-iis-7-integrated-mode.aspx" title="http://social.technet.microsoft.com/wiki/contents/articles/2944.migrate-asp-net-applications-to-iis-7-integrated-mode.aspx" rel="nofollow">social.technet.microsoft.com/...</a><br /><br />Happy coding!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>576</wp:comment_id>
			<wp:comment_author><![CDATA[chaosuk]]></wp:comment_author>
			<wp:comment_author_email>kev220@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-08-02 03:39:06</wp:comment_date>
			<wp:comment_date_gmt>2010-08-02 03:39:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[your all wrong, you dont need to make any changes to iis7 to get urlrewriter working properly u just need to properly declare the module in web.config. Ensure you have the following:<br />&lt;system.webServer&gt;<br />    &lt;modules runAllManagedModulesForAllRequests=&quot;true&quot;&gt;<br />      &lt;add name=&quot;UrlRewriter&quot; type=&quot;Intelligencia.UrlRewriter.RewriterHttpModule&quot; <br />    &lt;/modules&gt;<br />    &lt;validation validateIntegratedModeConfiguration=&quot;false&quot; <br />&lt;/system.webServer&gt;<br />Doing it like this will allow you to use urlrewriter out of the box without any tweaking to any of the setup.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166980</wp:comment_id>
			<wp:comment_author><![CDATA[hogan uomo interactive Blu nero 067]]></wp:comment_author>
			<wp:comment_author_email>erickalampe@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.legolovers.it/hogan-uomo-interactive-blunero-067-p-60/</wp:comment_author_url>
			<wp:comment_author_IP>36.250.185.162</wp:comment_author_IP>
			<wp:comment_date>2014-03-08 04:19:33</wp:comment_date>
			<wp:comment_date_gmt>2014-03-08 03:19:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I drop a leave a response when I appreciate a post on 
a site or I have something to add to the discussion. It's caused 
by the passion displayed in the article I looked at.
And after this article Making URL Rewriting 
on IIS 7 Work Like IIS 6. I was actually moved enough to drop a thought ;) I do have 2 questions 
for you if you tend not to mind. Is it simply me or do a few oof these responses look as if they are left by brain dead 
folks? :-P And, if you are writing on other social sites, I would like to follow anything new you 
have to post. Could you make a list the complete urls of all your social sites like your linkedin 
profile, Facebook page or twitter feed?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1224;s:14:"comment_author";s:35:"hogan uomo interactive Blu nero 067";s:20:"comment_author_email";s:18:"erickalampe@web.de";s:18:"comment_author_url";s:65:"http://www.legolovers.it/hogan-uomo-interactive-blunero-067-p-60/";s:15:"comment_content";s:683:"I drop a leave a response when I appreciate a post on 
a site or I have something to add to the discussion. It's caused 
by the passion displayed in the article I looked at.
And after this article Making URL Rewriting 
on IIS 7 Work Like IIS 6. I was actually moved enough to drop a thought ;) I do have 2 questions 
for you if you tend not to mind. Is it simply me or do a few oof these responses look as if they are left by brain dead 
folks? :-P And, if you are writing on other social sites, I would like to follow anything new you 
have to post. Could you make a list the complete urls of all your social sites like your linkedin 
profile, Facebook page or twitter feed?";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"36.250.185.162";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:8:"referrer";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:35:"hogan uomo interactive Blu nero 067";s:10:"POST_email";s:18:"erickalampe@web.de";s:8:"POST_url";s:65:"http://www.legolovers.it/hogan-uomo-interactive-blunero-067-p-60/";s:12:"POST_comment";s:683:"I drop a leave a response when I appreciate a post on 
a site or I have something to add to the discussion. It's caused 
by the passion displayed in the article I looked at.
And after this article Making URL Rewriting 
on IIS 7 Work Like IIS 6. I was actually moved enough to drop a thought ;) I do have 2 questions 
for you if you tend not to mind. Is it simply me or do a few oof these responses look as if they are left by brain dead 
folks? :-P And, if you are writing on other social sites, I would like to follow anything new you 
have to post. Could you make a list the complete urls of all your social sites like your linkedin 
profile, Facebook page or twitter feed?";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1224";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"a32fc6d224";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"982";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"36.250.185.162";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"57788";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1394248773";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-23 21:17:34";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394248773.6893279552459716796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166042</wp:comment_id>
			<wp:comment_author><![CDATA[game]]></wp:comment_author>
			<wp:comment_author_email>merissawiedermann@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://playonlinegamesarcade.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>189.113.64.126</wp:comment_author_IP>
			<wp:comment_date>2014-02-27 06:23:14</wp:comment_date>
			<wp:comment_date_gmt>2014-02-27 05:23:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am genuinely happy to glance at this website posts which 
contains plenty of useful facts, thanks for providing these statistics.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393478594.15818309783935546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";i:1224;s:14:"comment_author";s:4:"game";s:20:"comment_author_email";s:26:"merissawiedermann@arcor.de";s:18:"comment_author_url";s:42:"http://playonlinegamesarcade.blogspot.com/";s:15:"comment_content";s:132:"I am genuinely happy to glance at this website posts which 
contains plenty of useful facts, thanks for providing these statistics.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"189.113.64.126";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:8:"referrer";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"game";s:10:"POST_email";s:26:"merissawiedermann@arcor.de";s:8:"POST_url";s:42:"http://playonlinegamesarcade.blogspot.com/";s:12:"POST_comment";s:132:"I am genuinely happy to glance at this website posts which 
contains plenty of useful facts, thanks for providing these statistics.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1224";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"41937afab8";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"339";s:15:"HTTP_X_PROXY_ID";s:9:"332871477";s:20:"HTTP_X_FORWARDED_FOR";s:11:"62.4.17.227";s:8:"HTTP_VIA";s:34:"1.1 192.0.6.1 (Mikrotik HttpProxy)";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"189.113.64.126";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"57819";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393478593";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-23 21:17:34";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166235</wp:comment_id>
			<wp:comment_author><![CDATA[Hogan Donna Interactive Ratent Nero]]></wp:comment_author>
			<wp:comment_author_email>juderevell@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.legolovers.it/hogan-donna-interactive-ratent-nero-p-39/</wp:comment_author_url>
			<wp:comment_author_IP>36.250.182.168</wp:comment_author_IP>
			<wp:comment_date>2014-03-01 09:13:30</wp:comment_date>
			<wp:comment_date_gmt>2014-03-01 08:13:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I will right away grasp your rss feed as I can not 
in finding your e-mail subscription hyperlink or newsletter service.
Do you've any? Please allow me recognise so that I may 
just subscribe. Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393661610.3544209003448486328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1224;s:14:"comment_author";s:35:"Hogan Donna Interactive Ratent Nero";s:20:"comment_author_email";s:19:"juderevell@zoho.com";s:18:"comment_author_url";s:66:"http://www.legolovers.it/hogan-donna-interactive-ratent-nero-p-39/";s:15:"comment_content";s:203:"I will right away grasp your rss feed as I can not 
in finding your e-mail subscription hyperlink or newsletter service.
Do you've any? Please allow me recognise so that I may 
just subscribe. Thanks.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"36.250.182.168";s:10:"user_agent";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1";s:8:"referrer";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:35:"Hogan Donna Interactive Ratent Nero";s:10:"POST_email";s:19:"juderevell@zoho.com";s:8:"POST_url";s:66:"http://www.legolovers.it/hogan-donna-interactive-ratent-nero-p-39/";s:12:"POST_comment";s:203:"I will right away grasp your rss feed as I can not 
in finding your e-mail subscription hyperlink or newsletter service.
Do you've any? Please allow me recognise so that I may 
just subscribe. Thanks.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1224";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"07f2e0ff6a";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:62:"http://improve.dk/making-url-rewriting-on-iis7-work-like-iis6/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"470";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"36.250.182.168";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"64404";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393661609";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-23 21:17:34";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SQL Server Datetime Rounding Made Easy</title>
		<link>http://improve.dk/sql-server-datetime-rounding-made-easy/</link>
		<pubDate>Wed, 13 Dec 2006 03:49:26 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/13/sql-server-datetime-rounding-made-easy.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><b>Update:</b> As noted in the comments, this method does not actually round, it truncates the datetime value.</p>

<p>As feature complete as MS SQL Server may be, it really lacks some simple datetime rounding functions. Here is a simple trick to easily round of datetimes at any precision you wish.</p>

<p>We will be using two builtin functions, namely the <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_da-db_3vtw.asp">DATEADD</a> and the <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/tsqlref/ts_da-db_5vxi.asp">DATEDIFF</a> function.</p>

<p>We can round off at nearly any precision that SQL Server itself supports, for instance: Minute, Day, Hour, Day, Month, Year and so forth.</p>

<p>In this example I'll select the original "Created" column from the table tblHits, as well as a rounding of the Created column by the day:</p>

<pre lang="tsql">
SELECT Created,
	DATEADD(Day, DATEDIFF(Day, 0, Created), 0) AS CreatedDay
FROM tblHits
</pre>

<p>It'll return the following original / rounded values:</p>

<pre class="plain">
19-11-2006 22:39:27 -&gt; 19-11-2006 00:00:00
20-11-2006 02:27:31 -&gt; 20-11-2006 00:00:00
...
</pre>

<p>And naturally we can do the same, this time rounded by the hour:</p>

<pre lang="tsql">
SELECT Created,
	DATEADD(Hour, DATEDIFF(Hour, 0, Created), 0) AS CreatedHour
FROM tblHits
</pre>

<p>It'll return the following:</p>

<pre class="plain">
19-11-2006 22:39:27 -&gt; 19-11-2006 22:39:00
20-11-2006 02:27:31 -&gt; 20-11-2006 02:27:00
...
</pre>

<p>You could of course also do the rounding on the webserver after you've selected the database results. Sometimes though, we have to do it at the database level. For instance, if I want to know how many visitors I have per day on my blog:</p>

<pre lang="tsql">
SELECT COUNT(1) AS Visitors,
	DATEADD(Day, DATEDIFF(Day, 0, Created), 0) AS Date
FROM tblHits
GROUP BY DATEADD(Day, DATEDIFF(Day, 0, Created), 0)
ORDER BY Date DESC
</pre>

<p>Now, I know that this is not optimal in terms of performance since we're doing the DATEADD(DATEDIFF()) trick twice to both select it and group by it, but I've kept it this way to follow the <a href="http://en.wikipedia.org/wiki/KISS_principle">KISS principle</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1225</wp:post_id>
		<wp:post_date>2006-12-13 03:49:26</wp:post_date>
		<wp:post_date_gmt>2006-12-13 03:49:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-server-datetime-rounding-made-easy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="datetime"><![CDATA[datetime]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="rounding"><![CDATA[Rounding]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SQL Server Datetime Rounding]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>601</wp:comment_id>
			<wp:comment_author><![CDATA[Michel]]></wp:comment_author>
			<wp:comment_author_email>msmits@independer.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-08-04 13:18:41</wp:comment_date>
			<wp:comment_date_gmt>2010-08-04 13:18:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. Like Greg noted, it's a truncate, not a round.<br />I use this to find events within an interval, e.g. searching 2 minutes before the field value:<br /><br />@Search &gt; DATEADD(Minute, DATEDIFF(Minute, 0, Created) - 2, 0)<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>599</wp:comment_id>
			<wp:comment_author><![CDATA[Greg]]></wp:comment_author>
			<wp:comment_author_email>gnomely@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-17 18:43:09</wp:comment_date>
			<wp:comment_date_gmt>2009-12-17 18:43:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[These are truncating, not rounding. But I was looking for truncation anyway, so - Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>600</wp:comment_id>
			<wp:comment_author><![CDATA[Syed]]></wp:comment_author>
			<wp:comment_author_email>syed087@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.invibeitsolutions.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-02-11 22:33:00</wp:comment_date>
			<wp:comment_date_gmt>2010-02-11 22:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post! I was looking for an easy truncate function. Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>597</wp:comment_id>
			<wp:comment_author><![CDATA[Will Shaver]]></wp:comment_author>
			<wp:comment_author_email>will.shaver@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://primedigit.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-12-18 17:51:50</wp:comment_date>
			<wp:comment_date_gmt>2008-12-18 17:51:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[None of these scripts actually ROUND, they all TRUNCATE. There's a large difference between the two.<br />12:55pm -&gt; ROUND -&gt; 1:00 pm<br />12:55pm -&gt; TRUNCATE -&gt; 12:00pm<br /><br /> -Will]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>598</wp:comment_id>
			<wp:comment_author><![CDATA[Manu]]></wp:comment_author>
			<wp:comment_author_email>evigneault@plantcml.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-28 14:56:11</wp:comment_date>
			<wp:comment_date_gmt>2009-08-28 14:56:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks for the tip Mark, just a note the second example (rounded by the hour) should return:<br /><br />19-11-2006 22:39:27 -&gt; 19-11-2006 22:00:00<br />20-11-2006 02:27:31 -&gt; 20-11-2006 02:00:00<br /><br />minus the minutes, right?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>596</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-12-16 04:42:41</wp:comment_date>
			<wp:comment_date_gmt>2006-12-16 04:42:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tip. To use it inline I guess we'd do like so:<br /><br />SELECT DATEADD(d,0,FLOOR(CONVERT(float, getDate())))<br /><br />But, does this allow us to round by any other parameters than days? If for instance I want the dates to be rounded by the month?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>595</wp:comment_id>
			<wp:comment_author><![CDATA[ashish desai]]></wp:comment_author>
			<wp:comment_author_email>ashish.desai@fmr.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2006-12-15 15:42:02</wp:comment_date>
			<wp:comment_date_gmt>2006-12-15 15:42:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Try this, its faster<br />today:<br />	declare @date datetime<br />	set @date = floor(convert(float,getdate()))<br />	RETURN @date<br />yesterday:<br />	declare @date datetime<br />	set @date = floor(convert(float,getdate()))<br />	set @date = dateadd(d,-1,@date)<br />	RETURN @date]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>593</wp:comment_id>
			<wp:comment_author><![CDATA[HR]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-27 20:45:25</wp:comment_date>
			<wp:comment_date_gmt>2012-06-27 20:45:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Brett. Awesome solution.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>594</wp:comment_id>
			<wp:comment_author><![CDATA[Brett]]></wp:comment_author>
			<wp:comment_author_email>brett@4bcj.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.4bcj.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-24 05:13:16</wp:comment_date>
			<wp:comment_date_gmt>2012-02-24 05:13:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was looking for rounding a time and came across your post.  Since it's truncation I've added some code to make it rounding:<br /><br />For hours:<br />select Created,<br />DATEADD(HOUR, datediff(HOUR, 0, dateadd(minute, 30, Created)),0) as CreatedHour<br />from ipDaysPours<br /><br />Basically, add 30 minutes to the original time and then truncate.  If you are at 19:20, it will add 30 to 19:50 and you get 19:00.  If you are at 19:31 it will add the 30 to bring you to 20:01 which truncates to 20:00.<br /><br />You can do the same thing with days but instead add 12 hours to the time then truncate.  Minute rounding would add 30 seconds then truncate.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>591</wp:comment_id>
			<wp:comment_author><![CDATA[De&#225;k Csaba]]></wp:comment_author>
			<wp:comment_author_email>qgedeak@freemail.hu</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-10-06 06:20:12</wp:comment_date>
			<wp:comment_date_gmt>2012-10-06 06:20:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My solution to the second rounding:<br />ido   19:32:31 <br /><br />select ido,ido DIV 100 * 100 from myTable<br /><br />19:32:31,193200]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>592</wp:comment_id>
			<wp:comment_author><![CDATA[Sunrise]]></wp:comment_author>
			<wp:comment_author_email>kraghavendar@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-18 08:07:57</wp:comment_date>
			<wp:comment_date_gmt>2012-07-18 08:07:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Here is a clear example of ROUND and TRUNCATE  function on date in SQL<br /><br />Rounding<br /><br />syntax ROUND(DATE,'FORMAT')<br />where format can be day,month and year<br />In round when the 2nd argument is not provided the oracle engine divides the day into two parts AM and PM.If current mode is AM then round returns the same day otherwise it gives next day.But in the same case truncate returns the same day irrespective of AM and PM.<br /><br />In case of 'DAY' arg..Round and trunc adjusts the  date between 2 sundays.<br />if the day is before 12:00 noon,Wednesday Round displays previous sunday date otherwise the next sunday date<br />Similaryly in month if date is  &gt;15th then next month and if Date is less than 15th the it will display the 1st of same month.In case of year if the month is &lt; =june then it displays 1st jan of same year o/w 1st jan of next year<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Creating a &quot;Shorten Link&quot; Internet Explorer Addin</title>
		<link>http://improve.dk/creating-a-short-link-internet-explorer-addin/</link>
		<pubDate>Sat, 16 Dec 2006 08:39:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/16/creating-a-short-link-internet-explorer-addin.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>You probably already know of the short link services that are around, <a href="http://makeashorterlink.com/index.php">www.makeashorterlink.com</a> for instance. While the idea behind these sites are indeed good, I personally find it quite cumbersome to actually create the short links when I'm typing a forum post somewhere. In this post I'll give an example of a short link system that enables one to easily create short links while typing in Internet Explorer, using an Internet Explorer addon that conveniently places itself in the context menu whenever we right click on some text and a .NET webservice that handles the short link functionality.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/shortlink1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/shortlink1_2.jpg" alt="shortlink1_2" width="633" height="269" class="alignnone size-full wp-image-1651" /></a></div></div>

<h2>What's a short link?</h2>

<p>I'll keep this part short (pun intended). Often when writing in forums, emails, newsgroups and so forth, we need to post links. The problem arises when we have to post a link like this: <a href="http://www.experts-exchange.com/Programming/Programming_Languages/C_Sharp/Q_20801558.html">http://www.experts-exchange.com/Programming/Programming_Languages/C_Sharp/Q_20801558.html</a>, it's quite large! This may easily ruin the desing of the website and annoy people as it takes up a lot of space. A short link equivalence is: <a href="http://link.improve.dk/8">http://link.improve.dk/8</a>.</p>

<h2>The idea</h2>

<p>So how can we make it more convenient, so we won't have to open up a new browser, go to the short link website, create the short link and copy it back into the other browser window? My proposal is that we create an Internet Explorer addin for the context menu like shown in the picture above. That means we can simply type the long url as normally, select it and the right click and select "Replace with short link" whereafter it'll automatically get replaced by a corresponding short link.</p>

<h2>The components</h2>

<p>I won't be hooking into any of the existing short link services as I really wan't to show how such a service could be created from the bottom up, it's actually quite simple. The complete service covers four separate projects. We have the actual Internet Explorer addin which is written in JavaScript. Then we have a .NET DLL that'll be installed on the client machine, this is the one that'll take care of the communication with the short link server. Furthermore we have the "Create a short link" webservice that'll handle the actual creation of short links. And finally we have the short link redirection website which ensures that http://link.improve.dk/* redirects to the URL that's behind it.</p>

<h2>The database</h2>

<p>For storing the short links I'm using a MS SQL server database, of course you can use any kind of storage you want, whether that be Access, XML or some other format. The table I'll be using can be seen here:</p>

<pre lang="sql">CREATE TABLE [dbo].[tblShortLinks](
	[LinkID] [int] IDENTITY(1,1) NOT NULL,
	[URL] [varchar](512) NOT NULL,
	[Created] [datetime] NOT NULL CONSTRAINT [DF_tblShortLinks_Created] DEFAULT (getdate()),
	[IP] [varchar](50) NOT NULL,
	[Visits] [int] NOT NULL CONSTRAINT [DF_tblShortLinks_Visits] DEFAULT (0))</pre>

<p>We have an identity column, the URL, a column reprensenting the creation time of the link, the IP of the creator (for abuse checking) and finally a simple counter that counts how many times the link has been visited.</p>

<h2>The "Create a short link webservice" – ShortLinkService</h2>

<p>I'll dive right into it and present the complete code for the webservice, ShortLinkService.cs:</p>

<pre lang="csharp">using System.Web.Services;
using System.Data.SqlClient;
using System.Data;
using System.Web;
using System;
using System.Text.RegularExpressions;

[WebService(Namespace = "http://link.improve.dk")]
[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
public class ShortLinkService : WebService
{
	[WebMethod]
	public string CreateShortLinkFromURL(string url)
	{
		// We won't handle invalid URL's
		if (!Regex.IsMatch(url, @"[-w.]+://([-w.]+)+(:d+)?(:w+)?(@d+)?(@w+)?([-w.]+)(/([w/_.]*(?S+)?)?)?"))
			return "BAD URL";

		// Create a SqlCommand that'll lookup the URL to see if it already exists
		SqlCommand cmd = new SqlCommand("SELECT LinkID FROM tblShortLinks WHERE URL = @URL");
		cmd.Parameters.Add("@URL", SqlDbType.VarChar, 512).Value = url;

		object result = DB.GetScalar(cmd);

		// If it exists, just return the existing short link
		if (result != null)
			return "http://link.improve.dk/" + result;
		else
		{
			// Since it doesn't exist, create it and return the new link
			cmd = new SqlCommand("INSERT INTO tblShortLinks (URL, IP) VALUES (@URL, @IP); SELECT @@IDENTITY");
			cmd.Parameters.Add("@URL", SqlDbType.VarChar, 512).Value = url;
			cmd.Parameters.Add("@IP", SqlDbType.VarChar, 50).Value = HttpContext.Current.Request.UserHostAddress;

			return "http://link.improve.dk/" + Convert.ToInt32(DB.GetScalar(cmd));
		}
	}
}</pre>

<p>First of all we have to make a crude check to see if it's a valid URL, if not, we won't handle it. Next we'll try and see if the requested URL already exists as a short link. If it does we might as well just return that instead of creating a new one.</p>

<p>Please don't get confused by my call to another class that I use (which I won't be presenting): DB.GetScalar(). What DB.GetScalar() does is to simply connect to my database and run the SqlCommand on it, returning the scalar value of the query. I've kept this code separate as it would only clutter the real purpose of this code.</p>

<p>After getting the value of the SQL query we check if the link exists. If it does we return the short link URL, if not, we create the short link while selecting the newly created identity value at the same time. And then finally we return the URL, just as if it already existed.</p>

<p>That was the complete short link webservice code. All it does is to simply take a URL and return a corresponding short url.</p>

<h2>The redirector website</h2>

<p>This is the website running at http://link.improve.dk. I've setup <a href="http://scottwater.com/blog/articles/Wildcard.aspx">wildcard mapping</a> so all requests passes through to the ASPNET engine. This enables me to write the redirection functionality in the Global.asax file like so:</p>

<pre lang="csharp">using System.Web;
using System;
using System.Text.RegularExpressions;
using System.Data.SqlClient;
using System.Data;

public class Global : HttpApplication
{
	private void Application_BeginRequest(object sender, EventArgs e)
	{
		string input = Request.Path.Replace("/", "");

		// Let's do a simple validation, the input has to be a number
		if (!Regex.IsMatch(input, @"^d+$"))
			DB.Debug("Not a valid short link.");

		int linkID = Convert.ToInt32(input);

		// Lookup URL in database
		SqlCommand cmd = new SqlCommand("UPDATE tblShortLinks SET Visits = Visits + 1 WHERE LinkID = @LinkID; SELECT URL FROM tblShortLinks WHERE LinkID = @LinkID");
		cmd.Parameters.Add("@LinkID", SqlDbType.Int).Value = linkID;

		object url = DB.GetScalar(cmd);

		if (url != null)
			Response.Redirect(url.ToString());
		else
			DB.Debug("Link does not exist.");
	}
}</pre>

<p>First of all we retrieve the input value which consists of the requested path - exluding the leading forward slash. Then we perform a very quick input validation, checking that the requested path is a number. Most short link services use a combination of numbers and alphanumeric characters to keep the actual URL as short as possible. While this is a much better solution, I've stuck to the simple version by simple using numbers.</p>

<p>After retrieving the link ID from the requested path, we look it up in the database - and incrementing the visits count at the same time. If it exists then we perform a Response.Redirect to the requested URL, if it doesn't exist then we write an error output.</p>

<p>The DB.Debug() function is very simple. All it does is to perform a Response.Write() of the passed object and then a Response.End() afterwards, very retro debugging stylish. This concludes the complete short link redirection website.</p>

<h2>The managed clientside library – ShortLinkClient</h2>

<p>This is where things start to get interesting. This library is the .NET class that'll take care of communicating with the ShortLinkService webservice from the client computer. The ShortLinkClient library will be invoked from the Internet Explorer addin through COM (as we <i>have</i> to use JavaScript for the actual addin, unfortunately).</p>

<p>Start by creating a new class library project. Now either delete the Class1.cs or rename it to your liking. Then add a web reference to the following web service:<a href="http://linkservice.improve.dk/ShortLinkService.asmx">http://linkservice.improve.dk/ShortLinkService.asmx</a>. As this library has to be exported to COM we have to sign it using a strong name key file. Fortunately this is quite simple in Visual Studio 2005:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/shortlink2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/shortlink2_2.jpg" alt="shortlink2_2" width="743" height="250" class="alignnone size-full wp-image-1652" /></a></div></div>

<p>Simply right click the ShortLinkClient project and select properties. Then go to the Signing tab, check "Sign the assembly" and choose "New..." from the dropdown list. This'll create a new strong name key file for the library. You do not have to password protect it.</p>

<p>Make sure the ShortLinkClient.cs code matches the following:</p>

<pre lang="csharp">using System.Runtime.InteropServices;
using System.Text.RegularExpressions;

namespace Improve
{
	[ComVisible(true)]
	public class ShortLinkClient
	{
		public ShortLinkClient()
		{
		}

		public string CreateShortLink(string url)
		{
			LinkService.ShortLinkService shortLinkService = new LinkService.ShortLinkService();

			return shortLinkService.CreateShortLinkFromURL(url);
		}

		public bool IsLink(string text)
		{
			return Regex.IsMatch(text, @"[-w.]+://([-w.]+)+(:d+)?(:w+)?(@d+)?(@w+)?([-w.]+)(/([w/_.]*(?S+)?)?)?");
		}
	}
}</pre>

<p>By default our .NET classes are not visible to COM when it's exported, that why we have to set the [ComVisible(true)] attribute on the ShortLinkClient class. Also, for our class to be usable by COM, we have to create a constructor that takes no parameters, otherwise COM won't be able to use our class.</p>

<p>The IsLink function is used to determine whether the right clicked text is actually a valid URL or if it's just plain text.</p>

<p>CreateShortLink takes the URL as a parameter. It then creates an instance of our ShortLinkService proxy class whereafter it invokes the CreateShortLinkFromURL function of the webservice which should return the short link equivalence of the passed URL. This is the only managed code that will run on the client as part of the Internet Explorer addin.</p>

<p>After building the ShortLinkClient project, register it for COM interop using the following command from a command prompt:</p>

<pre lang="csharp">regasm /codebase ShortLinkClient.dll</pre>

<p>To unregister, simply switch the /codebase switch with /unregister. You may have to close any open Internet Explorer windows in case the library has been invoked through the addin as these windows otherwise may lock the dll file.</p>

<h2>Creating the actual addin</h2>

<p>Unfortunately Internet Explorer lacks a bit when it comes to creating add ins for the context menu. I'd really like to be able to write in managed code all the way, but as things are currently, this part has to be written in JavaScript.</p>

<p>To register the addin, create a new registry key in the following location: HKEY_CURRENT_USER/Software/Microsoft/Internet Explorer/MenuExt. The key should have the name that you want to be present in the context menu. In my case that'd result in the following key being created: "HKEY_CURRENT_USER/Software/Microsoft/Internet Explorer/MenuExt/Replace with short link".</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/shortlink3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/shortlink3_2.jpg" alt="shortlink3_2" width="642" height="78" class="alignnone size-full wp-image-1655" /></a></div></div>

<p>The default value should point to the location where you want your javascript file to be located. For development purposes you can place this anywhere you want (I'm using the desktop). For deployment you might want to consider using the Program Files folder.</p>

<pre lang="javascript"><script type="text/javascript">// <![CDATA[
	function main()
	{
		// Get document reference
		var doc = external.menuArguments.document;
		var range = doc.selection.createRange();

		// Check if any text has been selected
		if(!range.text)
		{
			alert('No text selected.');
			return;
		}

		// Create the ShortLinkClient object
		var shortLinkClient = new ActiveXObject('Improve.ShortLinkClient');

		// If link starts with www, let's add http:// for convenience
		var link = range.text.indexOf('www') == 0 ? 'http://' + range.text : range.text;

		// Check if selected text is actually a URL
		if(!shortLinkClient.IsLink(link))
		{
			alert('Selected text is not a valid URL.');
			return;
		}

		// Get a short link
		var shortLink = shortLinkClient.CreateShortLink(link);

		// Replace the selected text with the short link
		range.text = shortLink;
	}

	main();
// ]]]]><![CDATA[></script></pre>

<p>The JavaScript file contains absolutely standard JavaScript code inside a normal script element. In the main function we can access the relevant html Document by accessing the external.menuArguments.document property. We can retrieve the selected text by creating a range using the Document.selection.createRange() function.</p>

<p>First we have to check whether any text was selected at all. Then we create an instance of the ShortLinkClient library (remember, it'll have to be registered for COM interop for this to work - using regasm).</p>

<p>For convenience I'll add http:// in case the link starts with www. For it to be a valid link it has to be in the form protocol://*, so by adding the http:// I'll allow users to shortlink links like "www.improve.dk" instead of them having to type the complete <a href="http://www.improve.dk">http://www.improve.dk</a>.</p>

<p>Next we check whether the selected text is a link by using the ShortLinkClient.IsLink() function, passing in the selected text. If everything passes thus far, we invoke the ShortLinkClient.CreateShortLink() function which'll invoke the webservice and create the short link - and return the short link URL which we will the use the replace the selected text with in the last line of the main function.</p>

<p>If all goes well, this should be the result of our four components working together:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/shortlink4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/shortlink4_2.jpg" alt="shortlink4_2" width="648" height="258" class="alignnone size-full wp-image-1656" /></a></div></div>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2006/12/short_link_code.zip">short_link_code.zip - Sample solution</a></p>

<h2>Improvements</h2>

<p>Many features of this example can be improved if this was meant to be deployed for real. For instance the regular expressions may not match all valid URL's. Also we should probably make some kind of "loading" text while the webservice creates the short link, instead of letting the user sit there for a second or two before the short link emerges (the first time it's called it'll take some time, afterwards it should be nearly instant).</p>

<p>Please let me know if you have any suggestions, questions or any other relevant comments, thanks!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1226</wp:post_id>
		<wp:post_date>2006-12-16 08:39:40</wp:post_date>
		<wp:post_date_gmt>2006-12-16 08:39:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-a-short-link-internet-explorer-addin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="com-interop"><![CDATA[COM Interop]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[Plugin]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Creating a "Shorten Link" Internet Explorer Addin]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>150742</wp:comment_id>
			<wp:comment_author><![CDATA[SEO]]></wp:comment_author>
			<wp:comment_author_email>lavernbamford@yepmail.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.design-spirit-store.com/</wp:comment_author_url>
			<wp:comment_author_IP>91.108.180.135</wp:comment_author_IP>
			<wp:comment_date>2013-11-26 07:50:19</wp:comment_date>
			<wp:comment_date_gmt>2013-11-26 06:50:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, i think that i saw you visited my blog so i got here to go back the want?.I'm trying to to find issues to improve my website!I guess its 
good enough to use some of your ideas!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385448619.406343936920166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161137</wp:comment_id>
			<wp:comment_author><![CDATA[weheartit.com]]></wp:comment_author>
			<wp:comment_author_email>venetta.gonsalves@aol.com</wp:comment_author_email>
			<wp:comment_author_url>http://weheartit.com/joellabu</wp:comment_author_url>
			<wp:comment_author_IP>91.108.180.232</wp:comment_author_IP>
			<wp:comment_date>2013-12-15 19:35:42</wp:comment_date>
			<wp:comment_date_gmt>2013-12-15 18:35:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We have worked with top designers to produce present-day aand significant wallpaper.


Whether you’re hunting for daring, graphic, flowery, or artwork nouveau,
our comprehensive firm of world-famous custom picture will have 
thedesign for you. Fashion wallpaper may rework your surfaces, bedrooms, and propertty into a classy screden of modern craft.
These wallpapers are suited to the walls of any bedroom, includin 
areas to loos.

Yes and no. You could paimt it when you yank it off 
the wall at a later amount of time in the potential because the paint is going to be followed 
the vinyl sheet, if the substance is a sheet vinyl like cloth 
backed wallcovering or paper baacked sheet vinyl.
modern phot wallpaper murals (weheartit.com)
Butt components that aren't made to be dry yanked off the wall (see 'Types of Wallcoverinbg ') like these types 
which require soaking can be merged towards the wall.
The coat (or two) of paint may reduce penetration of the placing 
water useful for removal.

The Poetica series comprises a selection of enchanting embroideries,
fancy designs, adorned patterns, floaty linens voiles, attractive 
appliques and impressive wallcoverings.

The wallcoverings, weaves and prints can also be complemented by 
a selection responsive shining plains, wools and bright voiles, all in a muted scheme.


There are many different types of wallcoverings and there are many different types of partitions,
so there is no single reply to this question. Generally, most wallpapers dry overnight.

Nevertheless, in case of older buildings which 
have many coats of glossy paint to the partitions, the drying method can actually take weeks.

brick wallpaper
The important thing for customers to keep in mind is that while wallpaper is damp it might rip easier, so care should really be 
taken with furniture and wall hangings while you move everything 
back to place.

Inside the shower, you'll be able too bath imkmediately with neearly 
every type of wallcovering-- sijply makke sure to usse the 
exhaust fan or leave the entranceway open. Don't permit water 
condensation while wallpaper is drying to produce in the area.


Browse through our designer libraries by clicking on the pieces for the 
right.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387132542.1468579769134521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166968</wp:comment_id>
			<wp:comment_author><![CDATA[外汇经纪商]]></wp:comment_author>
			<wp:comment_author_email>jeffersontice@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://forexbrokers.cn</wp:comment_author_url>
			<wp:comment_author_IP>5.153.237.76</wp:comment_author_IP>
			<wp:comment_date>2014-03-08 01:40:38</wp:comment_date>
			<wp:comment_date_gmt>2014-03-08 00:40:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Helko іt's me, I aam also visiting this web site daily, 
thiѕ website is genuinely fastidious anԀ the users 
are really sharing ցood thߋughts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1394239238.1381359100341796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:62:{s:15:"comment_post_ID";i:1226;s:14:"comment_author";s:15:"外汇经纪商";s:20:"comment_author_email";s:22:"jeffersontice@yahoo.de";s:18:"comment_author_url";s:22:"http://forexbrokers.cn";s:15:"comment_content";s:149:"Helko іt's me, I aam also visiting this web site daily, 
thiѕ website is genuinely fastidious anԀ the users 
are really sharing ցood thߋughts.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:12:"5.153.237.76";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:8:"referrer";s:64:"http://improve.dk/creating-a-short-link-internet-explorer-addin/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:64:"http://improve.dk/creating-a-short-link-internet-explorer-addin/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:15:"外汇经纪商";s:10:"POST_email";s:22:"jeffersontice@yahoo.de";s:8:"POST_url";s:22:"http://forexbrokers.cn";s:12:"POST_comment";s:149:"Helko іt's me, I aam also visiting this web site daily, 
thiѕ website is genuinely fastidious anԀ the users 
are really sharing ցood thߋughts.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1226";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"021fea116d";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:64:"http://improve.dk/creating-a-short-link-internet-explorer-addin/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"399";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:15:"HTTP_CONNECTION";s:5:"close";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"5.153.237.76";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"47895";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1394239237";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-02-19 19:53:23";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>153879</wp:comment_id>
			<wp:comment_author><![CDATA[san jose security guard card training ca]]></wp:comment_author>
			<wp:comment_author_email>kelsey-childress@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://sanjosesecurityguard.webnode.com/</wp:comment_author_url>
			<wp:comment_author_IP>198.147.20.75</wp:comment_author_IP>
			<wp:comment_date>2013-12-02 01:39:53</wp:comment_date>
			<wp:comment_date_gmt>2013-12-02 00:39:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[San Francisco Bayy Area General Hospital officials tried for 3 yars to 
replace sheriff's deputies and institutional cops with what they hoped would be a cheaper and more effective private stability drive - but at every change, they struck a wall with the effective Service Employees International Union and the 
labor-friendly Board of Supervisors.


San Jose Bodyguards often will accomplish threat assessments and 
protection assessments in attempts to judge &amp; 
establish every client’s level of risk. The personal protection agent 
or personal protection team assigned to each client will possess the safety 
expertise &amp; bodyguard know-how to make sure every client will generally sense relaxed &amp; risk-free within their 
environment.

San Jose Bodyguards may guard purchasers and their loved ones 24-hours per-day anywhere the client 
may vacation. Obtain the security you require….Contact our 
security corporation to-day to speak with a San Jose bodyguard or a security consultant for more details 
on our protection services. Our San Jose bodyguards will effectively decide every clients possible risks 
ergo liberating them from all possible threats or security related issues.


Now, nevertheless, within the aftermath of Sheriff Ross Mirkarimi's entrance that his deputiees failed 
to search the closed stairwell the place where a missing patient was eventually 
located dead, the privatization fight is certain too become revived at both San Francisco General and Laguna Honda Hospital.


Barbara Garcia, mind of the city's Public Health Department, said after Mirkarimi laid-out his department's foibles that her bureau 
was 'discovering widening our current individual protection agreements' and searching 
for 'long- and near-term answers to assure patient and staff safety.'
san jose security guard card training ca
San Jose Humsn anatomy Guards from our Security Guard Company can make sure that our consumers are safeguarded and secured while they keep it up their day to day activities.
Our Bodyguard Agency gives seasoned bodyguard &amp; exec security companies designed specially to generally meet evry clients particular specifications ergo offering a safe atmosphere foor clients to 
correctly participate in their regimen actions.
Successful &amp; discreet armed / unarmed human anatomy guard solutions and prfessional safeguard can be 
acquired forr Private inhabitants, Executives, Corporate Clients, Event Co-ordinators, High-profile Individuals, Superstars &amp; VIPs while they travel locally or travel 
with their International Destinations. Contact our agency you 
now to hire San Jose Exec Protection, San Josse VIP Defense or San Josse Personql Protection.


Don't set your security at stakeget shielding assistance today…If you must hire security individuals, armed escorts, armed chauffeur, basic dress physique guards or an 
investigator you have found the right way to obtain qualified and trained security guards and 
bodyguards…We also offer limousine / limo transportation for govt purchasers, dignitaries, 
movie stars, actors, political, royal family and the typical public…
san jose security guard companies
A security guard at a medical marijuana dispensary in unincorporated Los Angeles County was shot while 
wanting to prevent a robber at the business, a sheriff's standard mentioned Thursday.



The safeguard wass shot three occasions delayedd Wednesday when hee attempted to 
prevent three suspects carrying bandanas and hoodies from 
breaking to the enterprise in Palmdale, said Sheriff's Capt.
Don Ford said. The dispensary was identified as the Green Cactus Collective.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385944793.8959510326385498046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161588</wp:comment_id>
			<wp:comment_author><![CDATA[theaffordableskintagremover.jigsy.com]]></wp:comment_author>
			<wp:comment_author_email>cruzcrutchfield@care2.com</wp:comment_author_email>
			<wp:comment_author_url>http://theaffordableskintagremover.jigsy.com/entries/general/getting-rid-of-skin-tags-quickly-permanently</wp:comment_author_url>
			<wp:comment_author_IP>216.107.159.47</wp:comment_author_IP>
			<wp:comment_date>2013-12-19 02:48:16</wp:comment_date>
			<wp:comment_date_gmt>2013-12-19 01:48:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Skin tags are tiny flaps of cells that abide by areas oof your neck, armpits, eyelids, groin retracts, or under busts.
While they may appear only a little odd, they typically don't harm and present no recognized health-related problem.
(Hence, doctors recommend not managing them.) If however you 
wish to remove your skin layer tags since you view them as unpleasant there are a 22' amount 
ways to remove them both home going to the doctor,,, of, 
in the aand by.

Skin tags are frequent, obtained, benign skin growths that seem like a ttiny smooth, balloons of clinging skin.
Skin tags are harmless growths that can dioffer in ajount in one to hundreds.
Male and females are equially prone to cresting skin tickets.
Obesity is related to skin tag progress. While some skkin 
tickets might fall-off automatically, many remain once produced.

The medical label for skin tag is acrochordon.

Skin tags are bits of flesh-tinted or darkly pigmented tissue that undertaking from the encompassinbg skinn from a small, slim stalk (pedunculated).
Some individuals call these cancers "epidermis dividers." Skin 
tags typicalloy occur 4' quality areas the root the 
neck armpits eyelids genitals folds the bust in, including of,,,,
and under. In early stages, skin tickets may be no more than 
a squashed pinhead-size lump. Many tags typically are smaller (2 mm-5 mm in diameter) at approximately 
one-third to one-half the size of the pinky fingernail, 
many skin tags could become as large being a major grapes (1 cm in diameter) or even 
a fig (5 cm in diameter).
can use compound w freeze off skin tags - theaffordableskintagremover.jigsy.com,

With the exception of the beauty appearance, skin labels usually cause 
no bodily suffering or vexation. These teeny skin stones generally cause symptoms when they are repeatedly 
12' annoyed 12" as example the collar the groin. Cosmetic removal undesirable look is perhaps the most common reason they are removed, for, by or in for. Sporadically, a marking might need removing because it has become crimson and annoyed from bleeding (hemorrhage) or black from folding and dying of the skin cells (necrosis). Often, they could become snagged by clothes, jewelry, animals, or seat belts, producing pain or discomfort. General, these are extremely cancerous growths that have no cancer (malignant) potential.

If you have a skin-tag that's disturbing you, consider making a consultation having a privately involving GP to have it removed

Skin tags can quickly be burned or frozen off in an identical strategy to how warts are eliminated.

In case your skin-tag is tiny having a thin bottom, the GP may advise you try eliminating it-yourself by:

Tying off the bottom of the skin indicate with dental floss or cotton to cut off its blood circulation and allow it to be fall off
Slicing it off with wonderful clean scissors

Because they can bleed seriously don't make an effort to eliminate big skin tags yourself.

All of the time, skin tags can become a scab and fall off independently . However, some people would rather ask them to eliminated, possibly for aesthetic reasons or because the tags may apply against clothing or usually be irritating. You can find over-the-counter preparations built to remove skin tags, moles, warts and such . Clear nail-polish placed on skin tag has also been utilized like a household remedy, but is not a scientifically-proven therapy In addition, individuals have been proven to reduce their labels with ice before slicing them down with clean scissors or nail clippers. Take into account that the region might seldom but probably acquire significant hemorrhaging and / or disease, therefore residence surgery isn't something to be taken lightly.

Your personal doctor may advise eliminating your skin tag utilizing a ligation method (braiding the bottom of the tag with suturing line, as an example, to cut off the circulation and enable the tag to run dry and drop off), cryotherapy to freeze it off, power cauterization, or surgery with scissors or a knife. A mind-numbing cream or injection could possibly be applied, when done in a doctor 's office, and care is taken fully to avoid attacks and bleeding.
removing skin tags at home remedies (http://allaboutskintagremover.tumblr.com/)
There are also natural home remedies and self-treatments, including braiding off the small tag stalk using a bit of line or dental floss and permitting the tag to tumble off over many nights.

The benefit of scissor removing is the fact that the expansion you can find and is instantly eliminated quick results. The potential drawback of any kind of scissor or minor surgical procedure to eliminate tickets is minor hemorrhage.

Possible risks with snowy or burning include temporary skin discoloration, need for duplicate cure (s), and malfunction for the indicate to fall-off.

There's no evidence that removing tags triggers more tags to grow. Somewhat, there are regularly several people who may be much more susceptible to developing skin tags and may include fresh stones. Some patients also need regular elimination of tickets at yearly or quarterly intervals.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387417696.691195011138916015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161656</wp:comment_id>
			<wp:comment_author><![CDATA[skin tags]]></wp:comment_author>
			<wp:comment_author_email>esperanza-sigler@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://thebestskintagremover.jimdo.com/2013/09/04/how-to-get-rid-of-skin-tags-at-home-now/</wp:comment_author_url>
			<wp:comment_author_IP>66.248.193.184</wp:comment_author_IP>
			<wp:comment_date>2013-12-19 14:56:08</wp:comment_date>
			<wp:comment_date_gmt>2013-12-19 13:56:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Skinn tags are littlke flaps of muscle that adhere to areass of your neck, underarms,
eyelids, genitals retracts, or under bosoms. Whkle they might seem 
just a little unusual, they frequently do not injured and create no identified health-related dilemma.
(Hence, physicians often recommend not treating them.) If however you want too remove the skin tags since youu view them 
as undesirable thwre are a 22' number methods to remove 
them both home visiting the doctor,,, of, at and by.

Skin tags are typical, received, cancerous skin growths that look like a small delicate,
balloons of dangling skin. Skin tags are harmless growths 
that may differ in amount from one to hundreds. Males and females are 
similarly vulnerable to creating skin tickets. Obesity is associated 
with skin-tag development. Many remain after created, however some skin tags may fall-off 
automatically. The medical label for skin-tag is acrochordon.



Skin tags are items of flesh-colored or darkly pigmented structure that 
project from the surrounding skin from a small, thin stalk (pedunculated).
A number of people call these cancers "epidermis tabs." Skin 
tickets typically occur 4' feature places tthe root 
the neck underarms eyelids genitals folds the breasts in, like of,,,, 
andunderneath. Early on, skin tickets could be no more than a compressed pinhead-size bump.
Many tawgs usually are small (2 mm-5 mm in diameter) at 
roughly one-third to one-half the size of a pinnky fingernail, some skin tags can 
become as large as being a big grapes (1 cm in diameter) or 
perhaps a fig (5 cm in diameter).
skin tags
Except for the plastic look, skin labels generally cause no real pain or discomfort.
These small skin cancers usually trigger symptoms when they're repeatedly 12' irritated 12" as instance the collar the groin. Makeup removing ugly look is perhaps the most common reason they're removed, for, from or in for. Since it is now inflamed and crimson from bleeding (hemorrhage) or dark from death and twisting periodically, a label may require eradication of your skin tissues (necrosis). Sometimes, they may become snagged by clothes, jewelry, pets, or seat-belts, producing soreness or distress. Overall, these are extremely benign stones which have no melanoma (malignant) likely.

If you have a skin-tag that's disturbing you, consider making a consultation using a secretly involving GP to have it removed

Skin tags can quickly be burned or frosty off in an identical way to how warts are eliminated.

In case your skin tag is modest using a slim platform, the GP may advise you try eliminating it-yourself by:

Tying off the base of skin marking with dental floss or cotton to cut off its blood supply and allow it to be drop off
Reducing it off using high-quality clean scissors

Do not attempt to remove huge skin tags yourself because they can bleed heavily.

The majority of the time, skin labels may turn into a scab and fall off on their own . But, many people prefer to ask them to eliminated, possibly for cosmetic reasons or since the labels might rub against clothing or otherwise be bothersome. You will find over-the-counter arrangements made to remove skin tags, moles, warts and the like . Clear nail polish placed on your skin label has also been utilized like a home remedy, but isn't a scientifically-proven treatment Additionally, people have been recognized to numbing their labels with ice before slicing them down with clean scissors or nail clippers. Keep in mind that the area might seldom but potentially produce severe hemorrhaging and / or contamination, so residence surgery is not anything to be taken casually.

A medical doctor may suggest removing skin tag employing a ligation approach (braiding the bottom of the tag with suturing line, for example, to cut off the circulation and enable the tag to dry up and drop off), cryotherapy to freeze it off, power cauterization, or surgery with scissors or a knife. When performed in a doctor 's office, a mind-numbing cream or treatment may be utilized, and attention is taken fully to prevent bleeding and infection.
best way to remove skin tags on neck
There are also home remedies and self-treatments, including tying off the tiny tag stalk using a little bit of line or dental floss and allowing the tag to slide off over many nights.

The benefit of scissor elimination is the fact that the growth is quickly removed and you'll find quick benefits. The potential disadvantage of any kind of scissor or minor medical procedure to eliminate tickets is minor hemorrhage.

Probable pitfalls with snowy or using include short-term skin discoloration, need for duplicate cure (s), and inability for the indicate to fall-off.

There is no proof that eliminating tags causes more tags to grow. Somewhat, there are several persons who may be much more vulnerable to creating skin tags and may have fresh cancers sporadically. Some sufferers possibly require intermittent treatment of tickets at annual or regular periods.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387461368.2091710567474365234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>154637</wp:comment_id>
			<wp:comment_author><![CDATA[ipad cases with keyboard logitech]]></wp:comment_author>
			<wp:comment_author_email>masonedler@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://my.opera.com/i-adapters/about/</wp:comment_author_url>
			<wp:comment_author_IP>37.203.212.150</wp:comment_author_IP>
			<wp:comment_date>2013-12-03 01:03:23</wp:comment_date>
			<wp:comment_date_gmt>2013-12-03 00:03:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It is time for another installment of our werekly how-to information.
Even if you think you're an expert with the iPad, you might still not learn about some items that are the main fundamentals of the Apple tablet.
We tell you about techniques and simple tips to simply help you recognize your 
iPad better, each week. The other day, we offered some tips to 
you on just how to edit a photo by using the native Photos app.

All it takes is actually a couple of swift faucets to turn a photograph right into a stunning 
photo.

Within the wake of the recent crashes as a result of fake/unauthorized third-party iPhone/iPad 
chargers, Apple has released a notice to teach people about determining and using just certified Apple chargers.



as a account to the hazards posed by unauthorized and uncertified electronic products around the globe though this occurred only in China, it stands.
There’s some panic preparing up amongst people utilizing Apple products – also those with genuine products which might be certified.


till your iPhone/iPad gets charged sufficiently enough to be 
connected out and employed if it’s important, utilize another product.

ipad cases with keyboard logitech
First up could be the STM cache. This great little bag was reviewed by me at the beginning of 2013, and it 
and a second one in black that I bought have already been utilized by both my me 
and partner because the review bag was got by me. It’s the size for the full-sized iPad the iPad Air) and (the 3rd-gen iPad 
with a snap-on back cover and a Smart Cover. There’s space for 
some add-ons, too, like a charger and some wires or even a backup battery.

You can even fit your iPhone within, too. It has been also used by me with both my authentic 
iPad mini and my new iPad mini with Retina screen, both donning snap-on back handles 
and Smart Covers. With the iPad mini, I've enough added space that when I’m out I cann chuck in my wallet and recommendations and utilize just 
the STM cache. They’re about $29 at eBags.

I ordered a circumstance forr my iPhone 5 before the telephone was even legally produced.
I wanted an incident that lined the attributes and straight 
back for defense, but I wanted the sweetness of the iPhone 5 to 
show. The circumstance I purchased appears to be abssent from the falll into line now.

That scnario was created using recycled materials, nonetheless it looks similar to the Barely There for 
iPhone 5/5S in clear. I’ve consumed the scenario 
off while reviewing other scenarios, but I eventually return to 
the Case-Mate. Thee Hardly There is $25.

I’m still utilizing the In-case USB Mini Cable Kitt I ordered inn 2012.
I’ve added a 4″ Amazon Basics USB A-to-Lightning wire forr the kit,
and iit is kept by me in my own gear bag. Anwhere I locate myself, I can usee an AC adapter and these cables or possiibly a USB port port on a computer tto charge my Apple 
products, and I have a miniUSB and a microUSB cable 
forthey that are needed by any items. The In-case USB Mini Cable Kit is $25, and the Amazon Basics Lightnkng cable is $10 in black.
You could desire to place in an USB extension wire to provide these quick minor wires 
much more reach.
amazon ipad accessories bundle (opera.com)
Never Use an iOS unit when it is rocked in the mains.


This is a matter. And irrespective of just hhow many moments it's repetitive, people nevertheless stay glued 
to their guts as opposed to good sense.

It doesn’t matter if you’ve got a good, fool-proof safe electrical method and devices but when 
your smartphone is connected to the mains, you better not use it.
Time.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386029003.1879351139068603515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>142529</wp:comment_id>
			<wp:comment_author><![CDATA[Raymon]]></wp:comment_author>
			<wp:comment_author_email>raymon.conner@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://bullockrryh.soup.io</wp:comment_author_url>
			<wp:comment_author_IP>173.212.199.41</wp:comment_author_IP>
			<wp:comment_date>2013-11-09 07:25:37</wp:comment_date>
			<wp:comment_date_gmt>2013-11-09 06:25:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi colleagues, its great article about educationand completely explained,
keep it up all the time.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383978337.3813650608062744140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163055</wp:comment_id>
			<wp:comment_author><![CDATA[blogster.com]]></wp:comment_author>
			<wp:comment_author_email>forrestfreeleagus@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.blogster.com/discountprotein/why-you-should-drink-discount-protein-instead-of-premium</wp:comment_author_url>
			<wp:comment_author_IP>190.218.89.202</wp:comment_author_IP>
			<wp:comment_date>2014-01-02 14:14:55</wp:comment_date>
			<wp:comment_date_gmt>2014-01-02 13:14:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Heya! I just wanted to ask if you ever have any problems with hackers?
My last blog (wordpress) was hacked and I ended up losing a 
few months of hard work due to no back up. Do you have any solutions to 
stop hackers?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1388668496.0459959506988525390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Executing Assembly Dynamically In a Strongly Typed Way</title>
		<link>http://improve.dk/executing-assembly-dynamically-in-a-strongly-typed-way/</link>
		<pubDate>Tue, 26 Dec 2006 02:31:34 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/26/executing-assembly-dynamically-in-a-strongly-typed-way.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>During a recent plugin based project that I worked upon, I had to dynamically load assemblies and instantiate objects from those assemblies. Usually that'd require a lot of typecasting and nasty code, but thanks to generics we can make it a lot smoother.</p>

<p>I present to you my LoadPlugin function of my PluginHandler module:</p>

<pre lang="csharp" escaped="true">using System.Reflection;
using System;

namespace MTH.Core
{
	internal class PluginHandler
	{
		public static T LoadPlugin&lt;T&gt;(string file)
		{
			Assembly ass = Assembly.LoadFile(file);

			foreach (Type t in ass.GetTypes())
				if (typeof(T).IsAssignableFrom(t))
					return (T)ass.CreateInstance(t.FullName);

			return default(T);
		}
	}
}</pre>

<p>The generic parameter defines the type that should be created from the specified assembly file, this also means that the function will return a strongly typed result of this specific type.</p>

<p>Inside the function we load the assembly and load through each type it hosts. For each type we check the IsAssignableFrom function which'll check if the current type is of the specified type T, no matter if T is an abstract class, interface or any other type. If it matches, we return a new instance of that type. If no type match is found we return null so we can handle the problem in the calling function.</p>

<p>Note that this is a very simple example function, there are many unhandled parameters! Security for instance. In most scenarios you would probably want to check the identity of the loaded assembly and set the security permissions dependingly. Also it is not possible to pass constructor parameters, this would require an extension of the function to take in an array of objects as constructor parameters.</p>

<p>This is how easily we can load any number of plugins that have been placed in a certain plugin directory (in this case the plugins contains code that is to be run on application startup):</p>

<pre lang="csharp" escaped="true">foreach (string file in Directory.GetFiles(Application.StartupPath + "\Plugins\Startup", "*.dll"))
{
	IRunnable startupPlugin = PluginHandler.LoadPlugin&lt;IRunnable&gt;(file);

	if (startupPlugin != null)
		startupPlugin.Run();
}</pre>

<p>All that is required is that the assemblies in the PluginsStartup folder contain a type that implements the IRunnable interface:</p>

<pre lang="csharp">
public interface IRunnable
{
	void Run();
}
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1227</wp:post_id>
		<wp:post_date>2006-12-26 02:31:34</wp:post_date>
		<wp:post_date_gmt>2006-12-26 02:31:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>executing-assembly-dynamically-in-a-strongly-typed-way</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[Plugin]]></category>
		<category domain="post_tag" nicename="reflection"><![CDATA[Reflection]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Executing Assembly Dynamically]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>602</wp:comment_id>
			<wp:comment_author><![CDATA[Luke Puplett]]></wp:comment_author>
			<wp:comment_author_email>lukepuplett@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://lukepuplett.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-06-09 12:38:57</wp:comment_date>
			<wp:comment_date_gmt>2009-06-09 12:38:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Loving you work, Mark.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Internals of Spam Mails - Part 1</title>
		<link>http://improve.dk/the-internals-of-spam-mails-part-one/</link>
		<pubDate>Wed, 27 Dec 2006 06:22:16 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/27/the-internals-of-spam-mails-part-1.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Is your name William? Do you normally write mails with the subject "Re: hi"? Are your mails usually 11,304 characters in length? Guess what, you're a spammer! I present to you, an article containing a textual analysis of about 15,000 spam mails.</p>

<p>Before you ask, what can these numbers be used for? Good question, I'm open to suggestions!</p>

<p>The following numbers are based on 15,073 spam mails in total. Naturally demographics will play a part, such as my interests, part of the world and so forth. Let me give you the 5 word tour of myself: Denmark, male, 21, development, poker.</p>

<h2>Importance</h2>

<p>All mails can be marked with an importance flag ranging from low to high through normal. I'd think spammers would consider their mails rather important, guess not.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam1_2.jpg" alt="spam1_2" width="515" height="363" class="alignnone size-full wp-image-1630" /></a></div></div>

<h2>Body format</h2>

<p>Most anti spam applications today are extra sensitive towards HTML mails so it's no big surprise that they're not that common.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam2_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam2_2.jpg" alt="spam2_2" width="515" height="363" class="alignnone size-full wp-image-1631" /></a></div></div>

<h2>Number of recipients</h2>

<p>A lot of mail servers as well as anti spam clients will filter out mass mailed emails, that is, emails that have a lot of recipients. Some mails will figure as having zero recipients, these may be caused by bad header formats / values in the mail.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam3_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam3_2.jpg" alt="spam3_2" width="515" height="363" class="alignnone size-full wp-image-1632" /></a></div></div>

<h2>Reply-to field usage</h2>

<p>The reply-to field enables you to specify an email address used for replies other than the one that was used to send the email with. How many mails utilize this field? (0 = not used, 1 = used)</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam4_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam4_2.jpg" alt="spam4_2" width="515" height="363" class="alignnone size-full wp-image-1633" /></a></div></div>

<h2>Mail size</h2>

<p>Don't you just hate it when you startup Outlook and you have to wait for ages due to several terabytes of spam mails waiting to be downloaded? But how many bytes does an average mail actually take up?</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam5_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam5_2.jpg" alt="spam5_2" width="515" height="363" class="alignnone size-full wp-image-1634" /></a></div></div>

<h2>Mail lengths</h2>

<p>How long is the average spam mail? The more text, the less chance one will actually read it, right? As for the subject (in number of characters):</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam6_211.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam6_211.jpg" alt="spam6_21" width="515" height="363" class="alignnone size-full wp-image-2693" /></a></div></div>

<p>Note that the 255 upper limit is usually caused by either the mail servers or the mail clients capping the subject at 255 characters. As for the body:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam7_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam7_2.jpg" alt="spam7_2" width="515" height="363" class="alignnone size-full wp-image-1638" /></a></div></div>

<h2>Spammer names</h2>

<p>What's William and Richard got to do with each other? They both send a major junkload of spam.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam8_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam8_2.jpg" alt="spam8_2" width="515" height="463" class="alignnone size-full wp-image-1640" /></a></div></div>

<h2>Subjects</h2>

<p>I'm quite surprised that Viagra is not even in the top 10 subjects, almost disappointed.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam9_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam9_2.jpg" alt="spam9_2" width="515" height="463" class="alignnone size-full wp-image-1643" /></a></div></div>

<h2>Common body words</h2>

<p>What's the number one used word in the body of spam mails? Pretty boring: "the".</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam10_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam10_2.jpg" alt="spam10_2" width="515" height="463" class="alignnone size-full wp-image-1644" /></a></div></div>

<h2>Unusual body words</h2>

<p>I've defined an unusual word as one that's not among the top 300 most common english words - according to: <a href="http://www.esldesk.com/esl-quizzes/most-used-english-words/words.htm">http://www.esldesk.com/esl-quizzes/most-used-english-words/words.htm</a>.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam11_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam11_2.jpg" alt="spam11_2" width="515" height="463" class="alignnone size-full wp-image-1645" /></a></div></div>

<h2>Common subject words</h2>

<p>How about the subject?</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam12_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam12_2.jpg" alt="spam12_2" width="515" height="463" class="alignnone size-full wp-image-1646" /></a></div></div>

<h2>Unusual subject words</h2>

<p>Same definition as for the unusual body words, this time in regards of the subject.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/12/spam13_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/12/spam13_2.jpg" alt="spam13_2" width="515" height="463" class="alignnone size-full wp-image-1647" /></a></div></div>

<h2>Common sentences</h2>

<p>Trying to make any sense out of a common spam mail is not an easy task. Hence the following top 20 common sentences may not make a whole lot of sense either.</p>

<p>Count: <b>494</b><br />
The attention to detail is paramount and they are comparable to the originals in every way.</p>

<p>Count: <b>481</b><br />
Having had this same model for several years i was hesitant to spend the money again.</p>

<p>Count: <b>481</b><br />
You will be very impressed with the quality.</p>

<p>Count: <b>475</b><br />
Lange sohne glashute original audemars piguet jaeger-lecoultre officine panerai alain silbersteini got my watch yesterday and love it.</p>

<p>Count: <b>464</b><br />
Replicated to the smallest detail 98 a accuracy includes all proper markings wide selection and fast worldwide shipping authentic weight true-to-original self winding and quartz mechanismsour faithful duplications include these prestige brands rolex mens rolex ladys rolex boys watch box sets patek philippe iwc cartier bvlgari frank muller breitling omega tag heuer chopard vacheron constantin a.</p>

<p>Count: <b>344</b><br />
Comprestige replicasregards-mens and ladies prestige watches for all occasionsthese replicas have all the presence and poise of the originals after whome they were designed at a fraction of the cost.</p>

<p>Count: <b>168</b><br />
General fewer your on can try answers for expert help with search.</p>

<p>Count: <b>135</b><br />
The only way to solve it is to take viagra or cialis super viagra medications before you have sex.</p>

<p>Count: <b>135</b><br />
You can spend thousands and buy them at your local drug store.</p>

<p>Count: <b>134</b><br />
03 this problem is called erectile dysfunctioned.</p>

<p>Count: <b>132</b><br />
Globally the potential market is a staggering 45 billion.</p>

<p>Count: <b>132</b><br />
Video streams to wherever you choose to watch it.</p>

<p>Count: <b>105</b><br />
20as the population ages the economic value in the us market for adult daycare is projected to grow nearly 600.</p>

<p>Count: <b>95</b><br />
Major discoveries are happening all the time and wbrs is in the thick of it.</p>

<p>Count: <b>95</b><br />
With the array of drilling projects wild brush has going on at the moment tension is building.</p>

<p>Count: <b>95</b><br />
As the drilling gets closer to completion insiders are accumulating ahead of that major discovery announcement.</p>

<p>Count: <b>94</b><br />
Get the latest messages emailed to alerts.</p>

<p>Count: <b>94</b><br />
All we can say is that this one is going to see amazing appreciation in a very short period of time this is your opportunity.</p>

<p>Count: <b>90</b><br />
You have seen it on 60 minutes and read the bbc news report -- now find out just what everyone is talking about.</p>

<p>Count: <b>90</b><br />
Suppress your appetite and feel full and satisfied all day long increase your energy levels lose excess weight increase your metabolism burn body fat burn calories attack obesity and more.</p>

<h2>To be continued...</h2>

<p>That's all for part 1. Hopefully I'll have come up with some more interesting analysis for the next part :) Feel free to post a suggestion if there's something specific you'd like to see some numbers of. Also, if you have access to large quantities of spam mail (no, not in the form of signing me up for billions of sites) in Outlook PST format, please de send me a message, I'd really like to have a larger sample to base my analysis upon.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1228</wp:post_id>
		<wp:post_date>2006-12-27 07:22:16</wp:post_date>
		<wp:post_date_gmt>2006-12-27 06:22:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-internals-of-spam-mails-part-one</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mail"><![CDATA[Mail]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="spam"><![CDATA[Spam]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Spam Mail Internals]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[the-internals-of-spam-mails-part-1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Going to Vegas (Again)</title>
		<link>http://improve.dk/going-to-vegas-again/</link>
		<pubDate>Sun, 31 Dec 2006 04:02:58 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2006/12/31/going-to-vegas-again.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Ahh, Vegas, I just can't get enough of that place!</p>

<p>I'm leaving for Vegas again on the 6th of January, planning to be back on the 16th of Janaury. Just a short trip to cope with my dependance on the greatest town in the world!</p>

<p>I will be participating in the <a href="http://www.cesweb.org/default.asp">2007 Internal CES</a> as well as hopefully being able to get a spot at the Venetian Palazzo Ballrom on the 7th when <a href="http://www.cesweb.org/attendees/conferences/keynotes.asp">Bill Gates himself holds a Pre-show Keynote Address</a>.</p>

<p>Also I'd be rather surprised of myself if I didn't pay some of the greatest poker rooms of Vegas a revisit :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1229</wp:post_id>
		<wp:post_date>2006-12-31 05:02:58</wp:post_date>
		<wp:post_date_gmt>2006-12-31 04:02:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>going-to-vegas-again</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ces"><![CDATA[CES]]></category>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Arriving in Vegas</title>
		<link>http://improve.dk/arriving-in-vegas/</link>
		<pubDate>Tue, 09 Jan 2007 10:48:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/01/09/arriving-in-vegas.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Honeeey, I'm home!</p>

<p>It's good to be back. After all, it's been about 4 months since I were here last, that's simply too long time!</p>

<p>The flight went pretty well. On the long route, Frankfurt - Denver I sat in front a some american family. It was really obvious that they were american, the whole way they talked, acted and so forth, hard to explain, but they where soo stereotypical. Anyways, shortly after taking off, somebody sneezed nearby... "Bless you" the woman behind me almost screamed. Oh well, whatever. Five minutes later somebody else sneezed - bless you! Now, this started to get a bit awkward when somebody in business class, separated by a curtain from where we were sitting, sneezed. Bless you she screamed again, though it was absolutely certain that this guy could not hear her. Making a long story short, besides the few times she slept, everytime someone sneezed, no matter how far away they were, she simply HAD to bless that person.</p>

<p>When we were about to land in Denver, appx 10 feet above the ground, suddenly the plane thrusted upwards at maximum thrust, we had to do a goaround, apparently there'd been a major gust of wind, blowing us off the runway. As a result we got in about 20 minutes late, not really the best of timing since my Las Vegas flight departed just an hour and a half later. Ever since 9/11 the security checks have been insane in the US airports, and Denver is no exception. I had to wait 30 minutes in line for the customs inspection, fortunately this time there were no <a href="http://www.improve.dk/blog/2006/07/26/arrivalatvegas">problems</a>. After the customs check I had to get my bags from the conveyor belts before I could recheck them for my domestic United flight, again, taking about 30 minutes in line. Everything's a caos since the airports aren't equipped to these extra checkins that have taken place since 9/11. After being checked in, another 30 minutes of wait before arriving at the front of the security inspection line. At this point there were 10 minutes till my flight departed - not until it boarded, until it departed. Luckily the woman checking my boarding pass noticed and put me through to another line that was somewhat shorter, phew - at least so I thought. After being sprayed with air in some kind of drug sniffing machine the security guard said to another guard: "Give this one the full quarter pounder". With 5 minutes to go I had to unpack my whole bag, letting him check my camera, cell phone, laptop and everything. I politely asked him how long it would take to get to my gate as my plane left in 2 minues - luckily he understood what I meant and made a quick inspection before letting me go. Running to the gate I arrived 5 minutes late, but fortunately the plane hadn't left yet, I made it a minute or so before the gate closed.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces01_2.jpg"><img class="alignnone size-full wp-image-1801" alt="ces01_2" src="http://improve.dk/wp-content/uploads/2007/01/ces01_2.jpg" width="557" height="372" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces02_2.jpg"><img class="alignnone size-full wp-image-1802" alt="ces02_2" src="http://improve.dk/wp-content/uploads/2007/01/ces02_2.jpg" width="557" height="372" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces03_2.jpg"><img class="alignnone size-full wp-image-1803" alt="ces03_2" src="http://improve.dk/wp-content/uploads/2007/01/ces03_2.jpg" width="557" height="372" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces04_2.jpg"><img class="alignnone size-full wp-image-1805" alt="ces04_2" src="http://improve.dk/wp-content/uploads/2007/01/ces04_2.jpg" width="557" height="372" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces05_2.jpg"><img class="alignnone size-full wp-image-1806" alt="ces05_2" src="http://improve.dk/wp-content/uploads/2007/01/ces05_2.jpg" width="557" height="372" /></a></div></div>

<p>Originally I'd planned to take a hot tub bath before heading into town. I arrived at my hotel at around 8:30 PM. Before I realized it, I was sleeping at the couch, and at 10 PM I had to retire to bed, totally exhausted after the trip.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1230</wp:post_id>
		<wp:post_date>2007-01-09 10:48:55</wp:post_date>
		<wp:post_date_gmt>2007-01-09 10:48:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>arriving-in-vegas</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>603</wp:comment_id>
			<wp:comment_author><![CDATA[Jay]]></wp:comment_author>
			<wp:comment_author_email>jacob@gianex.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-13 01:09:35</wp:comment_date>
			<wp:comment_date_gmt>2007-01-13 01:09:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your weak I tell ya.... WEAK :P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Day 1</title>
		<link>http://improve.dk/day-1/</link>
		<pubDate>Tue, 09 Jan 2007 11:05:28 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/01/09/day-1.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since I woke up at 6 AM this morning I decided to just stay in bed and watch The Prestige through the hotel movie system.</p>

<p>When I got up I realized that the only power adaptor that I'd brought was a US - EU style, not the required EU - US... Friggin typical! So I went to every Futurama fans favorite electronics store, Fry's Electronics, which is also the largest electronics store in Vegas!</p>

<p>I've always spoken badly of the Zune on absolutely no grounds other than my own prediction of it's success. However, when I came by a stand of Zune's I simply couldn't resist buying one, not really because of it's looks (I think it feels far too like plastic, it just doesn't have the same iPod quality feel), but because... Well, I dunno, I bought one, that's what matters.</p>

<p>This is what met me when I started up the Zune for the very first time:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/zune1_2.jpg"><img class="alignnone size-full wp-image-1799" alt="zune1_2" src="http://improve.dk/wp-content/uploads/2007/01/zune1_2.jpg" width="528" height="704" /></a></div></div>

<p>iPod 1 - 0 Zune</p>

<p>A bit later I went to the Venetian to get my first poker session. A couple of hours went by, nothing in particular to report, I ended about even in the $1/2 game.</p>

<p>I met up with Nicholai from work later on and got a couple Gin &amp; Tonics as well as enjoying the Mandalay Bay buffet. I think we walked about Mandalay Bay for an hour or so before giving up on finding the supposedly impressing pool.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1231</wp:post_id>
		<wp:post_date>2007-01-09 11:05:28</wp:post_date>
		<wp:post_date_gmt>2007-01-09 11:05:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>day-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="zune"><![CDATA[Zune]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Royal Flush Baby!</title>
		<link>http://improve.dk/royal-flush-baby/</link>
		<pubDate>Tue, 09 Jan 2007 11:59:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/01/09/royal-flush-baby.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I wanted to log a lot of poker playing hours today. At about 12 PM I went to the MGM Grand, a room that I'd never visited. After playing there for about 5-6 hours (please don't ask how it went, I got butchered), I've got mixed feelings about the room.</p>

<p>The cocktail service is absolutely great. Although they're not the lookers as they are at the Wynn, they're among the quickest on the strip. There's allways a cocektail waitress around, ready to take your order. The tables are among the most sophisticated ones I've seen. Naturally they have automatic shufflers, but most casinos have that these days. Registration of player cards it done automatically at the table itself, no need for a floor to bring it to the cage. Also, the dealer is able to call for cocktail waitresses and chiprunners by pressing buttons on the dealer tray, very efficient! I hate the felt they use, it's the hard stiff kind you'll also find at casinos like Royal in Århus, totally impossible to get your fingers beneath the cards to flip'em up or just to take a look at them. It is however rectified by the marble border around the table, creating a litthe gap in the felt, making it easier to get ones finger under the cards. The MGM seemed to have a <i>lot</i> of totally new players, player who've never sat in a live game. It's probably due to the fact that the MGM poker room is placed in the middle of everything, right next to the lion cave and the night club, effectively causing a lot of people to wander by. That also has the effect of causing a ridicilous amount of railbirds as well as contributing to making the room intolerably noisy.</p>

<p>As I had a dinner appointment at the Venetian in the evening, I went to the Venetian at about 6 PM to continue my play. While I was being butchered at the MGM, I made a slaughter at the Venetian game, ending up quite a bit. I'd established quite a loose image at the table, just the way I want it. I was dealt <strong>T</strong>c<strong>Jc</strong>. The flop came <strong>A</strong>c<strong>K</strong>c<strong>8c</strong>. Although I can't really remember the action, I bet on the flop, got called by a single guy at the end of the table. A blank hit the turn which we both checked. Finally at the river, <strong>Qc</strong>, I bet out about half the pot. It was not until then I realized that I'd just made a Royal Flush! The other guy eventually folded. I showed my cards, saying, "I think I had you". The table went crazy, so did the dealer and the floor person. Through December they've had a Royal Flush promotion that resulted in you winning Venetian jacket if you hit the Royal Flush. Although the promotion weren't running anymore, Nate, the floor person on duty told me to come back one of the following days and look him up, he'd find a little something for me, great service. To make matters even more special, in the hand right after my Royal Flush I hid a set of threes that quadded on the river, consecutive Royal Flush and quads, what are the odds? Please don't tell me live games aren't rigged as well as online games!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1232</wp:post_id>
		<wp:post_date>2007-01-09 11:59:21</wp:post_date>
		<wp:post_date_gmt>2007-01-09 11:59:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>royal-flush-baby</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>604</wp:comment_id>
			<wp:comment_author><![CDATA[Vesth]]></wp:comment_author>
			<wp:comment_author_email>kasper_vesth@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-09 12:10:23</wp:comment_date>
			<wp:comment_date_gmt>2007-01-09 12:10:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Damn du er heldig :D congrats]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>605</wp:comment_id>
			<wp:comment_author><![CDATA[Mads]]></wp:comment_author>
			<wp:comment_author_email>king_gumshue@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-09 12:18:06</wp:comment_date>
			<wp:comment_date_gmt>2007-01-09 12:18:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fedt :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>606</wp:comment_id>
			<wp:comment_author><![CDATA[mor]]></wp:comment_author>
			<wp:comment_author_email>vivi@horisont.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-01-11 13:25:11</wp:comment_date>
			<wp:comment_date_gmt>2007-01-11 13:25:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jeg sidder og praler om dig p&#229; kontoret. Og ja, du er heldig! Det er det man er, n&#229;r man vinder i poker ;-)<br />Stort knus fra mor]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Playing at Caesars Palace</title>
		<link>http://improve.dk/playing-at-caesars-palace/</link>
		<pubDate>Fri, 12 Jan 2007 09:15:38 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/01/12/playing-at-caesars-palace.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the few places left that I haven't played at is Caesars Palace. Fortunately I can now cross Caesars off my list.</p>

<p>The room is separated from the usual casino area by a small walkway. This separation ensures that the room is very quiet, in contrast to the extremely noisy MGM Grand room. The chairs are great swiveling office chairs, quite comfortable. The felt is absolutely perfect, just the way I want it, just the way the Venetian has it - though it seems to be somewhat older at Caesars.</p>

<p>While the Venetian usually has one or two regulars and then drunks or new players for the rest, Caesars seemed to be dominated by regulars and nits. There were a couple of exec guys coming from the CES, but other than that people knew what they were doing, even at the $1/2 level.</p>

<p>Talking about 1/2. Caesars has an absolutely great structure for the 1/2 game, allowing you to buyin for $500, that's 250BBs! That makes for some great deepstacked play. And while the max buyin is at $500, most people bought in for $1-200, that means you'll have everybody covered from the getgo, another advantage.</p>

<p>All in all I'll certainly be back. Caesars is great, but it still won't be able to change my mind, The Venetian is without doubt the greatest poker room on the strip so far.</p>

<p>Now I just have to cross out Bellagio and Wynn from my list...</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1233</wp:post_id>
		<wp:post_date>2007-01-12 09:15:38</wp:post_date>
		<wp:post_date_gmt>2007-01-12 09:15:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>playing-at-caesars-palace</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="caesars-palace"><![CDATA[Caesars Palace]]></category>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Securing .NET Code</title>
		<link>http://improve.dk/securing-dotnet-code-article/</link>
		<pubDate>Sun, 01 Oct 2006 23:45:49 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/04/17/securing-net-code-3.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>When you write your code, compile it, and distribute the exe/dll's, is your source safe? We're not talking about protection against buffer overruns, SQL injection and various other code hacking techniques, we're talking protection of the source code itself, protection of intellectual properties.</em></p>

<p><em>This article is the result of me touring the danish universities as a <a href="http://www.microsoft.com/uk/academia/students/student-partners/default.mspx" target="_blank">Microsoft Student Partner</a>, giving lectures on the subject of securing code and intellectual properties in the realm of the .NET Framework.</em></p>

<p>Download source code for the examples:<br />
<a href="http://improve.dk/wp-content/uploads/2006/10/securing_dotnet.zip">securing_dotnet.zip</a></p>

<h2>The problem</h2>

<p>Why even bother protecting our source code? There are millions of reasons for why we would want to protect our source code. Although security does not derive from obfuscation, but instead from writing secure code, there are a lot of situations where we simply cannot distribute our source code for various reasons.</p>

<p>You might be developing code that does not belong to you, due to you developing the code at your job.
It could be that you're developing an application that will be commercialised, it wouldn't be appropriate to release the source code as that would most likely lower your sales and open up all sorts of risks of counterfeited copies (I won't go into the topic of open source enterprises as they are vastly out of scope, but of course they do have their basis for existance).
It could also simply be a matter of security. As mentioned before, security shouldn't come from obfuscation, but any extra bit of unneccesary information that a potential hacker can get about your application will add up to the overall risk.
<h3>Why is this an inherent problem with .NET?</h3>
To understand why this problem is especially explicit in .NET, one must understand how the .NET framework works. Let me introduce you to a simple illustration of the .NET framework levels:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/framework_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/10/framework_2-300x188.jpg" alt="framework_2" width="300" height="188" class="alignnone size-medium wp-image-1568" /></a></div></div>

<p>One of the coolest parts of the .NET framework is that we can write in more or less any language we want. C#, VB.NET, C++.NET, Delphi.NET, SmallTalk.NET, you name it! What enables us to do this is the Microsoft Intermediate Language (or MSIL in short). The MSIL compiler compiles your .NET language code into an intermediate language called MSIL. The MSIL language is common for all .NET languages, they all compile into this intermediate stage. Compared to native code, MSIL is a high level language. Although it is not easily read, it doesn't take long to get a grip of what's happening if you look at it. When an application (application being any .NET code, ASP.NET, DLL, EXE and so forth) is run, the Just-In-Time (or JIT in short) compiler takes over and compiles the MSIL code into native code that the CPU can run.</p>

<h3>Java, C++, Pascal etc</h3>

<p>The MSIL language can easily be compared to the Java bytecode intermediate code. All Java code is compiled into Java bytecode which is then run by the Java Virtual Machine (or JVM in short). Although Java bytecode is not nearly as highlevel as MSIL, it is still easily parsable, making it easy to reverse engineer it back into real Java code. Although the reasoning behind the JVM and the MSIL/CLR compiler are not the same, Java has the same disadvantage as .NET. Other native languages like C++ and Pascal (and a lot others) do not have this problem. Instead of compiling into an intermediate language, they simply compile directly into native code. This has the advantage that code execution is usually faster and the disk footprint is smaller. Also while it is possible, it is unfeasible to reverse engineer large amounts of native code.</p>

<h3>So why not just dump the MSIL?</h3>

<p>Having the MSIL/JIT combination has a lot of advantages, some of them being that the .NET framework can boast of a vast amount of supported languages and that the JIT compiler can make CPU/platform specific optimizations when it compiles from MSIL to native code. I won't be making any in depth analysis of the advantages and disadvantages of JIT compilation versus direct native compilation in this article, I'll leave that for a followup article later on.</p>

<h2>Tools</h2>

<p>Alright, before we start, let me introduce you to a couple of tools that I will be using to demonstrate the weaknesses of the .NET application protection schemes that I will be showcasing.</p>

<h3>Reflector</h3>

<p>You will have to learn to live with, love, hate and embrace Reflector, it's a godsend! <a href="http://www.aisto.com/roeder/dotnet/" target="_blank">Click here to open Lutz Roeder's 'Programming .NET' website where you can download Reflector</a>. Reflector is used to decompile existing .NET applications, whether that be EXE's or DLL's or any other .NET code. I won't be describing how to use Reflector, I will simply show the results of using Reflector.</p>

<h3>IL DASM</h3>

<p>If you have the .NET Framework SDK installed then you will also have installed the Microsoft 'MSIL Disassembler' tool, called IL DASM in short. IL DASM is used to decompile .NET code into the underlying MSIL code. Reflector does the same, though Reflector can go a step further and reverse engineer the MSIL code into more humanly readable .NET code in the most commong .NET languages.</p>

<h3>Wireshark</h3>

<p><a href="http://www.wireshark.org/" target="_blank">Wireshark, formerly known as Etheral</a> is the number one network sniffer for more or less any platform, and it's free!</p>

<h3>Dotfuscator</h3>

<p><a href="http://www.preemptive.com/products/dotfuscator/index.html" target="_blank">Preemptive's Dotfuscator</a> is a great .NET code obfuscation tool. A lightweight community edition ships with Visual Studio .NET 2003 &amp; 2005. The professional edition has a lot more options for code obfuscation and code compression.</p>

<p>I demoed the evaluation version of Dotfuscator during my MSP lectures. Just before my demo at the last university on the tour, I had an emergency. "Your evaluation copy has expired"... Not what you want to read when you are to show the demo in just under two hours. I got hold of the european office department by phone and within minutes I had a new evaluation license that I could use. Great support!</p>

<h2>Simple password protection</h2>

<p>In this example we will be creating a simple .NET application that includes a "secret" algorithm that we want to protect, as well as protect the actual appliction by requiring a password before it can be used.</p>

<h3>Creating the application</h3>

<p>Start out by creating a new Windows Application project, call it "SecureApplication". Add a TextBox and a Button to the form, Form1.cs like so:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/1_2.jpg"><img src="http://improve.dk/wp-content/uploads/2006/10/1_2.jpg" alt="1_2" width="273" height="156" class="alignnone size-full wp-image-1569" /></a></div></div>

[csharp]
private void button1_Click(object sender, EventArgs e)
{
	if (textBox1.Text == "password")
		MessageBox.Show(answerToAllLife().ToString());
	else
		MessageBox.Show("Error");
}
[/csharp]

<p>Now insert the following two functions into the form:</p>

<pre lang="csharp">private void button1_Click(object sender, EventArgs e)
{
	if (textBox1.Text == "password")
		MessageBox.Show(answerToAllLife().ToString());
	else
		MessageBox.Show("Error");
}

string answerToAllLife()
{
	string result = "";

	result += (char)(Math.Pow(2, 6) + 8);

	for (int i = 1; i &lt;= 100; i++)
		if (i == 100)
			result += (char)++i;

	result += (char)(117 - 9);

	result += result[result.Length - 1];

	result += typeof(List&lt;string&gt;).ToString().Split('.')[1][1];

	return result;
}</pre>

<p>The answerToAllLife() method is the secret algorithm we want to secure. Never mind the complexity of it, is simply to make it a bit less readable when we decompile our application, to make things a bit more realistic. Now if you run the application, it will only allow you to run the algorithm if you provide the correct passowrd: 'password'. Simple and effective eh? Oh, you don't think that's protection enough?</p>

<h3>Decompiling the application</h3>

<p>Now, let's see what happens when we open the application using the ILDASM tool that ships with every installation of the .NET Framework:</p>

<pre lang="csharp">.method private hidebysig instance void  button1_Click(object sender, class [mscorlib]System.EventArgs e) cil managed
{
	// Code size       60 (0x3c)
	.maxstack  2
	.locals init ([0] bool CS$4$0000)
	IL_0000:  nop
	IL_0001:  ldarg.0
	IL_0002:  ldfld      class [System.Windows.Forms]System.Windows.Forms.TextBox SecureApplication.Form1::textBox1
	IL_0007:  callvirt   instance string [System.Windows.Forms]System.Windows.Forms.Control::get_Text()
	IL_000c:  ldstr      "password"
	IL_0011:  call       bool [mscorlib]System.String::op_Equality(string, string)
	IL_0016:  ldc.i4.0
	IL_0017:  ceq
	IL_0019:  stloc.0
	IL_001a:  ldloc.0
	IL_001b:  brtrue.s   IL_0030
	IL_001d:  ldarg.0
	IL_001e:  call       instance string SecureApplication.Form1::answerToAllLife()
	IL_0023:  callvirt   instance string [mscorlib]System.Object::ToString()
	IL_0028:  call       valuetype [System.Windows.Forms]System.Windows.Forms.DialogResult [System.Windows.Forms]System.Windows.Forms.MessageBox::Show(string)
	IL_002d:  pop
	IL_002e:  br.s       IL_003b
	IL_0030:  ldstr      "Error"
	IL_0035:  call       valuetype [System.Windows.Forms]System.Windows.Forms.DialogResult [System.Windows.Forms]System.Windows.Forms.MessageBox::Show(string)
	IL_003a:  pop
	IL_003b:  ret
} // end of method Form1::button1_Click</pre>

<p>I am by no means an MSIL expert, but we can pretty easily spot the strings "password" and "Error" and by putting two and two together, I wonder what the "password" might be? This is a crude example, but still, it shows the point, we cannot embed our password into the application.</p>

<p>Not only can we not include our password in our application, we also can't exchange the password with some kind of registration key pattern matching algorithm as that one could also be reverse engineered, opening up for the possibility of key generators and the likes.</p>

<p>But hey, this is the least of our problems. In case you didn't notice, the complete source code of our algorithm is also available!</p>

<pre lang="csharp">.method private hidebysig instance string answerToAllLife() cil managed
{
	// Code size 205 (0xcd)
	.maxstack  5
	.locals init ([0] string result,
			[1] int32 i,
			[2] string CS$1$0000,
			[3] bool CS$4$0001,
			[4] char[] CS$0$0002)
	IL_0000:  nop
	IL_0001:  ldstr      ""
	IL_0006:  stloc.0
	IL_0007:  ldloc.0
	IL_0008:  ldc.r8     2.
	IL_0011:  ldc.r8     6.
	IL_001a:  call       float64 [mscorlib]System.Math::Pow(float64,
															float64)
	IL_001f:  ldc.r8     8.
	IL_0028:  add
	IL_0029:  conv.u2
	IL_002a:  box        [mscorlib]System.Char
	IL_002f:  call       string [mscorlib]System.String::Concat(object,
																object)
	IL_0034:  stloc.0
	IL_0035:  ldc.i4.1
	IL_0036:  stloc.1
	IL_0037:  br.s       IL_005b
	IL_0039:  ldloc.1
	IL_003a:  ldc.i4.s   100
	IL_003c:  ceq
	IL_003e:  ldc.i4.0
	IL_003f:  ceq
	IL_0041:  stloc.3
	IL_0042:  ldloc.3
	IL_0043:  brtrue.s   IL_0057
	IL_0045:  ldloc.0
	IL_0046:  ldloc.1
	IL_0047:  ldc.i4.1
	IL_0048:  add
	IL_0049:  dup
	IL_004a:  stloc.1
	IL_004b:  conv.u2
	IL_004c:  box        [mscorlib]System.Char
	IL_0051:  call       string [mscorlib]System.String::Concat(object,
																object)
	IL_0056:  stloc.0
	IL_0057:  ldloc.1
	IL_0058:  ldc.i4.1
	IL_0059:  add
	IL_005a:  stloc.1
	IL_005b:  ldloc.1
	IL_005c:  ldc.i4.s   100
	IL_005e:  cgt
	IL_0060:  ldc.i4.0
	IL_0061:  ceq
	IL_0063:  stloc.3
	IL_0064:  ldloc.3
	IL_0065:  brtrue.s   IL_0039
	IL_0067:  ldloc.0
	IL_0068:  ldc.i4.s   108
	IL_006a:  box        [mscorlib]System.Char
	IL_006f:  call       string [mscorlib]System.String::Concat(object,
																object)
	IL_0074:  stloc.0
	IL_0075:  ldloc.0
	IL_0076:  ldloc.0
	IL_0077:  ldloc.0
	IL_0078:  callvirt   instance int32 [mscorlib]System.String::get_Length()
	IL_007d:  ldc.i4.1
	IL_007e:  sub
	IL_007f:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
	IL_0084:  box        [mscorlib]System.Char
	IL_0089:  call       string [mscorlib]System.String::Concat(object,
																object)
	IL_008e:  stloc.0
	IL_008f:  ldloc.0
	IL_0090:  ldtoken    class [mscorlib]System.Collections.Generic.List`1&lt;string&gt;
	IL_0095:  call       class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype [mscorlib]System.RuntimeTypeHandle)
	IL_009a:  callvirt   instance string [mscorlib]System.Object::ToString()
	IL_009f:  ldc.i4.1
	IL_00a0:  newarr     [mscorlib]System.Char
	IL_00a5:  stloc.s    CS$0$0002
	IL_00a7:  ldloc.s    CS$0$0002
	IL_00a9:  ldc.i4.0
	IL_00aa:  ldc.i4.s   46
	IL_00ac:  stelem.i2
	IL_00ad:  ldloc.s    CS$0$0002
	IL_00af:  callvirt   instance string[] [mscorlib]System.String::Split(char[])
	IL_00b4:  ldc.i4.1
	IL_00b5:  ldelem.ref
	IL_00b6:  ldc.i4.1
	IL_00b7:  callvirt   instance char [mscorlib]System.String::get_Chars(int32)
	IL_00bc:  box        [mscorlib]System.Char
	IL_00c1:  call       string [mscorlib]System.String::Concat(object,
																object)
	IL_00c6:  stloc.0
	IL_00c7:  ldloc.0
	IL_00c8:  stloc.2
	IL_00c9:  br.s       IL_00cb
	IL_00cb:  ldloc.2
	IL_00cc:  ret
} // end of method Form1::answerToAllLife</pre>

<p>Now this code isn't especially readable when it get's large, but what if we try using Reflector instead? This is what we get when we decompile our buttons Click event:</p>

<pre lang="csharp">private void button1_Click(object sender, EventArgs e)
{
	  if (this.textBox1.Text == "password")
	  {
			MessageBox.Show(this.answerToAllLife().ToString());
	  }
	  else
	  {
			MessageBox.Show("Error");
	  }
}</pre>

<p>Looks familiar? This should make it pretty obvious that our code is NOT safe, it is simply too easy to decompile unprotected .NET code. So what can we do?</p>

<h2>Using native code to protect vital parts</h2>

<p>I gave a comparison between .NET and the native languages earlier on. What if we were to create our vital code parts in native code, and then keep all the non-vital code as .NET? Let's try to protect our algorithm by coding that one in native code while presevering the user interface in .NET. Of course we ought to also code the password check in native code, but for this example I'll stick with our algorithm.</p>

<h3>Creating a VC++ DLL and calling it from .NET</h3>

<p>Create a new VC++ Win32 Project to the solution, call it "SecureComponent". When prompted, select "DLL" as application type and make sure that you check the "Export symbols" checkbox.</p>

<p>Now replace the whole SecureComponent.cpp file with the following code:</p>

<pre lang="csharp">#include "stdafx.h"
#include "SecureComponent.h"

extern "C" SECURECOMPONENT_API char* AnswerToAllLife(void)
{
	return "Hello";
}</pre>

<p>And replace the corresponding header file SecureComponent.h with the following code:

<pre lang="csharp">#ifdef SECURECOMPONENT_EXPORTS
	#define SECURECOMPONENT_API __declspec(dllexport)
#else
	#define SECURECOMPONENT_API __declspec(dllimport)
#endif

extern "C" SECURECOMPONENT_API char* AnswerToAllLife(void);</pre>

<p>I am by no means a C++ expert, and you need not be either. This C++ DLL project contains a single function, AnswerToAllLife() of type char* which corresponds to a .NET string. Instead of writing the actual algorithm we'll suffice with returning the alogrithm result, "Hello".</p>

<p>Compile the SecureComponent project and locate the resulting SecureComponent.dll file in the output directory. We will be calling this DLL through platform invoke (p/invoke in short) as that is the simplest and quickest way to call our native code from .NET.</p>

<p>Copy the SecureComponent.dll file into the %windir%system32 directory. Now modify the SecureApplication form1.cs code so it matches the following:</p>

<pre lang="csharp">[DllImport("SecureComponent.dll")]
private static extern string AnswerToAllLife();

public Form1()
{
	InitializeComponent();
}

private void button1_Click(object sender, EventArgs e)
{
	if (textBox1.Text == "password")
	{
		MessageBox.Show(AnswerToAllLife());
	}
	else
		MessageBox.Show("Error!");
}</pre>

<p>Make sure that you import the correct namespace (System.Runtime.InteropServices) for the DllImport attribute to work.</p>

<p>Now try running the SecureApplication project and test that it works (messagebox saying "Hello" when you provide the correct password and click the button).</p>

<p>Now comes the interesting part. Open up Reflector and add the SecureApplication.exe file to the list of loaded assemblies (make sure you remove it if it's already loaded as Reflector will otherwise show an old cached version). Browse to the AnswerToAllLife() function est voilá:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/disassembly1_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/disassembly1_2.gif" alt="disassembly1_2" width="581" height="416" class="alignnone size-full wp-image-1570" /></a></div></div>

<p>Now our algorithm is securely hidden from the usual means of decompilation. This however does not mean that our code is universally secure. Sure it's somwhat more difficult to get to our algorithm than before, but it ain't possible. Native code can be reverse engineered but it's a very tough job, especially as the code get's larger and more complicated.</p>

<p>A drawback with this method is that we'll have to write our vital code parts in native code. Naturally we'd prefer to write in managed code, but depending on the project, native code is an opportunity. So what am I saying? No matter what you do, if your code is physically at the clients machine, it is not safe. No matter what you do. As long as the code is physically at the client, all we can do is to make it as cumbersome as possible to get to the original source as possible, hopefully evading most reverse engineering attempts.</p>

<h2>Creating a webservice that will host our algorithm</h2>

<p>Let's make our code 100% secure. How? By not supplying the clients with our algorithm at all, but simply allowing them to invoke the algorithm remotely. The easiest way to do this in the .NET framework is by using web services.</p>

<h3>Creating the web service</h3>

<p>Add a new ASP.NET Web Service to the solution, call it "AlgorithmService". Now open the Service.asmx codebehind file and replace the contents with this code:</p>

<pre lang="csharp">using System;
using System.Web;
using System.Web.Services;
using System.Web.Services.Protocols;

[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
public class Service : System.Web.Services.WebService
{
	[WebMethod]
	public string AnswerToAllLife()
	{
		return "Hello";
	}
}</pre>

<p>Our webservice contains a single function, AnswerToAllLife that represents our algorithm, just like our C++ version. Try running the webservice (you may need to set the Service.asmx file as the start page) and check that the web service works by invoking the AnswerToAllLife function:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/servicetest_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/servicetest_2.gif" alt="servicetest_2" width="477" height="231" class="alignnone size-full wp-image-1571" /></a></div></div>

<p>Now add a web reference to the SecureApplication project. Click the "Web services in this solution" link and select the AlgorithmService web service. Name it "AlgorithmService" and click the "Add reference" button.</p>

<p>Now modify the button1_click method as follows:

<pre lang="csharp">private void button1_Click(object sender, EventArgs e)
{
	if (textBox1.Text == "password")
	{
		AlgorithmService.Service algorithm =
			new SecureApplication.AlgorithmService.Service();

		MessageBox.Show(algorithm.AnswerToAllLife());
	}
	else
		MessageBox.Show("Error!");
}</pre>

<p>Now, when the user provides the correct password, we invoke the AlgorithmService web service and show the result. If you decompile the SecureApplication exe file using Reflector, this is the code you'll see for our button's click event:</p>

<pre lang="csharp">private void button1_Click(object sender, EventArgs e)
{
	  if (this.textBox1.Text == "password")
	  {
			MessageBox.Show(new Service().AnswerToAllLife());
	  }
	  else
	  {
			MessageBox.Show("Error!");
	  }
}</pre>

<p>And this is the code we see if we go to the "AnswerToAllLife" method in the Service class:

<pre lang="csharp">[SoapDocumentMethod("http://tempuri.org/AnswerToAllLife",
	RequestNamespace="http://tempuri.org/",
	ResponseNamespace="http://tempuri.org/",
	Use=SoapBindingUse.Literal,
	ParameterStyle=SoapParameterStyle.Wrapped)]
public string AnswerToAllLife()
{
	  object[] objArray1 = base.Invoke("AnswerToAllLife", new object[0]);
	  return (string) objArray1[0];
}</pre>

<p>Neat eh? Now there is no way that our source code can be compromised. There are however some drawbacks to using web services. First of all, we'll need to require that our clients are connected to the internet, or at least to some kind of network that'll allow access to our web service. Also web services impose a significant overhead on each algorithm call compared to direct managed/native calls. Finally there may also be security issues, for instance, a credit card validation service might not be the best of projects to provide via a web service.</p>

<h2>Recap</h2>

<ul>
	<li>Without any protection at all, our code is very unsafe. Any person is able to decompile a .NET application using only free tools within minutes.</li>
	<li>We may protect our code by writing it in a native language. Though it is not bulletproof, it severely complicates the process of reverse engineering our code. It is however also morecumbersome for us to write our vital code in the native language as oposed to writing it in managed code.</li>
	<li>The only 100% secure way to protect our code is to not supply it to our clients in any way. Web services and remoting are two ideal methods of accomplishing this separation. It isn't always possible separate parts of our code due to certain circumstances, so it'll be a matter of judgement whether it's possible.</li>
</ul>

<h2>Obfuscation</h2>

<p>Ok, so we can remove our algorithm code by utilizing web services, but what about the password check? And what about our other code that we'd also prefer to keep to ourselves? Let's look at obfuscation.</p>


<p>Obfuscation is a technique used to complicate code. Obfuscation makes code harder to understand when it is decompiled, but it typically has no affect on the functionality of the code.</p>

<h3>PreEmptive Dotfuscator</h3>

<p>I have tested several tools that boast of being able to obfuscate .NET code without providing a lot of overhead on the developers... Us. The most effective and efficient obfuscation tool that I have tested so far is PreEmptive's Dotfuscator. You can request a free 14 day evaluation at their website. Don't worry if you haven't gotten it up and running while following this article, I'll be showing screenshots of the most important aspects of using the Dotfuscator product.</p>

<h3>Seamless Visual Studio integration</h3>

<p>What's cool with Dotfuscator is that it integrates directly into Visual Studio (2003 and 2005) by providing a new project type:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/dotfuscatorproject_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/dotfuscatorproject_2.gif" alt="dotfuscatorproject_2" width="581" height="374" class="alignnone size-full wp-image-1572" /></a></div></div>

<p>After creating the project, we can add any number of assemblies to obfuscate, or even project outputs - Dotfuscator will then make sure to obfuscate the resulting assemblies automatically.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/projectoutput_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/projectoutput_2.gif" alt="projectoutput_2" width="582" height="451" class="alignnone size-full wp-image-1573" /></a></div></div>

<p>We can set the individual obfuscation settings by using the six setting categories. I won't go into major details as that is out of scope of this article.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/renaming_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/renaming_2.gif" alt="renaming_2" width="581" height="393" class="alignnone size-full wp-image-1575" /></a></div></div>

<p>Under the renaming category we can set the options for how our assembly members should be renamed. We can choose to rename using numeric names, lower/uppercase alpha names, or my favorite - the unprintable characters. Although we can rename our members to our liking, there are still certain restrictions. In .NET every function must have a unique signature. Normally the signature consists of the name of the function as well as the parameter types. Dotfuscator can use the "Enhanced overload induction" to also identify functions by their return type, effectively causing us to give a lot more functions the same names, confusing our potential decompilers even more.</p>

<p>We can also choose to alter the control flow, causing a number of lables and goto calls to be embedded in our code, I haven't observed any noticable performance hits. Dotfuscator also supports automatic encryption of strings in our application without us having to do anything. You can choose which strings encrypt and which to keep unencrypted. The strings are decrypted on-the-fly as the application is running, so keeping unimportant strings in cleartext will be the most efficient.</p>

<h3>The process of obfuscating</h3>

<p>Obfuscating our SecureApplication is very easy. Simply add the SecureApplication project output to the "Input Assemblies" part of our Dotfuscator project and compile the project as we would compile any other project. After compiling, try to open the project in Reflector:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/obfuscatedreflector_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/obfuscatedreflector_2.gif" alt="obfuscatedreflector_2" width="581" height="442" class="alignnone size-full wp-image-1576" /></a></div></div>

<p>Notice how our namespace and class structure is completely unreadable, thanks to the unprintable characters. We can still find our buttons click method by looking at the method signature - as our methods still have to have a unique signature. We can identify our buttons click event by looking for a method with the same signature: void(object, EventArgs).</p>

<p>IL DASM can still decompile our application, this is the resulting code from out buttons click method:</p>

<pre lang="csharp">.method private hidebysig instance void  'eval_?'(object A_0, class [mscorlib]System.EventArgs A_1) cil managed
{
	// Code size       171 (0xab)
	.maxstack  3
	.locals init ([0] class 'eval_?' 'algorithm',
		   [1] bool CS$4$0000,
		   [2] int32 EGSwitchVar,
		   [3] int32 V_3)
	IL_0000:  ldc.i4     0x6
	IL_0005:  stloc      V_3
	IL_0009:  br.s       IL_0024
	IL_000b:  ldloc      EGSwitchVar
	IL_000f:  switch     ( 
						IL_0060,
						IL_0052,
						IL_00a8,
						IL_0081)
	IL_0024:  nop
	IL_0025:  ldarg.0
	IL_0026:  ldfld      class [System.Windows.Forms]System.Windows.Forms.TextBox eval_a::'eval_?'
	IL_002b:  callvirt   instance string [System.Windows.Forms]System.Windows.Forms.Control::get_Text()
	IL_0030:  ldstr      bytearray (14 65 16 76 18 6A 1A 68 1C 6A 1E 70 20 53 22 47 ) // .e.v.j.h.j.p S"G
	IL_0035:  ldloc      V_3
	IL_0039:  call       string a$PST06000001(string,
											int32)
	IL_003e:  call       bool [mscorlib]System.String::op_Equality(string,
																 string)
	IL_0043:  ldc.i4.0
	IL_0044:  ceq
	IL_0046:  stloc.1
	IL_0047:  ldc.i4     0x1
	IL_004c:  stloc      EGSwitchVar
	IL_0050:  br.s       IL_000b
	IL_0052:  ldloc.1
	IL_0053:  brtrue.s   IL_0062
	IL_0055:  ldc.i4     0x0
	IL_005a:  stloc      EGSwitchVar
	IL_005e:  br.s       IL_000b
	IL_0060:  br.s       IL_0083
	IL_0062:  ldstr      bytearray (14 50 16 65 18 6B 1A 74 1C 6F 1E 3E )             // .P.e.k.t.o.&gt;
	IL_0067:  ldloc      V_3
	IL_006b:  call       string a$PST06000001(string,
											int32)
	IL_0070:  call       valuetype [System.Windows.Forms]System.Windows.Forms.DialogResult [System.Windows.Forms]System.Windows.Forms.MessageBox::Show(string)
	IL_0075:  pop
	IL_0076:  ldc.i4     0x3
	IL_007b:  stloc      EGSwitchVar
	IL_007f:  br.s       IL_000b
	IL_0081:  br.s       IL_00aa
	IL_0083:  nop
	IL_0084:  newobj     instance void 'eval_?'::.ctor()
	IL_0089:  stloc.0
	IL_008a:  ldloc.0
	IL_008b:  callvirt   instance string 'eval_?'::'eval_?'()
	IL_0090:  call       valuetype [System.Windows.Forms]System.Windows.Forms.DialogResult [System.Windows.Forms]System.Windows.Forms.MessageBox::Show(string)
	IL_0095:  pop
	IL_0096:  nop
	IL_0097:  br.s       IL_009a
	IL_0099:  break
	IL_009a:  ldc.i4     0x2
	IL_009f:  stloc      EGSwitchVar
	IL_00a3:  br         IL_000b
	IL_00a8:  br.s       IL_00aa
	IL_00aa:  ret
} // end of method eval_a::'eval_?'</pre>

<p>Notice how our "password" string now looks like this: bytearray (14 65 16 76 18 6A 1A 68 1C 6A 1E 70 20 53 22 47 ), neat eh?</p>

<h2>Checking our password through a web service</h2>

<p>Although our password is encrypted, it still isn't safe to have the password check on the client machine. Why don't we check the password via a web service? Again, this is only possible if we can require a network connection to our web service. If that isn't possible, we might want to code our password check in a native language.</p>

<h3>Creating our password checking web service</h3>

<p>Add a new ASP.NET web service project to our solution, call it "PasswordService". Modify the Service.asmx.cs file so it contains the following code:</p>

<pre lang="csharp">using System;
using System.Web;
using System.Web.Services;
using System.Web.Services.Protocols;

[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
public class Service : System.Web.Services.WebService
{
	[WebMethod]
	public bool ValidPassword(string password)
	{
		return password == "password";
	}
}</pre>

<p>Our password checking web service only contains a single method, ValidPassword. ValidPassword takes a single parameter, the password to check. It returns true if the password is valid, and false otherwise. Now, this time we'll publish our web service to an actual web server as the local hosting won't be sufficient for the next section of this article. If you don't have access to a web server yourself, you can use my web password checking web service running at <a href="http://service.improve.dk/Service.asmx">http://service.improve.dk/Service.asmx</a>.</p>

<p>Add a web reference to the SecureApplication project, remember to use the location "<a href="http://service.improve.dk/Service.asmx&quot;">http://service.improve.dk/Service.asmx"</a> this time. Call the service "PasswordService" and click "Add reference". Now modify our buttons click event so it matches the following:</p>

<pre lang="csharp">private void button1_Click(object sender, EventArgs e)
{
	PasswordService.Service password =
		new SecureApplication.PasswordService.Service();

	if (password.ValidPassword(textBox1.Text))
	{
		AlgorithmService.Service algorithm = 
			new SecureApplication.AlgorithmService.Service();

		MessageBox.Show(algorithm.AnswerToAllLife());
	}
	else
		MessageBox.Show("Error!");
}</pre>

<p>Notice how we this time use our PasswordService to check our password while still using our AlgorithmService to run the algorithm. So what's the advantage? Both our password checking code as well as our algorithm code is 100% secured this time. Combine this with the obfuscation and you've got some really tough to read MSIL code.</p>

<h2>Cracking the password check</h2>

<p>Now that our code is totally safe, how can we get around the password check? Let's ignore the fact that it is possible to decompile our application to MSIL code, remove the password checking parts and then reconnect the bits to create our complete application, except the password check. While this is possible, it's more or less unfeasible for a major project, especially if you've obfuscated it effectively. Let's change the scenario.</p>

<p>Now we're the hacker who's trying to beat our password check. We do not have access to the code of our SecureApplication, but we do have the distributed exe file (that utilizes our two previous web services).</p>

<h3>Analyzing the SecureApplication</h3>

<p>We want to know what happens under the hood of the SecureApplication that we've got. Fire up Wireshark and start a new capture.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/wiresharksettings_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/wiresharksettings_2.gif" alt="wiresharksettings_2" width="547" height="503" class="alignnone size-full wp-image-1577" /></a></div></div>

<p>Be aware that if you're using a WIFI, you may have to turn off promiscuous mode. We'll cheat a tiny bit, since we know the application uses webservices, let's setup a filter so we only see TCP HTTP (port 80) traffic, this'll reduce a lot of unwanted traffic.</p>

<p>Now start the capture, run the SecureApplication and type in a false password (remember, we're the hacker, we haven't got the correct password). Close down the SecureApplication and stop the capture, hopefully you'll see a result like this:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/wiresharkresults_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/wiresharkresults_2.gif" alt="wiresharkresults_2" width="581" height="299" class="alignnone size-full wp-image-1578" /></a></div></div>

<p>Right click on one of the green lines and select "Follow TCP stream", you should see a stream like this:</p>

<pre lang="csharp">POST /service.asmx HTTP/1.1
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; MS Web Services Client
														Protocol 2.0.50727.42)
Content-Type: text/xml; charset=utf-8
SOAPAction: "http://tempuri.org/ValidPassword"
Host: service.improve.dk
Content-Length: 329
Connection: Keep-Alive

&lt;!--?xml version="1.0" encoding="utf-8"?--&gt;
&lt;soap:envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
	&lt;soap:body&gt;
		&lt;validpassword xmlns="http://tempuri.org/"&gt;
			&lt;password&gt;asd&lt;/password&gt;
		&lt;/validpassword&gt;
	&lt;/soap:body&gt;
&lt;/soap:envelope&gt;

HTTP/1.1 200 OK
Date: Thu, 26 Oct 2006 22:08:34 GMT
Server: Microsoft-IIS/6.0
X-Powered-By: ASP.NET
X-AspNet-Version: 2.0.50727
Cache-Control: private, max-age=0
Content-Type: text/xml; charset=utf-8
Content-Length: 369

&lt;!--?xml version="1.0" encoding="utf-8"?--&gt;
&lt;soap:envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
	&lt;soap:body&gt;
		&lt;validpasswordresponse xmlns="http://tempuri.org/"&gt;
			&lt;validpasswordresult&gt;false&lt;/validpasswordresult&gt;
		&lt;/validpasswordresponse&gt;
	&lt;/soap:body&gt;
&lt;/soap:envelope&gt;</pre>

<p>Analyzing the contained HTTP request and response gives us som valuable information. The top part is the POST request and the bottom is the response.</p>

<p>In the request we can gather that the host is "service.improve.dk" and that we're requesting the file "/service.asmx". The SOAP XML tells us that a function called ValidPassword is being called, and it expects the parameter "password". Heck, we just found out the structure of the password checking web service. Now, what can we gather from the response?</p>

<p>Well, I wonder what &lt;ValidPasswordResult&gt;false&lt;/ValidPasswordResult&gt; means... If only we somehow could switch that "false" to a true.</p>

<h3>Faking the web service</h3>

<p>Our goal here is to setup our own web service and somehow make the SecureApplication call our own service instead of the real one. We cannot change the code of the SecureApplication, so we'll have to work around it somehow. Start by adding a new ASP.NET web service to our solution, call it "FakePassword". Modify the Service.asmx.cs file so it matches the following code:</p>

<pre lang="csharp">using System;
using System.Web;
using System.Web.Services;
using System.Web.Services.Protocols;

[WebServiceBinding(ConformsTo = WsiProfiles.BasicProfile1_1)]
public class Service : System.Web.Services.WebService
{
	[WebMethod]
	public bool ValidPassword(string password)
	{
		return true;
	}
}</pre>

<p>From the HTTP stream we gathered the function name, type and parameter(s). In our fake service we'll just return "true" everytime, effectively bypassing the password check by ignoring the password parameter. Now open up your IIS and set the default website home directory to the folder where your fake password service lies.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/iis_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/iis_2.gif" alt="iis_2" width="472" height="458" class="alignnone size-full wp-image-1579" /></a></div></div>

<p>Now if you go to <a href="http://localhost/Service.asmx">http://localhost/Service.asmx</a>, you should see our fake password service. What we need now is for our service to somehow respond to the address <a href="http://service.improve.dk/Service.asmx">http://service.improve.dk/Service.asmx</a>. Open up the file "hosts" in the following directory: %windir%system32driversetchosts, note that it does not have an extension, simply open it in notepad. Now add the following two lines:</p>

<pre lang="csharp">127.0.0.1		service.improve.dk
127.0.0.1		http://service.improve.dk</pre>

<p>You have to ensure that you keep the tabs just like the default line in the hosts file. Now if you go to <a href="http://service.improve.dk/Service.asmx">http://service.improve.dk/Service.asmx</a>, you'll no longer get to the real web service as we've just setup our system so that 127.0.0.1 (our local machine) responds to this domain name instead. You can't test the webservice locally through this address as it will fail if you don't use the proper .NET classes. Now think about what happens when we run our SecureApplication again... It will connect to the address it was built to connect to, <a href="http://service.improve.dk">http://service.improve.dk</a>, but it's no longer the original web service, this is now our fake service. This should be the result:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/hello_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/hello_2.gif" alt="hello_2" width="300" height="299" class="alignnone size-full wp-image-1580" /></a></div></div>

<p>No matter what password we supply, our algorithm will be run as our fake web service will tell the application that our password is valid.</p>

<h2>Recap</h2>

<ul>
	<li>Obfuscation vastly improves the safety of our application since strings and member names are no longer visible. Also it forces people to look at the MSIL code or break the obfuscation before they have access to our code. Obfuscation isn't safety in itself, but combined with other methods of protection, it's a big plus.</li>
	<li>We really shouldn't have any registration methods lying in the client application as they can and eventually will be cracked, resulting in either keygens or password floating around on the internet. If possible, use remote checking of registration codes.</li>
	<li>Don't put a lot of trust in your solution just because you use remote checking, it can be broken.</li>
</ul>

<h2>A proposed solution</h2>

<p>My proposed solution is a mix of the earlier mentioned methods, combined together it is rather effective. It does however require a connection to our remote registration server.</p>

<p>For this demo I won't be creating any code as it gets rather complex. Instead I will be describing the overall thought behind the solution. I am considering making a general purpose registration framework that will encompass my proposed solution. When I do make this framework, I will surely be releasing an article describing it in more detail.</p>

<h3>Public key cryptography</h3>

<p>The solution is built upon a publick key cryptosystem, in my implemented solution I've used the RSA cryptosystem, but which specific system is used really isn't important.</p>

<p>Public key cryptosystems are built upon the idea that every person get's a set of keys, a public key that anyone knows about as well as a secret (normally the word private is used, by to avoid confusion due to both public and private starting with a "p", I'll use the term secret for the private key) key. The secret key is to be kept totally secret from everybody else, only you should know the contents of that one.</p>

<p>The correlation between the keys is that any data encrypted with a public key can only be decrypted by using the matching secret key. Likewise, any data encrypted using the secret key can only be decrypted using the matching public key. This allows us for two very important scenarios of cryptography.</p>

<p>Say I want to send a secret message to Alice, I'll use Alice's public key to encrypt my message. The only way to decrypt the message is to use Alice's secret key, and only Alice knows that one, so only Alice can read my message. Now, Alice can't positively know who the message comes from, that is, unless I sign the message. Signing the message implies that I use my secret key to encrypt the already encrypted data (encrypted with Alice's public key as before) with my secret key. Now only my public key can decrypt the data, hence the message can only come from me if it's decryptable by using my public key.</p>

<p>Using these correlations it's possible for me to send a message to Alice that only Alice is able to read. Furthermore I can sign my message so that Alice can verify it is coming from me.</p>

<h3>Customer entity</h3>

<p>First of all we have the Customer. The Customer consists of the customer data itself, not really important to this solution. Besides the trivial customer data, the customer has a Keyset.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/customerentity_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/customerentity_2.gif" alt="customerentity_2" width="406" height="228" class="alignnone size-full wp-image-1581" /></a></div></div>

<h3>Keyset</h3>

<p>The Keyset contains three keys (keys of the RSA cryptosystem):</p>

<ul>
	<li>The customers public key.</li>
	<li>The customers secret key.</li>
	<li>The registration servers public key.</li>
</ul>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/keysetentity_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/keysetentity_2.gif" alt="keysetentity_2" width="474" height="228" class="alignnone size-full wp-image-1582" /></a></div></div>

<p>The reason for the customer to have to registration servers public key is so that we can verify the messages being received from the registration server.</p>

<h3>The registration server</h3>

<p>The registration server can be set up in any way you like. I've personally used an ASP.NET Webservice, but you could use remoting or any other means of communication. The registration server only has two functions, GetKeyset and GetLicense.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/keyserverentity_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/keyserverentity_2.gif" alt="keyserverentity_2" width="358" height="246" class="alignnone size-full wp-image-1583" /></a></div></div>

<h3>Step 1</h3>

<p>When the customer starts up the application for the first time, the GetKeyset function is invoked on the registration server. The GetKeyset function takes the users registration code as a parameter and returns the proper Keyset, provided that the registration code is valid. If a registration code at some point is misused, shared or in any other way has been used in an illegal way, simply inactivate the registration code on the registration server, ensuring that no new keysets will be returned for that registration code in the future.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/step1_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/step1_2.gif" alt="step1_2" width="572" height="213" class="alignnone size-full wp-image-1584" /></a></div></div>

<h3>Step 2</h3>

<p>After the keyset has been retrieved, we now have the means to decipher any licenses we retrieve from the registration server.</p>

<p>The next step is to invoke the GetLicense method, again passing in our registration code as a parameter. The license is in its most basic form simply a boolean value, true/false, telling us whether we're allowed to run the application or not. The important part here is that we first encrypt the license result using customers public key, then we encrypt/sign that data with the registration servers secret key.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/step2_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/step2_2.gif" alt="step2_2" width="572" height="222" class="alignnone size-full wp-image-1585" /></a></div></div>

<h3>Step 3</h3>

<p>Now that we have retrieved the license, all we need to do is to decipher the result and then verify that the result originates from the correct registration server. We do this by first deciphering the data using the customers secret key. Then we decipher that data using the registration servers public key. If the data is valid, we know it comes from the correct registration server.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2006/10/step3_2.gif"><img src="http://improve.dk/wp-content/uploads/2006/10/step3_2.gif" alt="step3_2" width="588" height="179" class="alignnone size-full wp-image-1587" /></a></div></div>

<h3>The FCKGW effect</h3>

<p>One of the most common problems with registration protection of software is that users tend to share registration keys. As mentioned before, we can mark registration keys as invalid on the registration server. Marking keys as invalid will cause any new keyset requests for that specific key to be denied. But what if a thousand people had already requested - and successfully retrieved - keysets? Of course there could be implemented an automatic check ensuring a max number of keyset requests for a single registration key, IP protection and so forth. What we really want, is to be able to invalidate a keyset/license that a user has already retrieved.</p>

<p>A way to do this is to impose a time restriction on the licenses that a customer retrieves from the registration server. For instance, if a license was automatically invalidated on the client machine after a week, then the customer would have to retrieve a new license from the registration server. If the registration had been invalidated on the server in the meantime, the license wouldn't be able to update, and thus the client wouldn't be allowed to run the application any longer.</p>

<h2>Ending remarks</h2>

<p>Deciding whether to protect your code, and to what degree, is not a simple task. You must carefully weigh the pros and cons of the various techniques, and to what degree you need the protection.</p>

<p>Always remember that there is no totally safe way to protect your code, unless you keep it away from the client computer.</p>

<p>Please feel free to post any comments you may have on my article, I'll appreciate any feedback you give.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1334</wp:post_id>
		<wp:post_date>2006-10-02 01:45:49</wp:post_date>
		<wp:post_date_gmt>2006-10-01 23:45:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>securing-dotnet-code-article</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="dotfuscator"><![CDATA[Dotfuscator]]></category>
		<category domain="post_tag" nicename="il-code"><![CDATA[IL code]]></category>
		<category domain="post_tag" nicename="reverse-engineering"><![CDATA[Reverse engineering]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[securing .net code from reverse engineering]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[securing-net-code-3]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1020</wp:comment_id>
			<wp:comment_author><![CDATA[LogicNP Software]]></wp:comment_author>
			<wp:comment_author_email>himangi@ssware.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ssware.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-28 03:13:55</wp:comment_date>
			<wp:comment_date_gmt>2012-07-28 03:13:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a great informational article! Apart from Dotfuscator, you can also take a look at Crypto Obfuscator (<a rel="nofollow external" href="http://www.ssware.com/cryptoobfuscator/obfuscator-net.htm" title="http://www.ssware.com/cryptoobfuscator/obfuscator-net.htm" rel="nofollow">www.ssware.com/cryptoobfuscator/obfuscator-net.htm</a>), which uses many obfuscation techniques (string/constant encryption, method call hiding, symbol renaming, etc) to give good protection to your code.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165079</wp:comment_id>
			<wp:comment_author><![CDATA[duchamp]]></wp:comment_author>
			<wp:comment_author_email>jennifersparkman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.helene-conway.com/2012/05/victoire/?q=node%2Fadd</wp:comment_author_url>
			<wp:comment_author_IP>216.240.163.109</wp:comment_author_IP>
			<wp:comment_date>2014-02-06 06:15:49</wp:comment_date>
			<wp:comment_date_gmt>2014-02-06 05:15:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[turgid]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391663749.458075046539306640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163533</wp:comment_id>
			<wp:comment_author><![CDATA[Dennis]]></wp:comment_author>
			<wp:comment_author_email>dennis.townson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.armotif.com/tr/userinfo.php?uid=453</wp:comment_author_url>
			<wp:comment_author_IP>178.216.54.197</wp:comment_author_IP>
			<wp:comment_date>2014-01-08 03:53:47</wp:comment_date>
			<wp:comment_date_gmt>2014-01-08 02:53:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is definately a great deal to learn about this issue.
I like all of the points you've made.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389149627.3652288913726806640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166070</wp:comment_id>
			<wp:comment_author><![CDATA[date a cougar.com]]></wp:comment_author>
			<wp:comment_author_email>rosemarypreece@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.getjealous.com/wackyincident7095/journal/3011984/just-what-transforms-a-date-off.html</wp:comment_author_url>
			<wp:comment_author_IP>37.99.127.61</wp:comment_author_IP>
			<wp:comment_date>2014-02-27 15:01:48</wp:comment_date>
			<wp:comment_date_gmt>2014-02-27 14:01:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We absolutely love your blog and find many of your post's to 
be just what I'm looking for. Do you offer guest writers to 
write content available for you? I wouldn't mind publishing 
a post or elaborating on many of the subjects you write concerning 
here. Again, awesome website!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393509708.906795978546142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1334;s:14:"comment_author";s:17:"date a cougar.com";s:20:"comment_author_email";s:28:"rosemarypreece@bigstring.com";s:18:"comment_author_url";s:96:"http://www.getjealous.com/wackyincident7095/journal/3011984/just-what-transforms-a-date-off.html";s:15:"comment_content";s:285:"We absolutely love your blog and find many of your post's to 
be just what I'm looking for. Do you offer guest writers to 
write content available for you? I wouldn't mind publishing 
a post or elaborating on many of the subjects you write concerning 
here. Again, awesome website!";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:12:"37.99.127.61";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:8:"referrer";s:47:"http://improve.dk/securing-dotnet-code-article/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:47:"http://improve.dk/securing-dotnet-code-article/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:17:"date a cougar.com";s:10:"POST_email";s:28:"rosemarypreece@bigstring.com";s:8:"POST_url";s:96:"http://www.getjealous.com/wackyincident7095/journal/3011984/just-what-transforms-a-date-off.html";s:12:"POST_comment";s:285:"We absolutely love your blog and find many of your post's to 
be just what I'm looking for. Do you offer guest writers to 
write content available for you? I wouldn't mind publishing 
a post or elaborating on many of the subjects you write concerning 
here. Again, awesome website!";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1334";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"e4c31a26d1";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:47:"http://improve.dk/securing-dotnet-code-article/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"589";s:15:"HTTP_CONNECTION";s:5:"close";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"37.99.127.61";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"11248";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393509708";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-02-19 20:03:18";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>153387</wp:comment_id>
			<wp:comment_author><![CDATA[Oceanside CA]]></wp:comment_author>
			<wp:comment_author_email>franklin.balog@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://youtu.be/8fYukMDBl2k</wp:comment_author_url>
			<wp:comment_author_IP>123.151.28.114</wp:comment_author_IP>
			<wp:comment_date>2013-12-01 04:19:15</wp:comment_date>
			<wp:comment_date_gmt>2013-12-01 03:19:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A person necessarily lend a hand to make seriously posts I might state.
That is the first time I frequented your web page and to this point?
I amazed with the research you made to create this actual publish extraordinary.
Excellent task!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385867955.452106952667236328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163667</wp:comment_id>
			<wp:comment_author><![CDATA[water weight]]></wp:comment_author>
			<wp:comment_author_email>darrenmahaffey@hotmail.de</wp:comment_author_email>
			<wp:comment_author_url>http://tr.im/48m7j</wp:comment_author_url>
			<wp:comment_author_IP>176.31.155.124</wp:comment_author_IP>
			<wp:comment_date>2014-01-10 06:27:02</wp:comment_date>
			<wp:comment_date_gmt>2014-01-10 05:27:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm really loving the theme/design of your blog.
Do you ever run into any browser compatibility problems?
A number of my blog readers have complained about my blog not working correctly in Explorer but looks 
great in Opera. Do you have any advice to help fix this problem?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389331622.920545101165771484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>164644</wp:comment_id>
			<wp:comment_author><![CDATA[halfzeven]]></wp:comment_author>
			<wp:comment_author_email>valentinratcliff@zoho.com</wp:comment_author_email>
			<wp:comment_author_url>http://internetsupervision.com/scripts/urlcheck/check.aspx?checkurl=cellulitehack.com</wp:comment_author_url>
			<wp:comment_author_IP>173.212.192.27</wp:comment_author_IP>
			<wp:comment_date>2014-01-26 07:53:47</wp:comment_date>
			<wp:comment_date_gmt>2014-01-26 06:53:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[cryingl]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1390719227.6365029811859130859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165344</wp:comment_id>
			<wp:comment_author><![CDATA[Emory]]></wp:comment_author>
			<wp:comment_author_email>emory_reinhart@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://bit.ly/1dgn4xt</wp:comment_author_url>
			<wp:comment_author_IP>23.94.19.231</wp:comment_author_IP>
			<wp:comment_date>2014-02-12 01:50:48</wp:comment_date>
			<wp:comment_date_gmt>2014-02-12 00:50:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Howdy, i read your blog occasionally and i own a 
similar one and i was just curious if you get a lot of spam 
comments? If so how do you stop it, any plugin or anything you can 
advise? I get so much lately it's driving me crazy so any assistance is very much appreciated.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392166248.346869945526123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143516</wp:comment_id>
			<wp:comment_author><![CDATA[Marguerite]]></wp:comment_author>
			<wp:comment_author_email>marguerite-bungaree@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.nexopia.com/users/youngigga/blog/61-read-this-advice-before-your-next-search-for-health-insurance</wp:comment_author_url>
			<wp:comment_author_IP>198.147.22.118</wp:comment_author_IP>
			<wp:comment_date>2013-11-11 17:44:40</wp:comment_date>
			<wp:comment_date_gmt>2013-11-11 16:44:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for sharing your info. I really appreciate 
your efforts and I am waiting for your next post thank you once 
again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384188280.990684032440185546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79647</wp:comment_id>
			<wp:comment_author><![CDATA[weblink]]></wp:comment_author>
			<wp:comment_author_email>precious-bauman@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>http://wilsonasnx.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>142.91.81.142</wp:comment_author_IP>
			<wp:comment_date>2013-08-03 12:22:22</wp:comment_date>
			<wp:comment_date_gmt>2013-08-03 10:22:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With havin so much content do you ever run into any problems of plagorism or copyright infringement?
My blog has a lot of unique content I've either authored myself or outsourced but it looks like a lot of it is popping it up all over the internet without my permission. Do you know any solutions to help protect against content from being stolen? I'd certainly appreciate 
it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375525342.3476369380950927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165831</wp:comment_id>
			<wp:comment_author><![CDATA[free best web hosting website]]></wp:comment_author>
			<wp:comment_author_email>erikakrueger@web.de</wp:comment_author_email>
			<wp:comment_author_url>http://muenster.org/buergerplattform-neuyork/?p=2941</wp:comment_author_url>
			<wp:comment_author_IP>172.245.214.221</wp:comment_author_IP>
			<wp:comment_date>2014-02-23 06:48:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-23 05:48:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Article writing is also a excitement, if you be acquainted with then you can write if not 
it is difficult to write.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393134480.9394099712371826171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1334;s:14:"comment_author";s:29:"free best web hosting website";s:20:"comment_author_email";s:19:"erikakrueger@web.de";s:18:"comment_author_url";s:52:"http://muenster.org/buergerplattform-neuyork/?p=2941";s:15:"comment_content";s:117:"Article writing is also a excitement, if you be acquainted with then you can write if not 
it is difficult to write.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:15:"172.245.214.221";s:10:"user_agent";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/536.30.1 (KHTML, like Gecko) Version/6.0.5 Safari/536.30.1";s:8:"referrer";s:47:"http://improve.dk/securing-dotnet-code-article/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:47:"http://improve.dk/securing-dotnet-code-article/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:29:"free best web hosting website";s:10:"POST_email";s:19:"erikakrueger@web.de";s:8:"POST_url";s:52:"http://muenster.org/buergerplattform-neuyork/?p=2941";s:12:"POST_comment";s:117:"Article writing is also a excitement, if you be acquainted with then you can write if not 
it is difficult to write.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1334";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"288c6889b6";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:117:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/536.30.1 (KHTML, like Gecko) Version/6.0.5 Safari/536.30.1";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:47:"http://improve.dk/securing-dotnet-code-article/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"358";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:15:"172.245.214.221";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"39988";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393134480";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-02-19 20:03:18";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>One Mans Sin, Another Mans Blessing</title>
		<link>http://improve.dk/one-mans-sin-another-mans-blessing/</link>
		<pubDate>Tue, 23 Jan 2007 18:33:53 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/01/23/one-mans-sin-another-mans-blessing.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This is a reply to the <a href="http://www.intelliadmin.com/blog/2007/01/5-sins-of-vista.html">Top 5 sins of Vista</a> blog post written by Steve Wiseman.</p>

<h2>Number 1 - The new file browsing interface is different</h2>

<p>Yes, Notepad's great, we all use it, whether we want to admit or not. The file browsing interface however, is also great. That is, if you're willing to acknowledge it!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/filebrowsing_2.jpg"><img class="alignnone size-full wp-image-1791" alt="filebrowsing_2" src="http://improve.dk/wp-content/uploads/2007/01/filebrowsing_2.jpg" width="610" height="435" /></a></div></div>

<p>Admitted, there's no reason for the web site addresses to figure in the drop down. But why use the drop down at all? Haven't you noticed the button on the bottom left hand side, cleverly called, "Folders"? Click this and you'll see the usual tree view of folders that you seem to miss so much. Keep in mind that this file browsing interface is in every new Vista aware application - including the tree view.</p>

<h2>Number 2 - The new start menu rocks (kinda)</h2>

<p>I think we can all agree that the new almost instantanious application search feature of the start menu is just great! You however, as I, would like to open various folders in an easy way as we used to. You say you used to click the start menu, click Run, type in the location and click enter. I however, do not believe you. You seem like someone who knows the system better than the average person.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/rundialog_2.jpg"><img class="alignnone size-full wp-image-1792" alt="rundialog_2" src="http://improve.dk/wp-content/uploads/2007/01/rundialog_2.jpg" width="427" height="233" /></a></div></div>

<p>Surely you know of the Windows key + R key combination that opens the Run dialog - as it also does on Vista. Pressing Winkey+R gives the run dialog in which you can type "C:" and have that drive open up for you. Much faster than going through the start menu in any way.</p>

<h2>Number 3 - Windows networking is a bless(ing)</h2>

<p>When I first started up Vista and went into the network configuration, oh boy was I disappointed. I had more or less the same feelings as you describe. Luckily for me I was able to accept that Vista is an all new milestone compared to XP. Are Microsoft not allowed to change something that was - admittedly - working before? Having used Vista for no more than a week, surely you'll have gotten used to the new way of browsing the networks as well as the network configuration. "If you have never used Vista before - Quickly tell me how to change the IP address on my wireless card!". Now, how in gods name can you expect anyone who has never used a system to be able to tell you this? Were you instantly able to change the IP address of a network adapter the very first time you launched Windows 2000, XP?</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/networkconnections_2.jpg"><img class="alignnone size-full wp-image-1793" alt="networkconnections_2" src="http://improve.dk/wp-content/uploads/2007/01/networkconnections_2.jpg" width="743" height="251" /></a></div></div>

<p>Simply click "Manage network connections" from the tasks section of the menu and we're back to the good old interface. It really isn't that cumbersome.</p>

<h2>Number 4 - Windows Search is as broken as it has always been</h2>

<p>Windows Search is not broken. It actually works. Have you tried it? Ok, so you can't do a content based search on unknown file types, but have you ever been able to do so using Windows Search? You can however easily search through your email, documents, file name based search and so forth.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/vistasearch_2.jpg"><img class="alignnone size-full wp-image-1794" alt="vistasearch_2" src="http://improve.dk/wp-content/uploads/2007/01/vistasearch_2.jpg" width="747" height="538" /></a></div></div>

<p><i>Please</i>, please, please don't tell me that a command prompt wildcard directory search enables you to do content based searches. Click the Location:Everywhere item and you're all set for directory searches as we used to in XP.</p>

<h2>Number 5 - Windows copying has improved</h2>

<p>Given the title of my website I should know what the word "improve" means. To improve something requires that you change something for the better. To improve something you must not make it worse than before. "Sure they have made the interface look cooler, a snazzy progress bar here and there." You don't call this an improvement? Sure, it's not the robust search that you're looking for, but honestly, isn't it an improvement? I would really like to have seen the WinFS file system to have been a part of Vista. But surely, even though WinFS did not make it to Vista, I'll not go as far as saying that Vista is not an improvement over XP. Explorer still has the old bugs, especially in regards of network sharing (shame on you Microsoft!), but still, you cannot say that it has not been <i>improved</i>.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/filecopy_2.jpg"><img class="alignnone size-full wp-image-1795" alt="filecopy_2" src="http://improve.dk/wp-content/uploads/2007/01/filecopy_2.jpg" width="416" height="244" /></a></div></div>

<p>I for one, love the fact that we can now see the transfer speed during transfers, even during network transfers!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1234</wp:post_id>
		<wp:post_date>2007-01-23 18:33:53</wp:post_date>
		<wp:post_date_gmt>2007-01-23 18:33:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>one-mans-sin-another-mans-blessing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="vista"><![CDATA[Vista]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CES 2007 Pictures</title>
		<link>http://improve.dk/ces-2007-pictures/</link>
		<pubDate>Sun, 28 Jan 2007 01:16:54 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/01/28/ces-2007-pictures.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A series of pictures I took at the 2007 CES show.</p>

<p>Microsoft didn't exactly hide itself at the CES, you could see Vista icons, banners, stickers and posters everywhere!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces1_2.jpg"><img class="alignnone size-full wp-image-1719" alt="ces1_2" src="http://improve.dk/wp-content/uploads/2007/01/ces1_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces2_2.jpg"><img class="alignnone size-full wp-image-1720" alt="ces2_2" src="http://improve.dk/wp-content/uploads/2007/01/ces2_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces3_2.jpg"><img class="alignnone size-full wp-image-1721" alt="ces3_2" src="http://improve.dk/wp-content/uploads/2007/01/ces3_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces4_2.jpg"><img class="alignnone size-full wp-image-1722" alt="ces4_2" src="http://improve.dk/wp-content/uploads/2007/01/ces4_2.jpg" width="1024" height="682" /></a></div></div>

<p>Honda showcased it's famous ASIMO robot, pronounced very much like the awesome-o robot from South Park.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces5_2.jpg"><img class="alignnone size-full wp-image-1723" alt="ces5_2" src="http://improve.dk/wp-content/uploads/2007/01/ces5_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces6_2.jpg"><img class="alignnone size-full wp-image-1724" alt="ces6_2" src="http://improve.dk/wp-content/uploads/2007/01/ces6_2.jpg" width="512" height="768" /></a></div></div>

<p>The whole north hall was full of custom car manufacturer showoffs and ICE equipment.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces7_2.jpg"><img class="alignnone size-full wp-image-1727" alt="ces7_2" src="http://improve.dk/wp-content/uploads/2007/01/ces7_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces8_2.jpg"><img class="alignnone size-full wp-image-1728" alt="ces8_2" src="http://improve.dk/wp-content/uploads/2007/01/ces8_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces9_2.jpg"><img class="alignnone size-full wp-image-1729" alt="ces9_2" src="http://improve.dk/wp-content/uploads/2007/01/ces9_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces10_2.jpg"><img class="alignnone size-full wp-image-1730" alt="ces10_2" src="http://improve.dk/wp-content/uploads/2007/01/ces10_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces11_2.jpg"><img class="alignnone size-full wp-image-1732" alt="ces11_2" src="http://improve.dk/wp-content/uploads/2007/01/ces11_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces12_2.jpg"><img class="alignnone size-full wp-image-1733" alt="ces12_2" src="http://improve.dk/wp-content/uploads/2007/01/ces12_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces13_2.jpg"><img class="alignnone size-full wp-image-1734" alt="ces13_2" src="http://improve.dk/wp-content/uploads/2007/01/ces13_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces14_2.jpg"><img class="alignnone size-full wp-image-1735" alt="ces14_2" src="http://improve.dk/wp-content/uploads/2007/01/ces14_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces15_2.jpg"><img class="alignnone size-full wp-image-1736" alt="ces15_2" src="http://improve.dk/wp-content/uploads/2007/01/ces15_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces16_2.jpg"><img class="alignnone size-full wp-image-1737" alt="ces16_2" src="http://improve.dk/wp-content/uploads/2007/01/ces16_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces17_2.jpg"><img class="alignnone size-full wp-image-1738" alt="ces17_2" src="http://improve.dk/wp-content/uploads/2007/01/ces17_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces18_2.jpg"><img class="alignnone size-full wp-image-1740" alt="ces18_2" src="http://improve.dk/wp-content/uploads/2007/01/ces18_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces19_2.jpg"><img class="alignnone size-full wp-image-1741" alt="ces19_2" src="http://improve.dk/wp-content/uploads/2007/01/ces19_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces20_2.jpg"><img class="alignnone size-full wp-image-1743" alt="ces20_2" src="http://improve.dk/wp-content/uploads/2007/01/ces20_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces21_2.jpg"><img class="alignnone size-full wp-image-1744" alt="ces21_2" src="http://improve.dk/wp-content/uploads/2007/01/ces21_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces22_2.jpg"><img class="alignnone size-full wp-image-1745" alt="ces22_2" src="http://improve.dk/wp-content/uploads/2007/01/ces22_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces23_2.jpg"><img class="alignnone size-full wp-image-1746" alt="ces23_2" src="http://improve.dk/wp-content/uploads/2007/01/ces23_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces24_2.jpg"><img class="alignnone size-full wp-image-1747" alt="ces24_2" src="http://improve.dk/wp-content/uploads/2007/01/ces24_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces25_2.jpg"><img class="alignnone size-full wp-image-1748" alt="ces25_2" src="http://improve.dk/wp-content/uploads/2007/01/ces25_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces26_2.jpg"><img class="alignnone size-full wp-image-1750" alt="ces26_2" src="http://improve.dk/wp-content/uploads/2007/01/ces26_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces27_2.jpg"><img class="alignnone size-full wp-image-1751" alt="ces27_2" src="http://improve.dk/wp-content/uploads/2007/01/ces27_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces28_2.jpg"><img class="alignnone size-full wp-image-1752" alt="ces28_2" src="http://improve.dk/wp-content/uploads/2007/01/ces28_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces29_2.jpg"><img class="alignnone size-full wp-image-1753" alt="ces29_2" src="http://improve.dk/wp-content/uploads/2007/01/ces29_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces30_2.jpg"><img class="alignnone size-full wp-image-1754" alt="ces30_2" src="http://improve.dk/wp-content/uploads/2007/01/ces30_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces31_2.jpg"><img class="alignnone size-full wp-image-1755" alt="ces31_2" src="http://improve.dk/wp-content/uploads/2007/01/ces31_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces32_2.jpg"><img class="alignnone size-full wp-image-1756" alt="ces32_2" src="http://improve.dk/wp-content/uploads/2007/01/ces32_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces33_2.jpg"><img class="alignnone size-full wp-image-1757" alt="ces33_2" src="http://improve.dk/wp-content/uploads/2007/01/ces33_2.jpg" width="1024" height="682" /></a></div></div>

<p>The finish of this car was incredibly cool, unfortunately it's absolutely impossible to maintain.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces34_2.jpg"><img class="alignnone size-full wp-image-1758" alt="ces34_2" src="http://improve.dk/wp-content/uploads/2007/01/ces34_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces35_2.jpg"><img class="alignnone size-full wp-image-1759" alt="ces35_2" src="http://improve.dk/wp-content/uploads/2007/01/ces35_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces36_2.jpg"><img class="alignnone size-full wp-image-1760" alt="ces36_2" src="http://improve.dk/wp-content/uploads/2007/01/ces36_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces37_2.jpg"><img class="alignnone size-full wp-image-1761" alt="ces37_2" src="http://improve.dk/wp-content/uploads/2007/01/ces37_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces38_2.jpg"><img class="alignnone size-full wp-image-1762" alt="ces38_2" src="http://improve.dk/wp-content/uploads/2007/01/ces38_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces39_2.jpg"><img class="alignnone size-full wp-image-1763" alt="ces39_2" src="http://improve.dk/wp-content/uploads/2007/01/ces39_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces40_2.jpg"><img class="alignnone size-full wp-image-1764" alt="ces40_2" src="http://improve.dk/wp-content/uploads/2007/01/ces40_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces41_2.jpg"><img class="alignnone size-full wp-image-1765" alt="ces41_2" src="http://improve.dk/wp-content/uploads/2007/01/ces41_2.jpg" width="1024" height="682" /></a></div></div>

<p>Without doubt, the most impressive woofer system on show was the dual 22" Jackhammer Escalade, featured by Pimp my Ride's Mad Mike.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces42_2.jpg"><img class="alignnone size-full wp-image-1766" alt="ces42_2" src="http://improve.dk/wp-content/uploads/2007/01/ces42_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces43_2.jpg"><img class="alignnone size-full wp-image-1767" alt="ces43_2" src="http://improve.dk/wp-content/uploads/2007/01/ces43_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces44_2.jpg"><img class="alignnone size-full wp-image-1768" alt="ces44_2" src="http://improve.dk/wp-content/uploads/2007/01/ces44_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces45_2.jpg"><img class="alignnone size-full wp-image-1769" alt="ces45_2" src="http://improve.dk/wp-content/uploads/2007/01/ces45_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces46_2.jpg"><img class="alignnone size-full wp-image-1770" alt="ces46_2" src="http://improve.dk/wp-content/uploads/2007/01/ces46_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces47_2.jpg"><img class="alignnone size-full wp-image-1772" alt="ces47_2" src="http://improve.dk/wp-content/uploads/2007/01/ces47_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces48_2.jpg"><img class="alignnone size-full wp-image-1773" alt="ces48_2" src="http://improve.dk/wp-content/uploads/2007/01/ces48_2.jpg" width="1024" height="682" /></a></div></div>

<p>By placing your hand in between the censors, you could control a cursor on the screen.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces49_2.jpg"><img class="alignnone size-full wp-image-1774" alt="ces49_2" src="http://improve.dk/wp-content/uploads/2007/01/ces49_2.jpg" width="512" height="768" /></a></div></div>

<p>The Microsoft booth / hall.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces50_2.jpg"><img class="alignnone size-full wp-image-1775" alt="ces50_2" src="http://improve.dk/wp-content/uploads/2007/01/ces50_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces51_2.jpg"><img class="alignnone size-full wp-image-1776" alt="ces51_2" src="http://improve.dk/wp-content/uploads/2007/01/ces51_2.jpg" width="1024" height="682" /></a></div></div>

<p>LG's combined Blu-ray &amp; HD player.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces52_2.jpg"><img class="alignnone size-full wp-image-1777" alt="ces52_2" src="http://improve.dk/wp-content/uploads/2007/01/ces52_2.jpg" width="1024" height="682" /></a></div></div>

<p>Do not underestimate the deadly power of vending machines!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces53_2.jpg"><img class="alignnone size-full wp-image-1778" alt="ces53_2" src="http://improve.dk/wp-content/uploads/2007/01/ces53_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces54_2.jpg"><img class="alignnone size-full wp-image-1779" alt="ces54_2" src="http://improve.dk/wp-content/uploads/2007/01/ces54_2.jpg" width="1024" height="682" /></a></div></div>

<p>Hellgate London, oh the joy of trying it. Can't wait until it releases!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces55_2.jpg"><img class="alignnone size-full wp-image-1780" alt="ces55_2" src="http://improve.dk/wp-content/uploads/2007/01/ces55_2.jpg" width="1024" height="682" /></a></div></div>

<p>Hmm, I don't really know what this booth was about.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces56_2.jpg"><img class="alignnone size-full wp-image-1781" alt="ces56_2" src="http://improve.dk/wp-content/uploads/2007/01/ces56_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces57_2.jpg"><img class="alignnone size-full wp-image-1782" alt="ces57_2" src="http://improve.dk/wp-content/uploads/2007/01/ces57_2.jpg" width="1024" height="682" /></a></div></div>

<p>Intels F1 simulator.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces58_2.jpg"><img class="alignnone size-full wp-image-1783" alt="ces58_2" src="http://improve.dk/wp-content/uploads/2007/01/ces58_2.jpg" width="1024" height="682" /></a></div></div>

<p>An LCD monitor mounted on a glass plate, almost invisible wires.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces59_2.jpg"><img class="alignnone size-full wp-image-1784" alt="ces59_2" src="http://improve.dk/wp-content/uploads/2007/01/ces59_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces60_2.jpg"><img class="alignnone size-full wp-image-1786" alt="ces60_2" src="http://improve.dk/wp-content/uploads/2007/01/ces60_2.jpg" width="1024" height="682" /></a></div></div>

<p>Sharp/Aquos' 108" LCD. There was a thinly veiled line down through the middle, revealing that it's probably just two smaller panels stitched together.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces61_2.jpg"><img class="alignnone size-full wp-image-1787" alt="ces61_2" src="http://improve.dk/wp-content/uploads/2007/01/ces61_2.jpg" width="1024" height="682" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces62_2.jpg"><img class="alignnone size-full wp-image-1788" alt="ces62_2" src="http://improve.dk/wp-content/uploads/2007/01/ces62_2.jpg" width="1024" height="682" /></a></div></div>

<p>Panasonics monitor booth.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/01/ces63_2.jpg"><img class="alignnone size-full wp-image-1789" alt="ces63_2" src="http://improve.dk/wp-content/uploads/2007/01/ces63_2.jpg" width="1024" height="682" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1235</wp:post_id>
		<wp:post_date>2007-01-28 01:16:54</wp:post_date>
		<wp:post_date_gmt>2007-01-28 01:16:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ces-2007-pictures</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ces"><![CDATA[CES]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="las-vegas"><![CDATA[Las Vegas]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>$6.000 An Hour</title>
		<link>http://improve.dk/dollar-6000-an-hour/</link>
		<pubDate>Wed, 07 Feb 2007 22:17:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/02/06/6-000-an-hour.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>First off, let me give you the good news. I just bought a new car. A '2000 Audi TT 1,8T to be precise. The bad news however is that I'm 21 years old, only got about one and a half years seniority and at last, I'm male. Those three properties make up for a worst case scenario for any insurance application form. Anyways, here's a chronological list of the insurance companies I called and their reponses:</p>

<h3>Tryg</h3>

<p>Tryg was able to offer me an impressive price of 94.000 kroners ($16.337) per year. Thats roughly 1/3 the price of the car. Thanks... I guess.</p>

<h3>GF</h3>

<p>Forget it. GF is my current company, they didn't want nothing to do with my new car.</p>

<h3>Topdanmark</h3>

<p>Topdanmark just saved me 60k, they were able to offer me the same insurance for 34.000 kroners ($5.909) per year.</p>

<h3>Alka</h3>

<p>Alka didn't want to insure me, even though I offered to take their "Respekt for fart" (respect for speed) training course.</p>

<h3>AROS</h3>

<p>"NO way, we don't insure cars like that".</p>

<h3>Alm. Brand</h3>

<p>The best so far, giving me an offer of 27.000 per year ($4.692).</p>

<h3>Fair</h3>

<p>The Fair CS started laughing after I'd mentioned my age and car, then he hung up.</p>

<h3>Trekroner</h3>

<p>Trekroner is the winner. They offered me an insurance of 25.000 per year ($4.345).</p>

<h3>Danske Forsikringer</h3>

<p>"I wouldn't bet on that", that's what they told me before giving me the price of 69.000 per year ($11.992).</p>

<h3>Codan</h3>

<p>After explicitly requiring me to move all my other insurances over to them, Codan offered me an insurance on the car for 36.000 per year ($6.256).</p>

<h3>IF</h3>

<p>IF thought I was joking when I called them and told my age and car. While trying to reason with them that I weren't joking, they hung up.</p>

<h2>Conclusion</h2>

<p>All in all, calling around to the various insurance companies took me a total of about two hours. The result of those two hours is that I went from $16.337 per year all the way down to $4.345 per year. That's a saving of $11.992, giving me an hourly wage of about $6.000, that's not too shabby!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1236</wp:post_id>
		<wp:post_date>2007-02-07 23:17:40</wp:post_date>
		<wp:post_date_gmt>2007-02-07 22:17:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dollar-6000-an-hour</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="insurance"><![CDATA[Insurance]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[6-000-an-hour]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Audi TT</title>
		<link>http://improve.dk/audi-tt/</link>
		<pubDate>Wed, 14 Feb 2007 13:24:24 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/02/14/audi-tt.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been asked quite a lot of times why I hadn't put up any pictures of my new ride yet. There's still a couple of things missing such as the Audi logos for the rims, at least I got the alarms installed yesterday, this is now officially the most secure car in Denmark, sporting a Viper 5000XL, Cobra CONNEX GPS/GSM tracker and a Credex VGS MK-III smoke machine :D</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt1_2.jpg"><img class="alignnone size-full wp-image-1811" alt="tt1_2" src="http://improve.dk/wp-content/uploads/2007/02/tt1_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt2_2.jpg"><img class="alignnone size-full wp-image-1812" alt="tt2_2" src="http://improve.dk/wp-content/uploads/2007/02/tt2_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt3_2.jpg"><img class="alignnone size-full wp-image-1813" alt="tt3_2" src="http://improve.dk/wp-content/uploads/2007/02/tt3_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt4_2.jpg"><img class="alignnone size-full wp-image-1814" alt="tt4_2" src="http://improve.dk/wp-content/uploads/2007/02/tt4_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt5_2.jpg"><img class="alignnone size-full wp-image-1815" alt="tt5_2" src="http://improve.dk/wp-content/uploads/2007/02/tt5_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt6_2.jpg"><img class="alignnone size-full wp-image-1816" alt="tt6_2" src="http://improve.dk/wp-content/uploads/2007/02/tt6_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt7_2.jpg"><img class="alignnone size-full wp-image-1817" alt="tt7_2" src="http://improve.dk/wp-content/uploads/2007/02/tt7_2.jpg" width="1024" height="683" /></a></div></div>

<p>Yes, those plates are mine :)</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/tt9_2.jpg"><img class="alignnone size-full wp-image-1818" alt="tt9_2" src="http://improve.dk/wp-content/uploads/2007/02/tt9_2.jpg" width="1024" height="731" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1237</wp:post_id>
		<wp:post_date>2007-02-14 13:24:24</wp:post_date>
		<wp:post_date_gmt>2007-02-14 13:24:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>audi-tt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="audi-tt"><![CDATA[Audi TT]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>613</wp:comment_id>
			<wp:comment_author><![CDATA[Kasper]]></wp:comment_author>
			<wp:comment_author_email>kasper_vesth@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-15 19:09:15</wp:comment_date>
			<wp:comment_date_gmt>2007-02-15 19:09:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[haha hvad er det for en t&#248;set h&#229;nd der er p&#229; billede 5 :P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>614</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-16 11:40:59</wp:comment_date>
			<wp:comment_date_gmt>2007-02-16 11:40:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Det er den fremtidige jords herskers h&#229;nd. Din fremtidige arbejdsgiver. Din fremtidige arvtager. Din fremtids mareridt.<br /><br />Jeg er Truslen der h&#230;rger om natten, jeg er ham der har forkert nummer og v&#230;kker dig kl 3 om natten... Jeg er... MARK!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>615</wp:comment_id>
			<wp:comment_author><![CDATA[Mads]]></wp:comment_author>
			<wp:comment_author_email>mads@lutzhoeft.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-19 11:26:54</wp:comment_date>
			<wp:comment_date_gmt>2007-02-19 11:26:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Okay, du bliver n&#248;d til at fort&#230;lle mig hvad du laver for at have r&#229;d til s&#229;dan en bil... I NEED :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>616</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-21 04:16:16</wp:comment_date>
			<wp:comment_date_gmt>2007-02-21 04:16:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hehe<br /><br />Jeg er selvst&#230;ndig, arbejder som freelance udvikler med speciale i .NET og database arkitektur :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>617</wp:comment_id>
			<wp:comment_author><![CDATA[mor]]></wp:comment_author>
			<wp:comment_author_email>vivi@horisont.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-22 13:27:29</wp:comment_date>
			<wp:comment_date_gmt>2007-02-22 13:27:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MIn s&#248;n, hvor er jeg stolt af dig. Hvorn&#229;r m&#229; jeg l&#229;ne  bilen???]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>618</wp:comment_id>
			<wp:comment_author><![CDATA[Kristian]]></wp:comment_author>
			<wp:comment_author_email>poker@hasloev.dk</wp:comment_author_email>
			<wp:comment_author_url>http://ottoblogging.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-03-03 14:56:11</wp:comment_date>
			<wp:comment_date_gmt>2007-03-03 14:56:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Han har lavet den app (Multi Table Helper) jeg bruger til at pwn'e Partypoker dagligt, s&#229; den venstre cirkel i Audi-logoet har jeg betalt, hvilket jeg er glad for. Fortjent Audi, tillykke Mark! :) ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>UML Love</title>
		<link>http://improve.dk/uml-love/</link>
		<pubDate>Sun, 25 Feb 2007 22:13:42 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/02/24/uml-love.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I was asked to make a graph of my most recent relationship, what other way is there to express oneself than UML?</p>

<p>My world:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/relationdiagram_2.jpg"><img class="alignnone size-full wp-image-1808" alt="relationdiagram_2" src="http://improve.dk/wp-content/uploads/2007/02/relationdiagram_2.jpg" width="664" height="548" /></a></div></div>

<p>My relationship:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/02/relationtimeline_2.jpg"><img class="alignnone size-full wp-image-1809" alt="relationtimeline_2" src="http://improve.dk/wp-content/uploads/2007/02/relationtimeline_2.jpg" width="349" height="768" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1238</wp:post_id>
		<wp:post_date>2007-02-25 23:13:42</wp:post_date>
		<wp:post_date_gmt>2007-02-25 22:13:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>uml-love</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<category domain="post_tag" nicename="pokerstars"><![CDATA[PokerStars]]></category>
		<category domain="post_tag" nicename="uml"><![CDATA[UML]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>619</wp:comment_id>
			<wp:comment_author><![CDATA[Claus Nielsen]]></wp:comment_author>
			<wp:comment_author_email>cn@clausn.dk</wp:comment_author_email>
			<wp:comment_author_url>http://clausn.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-25 15:03:33</wp:comment_date>
			<wp:comment_date_gmt>2007-02-25 15:03:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brilliant!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>620</wp:comment_id>
			<wp:comment_author><![CDATA[mono]]></wp:comment_author>
			<wp:comment_author_email>mono@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-02-28 12:54:05</wp:comment_date>
			<wp:comment_date_gmt>2007-02-28 12:54:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&#161;Excelente! xD]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>621</wp:comment_id>
			<wp:comment_author><![CDATA[golfman]]></wp:comment_author>
			<wp:comment_author_email>stepaheadsoftware@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-03-02 03:01:50</wp:comment_date>
			<wp:comment_date_gmt>2007-03-02 03:01:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good developers have, for a very long time, been taught the value of having reduced coupling between interfaces. Unfortunately this is of benefit to only some projects and for many *real world* scenarios leaves many male developers on the scrap heap of life.<br /><br />The aim of the project under discussion here is to go against the flow and increase the coupling between the &lt;&lt;interface&gt;&gt;man and the &lt;&lt;interface&gt;&gt;Female. The project is judged a success if the object implementing the man interface makes many frequent uses of the services provided by an object implementing the female interface.<br /><br />At first glance the female interface appears to have a great architecture, looks to be well engineered and it's seems fairly easy to use but the business logic behind the provision of access rights is extremely complex and most developers simply will never understand it without some extensive reverse engineering - which is of course illegal and usually fruitless because the business logic uses self modifying code so something that granted you access to the interface today may not work tomorrow.<br /><br />Unfortunately, due to the combination of a seemingly simple interface but an extremely complex encapsulation of business logic most developers never end up using the interface as they would like. They often end up using their concrete implementation of the man interface in the absence of an object implementing the female interface. To keep the project moving they will often use an abstract (non existent) implementation or a mock implementation (don't go there) of the female interface. <br />While these may be fine for unit testing they're no good if you want to build a complete system. There's no way you will never make it to production without a concrete implementation of the female interface.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>622</wp:comment_id>
			<wp:comment_author><![CDATA[golfman]]></wp:comment_author>
			<wp:comment_author_email>stepaheadsoftware@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-03-02 03:14:24</wp:comment_date>
			<wp:comment_date_gmt>2007-03-02 03:14:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[(Cont'd from above)<br /><br />Once you manage to instantiate an object implementing the female interface there is something you need to do to prevent it from being deleted. You're going to need to make sure you reference it often and have a very high 'uptime'.<br /><br />To increase 'uptime' your going to have to make some adjustments: less pizza, less stress (leave that Hitler style boss you have) and more exercise and more healthy foods. You may also increase your chance of success with more 'chick flicks' and less 'arnie' movies. These requirements make many developers wonder if they should just stick to unit testing.<br /><br />Another common problem developers have is that the female interface they would like to couple with gets used in an abstract way or via a proxy ie., some other object implementing the male interface gets to use the female interface exclusively (the female's existing boyfriend). With most operating systems exclusive female locking seems to be the mode supported although these days you might be able to find an implementation that supports the ACCESS_SHARED mode but this is always associated with the risk of crashing your whole system and you must then be careful of being exposed to Open Sores (a term borrowed with thanks from Hani).<br /><br />These were just a few tips from the team leader. I hope it all works out for you and if it doesn't then don't stress out: just remember that thousands of developers around the world have the same problem trying to establish a relationship whereby female instances extend their private attributes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>623</wp:comment_id>
			<wp:comment_author><![CDATA[Jean-Seb]]></wp:comment_author>
			<wp:comment_author_email>evicerator666@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-04-24 18:45:55</wp:comment_date>
			<wp:comment_date_gmt>2007-04-24 18:45:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! But forgot the interaction with the &quot;Money&quot; generality. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>624</wp:comment_id>
			<wp:comment_author><![CDATA[billybnugroho]]></wp:comment_author>
			<wp:comment_author_email>billybnugroho@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-04-26 04:56:23</wp:comment_date>
			<wp:comment_date_gmt>2007-04-26 04:56:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I just can't believe how ridiculously entertaining this article is. On top of that is your comment, golfman - it's just as wicked as the article itself xD<br />But, golfman, I do have to say that your comment *does* provide an opening to a successful coupling, &quot;... because the business logic uses self modifying code...&quot;<br /><br />*fingers crossed* let's just hope it modifies in your favor ;)<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Car fire :(</title>
		<link>http://improve.dk/car-fire/</link>
		<pubDate>Fri, 16 Mar 2007 18:41:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/03/16/car-fire.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Boy am I glad I've got my baby insured, guess I'll need it now :(</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/03/carburn1_2.jpg"><img class="alignnone size-full wp-image-1826" alt="carburn1_2" src="http://improve.dk/wp-content/uploads/2007/03/carburn1_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/03/carburn2_2.jpg"><img class="alignnone size-full wp-image-1827" alt="carburn2_2" src="http://improve.dk/wp-content/uploads/2007/03/carburn2_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/03/carburn3_2.jpg"><img class="alignnone size-full wp-image-1828" alt="carburn3_2" src="http://improve.dk/wp-content/uploads/2007/03/carburn3_2.jpg" width="1024" height="683" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/03/carburn4_2.jpg"><img class="alignnone size-full wp-image-1830" alt="carburn4_2" src="http://improve.dk/wp-content/uploads/2007/03/carburn4_2.jpg" width="1024" height="683" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1239</wp:post_id>
		<wp:post_date>2007-03-16 18:41:08</wp:post_date>
		<wp:post_date_gmt>2007-03-16 18:41:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>car-fire</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="audi-tt"><![CDATA[Audi TT]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>625</wp:comment_id>
			<wp:comment_author><![CDATA[Christian Beyer Tarp]]></wp:comment_author>
			<wp:comment_author_email>audicup@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-04-10 20:54:38</wp:comment_date>
			<wp:comment_date_gmt>2007-04-10 20:54:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark - What happened?  And have you got a new car now?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>626</wp:comment_id>
			<wp:comment_author><![CDATA[i see it]]></wp:comment_author>
			<wp:comment_author_email>jlhn@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-07 02:17:16</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 02:17:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i see that its just a smoke machine shooting smoke out of someone elses car. good one.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>627</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-07 18:36:53</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 18:36:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations, you caught on to the fact that it's generated by a smoke machine. It's still my car on the pictures though.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Turning the World Upside Down</title>
		<link>http://improve.dk/turning-the-world-upside-down/</link>
		<pubDate>Thu, 29 Mar 2007 02:14:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/03/29/turning-the-world-upside-down.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So, tell me, do you notice anything unusual in the picture below?</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/03/upsidedown_2.jpg"><img class="alignnone size-full wp-image-1822" alt="upsidedown_2" src="http://improve.dk/wp-content/uploads/2007/03/upsidedown_2.jpg" width="1024" height="640" /></a></div></div>

<p>For a month or so I've used my computer with the Windows Start menu at the top. Am I crazy? Most likely. I started out doing it on my home computer (on all monitors), while keeping the start menu at the bottom at work. Honestly, it is feels quite weird and wrong in the beginning, and I was constantly throwing my mouse southwards just to realize that my work had been for nothing, as the Start menu was actually up north. I really couldn't impose this waste of time upon my employers, that's why I kept it down south there.</p>

<p>After a couple of weeks had passed, things started to shift. I was now starting to notice how wrong it was for the Start menu to be at the bottom at work - and how cumbersome it really is! So I moved it. And everybody laughed at me.</p>

<p>So why'd you want to move your Start menu to the top of the monitor?</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/03/topmenu_2.jpg"><img class="alignnone size-full wp-image-1823" alt="topmenu_2" src="http://improve.dk/wp-content/uploads/2007/03/topmenu_2.jpg" width="1024" height="75" /></a></div></div>

<p>See how all the menus are in the top? Usually - excluding gaming and other special applications - our mouse will be working inside a menu, dragging a window, using the Start menu, or in the main content area of a browser/application. Common to most of these are that they all happen at the top of the monitor. As the monitor gets larger, the distance between the top and the bottom becomes greater.</p>

<p>Having the Start menu at the top really saves a lot of mouse movement. The only negative side that I've become aware of is that you can't just toss the mouse top-right like a maniac and click to close a window - that'll now activate the system clock. When using multiple monitors, that really isn't an issue as you wouldn't be able to do that anyways since your mouse would enther the other monitor.</p>

<p>The greatest opponent of this efficiency improvement really is... Tradition. I shall not try to hide the fact that it takes a lot of getting used to. After having moved my mouse towards the bottom and hammering a fist in the table for the 100th time, I was almost about to give up. But hang in, for the sake of your carpal tunnel syndrome suffering hand, MOVE THAT START MENU!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1240</wp:post_id>
		<wp:post_date>2007-03-29 04:14:55</wp:post_date>
		<wp:post_date_gmt>2007-03-29 02:14:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>turning-the-world-upside-down</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Windows Menu Bar Top]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>628</wp:comment_id>
			<wp:comment_author><![CDATA[MDR]]></wp:comment_author>
			<wp:comment_author_email>tappywazoh@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://blogs.law.harvard.edu/arugslife</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-03-29 12:26:26</wp:comment_date>
			<wp:comment_date_gmt>2007-03-29 12:26:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Eerie.... I have the start menu at top of screen on my home computer and at bottom of screen at work. I've had it like this for several months now. I think its part of a 'separate work from home' initiative for me...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>629</wp:comment_id>
			<wp:comment_author><![CDATA[graham]]></wp:comment_author>
			<wp:comment_author_email>graybowxD@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-10 11:44:12</wp:comment_date>
			<wp:comment_date_gmt>2008-08-10 11:44:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how do you swap them im uset to having it at top but wen i got a new pc its at botom please tell me please]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>630</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-10 12:00:46</wp:comment_date>
			<wp:comment_date_gmt>2008-08-10 12:00:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Right click the start menu and unselect &quot;Lock the Taskbar&quot;. Now simply click and drag the start menu to the top of the screen at it'll stay there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Dedicated to the API</title>
		<link>http://improve.dk/dedicated-to-the-api/</link>
		<pubDate>Thu, 29 Mar 2007 04:30:05 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/03/29/dedicated-to-the-api.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Unfortunately it's been quite silent around here for the last couple of months. I want to change that, so why not make a promise?</p>

<p>I've always been bullied by my wannabe developer friends for memorizing most of the Win32 (XP onwards) API. What they don't realize is just how useful the API is - how powerful it is!</p>

<p>For the complete month of April 2007, I will post a new blog each day containing a Win32 API trick including demonstration code. Although my samples will be in C#, this being the Win32 API, it's actually usable in more or less any language you want.</p>

<p>I look forward to my missionary work in the name of the holy Win32 API!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1241</wp:post_id>
		<wp:post_date>2007-03-29 04:30:05</wp:post_date>
		<wp:post_date_gmt>2007-03-29 04:30:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dedicated-to-the-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Basics</title>
		<link>http://improve.dk/the-basics/</link>
		<pubDate>Mon, 02 Apr 2007 21:50:12 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/01/the-basics.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>First of all, to manipulate and use the Win32 API, we must know about the system itself, the windows, the controls and so forth. Visual Studio comes bundled with Spy++ which enables us to identity the various windows and controls of application, but honestly, it's pretty bad. Instead you should <a href="http://www.windows-spy.com/">download Winspector</a>.</p>

<h2>Threads &amp; processes</h2>

<p>Each application/window in Windows belongs to a given thread under a given process. A process may have multiple threads and windows, but a thread and a window can only belong to a single process.</p>

<h2>Windows &amp; handles</h2>

<p>Usually we refer to a window as the overall container of visual representation of data in Windows, in this case it's a bit more detailed though. In all API work a window is a standard Win32 control, that could be a button, a toolbar, a label, a window (as per the usual definition) and so forth. Each window is assigned a handle, and by using this handle we can uniquely reference any given window. A window may have any number of child windows, that could be the controls of a dialog box, and the children may have children themselves and so forth.</p>

<p>Try and mess around with Winspector a bit. Identify the various windows of the system (including those that are not visible). Inspect their properties, the process they belong to, their parent windows and so forth. Most, if not all, of the API tips &amp; tricks posts will include references to windows, handles, processes and threads - so get used to them.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1242</wp:post_id>
		<wp:post_date>2007-04-02 23:50:12</wp:post_date>
		<wp:post_date_gmt>2007-04-02 21:50:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-basics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting a Process From a Handle</title>
		<link>http://improve.dk/getting-a-process-from-a-handle/</link>
		<pubDate>Tue, 03 Apr 2007 20:39:59 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/02/getting-a-process-from-a-handle.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So we have a handle, what process does it belong to? Our goal is to obtain a .NET System.Diagnostics.Process object that corresponds to the owner process of the handle we input.</p>

<p>Let's first open up an Internet Explorer window, just leave it at the start page, whatever yours is.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_1_1_2.jpg"><img class="alignnone size-full wp-image-1871" alt="win32_1_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_1_1_2.jpg" width="765" height="507" /></a></div></div>

<p>Now fire up Winspector and locate the Internet Explorer window, you'll see the handle in HEX format in the treeview.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_1_2_2.jpg"><img class="alignnone size-full wp-image-1872" alt="win32_1_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_1_2_2.jpg" width="581" height="545" /></a></div></div>

<pre lang="csharp">using System;
using System.Runtime.InteropServices;
using System.Globalization;
using System.Diagnostics;

namespace Get_process_from_handle
{
	class Program
	{
		// The DllImport attribute specifies the Win32 DLL that contains the function we're importing,
		// in this case it's the user32.dll file that resides in the C:WindowsSystem32 directory.
		// The function we're importing is GetWindowThreadProcessId, it takes a handle and a reference
		// to an outgoing integer that'll return the process ID of the handle.
		[DllImport("user32")]
		public static extern int GetWindowThreadProcessId(int hWnd, out int lpdwProcessId);

		static void Main(string[] args)
		{
			// First, read the handle from the console, remember this has to be in HEX format!
			int handle = int.Parse(Console.ReadLine(), NumberStyles.HexNumber);

			// Now that we have the handle, create an uninitialized integer that'll hold the process ID
			// of the handle process.
			int processID;
			GetWindowThreadProcessId(handle, out processID);

			// Now that we have the process ID, we can use the built in .NET function to obtain a process object.
			Process p = Process.GetProcessById(processID);

			// Finally we'll write out the process name to confirm success.
			Console.Write(p.ProcessName);
			Console.Read();
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_1_3_2.jpg"><img class="alignnone size-full wp-image-1873" alt="win32_1_3_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_1_3_2.jpg" width="357" height="285" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1243</wp:post_id>
		<wp:post_date>2007-04-03 22:39:59</wp:post_date>
		<wp:post_date_gmt>2007-04-03 20:39:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-a-process-from-a-handle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Getting a Process From a Handle]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>631</wp:comment_id>
			<wp:comment_author><![CDATA[Thorsten Lorenz]]></wp:comment_author>
			<wp:comment_author_email>thlorenz@gmx.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-22 22:54:46</wp:comment_date>
			<wp:comment_date_gmt>2009-01-22 22:54:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You keep using (int) types to pass parameters and receive results a lot of times during this blog series, which is great by the way.<br />Shouldn't it be (InPtr) most of the time? <br />Like here:<br /><a rel="nofollow external" href="http://www.pinvoke.net/default.aspx/user32.SendMessage" title="http://www.pinvoke.net/default.aspx/user32.SendMessage" rel="nofollow">www.pinvoke.net/.../user32.SendMessage&lt;br</a> <br />The reason I'm asking is because I used what I learned from you blog and implemented a windows finder but the application sometimes hangs itself at this line:<br />txtLength = (int) User32.SendMessage(handle, User32.WM_GETTEXTLENGTH, 0, null);<br /><br />I followed your advise to the letter so the parameters ar of the same type as you showed in your tutorial.<br /><br />Thanks for your nice blog and looking forward to understand this a little more when I receive your answer.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>632</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-22 23:04:09</wp:comment_date>
			<wp:comment_date_gmt>2009-01-22 23:04:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Thorsten,<br /><br />IntPtr are basically the same type. Both are a numeric 4 byte value, and can thus be converted 1 to 1 without problems. Whether you use int or IntPtr is more of a style issue in my opinion. You should however stick to using just one of the types, and not mix them together as I have lazily done :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>633</wp:comment_id>
			<wp:comment_author><![CDATA[Thorsten Lorenz]]></wp:comment_author>
			<wp:comment_author_email>thlorenz@gmx.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-23 00:53:27</wp:comment_date>
			<wp:comment_date_gmt>2009-01-23 00:53:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, I understand now.<br />Do you have any idea, why the Program hands itself at the above mentioned line. It only happens about 5% of the time, usually when I did a lot during the current Windows session and a reboot always fixes the problem.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Getting Text From Window Handle Using PInvoke</title>
		<link>http://improve.dk/getting-text-from-handle/</link>
		<pubDate>Wed, 04 Apr 2007 21:22:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/03/getting-text-from-handle.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This time we want to retrieve the text from a given window, represented by a handle. Like last time, open an Internet Explorer instance. Now open Winspector and select the address field, ensure that it is the address field itself (class = Edit) and not the ComboBox that you select.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_2_1_2.jpg"><img class="alignnone size-full wp-image-1868" alt="win32_2_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_2_1_2.jpg" width="669" height="374" /></a></div></div>

<pre lang="csharp">using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;
using System.Globalization;

namespace Get_text_from_handle
{
	class Program
	{
		// These are two Win32 constants that we'll need, they'll be explained later.
		const int WM_GETTEXT		= 0x000D;
		const int WM_GETTEXTLENGTH = 0x000E;

		// The SendMessage function sends a Win32 message to the specified handle, it takes three
		// ints as parameters, the message to send, and to optional parameters (pass 0 if not required).
		[DllImport("User32.dll")]
		public static extern Int32 SendMessage(int hWnd, int Msg, int wParam, int lParam);

		// An overload of the SendMessage function, this time taking in a StringBuilder as the lParam.
		// Through the series we'll use a lot of different SendMessage overloads as SendMessage is one
		// of the most fundamental Win32 functions.
		[DllImport("User32.dll")]
		public static extern Int32 SendMessage(int hWnd, int Msg, int wParam, StringBuilder lParam);

		static void Main(string[] args)
		{
			// First, read the handle from the console, remember this has to be in HEX format!
			int handle = int.Parse(Console.ReadLine(), NumberStyles.HexNumber);

			// This is a bit tricky. To retrieve the text from a window, we have to know it's length beforehand.
			// This is because we have to send a StringBuilder of the correct length as a parameter. If it's too
			// small, it won't be able to contain the full text. If it's too large, it's inefficient. When using
			// the SendMessage function with the WM_GETTEXTLENGTH message, it returns the length of the
			// window text.
			int txtLength = SendMessage(handle, WM_GETTEXTLENGTH, 0, 0);

			// After having retrieved the length of the string, we create a StringBuilder to hold it.
			StringBuilder sb = new StringBuilder(txtLength + 1);

			// Sending the message WM_GETTEXT to the window, passing int he length of the text (the capacity
			// of the StringBuilder) as well as a reference to the StringBuilder will result in the
			// StringBuilder being filled up with the windows text.
			SendMessage(handle, WM_GETTEXT, sb.Capacity, sb);

			// Finally we'll write out the window text by ToString()'ing the StringBuilder.
			Console.Write(sb.ToString());
			Console.Read();
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_2_2_2.jpg"><img class="alignnone size-full wp-image-1869" alt="win32_2_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_2_2_2.jpg" width="509" height="321" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1244</wp:post_id>
		<wp:post_date>2007-04-04 23:22:21</wp:post_date>
		<wp:post_date_gmt>2007-04-04 21:22:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-text-from-handle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Getting Text From Window Handle Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Set Text By Window Handle Using PInvoke</title>
		<link>http://improve.dk/set-text-by-handle/</link>
		<pubDate>Wed, 04 Apr 2007 21:23:52 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/04/set-text-by-handle.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This time we won't be reading the text from a window, we'll be setting it.</p>

<p><a href="http://www.improve.dk/blog/2007/04/03/getting-text-from-handle">Like last time</a>, open an Internet Explorer browser and obtain a handle to the address field.</p>

<pre lang="csharp">using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;
using System.Globalization;

namespace Set_text_by_handle
{
	class Program
	{
		// A Win32 constant
		const int WM_SETTEXT = 0x000C;

		// An overload of the SendMessage function, this time taking in a string as the lParam.
		[DllImport("User32.dll")]
		public static extern Int32 SendMessage(int hWnd, int Msg, int wParam, string lParam);

		static void Main(string[] args)
		{
			// First, read the handle from the console, remember this has to be in HEX format!
			int handle = int.Parse(Console.ReadLine(), NumberStyles.HexNumber);

			// Now we'll send the WM_SETTEXT message to the window, passing the text
			// through the lParam parameter.
			SendMessage(handle, WM_SETTEXT, 0, "http://www.improve.dk");

			// And we're done
			Console.Write("Text set!");
			Console.Read();
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_3_2_2.jpg"><img class="alignnone size-full wp-image-1864" alt="win32_3_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_3_2_2.jpg" width="653" height="445" /></a></div></div>

<p>Note that we have not navigated to the address, we have only set it!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_3_1_2.jpg"><img class="alignnone size-full wp-image-1866" alt="win32_3_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_3_1_2.jpg" width="421" height="297" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1245</wp:post_id>
		<wp:post_date>2007-04-04 21:23:52</wp:post_date>
		<wp:post_date_gmt>2007-04-04 21:23:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>set-text-by-handle</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Set Text By Window Handle Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sending Keypresses to a Window Using PInvoke</title>
		<link>http://improve.dk/sending-keypresses-to-a-window/</link>
		<pubDate>Fri, 06 Apr 2007 21:14:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/05/sending-keypresses-to-a-window.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now to complete the toolset required to make a great spyware / browser hijacking application, we'll make Internet Explorer navigate to the address we set.</p>

<p><a href="http://www.improve.dk/blog/2007/04/03/getting-text-from-handle">Like before</a>, open an Internet Explorer browser and obtain a handle to the address field.</p>

<pre lang="csharp">using System;
using System.Runtime.InteropServices;
using System.Globalization;

namespace Sending_keypresses_to_a_window
{
	class Program
	{
		// A Win32 constant
		const int WM_SETTEXT = 0x000C;
		const int WM_KEYDOWN = 0x0100;
		const int VK_RETURN  = 0x0D;

		// An overload of the SendMessage function, this time taking in a string as the lParam.
		[DllImport("User32.dll")]
		public static extern Int32 SendMessage(int hWnd, int Msg, int wParam, string lParam);

		// PostMessage is very similar to SendMessage. They both send a message to the given
		// handle / window, the difference being that SendMessage sends the message and waits
		// for the window to "handle" the message and return a return code. PostMessage on the
		// other hand simply posts the message and returns instantly, whether the window
		// handles the message or not, we don't care.
		[DllImport("User32.Dll")]
		public static extern Int32 PostMessage(int hWnd, int msg, int wParam, int lParam);

		static void Main(string[] args)
		{
			// First, read the handle from the console, remember this has to be in HEX format!
			int handle = int.Parse(Console.ReadLine(), NumberStyles.HexNumber);

			// Now we'll send the WM_SETTEXT message to the window, passing the text
			// through the lParam parameter.
			SendMessage(handle, WM_SETTEXT, 0, "http://www.improve.dk");
			Console.WriteLine("Text set!");

			// Now send a message telling the Edit box that the Return key has been pressed,
			// resulting in Internet Explorer navigating to the page.
			PostMessage(handle, WM_KEYDOWN, VK_RETURN, 1);
			Console.WriteLine("Return keypress sent!");

			// And we're done
			Console.Read();
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_4_1_2.jpg"><img class="alignnone size-full wp-image-1859" alt="win32_4_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_4_1_2.jpg" width="517" height="297" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_4_2_2.jpg"><img class="alignnone size-full wp-image-1860" alt="win32_4_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_4_2_2.jpg" width="812" height="494" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1246</wp:post_id>
		<wp:post_date>2007-04-06 23:14:55</wp:post_date>
		<wp:post_date_gmt>2007-04-06 21:14:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sending-keypresses-to-a-window</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Sending Keypresses to a Window Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Enumerating Windows Using PInvoke</title>
		<link>http://improve.dk/enumerating-windows/</link>
		<pubDate>Fri, 06 Apr 2007 16:20:49 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/06/enumerating-windows.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Until now we've seen how to retrieve basic properties of windows as well as how to interact with them by sending keypresses. Up until now we've had to find the handle by using Winspector or a similar program. This time I'll present a way of finding the handles programmatically.</p>

<pre lang="csharp">using System.Runtime.InteropServices;
using System.Text;
using System;

namespace Enumerating_windows
{
	class Program
	{
		// These are two Win32 constants that we'll need, they were explained in an earlier blog.
		const int WM_GETTEXT		= 0x000D;
		const int WM_GETTEXTLENGTH	= 0x000E;

		// SendMessage overload.
		[DllImport("User32.dll")]
		public static extern Int32 SendMessage(int hWnd, int Msg, int wParam, int lParam);

		// SendMessage overload.
		[DllImport("User32.dll")]
		public static extern Int32 SendMessage(int hWnd, int Msg, int wParam, StringBuilder lParam);

		// The GetClassName function takes a handle as a parameter as well as a StringBuilder
		// and the max capacity of the StringBuilder as parameters. It'll return the windows
		// class name by filling up the StringBuilder - though not any longer than the max capacity.
		// If the class is longer than the max capacity it will simply be cropped. Having a larger
		// capacity than necessary is simply a matter of performance.
		[DllImport("User32.Dll")]
		public static extern void GetClassName(int hWnd, StringBuilder s, int nMaxCount);

		// The EnumWindows function will enumerate all windows in the system. Each window will cause
		// the PCallBack callback function to be called.
		[DllImport("user32.Dll")]
		static extern bool EnumWindows(PCallBack callback, int lParam);

		// This is the delegate that sets the signature for the callback function of the EnumWindows function.
		private delegate bool PCallBack(int hwnd, int lParam);

		static void Main(string[] args)
		{
			// All we'll do is to invoke the EnumWindows function, passing in a new delegate specifying the EnumWindowsCallback
			// function as the callback function. The lParam parameter can be used to send in an integer that will be passed
			// onto the callback function unmodified. It's optional, but it may be useful in some situations.
			EnumWindows(new PCallBack(EnumWindowsCallback), 0);

			Console.Read();
		}

		// This function will be called exactly once for each window the EnumWindows function finds. We have no idea what
		// window / type of windows it'll get called for, so we'll have to identify the windows somehow. The lParam
		// parameter contains the value we passed when we called the EnumWindows function.
		private static bool EnumWindowsCallback(int handle, int lParam)
		{
			// First we'll find the class of the window as that is usually the parameter that narrows our search down the furthest.
			// As classes are usually rather short, a capacity of 256 ought to be plenty.
			StringBuilder sbClass = new StringBuilder(256);
			GetClassName(handle, sbClass, sbClass.Capacity);

			// As explained in an earlier blog we then get the text of the window.
			int txtLength = SendMessage(handle, WM_GETTEXTLENGTH, 0, 0);
			StringBuilder sbText = new StringBuilder(txtLength + 1);
			SendMessage(handle, WM_GETTEXT, sbText.Capacity, sbText);

			// Now we can write out the information we have on the window:
			Console.WriteLine("Handle: " + handle);
			Console.WriteLine("Class : " + sbClass);
			Console.WriteLine("Text  : " + sbText);
			Console.WriteLine();

			// When we return true, the EnumWindows function will proceed to call the callback function with the next window.
			// If we returned false, the EnumWindows function would stop and the callback function wouldn't get called again.
			// This can be useful if we're looking for a specific window - once it's found we can just return false, no reason
			// to handle any other windows.
			return true;
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_5_1_2.jpg"><img class="alignnone size-full wp-image-1857" alt="win32_5_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_5_1_2.jpg" width="677" height="340" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1247</wp:post_id>
		<wp:post_date>2007-04-06 16:20:49</wp:post_date>
		<wp:post_date_gmt>2007-04-06 16:20:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>enumerating-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Enumerating Windows Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Finding Specific Windows Using PInvoke</title>
		<link>http://improve.dk/finding-specific-windows/</link>
		<pubDate>Sat, 07 Apr 2007 00:26:57 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/07/finding-specific-windows.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last time I made an example of how to enumerate windows. This time I present to you a class that greatly simplifies the process of searching for specific windows, types of windows, windows belonging to a specific process, having a specific text. You can search for any number of these parameters at the same time, using regular expressions for all string matches to provide optimal flexibility.</p>

<pre lang="csharp">
using System.Runtime.InteropServices;
using System;
using System.Text;
using System.Text.RegularExpressions;
using System.Diagnostics;

namespace Searching_for_windows
{
	class Program
	{
		// Win32 constants.
		const int WM_GETTEXT = 0x000D;
		const int WM_GETTEXTLENGTH = 0x000E;

		// Win32 functions that have all been used in previous blogs.
		[DllImport("User32.Dll")]
		private static extern void GetClassName(int hWnd, StringBuilder s, int nMaxCount);

		[DllImport("User32.dll")]
		private static extern int GetWindowText(int hWnd, StringBuilder text, int count);

		[DllImport("User32.dll")]
		private static extern Int32 SendMessage(int hWnd, int Msg, int wParam, StringBuilder lParam);

		[DllImport("User32.dll")]
		private static extern Int32 SendMessage(int hWnd, int Msg, int wParam, int lParam);

		// Main entrypoint function
		static void Main(string[] args)
		{
			WindowFinder wf = new WindowFinder();

			// Find all Internet Explorer instances
			wf.FindWindows(0, null, null, new Regex("iexplore"), new WindowFinder.FoundWindowCallback(foundWindow));

			// Find all visual studio instances
			wf.FindWindows(0, null, new Regex(" - Microsoft Visual Studio"), new Regex("devenv"), new WindowFinder.FoundWindowCallback(foundWindow));

			Console.WriteLine("Done");
			Console.Read();
		}

		// Gets called each time a window is found by the WindowFinder class.
		private static bool foundWindow(int handle)
		{
			// Print the window info.
			printWindowInfo(handle);

			// Continue on with next window.
			return true;
		}

		// Prints basic properties of a window, uses function already used in previous blogs.
		private static void printWindowInfo(int handle)
		{
			// Get the class.
			StringBuilder sbClass = new StringBuilder(256);
			GetClassName(handle, sbClass, sbClass.Capacity);

			// Get the text.
			int txtLength = SendMessage(handle, WM_GETTEXTLENGTH, 0, 0);
			StringBuilder sbText = new StringBuilder(txtLength + 1);
			SendMessage(handle, WM_GETTEXT, sbText.Capacity, sbText);

			// Now we can write out the information we have on the window.
			Console.WriteLine("Handle: " + handle);
			Console.WriteLine("Class : " + sbClass);
			Console.WriteLine("Text  : " + sbText);
			Console.WriteLine();
		}
	}

	/// &lt;summary&gt;
	/// A class used for finding windows based upon their class, title, process and parent window handle.
	/// &lt;/summary&gt;
	public class WindowFinder
	{
		// Win32 constants.
		const int WM_GETTEXT = 0x000D;
		const int WM_GETTEXTLENGTH = 0x000E;

		// Win32 functions that have all been used in previous blogs.
		[DllImport("User32.Dll")]
		private static extern void GetClassName(int hWnd, StringBuilder s, int nMaxCount);

		[DllImport("User32.dll")]
		private static extern int GetWindowText(int hWnd, StringBuilder text, int count);

		[DllImport("User32.dll")]
		private static extern Int32 SendMessage(int hWnd, int Msg, int wParam, StringBuilder lParam);

		[DllImport("User32.dll")]
		private static extern Int32 SendMessage(int hWnd, int Msg, int wParam, int lParam);

		[DllImport("user32")]
		private static extern int GetWindowThreadProcessId(int hWnd, out int lpdwProcessId);

		// EnumChildWindows works just like EnumWindows, except we can provide a parameter that specifies the parent
		// window handle. If this is NULL or zero, it works just like EnumWindows. Otherwise it'll only return windows
		// whose parent window handle matches the hWndParent parameter.
		[DllImport("user32.Dll")]
		private static extern Boolean EnumChildWindows(int hWndParent, PChildCallBack lpEnumFunc, int lParam);

		// The PChildCallBack delegate that we used with EnumWindows.
		private delegate bool PChildCallBack(int hWnd, int lParam);

		// This is an event that is run each time a window was found that matches the search criterias. The boolean
		// return value of the delegate matches the functionality of the PChildCallBack delegate function.
		private event FoundWindowCallback foundWindow;
		public delegate bool FoundWindowCallback(int hWnd);

		// Members that'll hold the search criterias while searching.
		private int parentHandle;
		private Regex className;
		private Regex windowText;
		private Regex process;

		// The main search function of the WindowFinder class. The parentHandle parameter is optional, taking in a zero if omitted.
		// The className can be null as well, in this case the class name will not be searched. For the window text we can input
		// a Regex object that will be matched to the window text, unless it's null. The process parameter can be null as well,
		// otherwise it'll match on the process name (Internet Explorer = "iexplore"). Finally we take the FoundWindowCallback
		// function that'll be called each time a suitable window has been found.
		public void FindWindows(int parentHandle, Regex className, Regex windowText, Regex process, FoundWindowCallback fwc)
		{
			this.parentHandle = parentHandle;
			this.className = className;
			this.windowText = windowText;
			this.process = process;

			// Add the FounWindowCallback to the foundWindow event.
			foundWindow = fwc;

			// Invoke the EnumChildWindows function.
			EnumChildWindows(parentHandle, new PChildCallBack(enumChildWindowsCallback), 0);
		}

		// This function gets called each time a window is found by the EnumChildWindows function. The foun windows here
		// are NOT the final found windows as the only filtering done by EnumChildWindows is on the parent window handle.
		private bool enumChildWindowsCallback(int handle, int lParam)
		{
			// If a class name was provided, check to see if it matches the window.
			if (className != null)
			{
				StringBuilder sbClass = new StringBuilder(256);
				GetClassName(handle, sbClass, sbClass.Capacity);

				// If it does not match, return true so we can continue on with the next window.
				if (!className.IsMatch(sbClass.ToString()))
					return true;
			}

			// If a window text was provided, check to see if it matches the window.
			if (windowText != null)
			{
				int txtLength = SendMessage(handle, WM_GETTEXTLENGTH, 0, 0);
				StringBuilder sbText = new StringBuilder(txtLength + 1);
				SendMessage(handle, WM_GETTEXT, sbText.Capacity, sbText);

				// If it does not match, return true so we can continue on with the next window.
				if (!windowText.IsMatch(sbText.ToString()))
					return true;
			}

			// If a process name was provided, check to see if it matches the window.
			if (process != null)
			{
				int processID;
				GetWindowThreadProcessId(handle, out processID);

				// Now that we have the process ID, we can use the built in .NET function to obtain a process object.
				Process p = Process.GetProcessById(processID);

				// If it does not match, return true so we can continue on with the next window.
				if (!process.IsMatch(p.ProcessName))
					return true;
			}

			// If we get to this point, the window is a match. Now invoke the foundWindow event and based upon
			// the return value, whether we should continue to search for windows.
			return foundWindow(handle);
		}
	}
}
</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_6_1_2.jpg"><img class="alignnone size-full wp-image-1855" alt="win32_6_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_6_1_2.jpg" width="677" height="340" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1248</wp:post_id>
		<wp:post_date>2007-04-07 00:26:57</wp:post_date>
		<wp:post_date_gmt>2007-04-07 00:26:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>finding-specific-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Finding Specific Windows Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>634</wp:comment_id>
			<wp:comment_author><![CDATA[Bobby Shreeves]]></wp:comment_author>
			<wp:comment_author_email>bjshreeves@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-12 21:14:14</wp:comment_date>
			<wp:comment_date_gmt>2009-01-12 21:14:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[By chance do you have a vb version of this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>635</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-12 21:19:14</wp:comment_date>
			<wp:comment_date_gmt>2009-01-12 21:19:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm afraid not, but it should be pretty straight forward to translate.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Getting Window Location and Size Using PInvoke</title>
		<link>http://improve.dk/getting-window-location-and-size/</link>
		<pubDate>Mon, 09 Apr 2007 20:15:14 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/08/getting-window-location-and-size.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This time I'll show how to obtain the size and location of a window. I will be using the <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">WindowFinder class</a> that I introduced in the blog <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">Finding specific windows</a>.</p>

<p>Note that the location is not in relation to it's parent windows location, it is always the absolute screen position.</p>

<pre lang="csharp">using System.Runtime.InteropServices;
using System.Drawing;
using System.Text.RegularExpressions;
using System;
using System.Text;
using System.Globalization;

namespace Getting_window_location_and_size
{
	class Program
	{
		// Win32 constants.
		const int WM_GETTEXT = 0x000D;
		const int WM_GETTEXTLENGTH = 0x000E;

		// Win32 functions that have all been used in previous blogs.
		[DllImport("User32.Dll")]
		private static extern void GetClassName(int hWnd, StringBuilder s, int nMaxCount);

		[DllImport("User32.dll")]
		private static extern Int32 SendMessage(int hWnd, int Msg, int wParam, StringBuilder lParam);

		[DllImport("User32.dll")]
		private static extern Int32 SendMessage(int hWnd, int Msg, int wParam, int lParam);

		// The GetWindowRect function takes a handle to the window as the first parameter. The second parameter
		// must include a reference to a Rectangle object. This Rectangle object will then have it's values set
		// to the window rectangle properties.
		[DllImport("user32.dll")]
		public static extern long GetWindowRect(int hWnd, ref Rectangle lpRect);

		static void Main(string[] args)
		{
			// Introduced in the "Finding specific windows" blog, we use the WindowFinder class to find all Internet Explorer main window instances.
			Finding_specific_windows.WindowFinder wf = new Finding_specific_windows.WindowFinder();
			wf.FindWindows(0, null, new Regex("- (Windows|Microsoft) Internet Explorer"), new Regex("iexplore"), new Finding_specific_windows.WindowFinder.FoundWindowCallback(foundWindow));

			Console.Read();
		}

		static bool foundWindow(int handle)
		{
			// First we intialize an empty Rectangle object.
			Rectangle rect = new Rectangle();

			// Then we call the GetWindowRect function, passing in a reference to the rect object.
			GetWindowRect(handle, ref rect);

			// And then we get the resulting rectangle. The tricky part here is that this rectangle includes
			// not only the location of the window, but also the size, but not in the form we're used to.
			Console.WriteLine(rect.ToString());

			// If the window is 100 x 100 pixels and is located at (10,10), then the rectangle would look like this:
			// rect.X = 10;
			// rect.Y = 10;
			// rect.Width = 110;
			// rect.Height = 110;
			// We simply have to subtract the rect.X value from the rect.Width value to obtain the "real" width of
			// the window, similarly we have to subtract the Y value from the Height value to obtain the real height.
			// After this we have the real window properties through the X, Y, Width and Height values.
			rect.Width = rect.Width - rect.X;
			rect.Height = rect.Height - rect.Y;

			// Lets print the rectangle after we've fixed it so we can confirm it's correct.
			Console.WriteLine(rect.ToString());

			// As used earlier, we print the basic properties of the window.
			printWindowInfo(handle);

			return true;
		}

		// Prints basic properties of a window, uses function already used in previous blogs.
		private static void printWindowInfo(int handle)
		{
			// Get the class.
			StringBuilder sbClass = new StringBuilder(256);
			GetClassName(handle, sbClass, sbClass.Capacity);

			// Get the text.
			int txtLength = SendMessage(handle, WM_GETTEXTLENGTH, 0, 0);
			StringBuilder sbText = new StringBuilder(txtLength + 1);
			SendMessage(handle, WM_GETTEXT, sbText.Capacity, sbText);

			// Now we can write out the information we have on the window.
			Console.WriteLine("Handle: " + handle);
			Console.WriteLine("Class : " + sbClass);
			Console.WriteLine("Text  : " + sbText);
			Console.WriteLine();
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_7_1_2.jpg"><img class="alignnone size-full wp-image-1850" alt="win32_7_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_7_1_2.jpg" width="477" height="336" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_7_2_2.jpg"><img class="alignnone size-full wp-image-1851" alt="win32_7_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_7_2_2.jpg" width="677" height="340" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1249</wp:post_id>
		<wp:post_date>2007-04-09 22:15:14</wp:post_date>
		<wp:post_date_gmt>2007-04-09 20:15:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-window-location-and-size</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Getting Window Location and Size Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>643</wp:comment_id>
			<wp:comment_author><![CDATA[Erik]]></wp:comment_author>
			<wp:comment_author_email>eriklittle@eriklittle.com</wp:comment_author_email>
			<wp:comment_author_url>http://afccinc.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-09-30 19:44:38</wp:comment_date>
			<wp:comment_date_gmt>2007-09-30 19:44:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When you get a ref to the window rectangle if you make changes to the referenced rectangle with that automatically reflect in the window that you have it's rectangle referenced?<br /><br />Or is there some sort of update function that would have to take place?<br /><br /><br />// First we intialize an empty Rectangle object.<br />            Rectangle rect = new Rectangle();<br /><br />            // Then we call the GetWindowRect function, passing in a reference to the rect object.<br />            GetWindowRect(handle, ref rect);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>644</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-09-30 20:52:24</wp:comment_date>
			<wp:comment_date_gmt>2007-09-30 20:52:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You will have to use the SetWindowPos function as described here: <a rel="nofollow external" href="http://www.improve.dk/blog/2007/04/09/modifying-window-location-and-size" title="http://www.improve.dk/blog/2007/04/09/modifying-window-location-and-size" rel="nofollow">www.improve.dk/...</a> <br />The retrieved rectangle is only a copy, modifying it will have no effect.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Modifying Window Location and Size Using PInvoke</title>
		<link>http://improve.dk/modifying-window-location-and-size/</link>
		<pubDate>Mon, 09 Apr 2007 20:42:36 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/09/modifying-window-location-and-size.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last time we saw how to obtain a windows location and size. This time I'll show how to change a windows size and location. I will be using the <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">WindowFinder class</a> that I introduced in the blog <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">Finding specific windows</a>.</p>

<pre lang="csharp">using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;
using System.Drawing;

namespace Modifying_window_location_and_size
{
	class Program
	{
		// The SetWindowPos function is used to both resize and change the location of windows. The uFlags parameter
		// can take any number of flags, with zero being a neutral flag, the same goes for the hWndInsertAfter parameter.
		// X, Y is the new location of the window, cx and cy is the new height / width of the window. Via uFlags it can
		// be set to ignore the new location and/or the new size of the window.
		// See http://msdn2.microsoft.com/en-us/library/ms633545.aspx for full documentation.
		[DllImport("user32.dll")]
		public static extern bool SetWindowPos(int hWnd, int hWndInsertAfter, int X, int Y, int cx, int cy, uint uFlags);

		// An enumeration containing all the possible HWND values.
		public enum HWND : int
		{
			BOTTOM = 1,
			NOTOPMOST = -2,
			TOPMOST = -1,
			TOP = 0
		}

		// And enumeration containing all the possible SWP values.
		public enum SWP : uint
		{
			ASYNCWINDOWPOS = 0x4000,
			DEFERERASE = 0x2000,
			FRAMECHANGED = 0x0020,
			HIDEWINDOW = 0x0080,
			NOACTIVATE = 0x0010,
			NOCOPYBITS = 0x0100,
			NOMOVE = 0x0002,
			NOOWNERZORDER = 0x0200,
			NOREDRAW = 0x0008,
			NOSENDCHANGING = 0x0400,
			NOSIZE = 0x0001,
			NOZORDER = 0x0004,
			SHOWWINDOW = 0x0040
		}

		static void Main(string[] args)
		{
			// Introduced in the "Finding specific windows" blog, we use the WindowFinder class to find all Internet Explorer main window instances.
			Finding_specific_windows.WindowFinder wf = new Finding_specific_windows.WindowFinder();
			wf.FindWindows(0, null, new Regex("- (Windows|Microsoft) Internet Explorer"), new Regex("iexplore"), new Finding_specific_windows.WindowFinder.FoundWindowCallback(foundWindow));

			Console.Read();
		}

		static bool foundWindow(int handle)
		{
			// After an Internet Explorer window has been found, relocate it to (50,50) and set it's size to 600x500px.
			SetWindowPos(handle, 0, 50, 50, 600, 500, 0);

			Console.WriteLine("Window resized and relocated");

			// Since we return true, this will be done for any and all Internet Explorer instances.
			return true;
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_8_1_2.jpg"><img class="alignnone size-full wp-image-1846" alt="win32_8_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_8_1_2.jpg" width="600" height="500" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_8_2_2.jpg"><img class="alignnone size-full wp-image-1847" alt="win32_8_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_8_2_2.jpg" width="677" height="340" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1250</wp:post_id>
		<wp:post_date>2007-04-09 20:42:36</wp:post_date>
		<wp:post_date_gmt>2007-04-09 20:42:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modifying-window-location-and-size</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Modifying Window Location and Size Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>645</wp:comment_id>
			<wp:comment_author><![CDATA[ran]]></wp:comment_author>
			<wp:comment_author_email>awerwer@bwer.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-11-19 13:10:16</wp:comment_date>
			<wp:comment_date_gmt>2007-11-19 13:10:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great work man!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Minimizing and Maximizing Windows Using PInvoke</title>
		<link>http://improve.dk/minimizing-and-maximizing-windows/</link>
		<pubDate>Wed, 11 Apr 2007 20:35:11 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/10/minimizing-and-maximizing-windows.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This time I will show how to maximize and minimize windows. I will be using the <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">WindowFinder class</a> that I introduced in the blog <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">Finding specific windows</a>.</p>

<pre lang="csharp">
using System;
using System.Collections.Generic;
using System.Text;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;

namespace Minimizing_and_maximizing_windows
{
	class Program
	{
		// The ShowWindowAsync method alters the windows show state through the nCmdShow parameter.
		// The nCmdShow parameter can have any of the SW values.
		// See http://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/showwindowasync.asp
		// for full documentation.
		[DllImport("user32.dll")]
		public static extern bool ShowWindowAsync(int hWnd, int nCmdShow);

		// An enumeration containing all the possible SW values.
		public enum SW : int
		{
			HIDE = 0,
			SHOWNORMAL = 1,
			SHOWMINIMIZED = 2,
			SHOWMAXIMIZED = 3,
			SHOWNOACTIVATE = 4,
			SHOW = 5,
			MINIMIZE = 6,
			SHOWMINNOACTIVE = 7,
			SHOWNA = 8,
			RESTORE = 9,
			SHOWDEFAULT = 10
		}

		static void Main(string[] args)
		{
			// Introduced in the "Finding specific windows" blog, we use the WindowFinder class to find all Internet Explorer main window instances.
			Finding_specific_windows.WindowFinder wf = new Finding_specific_windows.WindowFinder();
			wf.FindWindows(0, null, new Regex("- (Windows|Microsoft) Internet Explorer"), new Regex("iexplore"), new Finding_specific_windows.WindowFinder.FoundWindowCallback(foundWindow));

			Console.Read();
		}

		static bool foundWindow(int handle)
		{
			// After an Internet Explorer window has been found, randomly either maximize or minimize it.
			if (new Random().Next(0, 2) == 0)
			{
				// Maximize the window.
				ShowWindowAsync(handle, (int)SW.SHOWMAXIMIZED);

				Console.WriteLine("Window maximized");
			}
			else
			{
				// Minimize the window.
				ShowWindowAsync(handle, (int)SW.MINIMIZE);

				Console.WriteLine("Window minimized");
			}

			// Since we return true, this will be done for any and all Internet Explorer instances.
			return true;
		}
	}
}
</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_9_1_2.jpg"><img class="alignnone size-full wp-image-1844" alt="win32_9_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_9_1_2.jpg" width="677" height="340" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1251</wp:post_id>
		<wp:post_date>2007-04-11 22:35:11</wp:post_date>
		<wp:post_date_gmt>2007-04-11 20:35:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>minimizing-and-maximizing-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Minimizing and Maximizing Windows Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Key State Using PInvoke</title>
		<link>http://improve.dk/getting-key-state/</link>
		<pubDate>Wed, 11 Apr 2007 18:46:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/11/getting-key-state.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Here's an example of how to retrieve the state of any keyboard key.</p>

<pre lang="csharp">using System;
using System.Runtime.InteropServices;

namespace Getting_key_state
{
	class Program
	{
		// The GetAsyncKeyState takes a virtual key code as the nVirtKey parameter. It then checks on the state of
		// this key (down/up). The return code is either zero for up or any non-zero value for pressed,
		// thus it's easiest to convert the result to a boolean and use that result.
		[DllImport("user32.dll")]
		public static extern short GetAsyncKeyState(int nVirtKey);

		// These are all the possible values in the VK enumeration. It covers most of the special buttons on a keyboard.
		// See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/WindowsUserInterface/UserInput/VirtualKeyCodes.asp
		// for full documentation.
		public enum VK : int
		{
			NUMPAD7 = 0x67,
			NUMPAD8 = 0x68,
			NUMPAD9 = 0x69,
			MULTIPLY = 0x6A,
			ADD = 0x6B,
			SEPARATOR = 0x6C,
			SUBTRACT = 0x6D,
			DECIMAL = 0x6E,
			DIVIDE = 0x6F,
			F1 = 0x70,
			F2 = 0x71,
			F3 = 0x72,
			F4 = 0x73,
			F5 = 0x74,
			F6 = 0x75,
			F7 = 0x76,
			F8 = 0x77,
			F9 = 0x78,
			F10 = 0x79,
			F11 = 0x7A,
			F12 = 0x7B,
			NUMLOCK = 0x90,
			SCROLL = 0x91,
			LSHIFT = 0xA0,
			RSHIFT = 0xA1,
			LCONTROL = 0xA2,
			RCONTROL = 0xA3,
			LMENU = 0xA4,
			RMENU = 0xA5,
			BACK = 0x08,
			TAB = 0x09,
			RETURN = 0x0D,
			SHIFT = 0x10,
			CONTROL = 0x11,
			MENU = 0x12,
			PAUSE = 0x13,
			CAPITAL = 0x14,
			ESCAPE = 0x1B,
			SPACE = 0x20,
			END = 0x23,
			HOME = 0x24,
			LEFT = 0x25,
			UP = 0x26,
			RIGHT = 0x27,
			DOWN = 0x28,
			PRINT = 0x2A,
			SNAPSHOT = 0x2C,
			INSERT = 0x2D,
			DELETE = 0x2E,
			LWIN = 0x5B,
			RWIN = 0x5C,
			NUMPAD0 = 0x60,
			NUMPAD1 = 0x61,
			NUMPAD2 = 0x62,
			NUMPAD3 = 0x63,
			NUMPAD4 = 0x64,
			NUMPAD5 = 0x65,
			NUMPAD6 = 0x66,
			A = 0x41,
			B = 0x42,
			C = 0x43,
			D = 0x44,
			E = 0x45,
			F = 0x46,
			G = 0x47,
			H = 0x48,
			I = 0x49,
			J = 0x4A,
			K = 0x4B,
			L = 0x4C,
			M = 0x4D,
			N = 0x4E,
			O = 0x4F,
			P = 0x50,
			Q = 0x51,
			R = 0x52,
			S = 0x53,
			T = 0x54,
			U = 0x55,
			V = 0x56,
			W = 0x57,
			X = 0x58,
			Y = 0x59,
			Z = 0x5A
		}

		static void Main(string[] args)
		{
			// We'll call GetAsyncKeyState passing in the A keycode as a parameter.
			Console.WriteLine(Convert.ToBoolean(GetAsyncKeyState((int)VK.A)));

			// And then we'll pass the shift keycode as a control check.
			Console.WriteLine(Convert.ToBoolean(GetAsyncKeyState((int)VK.SHIFT)));

			Console.ReadLine();
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_10_1_2.jpg"><img class="alignnone size-full wp-image-1842" alt="win32_10_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_10_1_2.jpg" width="620" height="311" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1252</wp:post_id>
		<wp:post_date>2007-04-11 18:46:21</wp:post_date>
		<wp:post_date_gmt>2007-04-11 18:46:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-key-state</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Getting Key State Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Activating Windows Using PInvoke</title>
		<link>http://improve.dk/activating-windows/</link>
		<pubDate>Thu, 12 Apr 2007 19:08:46 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/12/activating-windows.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Now we'll see how to activate windows and sending them to the foreground. I will be using the <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">WindowFinder class</a> that I introduced in the blog <a href="http://www.improve.dk/blog/2007/04/07/finding-specific-windows">Finding specific windows</a>.</p>

<pre lang="csharp">
using System;
using System.Runtime.InteropServices;
using System.Text.RegularExpressions;

namespace Activating_windows
{
	class Program
	{
		// This enumeration holds all the possible values that can be passed onto the ShowWindow function.
		public enum SW : int
		{
			HIDE = 0,
			SHOWNORMAL = 1,
			SHOWMINIMIZED = 2,
			SHOWMAXIMIZED = 3,
			SHOWNOACTIVATE = 4,
			SHOW = 5,
			MINIMIZE = 6,
			SHOWMINNOACTIVE = 7,
			SHOWNA = 8,
			RESTORE = 9,
			SHOWDEFAULT = 10
		}

		// The SetForegroundWindow will activate the window, setting the window thread to the foreground thread, as
		// well as activating keyboard input for the specified window.
		[DllImport("user32.dll")]
		public static extern long SetForegroundWindow(int hWnd);

		// The ShowWindow function can do the same as SetForegroundWindow, but it gives much greater control
		// over what happens, by customizing the parameters sent through the cmd parameter.
		[DllImport("user32.dll")]
		public static extern bool ShowWindow(int hWnd, int cmd);

		static void Main(string[] args)
		{
			// Introduced in the "Finding specific windows" blog, we use the WindowFinder class to find all Internet Explorer main window instances.
			Finding_specific_windows.WindowFinder wf = new Finding_specific_windows.WindowFinder();
			wf.FindWindows(0, null, new Regex("- (Windows|Microsoft) Internet Explorer"), new Regex("iexplore"), new Finding_specific_windows.WindowFinder.FoundWindowCallback(foundWindow));

			Console.Read();
		}

		static bool foundWindow(int handle)
		{
			// We'll activate the window by calling the SetForegroundWindow function, passing in the handle to the window.
			SetForegroundWindow(handle);

			// Calling the ShowWindow function with the SHOWNA parameter will put the window in the foreground,
			// but it won't be activated.
			ShowWindow(handle, (int)SW.SHOWNA);

			Console.WriteLine("Window activated.");

			return false;
		}
	}
}
</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_11_1_2.jpg"><img class="alignnone size-full wp-image-1839" alt="win32_11_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_11_1_2.jpg" width="620" height="311" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1253</wp:post_id>
		<wp:post_date>2007-04-12 19:08:46</wp:post_date>
		<wp:post_date_gmt>2007-04-12 19:08:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>activating-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Activating Windows Using PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Animating Windows Using PInvoke</title>
		<link>http://improve.dk/animating-windows/</link>
		<pubDate>Fri, 13 Apr 2007 00:20:53 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/13/animating-windows.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Let's be a bit more graphic. This time I'll show you how to use the Windows API to make your forms fade in/out, slide in from the side or do various other animations. For this example we'll have to use a Windows Forms project as we have to utilize a Form object in the example.</p>

<pre lang="csharp">using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Runtime.InteropServices;

namespace Animating_windows
{
	public partial class Form1 : Form
	{
		// The possible AW flags for use with the AnimateWindow function.
		public enum AW : int
		{
			SLIDE = 262144,
			ACTIVATE = 131072,
			BLEND = 524288,
			HIDE = 65536,
			CENTER = 16,
			HOR_POSITIVE = 1,
			HOR_NEGATIVE = 2,
			VER_POSITIVE = 4,
			VER_NEGATIVE = 8
		}

		// The AnimateWindow function enables you to produce special effects when showing or hiding windows. The hWnd parameter
		// is the handle to the window - note that this window HAS to be in the same thread as the thread calling the AnimateWindow
		// function - thus the windows project so we have a Form to experiment with. The time flag is the duration of the
		// animation, and finally the flags parameter sets the type of animation to perform.
		// See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/animatewindow.asp
		// for full documentation.
		[DllImport("user32.dll")]
		public static extern bool AnimateWindow(IntPtr hWnd, int time, int flags);

		public Form1()
		{
			InitializeComponent();
		}

		private void Form1_Load(object sender, EventArgs e)
		{
			// Fade in the form over a period of 3 seconds.
			AnimateWindow(this.Handle, 3000, (int)AW.BLEND);

			// Hide the form so we can perform the next animation.
			this.Hide();

			// Make the window expand outward.
			AnimateWindow(this.Handle, 3000, (int)AW.CENTER);

			// And collapse inward...
			AnimateWindow(this.Handle, 3000, (int)AW.CENTER | (int)AW.HIDE);

			// Let's slide in the form from the left side to the right.
			AnimateWindow(this.Handle, 3000, (int)AW.SLIDE | (int)AW.HOR_POSITIVE);
		}
	}
}</pre>

<p>And the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_12_1_2.jpg"><img class="alignnone size-full wp-image-1834" alt="win32_12_1_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_12_1_2.jpg" width="300" height="300" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_12_2_2.jpg"><img class="alignnone size-full wp-image-1835" alt="win32_12_2_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_12_2_2.jpg" width="300" height="300" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/04/win32_12_3_2.jpg"><img class="alignnone size-full wp-image-1837" alt="win32_12_3_2" src="http://improve.dk/wp-content/uploads/2007/04/win32_12_3_2.jpg" width="270" height="300" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1254</wp:post_id>
		<wp:post_date>2007-04-13 00:20:53</wp:post_date>
		<wp:post_date_gmt>2007-04-13 00:20:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>animating-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Animating Windows PInvoke]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cascading Windows Using PInvoke</title>
		<link>http://improve.dk/cascading-windows/</link>
		<pubDate>Sat, 14 Apr 2007 00:33:33 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/04/14/cascading-windows.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In Photoshop we often work with multiple windows open. They can be cascaded to more easily be able to view the different windows and tell them apart. There's an API function that does the same to any windows you specify, you can even define the rectangle where they should be cascaded within.</p>

<pre lang="csharp">
using System;
using System.Runtime.InteropServices;
using System.Drawing;
using System.Collections;

namespace Cascading_Windows
{
	class Program
	{
		// The CascadeWindows function cascades the specified child windows of the specified parent window. It can be used to
		// cascade all windows (as in this example) or just the child windows of a specific window by passing in a handle to that
		// window. You can also define the rectangle wherein they should be cascaded.
		// See http://msdn.microsoft.com/library/default.asp?url=/library/en-us/winui/winui/windowsuserinterface/windowing/windows/windowreference/windowfunctions/animatewindow.asp
		// for full documentation.
		[DllImport("user32.dll")]
		public static extern int CascadeWindows(int hWnd, int wHow, ref Rectangle lpRect, int cKids, ref ArrayList lpKids);

		static void Main(string[] args)
		{
			// As the function expects references to both a Rectangle and an ArrayList, we'll have to hack a couple of null values
			// as we can't pass null into the function.
			Rectangle nilRect = Rectangle.Empty;
			ArrayList nilList = null;

			// Cascade all windows that are children of the Desktop (handle = 0).
			CascadeWindows(0, 0, ref nilRect, 0, ref nilList);

			Console.Read();
		}
	}
}
</pre>

<p>And the result:</p>

<p><i>Having three monitors generates quite a large screenshot so I'll leave this one up for you to try / your imagination :)</i></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1255</wp:post_id>
		<wp:post_date>2007-04-14 00:33:33</wp:post_date>
		<wp:post_date_gmt>2007-04-14 00:33:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cascading-windows</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Cascading Windows Win32]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creating a .NET Bootstrapped Installer Using NSIS</title>
		<link>http://improve.dk/creating-a-dotnet-bootstrapped-installer-using-nsis/</link>
		<pubDate>Sun, 10 Jun 2007 21:32:44 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/06/10/creating-a-net-bootstrapped-installer-using-nsis.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>If you have ever deployed .NET windows applications, you have without doubt tried the Visual Studio Install project type. The Install project will create .MSI install applications for you, they're great for basic installations, but nothing more than that. The .NET bootstrapper is quite lacking, at times it won't be able to find the framework download file as it's changed it's location, at other times it's not able to download it. And finally, if it does determine that the user needs the framework, it's shown in an ugly uncustomizable GUI.</p>

<p>I've looked for an alternative, I'd prefer not to pay for using some of the well established installers such as Wise, InstallShield, ActiveInstall and so forth. What I found is a remnant of WinAmp, the <a href="http://nsis.sourceforge.net/Main_Page">NSIS (Nullsoft Scriptable Install System) project</a>.</p>

<p>NSIS is both free and open source and it's very much community driven. There are a plethora of plugins available for all sorts of different tasks, and of course you can write your own plugins for special needs.</p>

<p>I won't delve too deeply into why you should choose NSIS over any of the competitors, instead I'll show you a step by step guide of how to create an NSIS installer that bootstraps the .NET 2.0 framework as well as running custom install and uninstall actions in .NET code.</p>

<p>You will need two tools. The first (and actually the only required tool) is NSIS itself: <a href="http://nsis.sourceforge.net/Main_Page">Download NSIS from nsis.sourceforge.net</a>. While you can edit the install script in any text editor, using an IDE like HM NIS Edit (HMNE) makes it a whole lot easier: <a href="http://hmne.sourceforge.net/">Download HMNE from hmne.sourceforge.net</a>.

<p>Let's first create the simple application that we will be installing. It doesn't really matter what it is, in this example I've made a single Windows Forms Application:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_1_2.jpg"><img class="alignnone size-full wp-image-1880" alt="nsis_1_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_1_2.jpg" width="768" height="445" /></a></div></div>

<p>Now let's start up HMNE. Click File -&gt; New Script From Wizard. Fill in the relevant application date on the first page.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_2_2.jpg"><img class="alignnone size-full wp-image-1881" alt="nsis_2_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_2_2.jpg" width="505" height="381" /></a></div></div>

<p>You may choose a custom icon for the installer, the default icon is an NSIS standard icon. You can also choose the resulting installation files name as well as it's output location. If no location is specified, it will be outputted to the location that contains our script file. A great feature of NSIS is that it's got localized versions for a lot of different languages built in, simply select the languages that the user should be able to select and the installer will automatically be localized. You can choose a couple of different GUIs, I personally prefer the Modern one. As for compression, in my tests the LZMA compression works the best, though compression time and CPU usage might be a factor for very large projects.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_3_2.jpg"><img class="alignnone size-full wp-image-1882" alt="nsis_3_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_3_2.jpg" width="505" height="381" /></a></div></div>

<p>Now you specify where you want your application to be installed, notice the general use of variables like $PROGRAMFILES, $NSISDIR, $INSTDIR and so forth. You can also optionally choose a license file that the user must accept to continue the installation.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_4_2.jpg"><img class="alignnone size-full wp-image-1883" alt="nsis_4_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_4_2.jpg" width="505" height="381" /></a></div></div>

<p>Now you can setup the actual files that will be installed as part of the project. You cannot select a whole project output as you can in the Visual Studio Install project, instead you must manually select the files that should be installed, usually from the Debug/Release directories of your project(s).</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_5_2.jpg"><img class="alignnone size-full wp-image-1884" alt="nsis_5_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_5_2.jpg" width="505" height="381" /></a></div></div>

<p>Optionally you can select which links you want to be placed in the application program group in the start menu, if such one should be created at all.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_6_2.jpg"><img class="alignnone size-full wp-image-1886" alt="nsis_6_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_6_2.jpg" width="505" height="381" /></a></div></div>

<p>When the installation is done, the user can choose to view the Readme file and/or start the application - that is, if you specify an application and/or a readme file.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_7_2.jpg"><img class="alignnone size-full wp-image-1887" alt="nsis_7_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_7_2.jpg" width="505" height="381" /></a></div></div>

<p>Finally we can choose to include an uninstaller, as well as specifying our custom uninstallation confirmation and report texts. If no custom text is specified, the default texts will be used.</p>

<p>When the wizard finishes, make sure to click "Save script" and "Convert file paths to relative paths".</p>

<p>Finally the install script is made and ready to run. Press Ctrl+9 to compile the script. If everything succeeds, you'll see the Setup.exe file in the same directory as the one where you saved the install script. I will not be going over the various commands and settings that are being set in the script, for that I strongly recommend the excellent built in help documents, as well as the <a href="http://forums.winamp.com/forumdisplay.php?s=&amp;forumid=65">WinAmp NSIS forums</a>. Instead I'll focus on how to bootstrap the .NET Framework 2.0 and how to run custom install and uninstall actions.</p>

<p>Add these three lines to the top of your nsi file, they include some functions that we will need:</p>

<pre lang="nsis">; Script generated by the HM NIS Edit Script Wizard.
!include WordFunc.nsh
!insertmacro VersionCompare
!include LogicLib.nsh</pre>

<p>Add this line right above the .onInit function, it makes a variable (untyped) that'll contain a Yes/No value, depending on whether we need to install the .NET Framework or not.</p>

<pre lang="nsis">Var InstallDotNET</pre>

<p>Now modify the .onInit function so it matches the below, as well as adding the GetDotNETVersion function. First we ask the user what language they want to continue in (!insertmacro MUI_LANGDLL_DISPLAY). After that we initialize the InstallDotNET variable to "No". Depending on the result of the GetDotNETVersion we tell the user that we need to install the framework, either because the user does not have the framework at all, or because the version is less than 2.0. We won't actually install the framework yet, we'll just remember whether we have to or not.</p>

<pre lang="nsis">Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY

  ; Check .NET version
  StrCpy $InstallDotNET "No"
  Call GetDotNETVersion
  Pop $0

  ${If} $0 == "not found"
        StrCpy $InstallDotNET "Yes"
  	MessageBox MB_OK|MB_ICONINFORMATION "${PRODUCT_NAME} requires that the .NET Framework 2.0 is installed. The .NET Framework will be downloaded and installed automatically during installation of ${PRODUCT_NAME}."
   	Return
  ${EndIf}

  StrCpy $0 $0 "" 1 # skip "v"

  ${VersionCompare} $0 "2.0" $1
  ${If} $1 == 2
        StrCpy $InstallDotNET "Yes"
  	MessageBox MB_OK|MB_ICONINFORMATION "${PRODUCT_NAME} requires that the .NET Framework 2.0 is installed. The .NET Framework will be downloaded and installed automatically during installation of ${PRODUCT_NAME}."
   	Return
  ${EndIf}
FunctionEnd

Function GetDotNETVersion
	Push $0
	Push $1

	System::Call "mscoree::GetCORVersion(w .r0, i ${NSIS_MAX_STRLEN}, *i) i .r1"
	StrCmp $1 "error" 0 +2
	StrCpy $0 "not found"

	Pop $1
	Exch $0
FunctionEnd</pre>

<p>Before we continue, you'll have to <a href="http://nsis.sourceforge.net/Inetc_plug-in">install the InetC plugin</a>.</p>

<p>Now find the "MainSection" section (depending on what you called it in the wizard).</p>

<p>Modify the section so it looks like the below. Your file names and amount may vary, the primary part of our concern is the first part. It will test whether the $InstallDotNET variable implies that we have to install the framework. If it does, it'll hide the usual GUI elements of the installer and start the download of the .NET Framework from any URL you specify, this could be the official download URL or a location you host yourself. If the user cancels the download we'll delete the half-finished file and abort. Otherwise we'll execute the dotnetfx.exe file and wait for it to complete (hence we'll now have the .NET Framework 2.0). After having installed the framework we delete the dotnetfx.exe file again. Finally we show the GUI again.</p>

<pre lang="nsis">Section "MainSection" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer

  ; Get .NET if required
  ${If} $InstallDotNET == "Yes"
     SetDetailsView hide
     inetc::get /caption "Downloading .NET Framework 2.0" /canceltext "Cancel" "http://www.url_of_the_dotnetfx.exe_file" "$INSTDIRdotnetfx.exe" /end
     Pop $1

     ${If} $1 != "OK"
           Delete "$INSTDIRdotnetfx.exe"
           Abort "Installation cancelled."
     ${EndIf}

     ExecWait "$INSTDIRdotnetfx.exe"
     Delete "$INSTDIRdotnetfx.exe"

     SetDetailsView show
  ${EndIf} 

  File "InstallbinDebugInstall.exe"

  File "InstallbinDebugUninstall.exe"

  File "MyApplicationbinDebugMyApplication.exe"
  CreateDirectory "$SMPROGRAMSMy application"
  CreateShortCut "$SMPROGRAMSMy applicationMy application.lnk" "$INSTDIRMyApplication.exe"
  CreateShortCut "$DESKTOPMy application.lnk" "$INSTDIRMyApplication.exe"
SectionEnd</pre>

<p>Now comes the part where I'll introduce our custom .NET install and uninstall actions. Create two new Console Application projects in the solution called Uninstall and Install, like the following:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_9_2.jpg"><img class="alignnone size-full wp-image-1888" alt="nsis_9_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_9_2.jpg" width="866" height="504" /></a></div></div>

<p>Add the below function to your code, it'll run the Install.exe file after the installation has successfully completed:</p>

<pre lang="nsis">Function .onInstSuccess
         ExecWait "$InstDirInstall.exe"
FunctionEnd</pre>

<p>Locate the "Section Uninstall" part and add the following line as the very first:</p>

<pre lang="nsis">ExecWait "$InstDirUninstall.exe"</pre>

<p>Make sure to add both Install.exe and Uninstall.exe to the list of files that will be installed, in the Main Section. It will run the Uninstall.exe application before anything else, and wait for it to finish before continuing. After it's done we'll delete all the installed files, including the Install and Uninstall.exe applications - remember to add those to file deletions manually, following the syntax of the other file deletions.</p>

<p>Now press Ctrl+9 to build the installer, and look at it run in all of its awesomeness:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_10_2.jpg"><img class="alignnone size-full wp-image-1889" alt="nsis_10_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_10_2.jpg" width="800" height="120" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/nsis_11_2.jpg"><img class="alignnone size-full wp-image-1890" alt="nsis_11_2" src="http://improve.dk/wp-content/uploads/2007/06/nsis_11_2.jpg" width="504" height="386" /></a></div></div>

<p>After having downloaded the .NET Framework 2.0, it'll start the .NET installer and run it through as usual, the installation will continue as soon as the .NET installer finishes. There is currently no check for whether the user cancels the .NET installation midways or if it fails. A simple check could be made right afterwards by simple calling the GetDotNETVersion function again like we did just before, if it fails, the user hasn't installed .NET for some unknown reason and we'll have to abort.</p>

<p>You can see <a href="http://www.improve.dk/downloads/InstallScript.txt">my complete install script here</a>. Download and rename to *.nsi to compile it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1256</wp:post_id>
		<wp:post_date>2007-06-10 21:32:44</wp:post_date>
		<wp:post_date_gmt>2007-06-10 21:32:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-a-dotnet-bootstrapped-installer-using-nsis</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="installer"><![CDATA[Installer]]></category>
		<category domain="post_tag" nicename="nsis"><![CDATA[NSIS]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Creating a .NET Bootstrapped Installer Using NSIS]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[creating-a-net-bootstrapped-installer-using-nsis]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>646</wp:comment_id>
			<wp:comment_author><![CDATA[tt]]></wp:comment_author>
			<wp:comment_author_email>tt@thetechtray.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.thetechtray.net/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-16 09:38:09</wp:comment_date>
			<wp:comment_date_gmt>2007-06-16 09:38:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the tutorial, it worked great! Currently using it for the install of my latest project :)<br /><br />Check it out - <a rel="nofollow external" href="http://www.thetechtray.net/2007/06/13/clipmon-10/" title="http://www.thetechtray.net/2007/06/13/clipmon-10/" rel="nofollow">http://www.thetechtray.net/2007/06/13/clipmon-10/</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>647</wp:comment_id>
			<wp:comment_author><![CDATA[Zophar]]></wp:comment_author>
			<wp:comment_author_email>zophar73742@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-06-27 04:34:59</wp:comment_date>
			<wp:comment_date_gmt>2007-06-27 04:34:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great Tutorial ... Helped solve my .NET installation problems.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>648</wp:comment_id>
			<wp:comment_author><![CDATA[Webmaster]]></wp:comment_author>
			<wp:comment_author_email>andrei@mikrukov.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.websitetoolboxpro.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-01 04:50:36</wp:comment_date>
			<wp:comment_date_gmt>2007-07-01 04:50:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for a great script! A real time saver.<br /><br />How could we change it to check .NET 3.0 installed, so that the user doesn't have to download .NET 2.0 if he has .NET 3.0 installed?<br /><br />Thank you,<br /><br />Andrei]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>649</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-01 10:58:30</wp:comment_date>
			<wp:comment_date_gmt>2007-07-01 10:58:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Andrei<br /><br />Although I haven't tested it, I'd suppose you could add a third version check like this:<br /><br />  ${VersionCompare} $0 &quot;3.0&quot; $1<br />  ${If} $1 == 2<br />        StrCpy $InstallDotNET &quot;No&quot;<br />        Return<br />  ${EndIf}<br /><br />And then nest the other version checks inside this one in the case 3.0 isn't installed.<br /><br />Let me know if you get it working, I'd like to add it to the article as well :)<br /><br />Thanks,<br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>650</wp:comment_id>
			<wp:comment_author><![CDATA[Webmaster]]></wp:comment_author>
			<wp:comment_author_email>andrei@mikrukov.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.websitetoolboxpro.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-02 00:49:01</wp:comment_date>
			<wp:comment_date_gmt>2007-07-02 00:49:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you, Mark.<br /><br />I don't have Vista installed on my computer, therefore I can't test your code immediately. <br /><br />To all: If somebody tests this 3.0 check, please, post.<br /><br />Thank you,<br /><br />Andrei]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>651</wp:comment_id>
			<wp:comment_author><![CDATA[Webmaster]]></wp:comment_author>
			<wp:comment_author_email>andrei@mikrukov.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.websitetoolboxpro.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-05 12:37:28</wp:comment_date>
			<wp:comment_date_gmt>2007-07-05 12:37:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello Mark,<br /><br />I found out a better way to check .NET 2.0 or 3.0 installation - that is to see for a certain registry value:<br /><br />  ; Check .NET version<br />  ReadRegDWORD $0 HKLM 'SOFTWAREMicrosoftNET Framework SetupNDPv2.0.50727' Install<br />    ${If} $0 == ''<br />        StrCpy $InstallDotNET &quot;Yes&quot;<br />  	MessageBox MB_OK|MB_ICONINFORMATION &quot;${PRODUCT_NAME} requires that the .NET Framework 2.0 is installed. The .NET Framework will be downloaded and installed automatically during installation of ${PRODUCT_NAME}.&quot;<br />   	Return<br />  ${EndIf}<br /><br />We check for .NET 2.0 installation in registry. If .NET 3.0 is installed, the .NET 2.0 record will be there as well.<br /><br />This should work better than mscoree::GetCORVersion check, because GetCORVersion returns the version number of the CLR that is running in the current process.<br /><br />Credits: NSIS Quick Start article by Jared James Sullivan<br />(<a rel="nofollow external" href="http://www.codeproject.com/useritems/NSIS.asp?msg=2107949" title="http://www.codeproject.com/useritems/NSIS.asp?msg=2107949" rel="nofollow">www.codeproject.com/useritems/NSIS.asp?msg=2107949</a>)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>652</wp:comment_id>
			<wp:comment_author><![CDATA[zamnut6]]></wp:comment_author>
			<wp:comment_author_email>zamnut@aereonetworks.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-07-11 01:33:14</wp:comment_date>
			<wp:comment_date_gmt>2007-07-11 01:33:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice tutorial.  I am a new user to NSIS and ran into a small problem.  The installer needed a plugin to recognize inetc::get.  I got the plugin at:<br /><br /><a rel="nofollow external" href="http://nsis.sourceforge.net/Inetc_plug-in" title="http://nsis.sourceforge.net/Inetc_plug-in" rel="nofollow">http://nsis.sourceforge.net/Inetc_plug-in</a> <br /><br />and put the inetc.dll file in:<br /><br />C:Program FilesNSISPlugins<br /><br />I am sure that most readers had done this long ago but I put in this detail in case it might help other new users like me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>653</wp:comment_id>
			<wp:comment_author><![CDATA[Indika Perera]]></wp:comment_author>
			<wp:comment_author_email>pilperera@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-10-25 18:32:45</wp:comment_date>
			<wp:comment_date_gmt>2007-10-25 18:32:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Works Great!! Thanks Mark!!<br /><br />zamnut6's advise too was valuable...<br /><br />:-)<br />Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>654</wp:comment_id>
			<wp:comment_author><![CDATA[Ramesh Vagh]]></wp:comment_author>
			<wp:comment_author_email>ramesh@promactinfo.co.in</wp:comment_author_email>
			<wp:comment_author_url>http://www.promactinfo.co.in/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-12-21 12:52:12</wp:comment_date>
			<wp:comment_date_gmt>2007-12-21 12:52:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello...!<br /><br />        Can any one help me to call web service with parameters and from the NSIS installer and get response from the web service.<br /><br />        based on the response i want to continue installation and also want to check at the end of the installation over the web service.<br /><br />         Or<br />          <br />         If any one can tell me to use .Net dll functions in the NSIS script.<br /><br />         Or<br /><br />         Any way to get my gole without opening any explorer, i should be able to pass parameters to the web service or .Net dll and get response from that.<br /><br />        if anyone can give me the solution then i'll be thankfull.<br /><br />Ramesh<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>655</wp:comment_id>
			<wp:comment_author><![CDATA[SLK]]></wp:comment_author>
			<wp:comment_author_email>stephen@endicia.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-01-03 03:51:08</wp:comment_date>
			<wp:comment_date_gmt>2008-01-03 03:51:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This solution looks great :-&gt;  But I have a few questions...<br /><br />Could you explain the purpose of the console apps (install.exe and uninstall.exe)?  You wrote:<br />&quot;Make sure to add both Install.exe and Uninstall.exe to the list of files that will be installed, in the Main Section. It will run the Uninstall.exe application before anything else, and wait for it to finish before continuing. After it's done we'll delete all the installed files, including the Install and Uninstall.exe applications - remember to add those to file deletions manually, following the syntax of the other file deletions.&quot;<br /><br />I'm confused because I don't see those lines in the Main Section of your script.<br /><br />Also, the .NET Framework installer (dotnetfx.exe) seems to execute with its GUI and not silently.  Is there anyway to make it silent?<br /><br />And finally, since Microsoft Installer 3.0 is a prerequisite for the .NET Framework 2.0 installer, can you recommend a method for checking for and installing it?  This only seems to be an issue on Windows 2000 machines.<br /><br />Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>656</wp:comment_id>
			<wp:comment_author><![CDATA[Dhaval Bhatt]]></wp:comment_author>
			<wp:comment_author_email>dhaval.bhatt@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-01-12 10:57:39</wp:comment_date>
			<wp:comment_date_gmt>2008-01-12 10:57:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ramesh <br />This is Not Possible from NSIS. <br />Althouh you can do it by using Commandline Programe<br />(Which you had apply in your Service already)<br />JA ja ja ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>657</wp:comment_id>
			<wp:comment_author><![CDATA[zee]]></wp:comment_author>
			<wp:comment_author_email>zaidsir@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-18 16:02:01</wp:comment_date>
			<wp:comment_date_gmt>2008-02-18 16:02:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the great tutorial it was a great help for me :)<br />i have a question.<br />is there a way to check the setup folder for dotnetfx.exe first and if it does not exist then jump to the download process??<br /><br />thank you very much]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>658</wp:comment_id>
			<wp:comment_author><![CDATA[Anand]]></wp:comment_author>
			<wp:comment_author_email>p.anand.1983@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-26 12:39:56</wp:comment_date>
			<wp:comment_date_gmt>2008-03-26 12:39:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,<br /><br />How to create a Application Icon...I have created the setup with Icon...after the application installed ...my appication having Windows default icon for shorcuts....<br />pls help]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>659</wp:comment_id>
			<wp:comment_author><![CDATA[Karl]]></wp:comment_author>
			<wp:comment_author_email>karl.sjogren@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.crazybeavers.se/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-18 10:59:10</wp:comment_date>
			<wp:comment_date_gmt>2008-04-18 10:59:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article! I love NSIS but when I switched to .Net programming I didn't find any easy ways to check if the framework was installed, now I can finally toss out the Setup Project crap from Microsoft!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>660</wp:comment_id>
			<wp:comment_author><![CDATA[Geetha]]></wp:comment_author>
			<wp:comment_author_email>Geetha.ys@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-28 04:58:04</wp:comment_date>
			<wp:comment_date_gmt>2008-07-28 04:58:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, plz let me knw sooooon how to create virtual directory usng NSIS in .Net Applications]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>661</wp:comment_id>
			<wp:comment_author><![CDATA[shraddha]]></wp:comment_author>
			<wp:comment_author_email>shraddha1904@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-07-31 09:21:04</wp:comment_date>
			<wp:comment_date_gmt>2008-07-31 09:21:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi...thanks for these posts...it helped me alot as a beginner in NSIS. I am not able to solve a small problem. my .nsi script calls a powershell script. i want that my nsi script should call this script from the same folder where the installer exe is placed. i dont want to hard code the path for my ps1 script. please can anyone give mea command which can fetch my ps1 file from the same path where installer is placed. <br />thanks in advance :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>662</wp:comment_id>
			<wp:comment_author><![CDATA[Andrei]]></wp:comment_author>
			<wp:comment_author_email>yoscanta@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-06-19 09:53:55</wp:comment_date>
			<wp:comment_date_gmt>2009-06-19 09:53:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, <br />Nice tutorial!<br />I need something more than this. I want to include .net fr in my project, not to download it on intallation. My setup will be x MB + 25 MB (.net fr).<br />How to do that ?<br /><br />Andrew]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>663</wp:comment_id>
			<wp:comment_author><![CDATA[Alexey]]></wp:comment_author>
			<wp:comment_author_email>cherniginalex@mail.ru</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-23 11:03:26</wp:comment_date>
			<wp:comment_date_gmt>2009-07-23 11:03:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi! Thanks for the great explanations, but I have a little problem - GUI with downloading status is not appeared though I don't have &quot;silent&quot; mode... What can I do in order to see this GUI?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>664</wp:comment_id>
			<wp:comment_author><![CDATA[Diego Sanchez]]></wp:comment_author>
			<wp:comment_author_email>diego.sanches@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.linkedin.com/in/ingdiegosanchez</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-21 14:15:19</wp:comment_date>
			<wp:comment_date_gmt>2009-09-21 14:15:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've read your tutorial but when I execute the next instruction- I didn't get any result.<br /><br />The instruction is 'ExecWait &quot;$INSTDIRdotnetfx.exe&quot;'.<br /><br />After call this function We should view .NET install page.  But I didn't see that.<br /><br />Why didn't ExecWait show nothing?<br /><br />Thanks<br />Good gay ahead!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>665</wp:comment_id>
			<wp:comment_author><![CDATA[Jamie]]></wp:comment_author>
			<wp:comment_author_email>jhunt@giggig.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-09 18:22:37</wp:comment_date>
			<wp:comment_date_gmt>2010-03-09 18:22:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How could I modify this for .NET 4.0 RC<br /><br />I have tried changing<br /> ${VersionCompare} $0 &quot;4&quot; $1<br /> ${VersionCompare} $0 &quot;4.0&quot; $1 <br /><br />etc but still asks me on my development machine to install .net 4 (which is installed)<br /><br />Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>666</wp:comment_id>
			<wp:comment_author><![CDATA[Batcha]]></wp:comment_author>
			<wp:comment_author_email>batcha63@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-28 05:29:10</wp:comment_date>
			<wp:comment_date_gmt>2010-03-28 05:29:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oh what a nice tutorial! But still i could not use it for my app.<br />My app.pre requirements are Windows installer 3.1,.NetFramework 3.5 and cards.dll. And i dont want users download them from net instead i want to include them in my setup how do you do that?<br />thanks in advance :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>667</wp:comment_id>
			<wp:comment_author><![CDATA[Aaron]]></wp:comment_author>
			<wp:comment_author_email>Azzano62@yahoo.com.au</wp:comment_author_email>
			<wp:comment_author_url>http://lightning-servers.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-29 04:22:05</wp:comment_date>
			<wp:comment_date_gmt>2010-03-29 04:22:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks so much for this script its helped heaps!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>668</wp:comment_id>
			<wp:comment_author><![CDATA[Skynet]]></wp:comment_author>
			<wp:comment_author_email>master.skynet@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-09-28 07:35:58</wp:comment_date>
			<wp:comment_date_gmt>2010-09-28 07:35:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello.<br />At the begining I must admit - this is great an article, but I have one question. What exactly should contain Install.exe and Uninstall.exe Console Application? This is one problem which I have with this topic. I will be very gratefull if someone could explain this for me.<br />Cheers.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>677</wp:comment_id>
			<wp:comment_author><![CDATA[Squiffy]]></wp:comment_author>
			<wp:comment_author_email>john@caveofprogramming.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.caveofprogramming.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-12-02 08:22:08</wp:comment_date>
			<wp:comment_date_gmt>2011-12-02 08:22:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For .NET 4, the following seems to work. I've modified earlier contributions, using the registry key specified by Microsoft for .NET 4.<br /><br />Regarding including prerequisites like this in your compiler, I'm not sure but I think the Microsoft licence prevents you from doing so. So you need to upload them to your website somewhere where your installer can download them.<br /><br />Function .onInit<br /><br />  ; Check .NET version<br />  ReadRegDWORD $0 HKLM 'SOFTWAREMicrosoftNET Framework   SetupNDPv4Client' Install<br />  ${If} $0 == ''<br />  StrCpy $InstallDotNET &quot;Yes&quot;<br />  MessageBox MB_OK|MB_ICONINFORMATION &quot;${PRODUCT_NAME} requires that the .NET Framework 4.0 is installed. The .NET Framework will be downloaded and installed automatically during installation of ${PRODUCT_NAME}.&quot;<br />  Return<br />  ${EndIf}<br />  <br />FunctionEnd]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>678</wp:comment_id>
			<wp:comment_author><![CDATA[Rajeev Lochan]]></wp:comment_author>
			<wp:comment_author_email>lochan94@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.smallguru.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-03-12 02:44:43</wp:comment_date>
			<wp:comment_date_gmt>2012-03-12 02:44:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,<br />Thanks a lot for the explanation and code. I was looking for the solution :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>681</wp:comment_id>
			<wp:comment_author><![CDATA[gybseoservice]]></wp:comment_author>
			<wp:comment_author_email>gybseoservice@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ladyvalura.de/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-17 19:43:02</wp:comment_date>
			<wp:comment_date_gmt>2012-04-17 19:43:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i like this post i think this is very informative for all. Here you get free ladyvalura, geldherrin etc.<br /><a href="http://ladyvalura.de/" rel="nofollow">geldherrin</a> | <a href="http://ladyvalura.de/" rel="nofollow">geldsklave</a> | <a href="http://ladyvalura.de/" rel="nofollow">gelddomina</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>682</wp:comment_id>
			<wp:comment_author><![CDATA[matthew]]></wp:comment_author>
			<wp:comment_author_email>xiangzhuyuan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-24 05:11:29</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 05:11:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice  thanks very much]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Zune Causing License Resets?</title>
		<link>http://improve.dk/zune-causing-license-resets/</link>
		<pubDate>Sat, 23 Jun 2007 15:28:48 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/06/23/zune-causing-license-resets.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've had my Vista PC running for quite some months now without problems, as well as Adobe Acrobat Professional and Adobe Photoshop. But not anymore...</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/zuneactivation_1_2.jpg"><img class="alignnone size-full wp-image-1876" alt="zuneactivation_1_2" src="http://improve.dk/wp-content/uploads/2007/06/zuneactivation_1_2.jpg" width="200" height="105" /></a></div></div>

<p>Yesterday I plugged in the Zune that I bought on a trip to the US in january. I got the installer / driver software from zune.net. During the installation the installer requested me to update my Zune firmware, which I did. Everything went smooth.</p>

<p>I then left my PC for some hours to go to work. When I got back I was shown a dialog saying that my hardware configuration had changed and that I needed to reactivate Vista, hmmm. I tried the automatic activation but it said my key was already in use. After calling the automatic activation service phone number I got Vista reactivated, weird stuff.</p>

<p>Then suddenly Adobe Acrobat said that my current license was invalid and that I had to reactivate the software. I had to do this twice as I got the exact same message the next time I started Acrobat:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/zuneactivation_3_2.jpg"><img class="alignnone size-full wp-image-1877" alt="zuneactivation_3_2" src="http://improve.dk/wp-content/uploads/2007/06/zuneactivation_3_2.jpg" width="430" height="187" /></a></div></div>

<p>And now today I just started Photoshop, and Guess what came up:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/06/zuneactivation_2_2.jpg"><img class="alignnone size-full wp-image-1878" alt="zuneactivation_2_2" src="http://improve.dk/wp-content/uploads/2007/06/zuneactivation_2_2.jpg" width="386" height="159" /></a></div></div>

<p>Did me plugging in my Zune cause all of this? I have not made any other hardware changes for months, but how in the world would plugging in an MP3 player cause such a mess?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1257</wp:post_id>
		<wp:post_date>2007-06-23 17:28:48</wp:post_date>
		<wp:post_date_gmt>2007-06-23 15:28:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zune-causing-license-resets</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="zune"><![CDATA[Zune]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JAOO 2007</title>
		<link>http://improve.dk/jaoo-2007/</link>
		<pubDate>Fri, 21 Sep 2007 03:21:36 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/09/21/jaoo-2007.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I will be attending JAOO this year, I'm looking forward to a packed calendar in excitement:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/jaoo_logo_2.jpg"><img class="alignnone size-full wp-image-1904" alt="jaoo_logo_2" src="http://improve.dk/wp-content/uploads/2007/09/jaoo_logo_2.jpg" width="125" height="62" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/jaoo_schedule_2.jpg"><img class="alignnone size-full wp-image-1905" alt="jaoo_schedule_2" src="http://improve.dk/wp-content/uploads/2007/09/jaoo_schedule_2.jpg" width="835" height="768" /></a></div></div>

<p>It's a tough decision, choosing which sessions to fit into the available slots. There are several slots where I'd love to watch multiple sessions.</p>

<p>I look forward to meeting a lot of people, colleagues and friends. Conferences are superb for developing ones network.</p>

<p>I like the multitude of technologies and areas that are covered at JAOO, Java, JavaScript, .NET, virtualization, architecture and so forth. I'd love to see some more DBA related sessions though (especially MSSQL 2008).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1258</wp:post_id>
		<wp:post_date>2007-09-21 03:21:36</wp:post_date>
		<wp:post_date_gmt>2007-09-21 03:21:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jaoo-2007</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="jaoo"><![CDATA[JAOO]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Compiling Java in Visual Studio</title>
		<link>http://improve.dk/compiling-java-in-visual-studio/</link>
		<pubDate>Sat, 29 Sep 2007 00:08:01 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/09/29/compiling-java-in-visual-studio.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I often see my fellow comp. sci. students writing their (relatively) simple Java code in applications like Emacs, Nano or Eclipse. I'm not fond of either application. I much prefer Visual Studios text handling, solution overview, output windows and so forth. What most people don't know is that you can actually extend Visual Studio to a great extent. One way to extend Visual Studio is to write plugins using .NET, but there's a way that is much simpler (albeit also more limited). I will now show how you can make Visual Studio compile and run your Java applications all within Visual Studio itself.</p>

<p>First of all, you need to <a href="http://java.sun.com/javase/downloads/index.jsp">download and install the Java JDK</a>. Basically, you need to be able to call "javac" and "java" from any command prompt - which means you have to setup the environment settings so you have your JDK bin in the PATH variable.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_1_2.jpg"><img class="alignnone size-full wp-image-1893" alt="javac_1_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_1_2.jpg" width="677" height="160" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_2_2.jpg"><img class="alignnone size-full wp-image-1894" alt="javac_2_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_2_2.jpg" width="677" height="160" /></a></div></div>

<p>Create a new Visual Studio project. It really doesn't matter much what type you choose as there is no native Java project types. Choosing J# will not give you any advantages over, say a C# project. In this example I'll use a C# Class Library project.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_3_2.jpg"><img class="alignnone size-full wp-image-1895" alt="javac_3_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_3_2.jpg" width="794" height="560" /></a></div></div>

<p>Start out by deleting the automatically created Class1.cs file. Add a new text file instead, I'll call it MyApplication.java. You can write any standard Java code in the Java files, just like you'd ordinarily do.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_4_2.jpg"><img class="alignnone size-full wp-image-1896" alt="javac_4_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_4_2.jpg" width="813" height="322" /></a></div></div>

<p>One of the really cool features of Visual Studio is that it actually includes Intellisense for a lot of the standard Java classes, so you're not left totally on your own.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_5_2.jpg"><img class="alignnone size-full wp-image-1897" alt="javac_5_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_5_2.jpg" width="821" height="500" /></a></div></div>

<p>Now comes the compilation part. Add a new text file to the project and call it Compile.bat. This will be the bat file that manages the actual compilation and execution of the application afterwards. Leave the file empty for now, we'll enter the code in a short while.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_6_2.jpg"><img class="alignnone size-full wp-image-1898" alt="javac_6_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_6_2.jpg" width="751" height="318" /></a></div></div>

<p>Go to Tools -&gt; External Tools...</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_7_2.jpg"><img class="alignnone size-full wp-image-1899" alt="javac_7_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_7_2.jpg" width="788" height="536" /></a></div></div>

<p>Add a new entry called "Javac", set the command path to your Compile.bat file and make sure the directory is set to the ProjectDir macro path. Check the "Use Output window" checkbox, this ensures the output is output directly into the Visual Studio output window.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_8_2.jpg"><img class="alignnone size-full wp-image-1900" alt="javac_8_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_8_2.jpg" width="461" height="448" /></a></div></div>

<p>Now enter the following into the Compile.bat file:</p>

<pre lang="java">del Output /S /Q
mkdir Output
javac *.java -d Output
cd Output
start java MyApplication</pre>

<p>Modify the MyApplication.java file so it ends with a call to System.in.read(), this ensures the application will stay open after we start it.</p>

<pre lang="java">import java.io.*;

class MyApplication
{
	public static void main(String args[]) throws IOException
	{
		System.out.println("Hello World!");
		System.in.read();
	}
}</pre>

<p>Now simply go to Tools -&gt; Javac and watch your Java application compile and run.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/09/javac_9_2.jpg"><img class="alignnone size-full wp-image-1902" alt="javac_9_2" src="http://improve.dk/wp-content/uploads/2007/09/javac_9_2.jpg" width="894" height="701" /></a></div></div>

<p>You can of course modify the build script in whatever way you wish to support larger applications. You could also use ANT build scripts, unit tests and so forth. To make compiling easier, you can create a key command (Tools -&gt; Options -&gt; Keyboard -&gt; Tools.ExternalCommandX where X is the Javac commands index in the Tools menu) to the Javac command in the Visual Studio settings, I use Ctrl+Shift+J for Java compilation myself.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1259</wp:post_id>
		<wp:post_date>2007-09-29 00:08:01</wp:post_date>
		<wp:post_date_gmt>2007-09-29 00:08:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>compiling-java-in-visual-studio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="visual-studio"><![CDATA[Visual Studio]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Compiling Java in Visual Studio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>683</wp:comment_id>
			<wp:comment_author><![CDATA[jake]]></wp:comment_author>
			<wp:comment_author_email>codeback-n@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-17 19:36:56</wp:comment_date>
			<wp:comment_date_gmt>2011-06-17 19:36:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi i dont know what <br /><br />Compile.bat file and make sure the directory is set to the ProjectDir macro path<br /><br />mean<br /><br />what do i have to put on commnad:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>684</wp:comment_id>
			<wp:comment_author><![CDATA[jake]]></wp:comment_author>
			<wp:comment_author_email>codeback-n@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-18 00:19:50</wp:comment_date>
			<wp:comment_date_gmt>2011-06-18 00:19:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i created java file and try to type <br /><br />but did not show any class for java and no colors<br /><br />and error said &quot;illegal character&quot; stuff<br /><br />i dont understand]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>685</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-18 19:45:54</wp:comment_date>
			<wp:comment_date_gmt>2011-06-18 19:45:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Jake<br />Look at the screenshots and it should be clear where the ProjectDir macro needs to go.<br /><br />Note that this post was written in 2007 and referred to Visual Studio 2005 - this probably doesn't work the same in either Visual Studio 2008 or 2010.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>686</wp:comment_id>
			<wp:comment_author><![CDATA[Anthony of Sydney Australia]]></wp:comment_author>
			<wp:comment_author_email>z3220986@zmail.unsw.edu.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-21 22:09:54</wp:comment_date>
			<wp:comment_date_gmt>2011-11-21 22:09:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Question please,<br />If one can compile java within the MS Visual Studio, can an executable version of the java program be achieved? Thank you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>687</wp:comment_id>
			<wp:comment_author><![CDATA[Valentino]]></wp:comment_author>
			<wp:comment_author_email>vlntvcs@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-06 17:13:55</wp:comment_date>
			<wp:comment_date_gmt>2011-08-06 17:13:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark, can you please explain in more details the following:<br /><br />&quot;Basically, you need to be able to call &quot;javac&quot; and &quot;java&quot; from any command prompt - which means you have to setup the environment settings so you have your JDK bin in the PATH variable. &quot;<br /><br />I included the jdk bin to my project directories include folder.<br /><br />thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>688</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-06 20:59:17</wp:comment_date>
			<wp:comment_date_gmt>2011-08-06 20:59:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Valentino<br />See this thread for more info on how to setup the environment variable:<br /><br /><a rel="nofollow external" href="http://superuser.com/questions/12695/javac-command-not-found" title="http://superuser.com/questions/12695/javac-command-not-found" rel="nofollow">superuser.com/.../javac-command-not-found</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>689</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas]]></wp:comment_author>
			<wp:comment_author_email>Thomas@whymexperts.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-12 15:31:42</wp:comment_date>
			<wp:comment_date_gmt>2011-06-12 15:31:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, i came quite far =)<br />Only i came up with this error.<br />Any idea?<br /><br /><br />C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1&gt;del Output /S /Qmkdir Outputjavac *.java -d Outputcd Outputstart java MyApplication <br />Parameter format not correct - &quot;Qmkdir&quot;.<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>690</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas]]></wp:comment_author>
			<wp:comment_author_email>Thomas@whymexperts.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-12 15:36:02</wp:comment_date>
			<wp:comment_date_gmt>2011-06-12 15:36:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My fault, after reading the .bat again, i saw there should be a space after /S /Q, although i came on another 2 errors. Anyone know? <br /><br />-----<br /><br /><br />C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1&gt;del Output /S /Q  <br /><br />C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1&gt;mkdir Output  <br />A subdirectory or file Output already exists.<br /><br />C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1&gt;javac *.java -d Output  <br />MyApplication.java:1: illegal character: 187<br />&#239;&#187;&#191;import java.io.*;<br /> ^<br />MyApplication.java:1: illegal character: 191<br />&#239;&#187;&#191;import java.io.*;<br />  ^<br />2 errors<br /><br />C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1&gt;cd Output  <br /><br />C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1Output&gt;start java MyApplication  <br /><br />--]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>691</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-13 21:19:57</wp:comment_date>
			<wp:comment_date_gmt>2011-06-13 21:19:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Thomas<br />This seems to be a problem with the unicode byte order mark. Try saving the file explicitly as UTF8, Unicode or ASCII and see if not you get them working.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>692</wp:comment_id>
			<wp:comment_author><![CDATA[Thomas]]></wp:comment_author>
			<wp:comment_author_email>Thomas@whymexperts.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-14 16:06:52</wp:comment_date>
			<wp:comment_date_gmt>2011-06-14 16:06:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, this seems to work. I found out its required to safe the MyApplication.java in the same encoding as the Compiler.bat<br />Knowing this i finally succeed in building the Java Program :) Thank you very much! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>693</wp:comment_id>
			<wp:comment_author><![CDATA[Ali]]></wp:comment_author>
			<wp:comment_author_email>liakat007@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-03-29 18:25:56</wp:comment_date>
			<wp:comment_date_gmt>2012-03-29 18:25:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[At the final step when I was trying &quot;tools-&gt;javac&quot; it wants an argument can you please tell me what is it ????]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>694</wp:comment_id>
			<wp:comment_author><![CDATA[Vito]]></wp:comment_author>
			<wp:comment_author_email>underskin1@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-17 20:23:38</wp:comment_date>
			<wp:comment_date_gmt>2012-09-17 20:23:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It would be great if somebody perhaps Mark; the original poster, come out with a similar solution to compile Java in VS 2012 :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>695</wp:comment_id>
			<wp:comment_author><![CDATA[Adams Walthwind]]></wp:comment_author>
			<wp:comment_author_email>adams@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-09-29 09:26:25</wp:comment_date>
			<wp:comment_date_gmt>2007-09-29 09:26:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How do you debug Java using Visual Studio? Without the ability to debug... well... it's useless!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>696</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-09-29 11:33:48</wp:comment_date>
			<wp:comment_date_gmt>2007-09-29 11:33:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not know how to debug Java applications through Visual Studio, I shall not say if it's impossible though.<br /><br />This article is not meant as a universal replacement of IDEs like Eclipse, it's meant as a replacement for Eclipse, Emacs, Nano and so forth for smaller projects where debugging is not necessarily necessary (as was said on the most recent JAOO, if you ever need to debug, it's just because you neglected on writing tests ;)).<br /><br />I don't like using neither Emacs/Nano/Eclipse, especially not since it usually means I will have to run it over a terminal on the university campus. If I can just convince my fellow students to use Visual Studio for suited projects, we can easily develop in our comfortable Windows environments, using source control and everything else that we're used to, from our normal Visual Studio environment.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>697</wp:comment_id>
			<wp:comment_author><![CDATA[Srinivas]]></wp:comment_author>
			<wp:comment_author_email>dmssrinivas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dmssrinivas.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-12-19 04:34:41</wp:comment_date>
			<wp:comment_date_gmt>2007-12-19 04:34:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, really very easy.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>698</wp:comment_id>
			<wp:comment_author><![CDATA[Sam]]></wp:comment_author>
			<wp:comment_author_email>muhammadbabershahzad1978@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-03 11:08:39</wp:comment_date>
			<wp:comment_date_gmt>2008-06-03 11:08:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there i can not fallow you can you describe these steps in a movie.<br /><br />Regards<br />Sam]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>699</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-03 21:49:51</wp:comment_date>
			<wp:comment_date_gmt>2008-06-03 21:49:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Sam,<br /><br />What parts are you having troubles with? I'll see if I can explain it better then.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>700</wp:comment_id>
			<wp:comment_author><![CDATA[Ivan]]></wp:comment_author>
			<wp:comment_author_email>ilouis@live.ca</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-04 22:31:27</wp:comment_date>
			<wp:comment_date_gmt>2008-06-04 22:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, Mark,<br />thanks for the walkthrough. <br />I'm not sure how tests would alleviate the need to step through the code and see what happens to variables. About writing tests, tests show if there is a problem, but don't pin point where in the code it is. Do you agree?<br />Ivan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>701</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-05 09:29:30</wp:comment_date>
			<wp:comment_date_gmt>2008-06-05 09:29:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Ivan,<br /><br />Don't get me wrong, I wouldn't be able to do any &quot;normal&quot; piece of work without my trusty debugger (I haven't done any larger development in Java, only .NET / Visual Studio).<br /><br />As for the tests, I somewhat agree, and somewhat disagree. From a purely theoretical point of view, if you've partitioned your classes and functions to an atomic level, each function doing nothing but one action - having a test of said action fail, would pinpoint the exact location of the problem.<br /><br />Naturally we can't partition our functionality this much, so yes, tests do not show the specific line number where the error occurs - and that's not what they're for either. The JAOO quote is a provocative one that is meant to fire up discussions. While I do agree with the quote from the theoretical standpoint, I haven't ever worked on a project with a level of testing high enough to make it true.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>702</wp:comment_id>
			<wp:comment_author><![CDATA[Tony O]]></wp:comment_author>
			<wp:comment_author_email>tony@tony.tony</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-12-05 15:32:06</wp:comment_date>
			<wp:comment_date_gmt>2008-12-05 15:32:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've achieved something similar using post-build events.  It gives you the benefit of building projects separately.<br /><br />Post-build command line:<br />&lt;pre&gt;$(SolutionDir)compile-java-app.bat $(ProjectDir) &quot;..libclasses.&quot; foo.jar&lt;/pre&gt;<br /><br />compile-java-app.bat takes the given command line arguments and compiles the java code and creates jar file.<br /><br />syntax:<br />&lt;pre&gt;compile-java-app.bat projectDirectory classpath outputJar&lt;/pre&gt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>703</wp:comment_id>
			<wp:comment_author><![CDATA[Lennart]]></wp:comment_author>
			<wp:comment_author_email>chimenigfx@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-25 21:04:18</wp:comment_date>
			<wp:comment_date_gmt>2009-04-25 21:04:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You said:<br />&gt;I don't like using neither Emacs/Nano/Eclipse, especially not since it usually means I will have to run it over a terminal on the university campus. If I can just convince my fellow students to use Visual Studio for suited projects, we can easily develop in our comfortable Windows environments, using source control and everything else that we're used to, from our normal Visual Studio environment.<br /><br />I say:<br />Eclipse is exactly the same as visual studio. It has comparable features in most regards, especially in the fields that you mentioned: it runs in windows, has source control and it does not run in a terminal.<br /><br />In fact, I would go as far as to say Eclipse surpases VS in manye regards.<br /><br />It's free, it runs on many platforms, not just windows, it has support for more languages and environments than any other IDE that I know of. It has an amazingly large support base.<br /><br />The editor itself is really good, especially for java / C++ development.<br /><br />:) There :D I just thought your students shouldn't only hear your version ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>704</wp:comment_id>
			<wp:comment_author><![CDATA[Mosh Jahan]]></wp:comment_author>
			<wp:comment_author_email>moshster@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-27 07:10:58</wp:comment_date>
			<wp:comment_date_gmt>2009-04-27 07:10:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I disagree.  Visual Studio 2008 is way better than Eclipse in terms of features and especially in terms of performance, the editor is MUCH faster responding to user events like intellisense.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>705</wp:comment_id>
			<wp:comment_author><![CDATA[HC]]></wp:comment_author>
			<wp:comment_author_email>comment@hellcomes.otherinbox.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-07-17 08:17:44</wp:comment_date>
			<wp:comment_date_gmt>2009-07-17 08:17:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's this?? The only reason to compile Java using VS is the production of IL code from Java. To do this you can use Eclipse, and it's free.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>706</wp:comment_id>
			<wp:comment_author><![CDATA[Erik]]></wp:comment_author>
			<wp:comment_author_email>thecopy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-26 17:37:18</wp:comment_date>
			<wp:comment_date_gmt>2009-08-26 17:37:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello!<br /><br />Intellisense don't seem to work for me, any ideas?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>707</wp:comment_id>
			<wp:comment_author><![CDATA[Neil]]></wp:comment_author>
			<wp:comment_author_email>HNJackson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-08 00:34:10</wp:comment_date>
			<wp:comment_date_gmt>2009-10-08 00:34:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does this work in Visual Studio 2008 or only in Visual Studio 2005?  Is there anyway to get it to work in 2008?  I tried these steps in 2008 and when I try to run it, the CMD window pops up with some stuff written in it, but closes right away.  Not sure exactly what the deal is.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>708</wp:comment_id>
			<wp:comment_author><![CDATA[djaus]]></wp:comment_author>
			<wp:comment_author_email>davidj@vpac.org</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-05-06 05:09:13</wp:comment_date>
			<wp:comment_date_gmt>2010-05-06 05:09:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I modified (improved) the batch file:<br />(I placed the build batch file in teh project directory)<br />Batch File:<br />===========<br />rd Output /S /Q <br />mkdir Output <br />set path=%path%;&quot;C:Program FilesJavajdk1.6.0_20bin&quot;<br />javac *.java -d Output<br />echo %2<br />if NOT %2c==c goto end<br />cd Output <br />if exist %1.class (start java %1 )  else echo %1.class not built<br />cd ..<br />:end<br />==================<br /><br />To use it you need one or two arguments, separated by a space.<br />The first is the name of the class to run.<br />The second is optional and can be anything.<br />If the second arguement exists (not blank) then the run is skipped.<br /><br />In the Tools--External Tools .. Javac dialog,<br />enter the arguments and/or click on prompt for Arguments<br />eg 1  Program x   will skip the run<br />eg 2  Program     will run Program.class<br /><br />I do find it hard to believe that no one has configured an editor with Intellisense etc for Visual Studio.<br /><br />ToDo: Create a Java Project for VS and set its build events to call the Java build]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>709</wp:comment_id>
			<wp:comment_author><![CDATA[t0meck]]></wp:comment_author>
			<wp:comment_author_email>termil0r@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-07-08 22:21:05</wp:comment_date>
			<wp:comment_date_gmt>2010-07-08 22:21:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[VS. Yes. Maybe it is faster but hey! Eclipse provides a lot of plugins and also different type of editors. You can add an editor which may be faster than the one included in VS.<br /><br />I'm not saying VS is bad. But I don't like the idea of being trapped in single system. If I develop an application in VS it is compiled to run only on windows and since windowses aren't free i don't like them. I must say I'm encoraging anyone to use different systems and if Your students want to do their work using something different than VS which comes from M$ then I agree with them.<br /><br />Besides eclipse is using native system controls from SWT library and not being so overloaded with graphics and everything which is packed into VS it works faster. The only disadvantage might me the fact it is written in java which is slower due to fact the code must be fully compiled from bytecode to machinecode but being written in java is also its biggest advantage of being portable to other systems. Of course if it was written in python it would be lightning fast but authors would have to write different versions for each platform and then there would be the problem with plugins but maybe in future it would be &quot;converted&quot;<br /><br />And lastly. 7GB for VS vs. ~150-500mb of Eclipse IDE.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>710</wp:comment_id>
			<wp:comment_author><![CDATA[Shimmy]]></wp:comment_author>
			<wp:comment_author_email>weitzhandler@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-07-13 15:57:19</wp:comment_date>
			<wp:comment_date_gmt>2010-07-13 15:57:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Will this work in VS 2010 as well??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>711</wp:comment_id>
			<wp:comment_author><![CDATA[Lowery]]></wp:comment_author>
			<wp:comment_author_email>dkp822@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-07-27 15:33:11</wp:comment_date>
			<wp:comment_date_gmt>2010-07-27 15:33:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't think the intellisense would work in VS 2010. I suspect the original author used VS 2005 for the post.  My understanding is that support for the Java-esque 'J#' language was removed as of VS 2008 (lawsuits and all :( ) and so the Java package/language intellisense is not there.<br />Visual Studio can be extended to support new languages however though I haven't seen a project that is already doing this for Java.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5683</wp:comment_id>
			<wp:comment_author><![CDATA[Dionisio]]></wp:comment_author>
			<wp:comment_author_email>dionisio.ruiz.guerra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.155.67.8</wp:comment_author_IP>
			<wp:comment_date>2013-03-21 23:23:28</wp:comment_date>
			<wp:comment_date_gmt>2013-03-21 22:23:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations!!!! very usefull!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363904608.5024929046630859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6727</wp:comment_id>
			<wp:comment_author><![CDATA[Michele]]></wp:comment_author>
			<wp:comment_author_email>midani222@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://visualcv.com/michelesmith</wp:comment_author_url>
			<wp:comment_author_IP>66.244.65.235</wp:comment_author_IP>
			<wp:comment_date>2013-03-25 23:16:43</wp:comment_date>
			<wp:comment_date_gmt>2013-03-25 22:16:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello I was not able to get very far in this because my Visual Studio application kept asking about Silver Light. Do you know of any way to disable this? Any help would sincerely be appreciated. --Thanks, Michele]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1364249803.6310999393463134765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109703</wp:comment_id>
			<wp:comment_author><![CDATA[Rohit Matta]]></wp:comment_author>
			<wp:comment_author_email>switzer79@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>67.174.218.9</wp:comment_author_IP>
			<wp:comment_date>2013-09-08 23:04:01</wp:comment_date>
			<wp:comment_date_gmt>2013-09-08 21:04:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,

I did everything you told me to do, but it still won't work... What am I doing wrong?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378674241.5037910938262939453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110214</wp:comment_id>
			<wp:comment_author><![CDATA[nedal]]></wp:comment_author>
			<wp:comment_author_email>nedal@fitoman.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.154.84.111</wp:comment_author_IP>
			<wp:comment_date>2013-09-09 12:26:47</wp:comment_date>
			<wp:comment_date_gmt>2013-09-09 10:26:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi ,
the Intellisense in Visual Studio is not working , the standard Java classes shown as text file throw my VSS2008]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378722407.3123300075531005859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110248</wp:comment_id>
			<wp:comment_author><![CDATA[nedal]]></wp:comment_author>
			<wp:comment_author_email>nedal@fitoman.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>85.154.84.111</wp:comment_author_IP>
			<wp:comment_date>2013-09-09 12:56:45</wp:comment_date>
			<wp:comment_date_gmt>2013-09-09 10:56:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi ,

some third party has application server made using java ,they give me the API to connect there using TCP/IP .
i don't know how to program in JAVA so i did the above example to connect into that server and then pass the result for c# class .
so i start with simple example that explain above but i got \Output\MyApplication.class.

now any idea how to use this MyApplication.class into my c# application .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378724205.26389598846435546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51415</wp:comment_id>
			<wp:comment_author><![CDATA[Davidao]]></wp:comment_author>
			<wp:comment_author_email>davidmandare@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.108.233.164</wp:comment_author_IP>
			<wp:comment_date>2013-06-05 13:46:58</wp:comment_date>
			<wp:comment_date_gmt>2013-06-05 11:46:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi
I am having some trouble debugging my new pc to make sure that doesn't happen again I will smash it whit a hummer any comments in which one I should use? please tell me if u do]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370432818.7337920665740966796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74993</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Wronski]]></wp:comment_author>
			<wp:comment_author_email>srwronsk@mtu.edu</wp:comment_author_email>
			<wp:comment_author_url>http://www.worldofzero.com</wp:comment_author_url>
			<wp:comment_author_IP>108.230.179.90</wp:comment_author_IP>
			<wp:comment_date>2013-07-26 06:47:06</wp:comment_date>
			<wp:comment_date_gmt>2013-07-26 04:47:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do a lot of development in Visual Studio since I work with Windows Phone and Windows 8. My school does a lot of Java development and I was looking for an IDE like Visual Studio and found IDEA. It's not exactly the same, but I'd actually argue its Intellisense is better and it's got debugging and a lot of other useful features for the Java Developer. For people familiar with Visual Studio, I'd argue it's the best alternative for those reasons, certainly better than the horrors of Eclipse.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374814026.8085041046142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>162512</wp:comment_id>
			<wp:comment_author><![CDATA[Ludwig CRON]]></wp:comment_author>
			<wp:comment_author_email>ludwig.cron@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.113.193.48</wp:comment_author_IP>
			<wp:comment_date>2013-12-28 19:16:33</wp:comment_date>
			<wp:comment_date_gmt>2013-12-28 18:16:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi!

for people who tried the technic above applied for VS2012 or later, they could be desappointed.

But it seems to work fine if you take care of mechanism of Visual Studio(I tried on VS2013)

for example, Visual studio doesn't use %PATH% as well as expected. So you must write the path

rd bin /S /Q
mkdir bin
"C:\Program Files\Java\jdk1.7.0_45\bin\javac.exe" *.java -d bin
cd bin
"C:\Program Files\Java\jdk1.7.0_45\bin\java.exe" Launcher

(here Launcher was my class with public static void main(...))

Moreover, by moving the java file in the solution visual studio highlight the syntax.

It means put your java file in (for instance) $(ProjectDir)/ProjectName/ProjectName instead of $(ProjectDir)/ProjectName

I hope that help you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1388254593.1546990871429443359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125718</wp:comment_id>
			<wp:comment_author><![CDATA[a developer]]></wp:comment_author>
			<wp:comment_author_email>a@a.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>116.75.51.72</wp:comment_author_IP>
			<wp:comment_date>2013-10-06 08:46:15</wp:comment_date>
			<wp:comment_date_gmt>2013-10-06 06:46:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It would certainly be useful if this can be achieved with Visual Studio 2012.

Could anyone please port this to VS 2012 (Express or Professional - does not matter)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1381041975.0765969753265380859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62766</wp:comment_id>
			<wp:comment_author><![CDATA[Navin Kashyap]]></wp:comment_author>
			<wp:comment_author_email>nvnojha@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.40.244.213</wp:comment_author_IP>
			<wp:comment_date>2013-06-29 17:09:40</wp:comment_date>
			<wp:comment_date_gmt>2013-06-29 15:09:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark..

I have a biometric based web application written in java. For coomunication with hardware device such as Fingerprint device &amp; card reader , we have created some dll file &amp; placed those dll files inside windows system32 folder along with my applet. Bcz of some issues my card reader is not recognising some cards 8kb Mifarre or m not able to personalise ( ie enter the biometric information inside the  Card) &amp; secure the card(so dat only known device can read the contents from cards) .so wat i am looking for is can we debug all these dll being used in my web application once i attach the process internet explorer to Visual studio 6 &amp; as it comes in workflow it shud hit the breakpoint already applied in oye native code usually written in c.
dll file are normal win32 dll.is there any way to debug the application with Dll as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372518580.4761750698089599609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166172</wp:comment_id>
			<wp:comment_author><![CDATA[Compiling Java in Visual Studio | Javed Khan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://javedarifkhan.wordpress.com/2014/02/28/compiling-java-in-visual-studio/</wp:comment_author_url>
			<wp:comment_author_IP>66.135.48.201</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 17:51:52</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 16:51:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://improve.dk/compiling-java-in-visual-studio/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393606312.4528410434722900390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:49:{s:15:"comment_post_ID";i:1259;s:14:"comment_author";s:44:"Compiling Java in Visual Studio | Javed Khan";s:18:"comment_author_url";s:78:"http://javedarifkhan.wordpress.com/2014/02/28/compiling-java-in-visual-studio/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:62:"[...] http://improve.dk/compiling-java-in-visual-studio/ [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:13:"66.135.48.201";s:10:"user_agent";s:31:"The Incutio XML-RPC PHP Library";s:8:"referrer";N;s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:50:"http://improve.dk/compiling-java-in-visual-studio/";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_USER_AGENT";s:31:"The Incutio XML-RPC PHP Library";s:9:"HTTP_HOST";s:10:"improve.dk";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"CONTENT_TYPE";s:8:"text/xml";s:20:"HTTP_ACCEPT_ENCODING";s:41:"deflate;q=1.0, compress;q=0.5, gzip;q=0.5";s:14:"CONTENT_LENGTH";s:3:"329";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"66.135.48.201";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:31:"/home/www/improve.dk/xmlrpc.php";s:11:"REMOTE_PORT";s:5:"17849";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1393606309";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-23 22:39:00";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165115</wp:comment_id>
			<wp:comment_author><![CDATA[DHeshMan]]></wp:comment_author>
			<wp:comment_author_email>DHeshMan@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.54.94.27</wp:comment_author_IP>
			<wp:comment_date>2014-02-07 03:26:54</wp:comment_date>
			<wp:comment_date_gmt>2014-02-07 02:26:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I tried doing this but I got an error message on the line [code]System.in.read();[/code]
The messages says the following:
HelloWorld.java:4: error: unreported exception IOException; must be caught or declared to be thrown.  With a pointer between read and (.  Any help would be appreciated.
[code]
class HelloWorld{
    public static void main(String args[]){
        System.out.println("Hello World");
        System.in.read();
    }
}[/code]
I am running Windows 7 64-bit and downloaded the latest JDK 1.7.0_51

When I remove the [code]System.in.read();[/code] it seems to compile file, but then I don't get to see the result because it disappears too fast.  Any help would be greatly appreciated.

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391740014.3491709232330322265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165116</wp:comment_id>
			<wp:comment_author><![CDATA[DHeshMan]]></wp:comment_author>
			<wp:comment_author_email>DHeshMan@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>12.54.94.27</wp:comment_author_IP>
			<wp:comment_date>2014-02-07 03:37:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-07 02:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[... Please ignore previous post.  I found my own mistake. ...

I was missing both the import java.io.*; line and the throws IOException clause]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391740620.1769568920135498046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165118</wp:comment_id>
			<wp:comment_author><![CDATA[DHeshMan]]></wp:comment_author>
			<wp:comment_author_email>DHeshMan@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>63.87.61.78</wp:comment_author_IP>
			<wp:comment_date>2014-02-07 04:03:14</wp:comment_date>
			<wp:comment_date_gmt>2014-02-07 03:03:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Windows 7 64-bit
Visual Studio 2010

I found that creating the files in visual studio 2010 added a bad character to the beginning of the file as littlechap22 also shows.  From a command prompt I entered

&gt;type HelloWorld.java

and saw the output started with the bad character.  I deleted the files created by visual studio and created blank files using notepad with the same names.  I was then able to edit the files within visual studio without it adding the bad character to the beginning of the file.

HOWEVER.  I can run the Command.bat file perfectly by double-clicking on it in windows explorer because I added the javac path to my system's PATH variable.  But when I try to run the Command.bat from visual studio it complains that it cannot find the javac command.  Is there somewhere in visual studio 2010 that I need to specify the javac path or should I just add it to the bat file as djaus has shown?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391742194.5863130092620849609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38739</wp:comment_id>
			<wp:comment_author><![CDATA[littlechap22]]></wp:comment_author>
			<wp:comment_author_email>littlechap22@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>14.140.86.17</wp:comment_author_IP>
			<wp:comment_date>2013-05-14 05:38:48</wp:comment_date>
			<wp:comment_date_gmt>2013-05-14 03:38:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OS - Windows 7 64 bit
Visual Studio - 2010

I had the same problem as Thomas:

C:UsersThomasDocumentsVisual Studio 2008ProjectsClassLibrary1ClassLibrary1&gt;javac *.java -d Output
MyApplication.java:1: illegal character: 187
ï»¿import java.io.*;

Got it solved by encoding both the files (MyApplication.java, Compile..bat) as 
'ISO-6937 - Codepage 20269'.

Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368502728.4119660854339599609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Handling DBNulls</title>
		<link>http://improve.dk/handling-dbnulls/</link>
		<pubDate>Mon, 08 Oct 2007 02:26:37 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/10/08/handling-dbnulls.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Reading and writing values to the DB has always been a bit cumbersome when you had to take care of nullable types and DBNull values. Here's a way to make it easy.</p>  <p>Based on <a href="http://aspalliance.com/852">this post by Peter Johnson</a> and <a href="http://www.falafel.com/community/blogs/techbits/archive/2006/10/13/Casting-DBNull-Gracefully-and-Elegantly-Using-Generics.aspx">this post by Adam Anderson</a> I gathered a couple of ideas and combined them to make a completely generic class that will handle DBNulls for both reads and writes, as well as handling nullable types.</p>  <p>Let me present the code, I'll go over it afterwards:</p>

<pre lang="csharp">public static class DBConvert
{
	/// <summary>
	/// Handles reading DBNull values from database in a generic fashion
	/// </summary>
	/// <typeparam name="T">The type of the value to read</typeparam>
	/// <param name="value">The input value to convert</param>
	/// <returns>A strongly typed result, null if the input value is DBNull</returns>
	public static T To<T>(object value)
	{
		if (value is DBNull)
			return default(T);
		else
			return (T)changeType(value, typeof(T));
	}

	/// <summary>
	/// Handles reading DBNull values from database in a generic fashion, simplifies frontend databinding
	/// </summary>
	/// <typeparam name="T">The type of the value to read</typeparam>
	/// <param name="ri">The Container item in a databinding operation</param>
	/// <param name="column">The dataitem to read</param>
	/// <returns>A strongly typed result, null if the input value is DBNull</returns>
	public static T To<T>(RepeaterItem ri, string column)
	{
		if (DataBinder.Eval(ri.DataItem, column) is DBNull)
			return default(T);
		else
			return (T)changeType(DataBinder.Eval(ri.DataItem, column), typeof(T));
	}

	/// <summary>
	/// Internal method that wraps Convert.ChangeType() so it handles Nullable<> types
	/// </summary>
	/// <param name="value">The value to convert</param>
	/// <param name="conversionType">The type to convert into</param>
	/// <returns>The input value converted to type conversionType</returns>
	private static object changeType(object value, Type conversionType)
	{
		if (conversionType.IsGenericType && conversionType.GetGenericTypeDefinition().Equals(typeof(Nullable<>)))
		{
			if (value == null)
				return null;

			conversionType = Nullable.GetUnderlyingType(conversionType);
		}

		return Convert.ChangeType(value, conversionType);
	}

	/// <summary>
	/// Simplifies setting SqlParameter values by handling null issues
	/// </summary>
	/// <param name="value">The value to return</param>
	/// <returns>DBNull if value == null, otherwise we pass through value</returns>
	public static object From(object value)
	{
		if (value == null)
			return DBNull.Value;
		else
			return value;
	}
}</pre>

<p>The first To method significantly simplifies the process of setting database values when using SqlParameters (we all do, right?).</p>

<p>This is how I used to handle possible DBNulls when reading into a nullable integer:</p>

<pre lang="csharp">if(dr["CountryID"] is DBNull)
	c.CountryID = null;
else
	c.CountryID = Convert.ToInt32(dr["CountryID"]);</pre>

<p>And this is how it's done using my DBConvert class:</p>

<pre lang="csharp">c.CountryID = DBConvert.To<int?>(dr["CountryID"]);
c.Recommended = DBConvert.To<bool>(dr["Recommended"]);
d.companyMessageCreated = DBConvert.To<DateTime?>(dr["CompanyMessageCreated"]);
d.Message = DBConvert.To<string>(dr["Message"]);
d.OverallScore = DBConvert.To<int>(dr["OverallScore"]);</pre>

<p>Notice how it works for both nullable ints, DateTimes and whatever other nullable types you wish. It also works for normal types like string, int and so forth. It'll automatically typecast it into the type specified as a generic parameter. However, remember that the database value must match the value being converted to, you cannot use .To("some string value"), it will fail.</p>

<p>The private changeType() method is a wrapper for the ChangeType() method that takes care of nullable types since the builtin Convert.ChangeType() method does not support casting into nullable types.</p>

<p>The second To simplifies databinding values in the frontend ASPX files. This is how I used to print a DateTime column in a ShortDateString format:</p>

<pre lang="csharp"><%# Convert.ToDateTime(DataBinder.Eval(Container.DataItem, "Created")).ToShortDateString() %></pre>

<p>And this is how it can be done using the DBConvert class, generically:</p>

<pre lang="csharp"><%# DBConvert.To<DateTime>(Container, "Created").ToShortDateString() %></pre>

<p>Nullable types, as well as null strings also have to be handled when assigning SqlParameter values. The usual way for both nullable types as well as strings might look like this:</p>

<pre lang="csharp">if(CountryID == null)
	cmd.Parameters.Add("@CountryID", SqlDbType.Int).Value = DBNull.Value;
else
	cmd.Parameters.Add("@CountryID", SqlDbType.Int).Value = CountryID;</pre>

<p>Using the DBConvert class this can be done a bit simpler:</p>

<pre lang="csharp">cmd.Parameters.Add("@CountryID", SqlDbType.Int).Value = DBConvert.From(CountryID);
cmd.Parameters.Add("@CountryID", SqlDbType.NVarChar, 2048).Value = DBConvert.From(MyString);</pre>

<p>This will automatically convert null strings as well as nulled nullable types to DBNull.</p>

<p>Enjoy :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1260</wp:post_id>
		<wp:post_date>2007-10-08 02:26:37</wp:post_date>
		<wp:post_date_gmt>2007-10-08 02:26:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>handling-dbnulls</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="dbnull"><![CDATA[DBNull]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Handling DBNulls]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Accessing My Privates, Scope vs Encapsulation</title>
		<link>http://improve.dk/accessing-my-privates/</link>
		<pubDate>Tue, 09 Oct 2007 21:48:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/10/08/accessing-my-privates.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently I was developing a couple of simple ORM classes that had me confused.</p>

<pre lang="csharp">[Serializable]
public class Domain
{
	// Read
	private int domainID;
	public int DomainID { get { return domainID; } }
	
	private string domainName;
	public string DomainName { get { return domainName; } }

	// Read/Write
	public int? CompanyID;
}</pre>

<p>Take this simple object as an example. It represents a website domain, it has an ID from the database aswell as a read only domain name and a belonging CompanyID.</p>

<p>Now, I want to create a Load() function that given a domain ID will instantiate a new instance of a Domain object and populate its values from the database. Now, as the DomainID and DomainName variables are private, I'll have to make a constructor method to pass in those values, right? It seems not, if my Load method is a static method of the Domain class itself:</p>

<pre lang="csharp" escaped="true">public static Domain Load(int domainID)
{
	SqlCommand cmd = new SqlCommand("SELECT Domain, CompanyID FROM tblDomains WHERE DomainID = @DomainID");
	cmd.Parameters.Add("@DomainID", SqlDbType.Int).Value = domainID;

	DataRow dr = DB.GetDR(cmd);

	if (dr == null)
		return null;
	else
	{
		Domain d = new Domain();
		
		d.domainID = domainID;
		d.domainName = DBConvert.To&lt;string&gt;(dr["Domain"]);
		d.CompanyID = DBConvert.To&lt;int?&gt;(dr["CompanyID"]);

		return d;
	}
}</pre>

<p>The interesting part is in the else block. I create a new Domain instance, and I'm able to set the private field values directly. This saves me a lot of work as I don't have to create constructor methods - I'd rather not have to maintain those as well, and I think this was is a lot more readable. Anyways, I don't understand why this is possible. Granted, my static method is part of the Domain class and as such could have access to private variables, but these private variables are not static and thus they belong to the actual Domain instance (d). Since they belong to the Domain instance and I'm setting them through the instance variable d, how am I able to access them? Ought they noe be private, even though I'm writing my code inside the Domain function?</p>

<p>Everything compiles and runs perfectly, I just don't understand why this is possible.</p>

<p>Update:
  <br /><a href="http://www.intellect.dk/">Jakob Andersen</a> provided me with the answer. It's simply a matter of scope, whether the method is static or not does not matter. Also encapsulation is ignored as scope takes precedence.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1261</wp:post_id>
		<wp:post_date>2007-10-09 23:48:07</wp:post_date>
		<wp:post_date_gmt>2007-10-09 21:48:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>accessing-my-privates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="encapsulation"><![CDATA[Encapsulation]]></category>
		<category domain="post_tag" nicename="inheritance"><![CDATA[Inheritance]]></category>
		<category domain="post_tag" nicename="scope"><![CDATA[Scope]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Accessing My Privates, Scope vs Encapsulation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>XmlDocument Fluent Interface</title>
		<link>http://improve.dk/xmldocument-fluent-interface/</link>
		<pubDate>Sat, 20 Oct 2007 02:20:01 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/10/20/xmldocument-fluent-interface.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I do a lot of backend programming for Flash frontends. That basically means a lot of ASPX pages that simply return some XML and accept some incoming XML for parameters. Most of the UI logic ends up getting cluttered with manual XML stringbuilding, so I saw this as an obvious opportunity to play around with a fluent interfaces.</p>

<p>Now, here's an example of a typical boolean yes/no result from a Flash query:</p>

<pre lang="xml"><?xml version="1.0" encoding="utf-8"?>
<root>
	<result type="boolean">true</result>
</root></pre>

<p>I'd usually create this bit of XML using a simple StringBuilder like so:</p>

<pre lang="csharp">StringBuilder output = new StringBuilder();
output.Append("<?xml version="1.0" encoding="utf-8"?>");
output.Append("<root>");
output.Append("<result type="boolean">true</result>");
output.Append("</root>");</pre>

<p>This has the advantage of being very fast to write, but readability suffers from the escaped quotes, lack of indentation and there's a whole lot of text when the XML becomes just a bit more advanced.</p>

<p>A "prettier" way is to use the DOM through the XmlDocument like so:</p>

<pre lang="csharp">XmlDocument xd = new XmlDocument();
xd.AppendChild(xd.CreateXmlDeclaration("1.0", "utf-8", ""));

XmlNode root = xd.CreateElement("root");
xd.AppendChild(root);

XmlNode result = xd.CreateElement("result");
result.InnerText = "true";

XmlAttribute type = xd.CreateAttribute("type");
type.Value = "boolean";

result.Attributes.Append(type);
root.AppendChild(result);</pre>

<p>While this does produce exactly the same XML, it takes up twice as many lines of code, excluding the whitespace lines. Without whitespace it is even more unreadable.</p>

<p>Let me introduce you to my quick'n'simple fluent interface that uses XmlDocument internally, XmlOutput:</p>

<pre lang="csharp">XmlOutput xo = new XmlOutput()
	.XmlDeclaration()
	.Node("root").Within()
		.Node("result").Attribute("type", "boolean").InnerText("true");</pre>

<p>Using XmlOutput we're down to four lines, the shortest example yet. While linecount is not, and should not be, a measurement of quality, it is preferred. I believe using XmlOutput is, by far, the most readable example.</p>

<p>Basically, using Node() creates a new node within the current node. If no node has been created previously, it will automatically be the root node. Any time a new node is created, it automatically becomes the "current node". Calling Within() moves the context into the current node, thus any newly created nodes will be created within that node. Attribute() will add an attribute to the current node, likewise will InnerText() set the InnerText of the current node. EndWithin() moves the context to the parent node, it is not mandatory for "closing" the nodes, it is only required when you actually need to move the scope.</p>

<p>Let me present you with a couple of examples. Dynamic data:</p>

<pre lang="csharp">XmlOutput xo = new XmlOutput()
	.XmlDeclaration()
	.Node("root").Within()
		.Node("numbers").Within();

for (int i = 1; i <= 10; i++)
	xo.Node("number").Attribute("value", i.ToString()).InnerText("This is the number: " + i);</pre>

<pre lang="xml"><?xml version="1.0" encoding="utf-8"?>
<root>
	<numbers>
		<number value="1">This is the number: 1</number>
		<number value="2">This is the number: 2</number>
		<number value="3">This is the number: 3</number>
		<number value="4">This is the number: 4</number>
		<number value="5">This is the number: 5</number>
		<number value="6">This is the number: 6</number>
		<number value="7">This is the number: 7</number>
		<number value="8">This is the number: 8</number>
		<number value="9">This is the number: 9</number>
		<number value="10">This is the number: 10</number>
	</numbers>
</root></pre>

<p>And complex structures:</p>

<pre lang="csharp">XmlOutput xo = new XmlOutput()
	.XmlDeclaration()
	.Node("root").Within()
		.Node("user").Within()
			.Node("username").InnerText("orca")
			.Node("realname").InnerText("Mark S. Rasmussen")
			.Node("description").InnerText("I'll handle any escaping (like < & > for example) needs automagically.")
			.Node("articles").Within()
				.Node("article").Attribute("id", "25").InnerText("Handling DBNulls")
				.Node("article").Attribute("id", "26").InnerText("Accessing my privates")
				.EndWithin()
			.Node("hobbies").Within()
				.Node("hobby").InnerText("Fishing")
				.Node("hobby").InnerText("Photography")
				.Node("hobby").InnerText("Work");</pre>

<pre lang="xml"><?xml version="1.0" encoding="utf-8"?>
<root>
	<user>
		<username>orca</username>
		<realname>Mark S. Rasmussen</realname>
		<description>I'll handle any escaping (like < & > for example) needs automagically.</description>
		<articles>
			<article id="25">Handling DBNulls</article>
			<article id="26">Accessing my privates</article>
		</articles>
		<hobbies>
			<hobby>Fishing</hobby>
			<hobby>Photography</hobby>
			<hobby>Work</hobby>
		</hobbies>
	</user>
</root></pre>

<p>Finally, say hello to XmlOutput:</p>

<pre lang="csharp">using System.Xml;
using System.Collections.Generic;

public class XmlOutput
{
	// The internal XmlDocument that holds the complete structure.
	XmlDocument xd = new XmlDocument();

	// A stack representing the hierarchy of nodes added. nodeStack.Peek() will always be the current node scope.
	Stack<XmlNode> nodeStack = new Stack<XmlNode>();

	// Whether the next node should be created in the scope of the current node.
	bool nextNodeWithin;

	// The current node. If null, the current node is the XmlDocument itself.
	XmlNode currentNode;

	/// <summary>
	/// Returns the string representation of the XmlDocument.
	/// </summary>
	/// <returns>A string representation of the XmlDocument.</returns>
	public string GetOuterXml()
	{
		return xd.OuterXml;
	}

	/// <summary>
	/// Returns the XmlDocument
	/// </summary>
	/// <returns></returns>
	public XmlDocument GetXmlDocument()
	{
		return xd;
	}

	/// <summary>
	/// Changes the scope to the current node.
	/// </summary>
	/// <returns>this</returns>
	public XmlOutput Within()
	{
		nextNodeWithin = true;

		return this;
	}

	/// <summary>
	/// Changes the scope to the parent node.
	/// </summary>
	/// <returns>this</returns>
	public XmlOutput EndWithin()
	{
		if (nextNodeWithin)
			nextNodeWithin = false;
		else
			nodeStack.Pop();

		return this;
	}

	/// <summary>
	/// Adds an XML declaration with the most common values.
	/// </summary>
	/// <returns>this</returns>
	public XmlOutput XmlDeclaration() { return XmlDeclaration("1.0", "utf-8", ""); }

	/// <summary>
	/// Adds an XML declaration to the document.
	/// </summary>
	/// <param name="version">The version of the XML document.</param>
	/// <param name="encoding">The encoding of the XML document.</param>
	/// <param name="standalone">Whether the document is standalone or not. Can be yes/no/(null || "").</param>
	/// <returns>this</returns>
	public XmlOutput XmlDeclaration(string version, string encoding, string standalone)
	{
		XmlDeclaration xdec = xd.CreateXmlDeclaration(version, encoding, standalone);
		xd.AppendChild(xdec);

		return this;
	}

	/// <summary>
	/// Creates a node. If no nodes have been added before, it'll be the root node, otherwise it'll be appended as a child of the current node.
	/// </summary>
	/// <param name="name">The name of the node to create.</param>
	/// <returns>this</returns>
	public XmlOutput Node(string name)
	{
		XmlNode xn = xd.CreateElement(name);

		// If nodeStack.Count == 0, no nodes have been added, thus the scope is the XmlDocument itself.
		if (nodeStack.Count == 0)
		{
			xd.AppendChild(xn);

			// Automatically change scope to the root DocumentElement.
			nodeStack.Push(xn);
		}
		else
		{
			// If this node should be created within the scope of the current node, change scope to the current node before adding the node to the scope element.
			if (nextNodeWithin)
			{
				nodeStack.Push(currentNode);

				nextNodeWithin = false;
			}

			nodeStack.Peek().AppendChild(xn);
		}

		currentNode = xn;

		return this;
	}

	/// <summary>
	/// Sets the InnerText of the current node without using CData.
	/// </summary>
	/// <param name="text"></param>
	/// <returns></returns>
	public XmlOutput InnerText(string text)
	{
		return InnerText(text, false);
	}

	/// <summary>
	/// Sets the InnerText of the current node.
	/// </summary>
	/// <param name="text">The text to set.</param>
	/// <returns>this</returns>
	public XmlOutput InnerText(string text, bool useCData)
	{
		if (useCData)
			currentNode.AppendChild(xd.CreateCDataSection(text));
		else
			currentNode.AppendChild(xd.CreateTextNode(text));

		return this;
	}

	/// <summary>
	/// Adds an attribute to the current node.
	/// </summary>
	/// <param name="name">The name of the attribute.</param>
	/// <param name="value">The value of the attribute.</param>
	/// <returns>this</returns>
	public XmlOutput Attribute(string name, string value)
	{
		XmlAttribute xa = xd.CreateAttribute(name);
		xa.Value = value;

		currentNode.Attributes.Append(xa);

		return this;
	}
}</pre>

<p>Enjoy!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1262</wp:post_id>
		<wp:post_date>2007-10-20 02:20:01</wp:post_date>
		<wp:post_date_gmt>2007-10-20 02:20:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xmldocument-fluent-interface</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[XmlDocument Fluent Interface]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>712</wp:comment_id>
			<wp:comment_author><![CDATA[Niels Ladegaard Beck]]></wp:comment_author>
			<wp:comment_author_email>improve.dk@nielslbeck.com</wp:comment_author_email>
			<wp:comment_author_url>http://nlbeck.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-10-24 15:45:22</wp:comment_date>
			<wp:comment_date_gmt>2007-10-24 15:45:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice! But why not just use LINQ? With the new XML features in .NET 3.5, you can write your last (complex) example like this:<br /><br />XDocument xd = new XDocument(<br />  new XDeclaration(&quot;1.0&quot;, &quot;UTF-8&quot;, &quot;yes&quot;),<br />  new XElement(&quot;root&quot;,<br />    new XElement(&quot;user&quot;,<br />      new XElement(&quot;username&quot;, &quot;orca&quot;),<br />      new XElement(&quot;realname&quot;, &quot;Mark S. Rasmussen&quot;),<br />      new XElement(&quot;description&quot;, &quot;I'll handle any escaping (like &lt; &amp; &gt; for example) needs automagically.&quot;),<br />      new XElement(&quot;articles&quot;,<br />        new XElement(&quot;article&quot;, new XAttribute(&quot;id&quot;, &quot;25&quot;), &quot;Handling DBNulls&quot;),<br />        new XElement(&quot;article&quot;, new XAttribute(&quot;id&quot;, &quot;26&quot;), &quot;Accessing my privates&quot;)),<br />      new XElement(&quot;hobbies&quot;,<br />        new XElement(&quot;hobby&quot;, &quot;Fishing&quot;),<br />        new XElement(&quot;hobby&quot;, &quot;Photography&quot;),<br />        new XElement(&quot;hobby&quot;, &quot;Work&quot;)))));<br /><br />It gives you the same XML :-)<br /><br />Or, if you prefer VB.NET (who does?!?):<br /><br />Dim xd As XDocument = _<br />&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br />&lt;root&gt;<br />  &lt;user&gt;<br />    &lt;username&gt;orca&lt;/username&gt;<br />    &lt;realname&gt;Mark S. Rasmussen&lt;/realname&gt;<br />    &lt;description&gt;I'll handle any escaping (like ... for example) needs automagically.&lt;/description&gt;<br />    &lt;articles&gt;<br />      &lt;article id=&quot;25&quot;&gt;Handling DBNulls&lt;/article&gt;<br />      &lt;article id=&quot;26&quot;&gt;Accessing my privates&lt;/article&gt;<br />    &lt;/articles&gt;<br />    &lt;hobbies&gt;<br />      &lt;hobby&gt;Fishing&lt;/hobby&gt;<br />      &lt;hobby&gt;Photography&lt;/hobby&gt;<br />      &lt;hobby&gt;Work&lt;/hobby&gt;<br />    &lt;/hobbies&gt;<br />  &lt;/user&gt;<br />&lt;/root&gt;<br /><br />I've newer used VB.NET before, so I couldn't figure out how to escape the special characters - but I'm sure you know how to do it ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>713</wp:comment_id>
			<wp:comment_author><![CDATA[Niels Ladegaard Beck]]></wp:comment_author>
			<wp:comment_author_email>improve.dk@nielslbeck.com</wp:comment_author_email>
			<wp:comment_author_url>http://nlbeck.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-10-24 15:48:31</wp:comment_date>
			<wp:comment_date_gmt>2007-10-24 15:48:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[When I posted the previous comment, the indentation was correct - it's just this blog that doesn't understand spaces ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>714</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2007-10-24 16:26:40</wp:comment_date>
			<wp:comment_date_gmt>2007-10-24 16:26:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[While it is true that LINQ simplifies the syntax, it is - as you say yourself - .NET 3.5 only, in a lot of situations you do not have the luxury to be running 3.5. Furthermore I actually much prefer my fluent syntax over the LINQ syntax (I won't even get into the VB.NET one, yuck), but that is of course of question of personal preference.<br /><br />Sorry about the spaces, I'll look into it ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>715</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Berseth]]></wp:comment_author>
			<wp:comment_author_email>matt@mattberseth.com</wp:comment_author_email>
			<wp:comment_author_url>http://mattberseth.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-22 14:09:51</wp:comment_date>
			<wp:comment_date_gmt>2008-02-22 14:09:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well done.  I wish this would have posted this 5 years ago ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>716</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Pietschmann]]></wp:comment_author>
			<wp:comment_author_email>chris@pietschsoft.com</wp:comment_author_email>
			<wp:comment_author_url>http://pietschsoft.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-22 16:26:33</wp:comment_date>
			<wp:comment_date_gmt>2008-02-22 16:26:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very Nice. This is simple, but makes the code so much easier to read. It's definately a step in the right direction.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>717</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>andrew@andrewnurse.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 00:29:58</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 00:29:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is there a particular reason why you didn't just use XmlWriter? It isn't fluent but you could use XmlOutput to wrap it instead of XmlDocument? <br /><br />The big advantage there is that XmlWriter does the stack management for you:<br /><br />writer.WriteStartElement(&quot;foo&quot;);<br />writer.WriteAttributeString(&quot;bar&quot;, &quot;baz&quot;);<br />writer.WriteEndElement();<br /><br />It's also much faster because it streams the Xml directly to the target Stream/TextWriter rather than building the DOM in memory.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>718</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 00:54:48</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 00:54:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Andrew,<br /><br />The reason I used the XmlDocument is that I'm often using the XmlOutput class for creating the XmlDocument instance, and then I'll continue working on the instance in the calling code.<br /><br />Granted, XmlWriter is faster for just spitting out a lot of XML, but it doesn't give the opportunity of retrieving the XmlDocument afterwards. One could create an XmlOutputWriter class that mimics XmlOutput.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>719</wp:comment_id>
			<wp:comment_author><![CDATA[Bill Booth]]></wp:comment_author>
			<wp:comment_author_email>webooth@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 03:21:33</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 03:21:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&lt;snip&gt;<br />Furthermore I actually much prefer my fluent syntax over the LINQ syntax (I won't even get into the VB.NET one, yuck), but that is of course of question of personal preference.<br />&lt;/snip&gt;<br /><br />I don't understand this. The only VB I noticed was the XDocument declaration. That is yuck? It looks more like the xml desired than anything on the page.<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>720</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 07:17:41</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 07:17:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bill,<br /><br />There's no VB in my code samples at all. I'm talking about the VB specific language feature where you can simply embed XML directly into the source code. It sure makes it easy to write out XML, but I personally do not like mixing in XML markup with the source code.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>721</wp:comment_id>
			<wp:comment_author><![CDATA[Cihan Ucar]]></wp:comment_author>
			<wp:comment_author_email>cihan.ucar@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.cihanucar.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 08:56:48</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 08:56:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome piece of code! It is worth to refactor existing code which produces xml.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>722</wp:comment_id>
			<wp:comment_author><![CDATA[Justin Etheredge]]></wp:comment_author>
			<wp:comment_author_email>justin@etheredge.us</wp:comment_author_email>
			<wp:comment_author_url>http://www.codethinked.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 19:45:39</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 19:45:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice use of a fluent interface! So simple, yet so powerful. &lt;/jealousness&gt;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>723</wp:comment_id>
			<wp:comment_author><![CDATA[Jon von Gillern]]></wp:comment_author>
			<wp:comment_author_email>jvongillern@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vonsharp.net/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 20:17:41</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 20:17:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure if anything could be easier to work with than the XmlSerializer. If you're going to be spitting out or sucking in Xml, you owe it to yourself to look into it.<br /><br /><a rel="nofollow external" href="http://www.vonsharp.net/PutDownTheXmlNodeAndStepAwayFromTheStringBuilder.aspx" title="http://www.vonsharp.net/PutDownTheXmlNodeAndStepAwayFromTheStringBuilder.aspx" rel="nofollow">www.vonsharp.net</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>724</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-25 20:57:02</wp:comment_date>
			<wp:comment_date_gmt>2008-02-25 20:57:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jon,<br /><br />I don't want to have to create classes for all the various forms of XML that I might be spitting out. Also, as people mentioned, XmlDocument might not be the best performing - but compared to reflection based serialization, it's blazingly fast.<br /><br />Now, if I can serialize anonymous classes that I create, that might be a possibility, but it'd still not be nowhere near as concise as the XmlOutput class is.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>725</wp:comment_id>
			<wp:comment_author><![CDATA[Bacardi]]></wp:comment_author>
			<wp:comment_author_email>xnode@sbcglobal.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.xnode-online.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-27 05:11:15</wp:comment_date>
			<wp:comment_date_gmt>2008-02-27 05:11:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reminds me of jQuery. Very nice. Great work! It's now a part of the collection.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>726</wp:comment_id>
			<wp:comment_author><![CDATA[Steve Trefethen]]></wp:comment_author>
			<wp:comment_author_email>strefethen@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.stevetrefethen.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-27 05:22:24</wp:comment_date>
			<wp:comment_date_gmt>2008-02-27 05:22:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this post, I'm doing a lot of XML right now and this may prove to be a real time saver not to mention making for more readable code.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>727</wp:comment_id>
			<wp:comment_author><![CDATA[Ken Egozi]]></wp:comment_author>
			<wp:comment_author_email>mail@kenegozi.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.kenegozi.com/blog</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-27 10:34:29</wp:comment_date>
			<wp:comment_date_gmt>2008-02-27 10:34:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice and all, nicer API than the default System.XML, but since XML is essentially text, Id use templating solutions for that. See <a rel="nofollow external" href="http://www.kenegozi.com/Blog/2008/02/27/generating-xml-do-we-really-another-api.aspx" title="http://www.kenegozi.com/Blog/2008/02/27/generating-xml-do-we-really-another-api.aspx" rel="nofollow">www.kenegozi.com/...</a> ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>728</wp:comment_id>
			<wp:comment_author><![CDATA[Sergey Shishkin - Fluent XML Writer]]></wp:comment_author>
			<wp:comment_author_email>sergey.shishkin@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sergeyshishkin.spaces.live.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-28 22:46:53</wp:comment_date>
			<wp:comment_date_gmt>2008-02-28 22:46:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pingback]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>729</wp:comment_id>
			<wp:comment_author><![CDATA[Shawn Oster]]></wp:comment_author>
			<wp:comment_author_email>shawn.oster@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://a-simian-mind.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-02-29 03:54:47</wp:comment_date>
			<wp:comment_date_gmt>2008-02-29 03:54:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Reminds me a lot of CMarkup over at <a rel="nofollow external" href="http://www.firstobject.com/" title="http://www.firstobject.com/" rel="nofollow">http://www.firstobject.com/</a>.  I actually ported CMarkup way back when it was free from codeproject into Delphi and that's my XML builder of choice these days.  I just wrapped your cool fluent interface around CMarkup (in Delphi no less) and I have to say, it's a pleasure to use!<br /><br />As an aside, who in the world was *ever* using just a StringBuilder to create their markup?  Seriously people, you've had XmlWriter since 1.0, how did anyone ever think a SB was a good idea?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>730</wp:comment_id>
			<wp:comment_author><![CDATA[James Curran]]></wp:comment_author>
			<wp:comment_author_email>jamescurran@mvps.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.honestillusion.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-03 22:30:37</wp:comment_date>
			<wp:comment_date_gmt>2008-03-03 22:30:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the API, except for two minor details. <br /><br />.Node(&quot;root&quot;).Within().Node(&quot;result&quot;)<br /><br />seems to me to say that &lt;root&gt; is within &lt;result&gt; instead of the other way around.  I might suggest &quot;Wraps()&quot;.<br /><br />Next is XmlDeclaration().  It accepts three parameters, all string.  I know this matches the XmlDocument method, but it's still dumb.  Properly the parameters should be a float, an enum, and a boolean.  I might even go for have a overload that accepts a System.Text.Encoding object as it's second parameter.<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>731</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-28 21:59:48</wp:comment_date>
			<wp:comment_date_gmt>2008-03-28 21:59:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&lt;Jon&gt;I'm not sure if anything could be easier to work with than the XmlSerializer. If you're going to be spitting out or sucking in Xml, you owe it to yourself to look into it.&lt;/Jon&gt;<br /><br />&lt;Mark&gt;I don't want to have to create classes for all the various forms of XML that I might be spitting out. Also, as people mentioned, XmlDocument might not be the best performing - but compared to reflection based serialization, it's blazingly fast.&lt;/Mark&gt;<br /><br />Oh? And of course you know, bacause you've benchmarked it?<br /><br />Well written Xml serializable classes are allways a lot faster to manipulate than the DOM, also when serializing and deserializing. I know they are, because I did benchmark (and decompiled the generated code).<br /><br />Sure, on the first run over a small document, the serializer is somewhat slow, because it needs to emit the code that uses the XmlWriter (or XmlReader) to (de)serialize. That's reflection indeed, with Reflection.Emit. For a website, that shouldn't matter at all, but if you don't want to take the hit, use sgen.exe.<br /><br />Jon is right. Look into it.<br /><br />And BTW, you might want to look at .ashx files as well.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>732</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-29 18:05:54</wp:comment_date>
			<wp:comment_date_gmt>2008-03-29 18:05:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Kris,<br /><br />Actually I didn't &quot;know&quot; per se, I had a hunch. Your comment made me want to test it out:<br /><a rel="nofollow external" href="http://improve.dk/blog/2008/03/29/xmloutput-vs-xmlserializer-performance" title="http://improve.dk/blog/2008/03/29/xmloutput-vs-xmlserializer-performance" rel="nofollow">improve.dk/...</a> <br />XmlOutput is only used to generate Xml, not to read and manipulate it, so that is really not an argument against the XmlOutput class.<br /><br />I'd very much like to see your own performance results &amp; code to see how you got it to be so fast compared to XmlOutput/XmlDocument.<br /><br />Oh, and yes, I have &quot;heard&quot; about ASHX files :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>733</wp:comment_id>
			<wp:comment_author><![CDATA[Brandon Morales]]></wp:comment_author>
			<wp:comment_author_email>improve.dk@brandonmorales.com</wp:comment_author_email>
			<wp:comment_author_url>http://brandonmmorales.blogspot.com/2008/07/xml-fluent-interface.html</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-01 05:20:30</wp:comment_date>
			<wp:comment_date_gmt>2008-08-01 05:20:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I took some of the suggestions made in the comments, and followed up on your suggestion that your class could be redone with similar functionality using XmlWriter. It still allows for output as XmlDocument though.<br /><br />Thanks for the wonderful inspiration, your class really made a difference in my Flash development.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>734</wp:comment_id>
			<wp:comment_author><![CDATA[Denis Kudriashov]]></wp:comment_author>
			<wp:comment_author_email>dionisiydk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-09-15 12:12:18</wp:comment_date>
			<wp:comment_date_gmt>2008-09-15 12:12:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What you think about this syntax:<br /><br />Xml xml = new Xml()<br />xml.With(&quot;root&quot;, ()=&gt;<br />{<br />  xml.With(&quot;user&quot;, ()=&gt;<br />  {<br />    xml<br />      .With(&quot;username&quot;, &quot;orca&quot;)<br />      .With(&quot;realname&quot;,&quot;Mark S. Rasmussen&quot;)<br />      .With(&quot;description&quot;&quot;I'll handle any escaping (like &lt; &amp; &gt; for example) needs automagically.&quot;)<br />      .With(&quot;articles&quot;,()=&gt;<br />      {<br />         xml<br />           .With(&quot;article&quot;,()=&gt;<br />              {<br />                  xml<br />                    .WithAttr(&quot;id&quot;, &quot;25&quot;)<br />                    .With(&quot;Handling DBNulls&quot;)<br />               })<br />           .With(&quot;article&quot;,()=&gt;<br />              {<br />                  xml<br />                    .WithAttr(&quot;id&quot;, &quot;26&quot;)<br />                    .With(&quot;Accessing my privates&quot;)<br />               });<br />       })<br />       .With(&quot;hobbies&quot;,()=&gt; <br />       {<br />          xml<br />            .With(&quot;hobby&quot;,&quot;Fishing&quot;)<br />            .With(&quot;hobby&quot;, &quot;Photography&quot;)<br />            .With(&quot;hobby&quot;, &quot;Work&quot;);<br />        });<br />    });<br />});<br /><br />Moreover, we can replace With() keyword with index []:<br />xml[&quot;user&quot;, ()=&gt;<br />{<br />     xml<br />      [&quot;name&quot;, &quot;John&quot;]<br />      [&quot;address&quot;, &quot;Moscow&quot;];<br />}<br /><br />In smalltalk language we have more elegant interface:<br /><br />xml user:<br />[<br />     xml<br />      name: 'John';<br />      address: 'Moscow';<br />]<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>735</wp:comment_id>
			<wp:comment_author><![CDATA[Steve Trefethen]]></wp:comment_author>
			<wp:comment_author_email>stref@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.stevetrefethen.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-19 23:52:21</wp:comment_date>
			<wp:comment_date_gmt>2008-11-19 23:52:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wouldn't it make sense to assign currentNode = nodeStack.Pop() in EndsWithin()?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>736</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-25 22:10:25</wp:comment_date>
			<wp:comment_date_gmt>2008-11-25 22:10:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Steve,<br /><br />I'm not really sure. As it is now, Within &amp; EndWithin only control stack flow and nothing else. The currentNode variable is what defines what will be modified when we add attributes, inner text. If for instance we went:<br /><br />Node(A).Within().Node(X).EndsWithin().Attribte(&quot;test&quot;, &quot;value&quot;);<br /><br />As it is now, the attribute will be put onto the very lastly added node - X. If we change the currentNode value in EndsWithin, the attribute will be added to node A - a node that may be very long away from our current code point, which will kinda mess up the fluentness of the interface.<br /><br />Also, usually I'll be adding attributes before adding child nodes to a node, thus rendering the issue trivial.<br /><br />I'm open to arguments :)<br /><br />/ Mark S. Rasmussen]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>737</wp:comment_id>
			<wp:comment_author><![CDATA[Steve Trefethen]]></wp:comment_author>
			<wp:comment_author_email>stref@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.stevetrefethen.com/blog/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-25 23:33:38</wp:comment_date>
			<wp:comment_date_gmt>2008-11-25 23:33:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br />  Thanks for the follow-up. While I can appreciate your example I'd fully expect the Attribute to be added to &quot;A&quot; even though it's &quot;far away&quot;. Personally, I'd find it strange to use EndsWithin() then followed by a call to Attributes thinking it will at attributes to a node I just closed out.<br /><br />I had a case where I wanted to build an XML document inside of a for loop and at the end add attributes to the root node of the document with summary counts. In that case, I made the change I suggested and could then simply add EndWithin() calls to &quot;pop&quot; the currentnode back up to the top of the stack and then call .Attribute().<br /><br />Anyway, thanks again for the post.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>738</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Sun]]></wp:comment_author>
			<wp:comment_author_email>jasonsun@netzero.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-12-15 05:12:24</wp:comment_date>
			<wp:comment_date_gmt>2008-12-15 05:12:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am using your class and I have a shorthand question, currently I have an output like this:<br />&lt;Feature&gt;<br />  &lt;FCat&gt;Packages&lt;/FCat&gt;<br />  &lt;FType&gt;OF&lt;/FType&gt;<br />  &lt;FName&gt;<br />  &lt;/FName&gt;<br />  &lt;FPrice&gt;0.0&lt;/FPrice&gt;<br />  &lt;FDetDesc&gt;<br />  &lt;/FDetDesc&gt;<br />&lt;/Feature&gt;<br /><br />Is there possible that I can change:<br />  &lt;FName&gt;<br />  &lt;/FName&gt;<br />and <br />  &lt;FDetDesc&gt;<br />  &lt;/FDetDesc&gt;<br />to:<br />  &lt;FName      and<br />  &lt;FDetDesc <br />?<br /><br />Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>739</wp:comment_id>
			<wp:comment_author><![CDATA[Jason Sun]]></wp:comment_author>
			<wp:comment_author_email>jasonsun@netzero.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-12-15 06:58:37</wp:comment_date>
			<wp:comment_date_gmt>2008-12-15 06:58:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I guess I didn't explain clearly...<br /><br />this is the simplfied soruce code:<br /><br />foreach(AutoFeature featureItem in FeatureList) {<br />    xo.Node(&quot;Feature&quot;).Within();<br />        xo.Node(&quot;FCat&quot;).InnerText(featureItem.FCat);<br />	xo.Node(&quot;FType&quot;).InnerText(featureItem.FType);<br />	xo.Node(&quot;FName&quot;).InnerText(featureItem.FName);<br />	xo.Node(&quot;FPrice&quot;).InnerText(featureItem.FPrice);<br />	xo.Node(&quot;FDetDesc&quot;).InnerText(featureItem.FDetDesc);<br />    xo.EndWithin();<br />}<br /><br />and as long as any field = null or &quot;&quot; in the InnerText(field), the tag will become<br /><br />&lt;TAG&gt;<br />&lt;/TAG&gt;<br /><br />instead of &lt;TAG <br /><br />so my quesion is how to change to get shorthand tag?<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>740</wp:comment_id>
			<wp:comment_author><![CDATA[online tv]]></wp:comment_author>
			<wp:comment_author_email>hokendyfan@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.tv37.net/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-10-29 16:55:02</wp:comment_date>
			<wp:comment_date_gmt>2012-10-29 16:55:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your blog provided us with valuable information to work with. Each &amp; every tips of your post are awesome. Thanks a lot for sharing. Keep blogging. Thanks for the valuable post.. very nice.. traffic reviews ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>742</wp:comment_id>
			<wp:comment_author><![CDATA[Asynth]]></wp:comment_author>
			<wp:comment_author_email>contact@asynth.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-13 17:36:53</wp:comment_date>
			<wp:comment_date_gmt>2012-09-13 17:36:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm implementing it in Unity which supports a subset of .NET without LINQ.<br />It's simple, clear and efficient.<br />Thank you !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>745</wp:comment_id>
			<wp:comment_author><![CDATA[khach san vietnam]]></wp:comment_author>
			<wp:comment_author_email>laura.helmiton@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://bookhotel.vn/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-28 02:24:34</wp:comment_date>
			<wp:comment_date_gmt>2012-07-28 02:24:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic post, it's being mentioned in a lot recently topics but with that said yours is by far the most informative post I have read. I am looking for sites to leave a guest post on if your interested please contact via the email I have supplied in this comment. Thanks<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>746</wp:comment_id>
			<wp:comment_author><![CDATA[Clarence H.]]></wp:comment_author>
			<wp:comment_author_email>clarencehall0015@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.edu.com.au/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-30 01:45:30</wp:comment_date>
			<wp:comment_date_gmt>2012-07-30 01:45:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A blog can never be questioned because you are free anything you want but I highly and positively questioned the blogger for posting this kind of blog.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>774</wp:comment_id>
			<wp:comment_author><![CDATA[Noman]]></wp:comment_author>
			<wp:comment_author_email>jhakas@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-27 17:33:47</wp:comment_date>
			<wp:comment_date_gmt>2011-05-27 17:33:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know they are, because I did benchmark (and decompiled the generated code).<br /><br /><a href="http://www.okmulgeeattorney.com" rel="nofollow">Okmulgee Lawyer</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>776</wp:comment_id>
			<wp:comment_author><![CDATA[Justin]]></wp:comment_author>
			<wp:comment_author_email>justin@magaram.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-02 19:42:11</wp:comment_date>
			<wp:comment_date_gmt>2012-11-02 19:42:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm not sure why this is better than doing something like the code below. I actually can't get mine to work properly but you'll get the idea. Seems much more concise than your approach.<br /><br />string xmlText=@&quot;<br />- multiline xml<br />- indentation is ok with c# text editor<br />- double quote replaced by single quote<br />&quot;;<br />xmlText = xmlText.Replace(&quot;'&quot;,&quot;&quot;&quot;);<br />var xmlDocument = new XmlDocument();<br />xmlDocument.LoadXml(xmlText);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>777</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-04 16:06:12</wp:comment_date>
			<wp:comment_date_gmt>2012-11-04 16:06:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If it works for you, by all means, keep it simple.<br /><br />I prefer using an XmlOutput-like method since I avoid all of the string escaping, @'s and improperly indented output when I pass the StringBuilder/string between different functions &amp; contexts. So many things that can go wrong unless you really know what you're doing. I also don't want to manually take care of details like CDATA, attribute value escaping and so forth.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>778</wp:comment_id>
			<wp:comment_author><![CDATA[cheesecake]]></wp:comment_author>
			<wp:comment_author_email>ng.uy.en.haonglunglinhhoasactha.m@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bakerzin.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-15 07:24:20</wp:comment_date>
			<wp:comment_date_gmt>2012-11-15 07:24:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi! This is my first visit to your blog! We are a team of volunteers and new initiatives in the same niche. Blog gave us useful information to work. You have done an amazing job!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>779</wp:comment_id>
			<wp:comment_author><![CDATA[seo dubai]]></wp:comment_author>
			<wp:comment_author_email>sfc.s.dj.fcd.zj.dfcndzjkxcv.xxcvdx@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.useo.ae/dubai</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-24 08:18:33</wp:comment_date>
			<wp:comment_date_gmt>2012-11-24 08:18:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As soon as a careful browse I thought it was really enlightening. I take pleasure in you taking the time and effort to put this blog post together. I once again discover me personally spending way to much time both reading and leaving comments.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>780</wp:comment_id>
			<wp:comment_author><![CDATA[friv]]></wp:comment_author>
			<wp:comment_author_email>hannahahermansen710@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.topfrivgames.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-28 12:33:28</wp:comment_date>
			<wp:comment_date_gmt>2012-11-28 12:33:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a nice blog i must say, usually i don't post comments on others' blogs]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Automatically Mapping Datatable to Objects</title>
		<link>http://improve.dk/automatically-mapping-datatable-to-objects/</link>
		<pubDate>Mon, 19 Nov 2007 00:59:27 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/11/19/automatically-mapping-datatable-to-objects.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I often need to transfer data from my business layer to my presentation layers in a strongly typed way. In this example I'll use the following very struct and corresponding DataTable to represent the data I need to transfer:</p>

<pre lang="csharp">struct Test
{
	public string Name;
	public int Value;
}

using (DataTable dt = new DataTable())
{
	dt.Columns.Add("Name", typeof(string));
	dt.Columns.Add("Value", typeof(int));
}</pre>

<p>Our objective is basically to transfer the DataRows in the DataTable into a List that can be transferred on to the next layer.</p>

<p>The fastest way possible would be doing it manually like so:</p>

<pre lang="csharp">List list = new List();
foreach (DataRow dr in dt.Rows)
{
	Test t = new Test();
	t.Name = dr["Name"].ToString();
	t.Value = Convert.ToInt32(dr["Value"]);

	list.Add(t);
}</pre>

<p>But this takes a lot of time to write, especially if your objects vary a lot and you have to create a lot of them. That's where my MapList function comes into play:</p>

<pre lang="csharp">private static List MapList(DataTable dt)
{
	List list = new List();

	FieldInfo[] fields = typeof(T).GetFields();
	T t = Activator.CreateInstance();

	foreach (DataRow dr in dt.Rows)
	{
		foreach (FieldInfo fi in fields)
			fi.SetValueDirect(__makeref(t), dr[fi.Name]);

		list.Add(t);
	}

	return list;
}</pre>

<p>It takes a DataTable as the sole parameter (you could easily use a DataReader if you wanted to). It retrieves the fields of the generic type by reflection. It is important to note that this includes all fields of the type, so we're expecting there to be a 1:1 map of the DataTable and the types' fields. Another important remark is that the generic type <i>must</i> be a struct - for us to be able to move the type instantiation outside of the loop (for performance), it must be a struct (since adding it to the List will create a copy). If it were a class, we would overwrite the already existing objects each time we iterated a new row in the DataTable.</p>

<p>The SetValueDirect() method is somewhat faster than SetValue(). Caching the TypedReference for t by creating it outside the loop actually decreased performance, I'll probably have to look into the IL code to identify why. I've also tried caching the DataRow ordinals, there is no performance gain to be seen unless we're talking several millions of datarows, and in that case - this function is not the way to go.</p>

<p>I would really like to obtain a pointer to the struct fields and set the values directly using some unsafe pointer magic - anyone know how to obtain a pointer to the field hiding behind the FieldInfo type we get by reflection?</p>

<p>So what's the catch as opposed to doing it manually? Performance. Here's a graph that shows the performance hit in sets of 1 to 1.000.000 iterations. Note that at 1000 iterations the timing shifts from ticks to milliseconds and that the graph is using a base 10 logarithmic scale.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2007/11/maplistperf_2.jpg"><img class="alignnone size-full wp-image-1918" alt="maplistperf_2" src="http://improve.dk/wp-content/uploads/2007/11/maplistperf_2.jpg" width="483" height="291" /></a></div></div>

<p>Obviously there's a performance hit - rather consistently, a factor of 10 -, but depending on the situation it is to be used in, mapping the objects by reflection may easily be a viable solution.</p>

<p><a href="http://improve.dk/wp-content/uploads/2007/11/ConsoleApplication1.rar">ConsoleApplication1.rar - Sample solution</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1263</wp:post_id>
		<wp:post_date>2007-11-19 00:59:27</wp:post_date>
		<wp:post_date_gmt>2007-11-19 00:59:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>automatically-mapping-datatable-to-objects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="datatable"><![CDATA[Datatable]]></category>
		<category domain="post_tag" nicename="reflection"><![CDATA[Reflection]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Automatically Mapping Datatable to Objects]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>166142</wp:comment_id>
			<wp:comment_author><![CDATA[Andrea]]></wp:comment_author>
			<wp:comment_author_email>andregi83@yahoo.it</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>5.98.30.113</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 11:13:10</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 10:13:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you. A simple and efficient method .. really brilliant!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393582391.0358879566192626953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:62:{s:15:"comment_post_ID";i:1263;s:14:"comment_author";s:6:"Andrea";s:20:"comment_author_email";s:18:"andregi83@yahoo.it";s:18:"comment_author_url";s:0:"";s:15:"comment_content";s:61:"Thank you. A simple and efficient method .. really brilliant!";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:11:"5.98.30.113";s:10:"user_agent";s:72:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:27.0) Gecko/20100101 Firefox/27.0";s:8:"referrer";s:61:"http://improve.dk/automatically-mapping-datatable-to-objects/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:61:"http://improve.dk/automatically-mapping-datatable-to-objects/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:6:"Andrea";s:10:"POST_email";s:18:"andregi83@yahoo.it";s:8:"POST_url";s:0:"";s:12:"POST_comment";s:61:"Thank you. A simple and efficient method .. really brilliant!";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1263";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"f4d7287c60";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_USER_AGENT";s:72:"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:27.0) Gecko/20100101 Firefox/27.0";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"it-IT,it;q=0.8,en-US;q=0.5,en;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:61:"http://improve.dk/automatically-mapping-datatable-to-objects/";s:11:"HTTP_COOKIE";s:0:"";s:15:"HTTP_CONNECTION";s:5:"close";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"208";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:11:"5.98.30.113";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:4:"4755";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393582390";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-23 22:49:10";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Weighted Random Selections in SQL Server</title>
		<link>http://improve.dk/weighted-random-selections-in-sql-server/</link>
		<pubDate>Sun, 25 Nov 2007 22:01:42 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2007/11/25/weighted-random-selections-in-sql-server.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>UPDATE</h2>

<p>After testing my code through based on JP’s comments, I’ve realized my implementation was way too naïve and cannot be used for most datasets. For a correct weighted random implementation, see <a href="http://stackoverflow.com/questions/58457/random-weighted-choice-in-t-sql/454454#454454" target="_blank">Dems’ answer on StackOverflow</a>.</p>

<h2>Original (flawed) implementation</h2>

<p>There are no built-in functions for selecting weighted averages in SQL Server. Fortunately it's a simple task to do so oneself.</p>

<p>We'll use this table as an example:</p>

<pre lang="tsql">CREATE TABLE #tmp
(
	Name varchar(64),
	Points int
)

INSERT INTO #tmp VALUES ('Mark', 25);
INSERT INTO #tmp VALUES ('Jakob', 12);
INSERT INTO #tmp VALUES ('Peter', 17);
INSERT INTO #tmp VALUES ('Anders', 0);
INSERT INTO #tmp VALUES ('Kirsten', 33);
INSERT INTO #tmp VALUES ('Mads', 4);</pre>

<p>This table represents a list of players in an arbitrary game. The more points you have, the bigger the chance of winning. It has to be weighted, meaning that the person with just 4 points may win, but is unlikely to do so.</p>

<p>The RAND() function in SQL Server returns a floating point number between 0 and 1. Multiplying that with our points gives a random weight based on the amount of points. Unfortunately the RAND() function is seeded once for each query, not for each row - meaning that for each row RAND() will yield the same result, effectively multiplying the points with a constant all the way through. We need to provide a new seed for the RAND() function for each row. NEWID() returns a new unique identifier that may be used as a seed if cast to VARBINARY:</p>

<pre lang="tsql">SELECT Name, Points, RAND(CAST(NEWID() AS VARBINARY)) * Points AS Weight FROM #tmp ORDER BY Weight DESC

Name     Points  Weight
Peter    17      15,9795741766356
Mark     25      14,9122204505153
Kirsten  33      9,67888480542761
Jakob    12      9,38697608441358
Mads     4       0,833340539027792
Anders   0       0</pre>

<p>And here we have the result ordered by weight. As you can see, although Kirsten has the most points, Peter ended up winning the competition.</p>

<h2>FIG1: Showing the statistical distribution of using RAND(NEWID())</h2>

<pre lang="tsql">DECLARE @SampleSize int = 100000;

WITH RND AS
(
	select top (@SampleSize) ROUND(RAND(CAST(NEWID() AS VARBINARY)), 1, 1) AS RandValue from sys.objects cross join sys.columns
)
SELECT
	COUNT(*),
	RandValue,
	COUNT(*) / CAST(@SampleSize AS float) * 100 AS [%]
FROM
	RND
GROUP BY
	RandValue
ORDER BY
	COUNT(*) DESC</pre>

<p>Results:</p>

<pre lang="tsql">COUNT	VAL	%
10117	0,8	10,117
10091	0,4	10,091
10073	0	10,073
10034	0,9	10,034
9996	0,5	9,996
9993	0,2	9,993
9956	0,7	9,956
9927	0,6	9,927
9923	0,3	9,923
9890	0,1	9,89</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1264</wp:post_id>
		<wp:post_date>2007-11-25 22:01:42</wp:post_date>
		<wp:post_date_gmt>2007-11-25 22:01:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>weighted-random-selections-in-sql-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="random"><![CDATA[Random]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Weighted Random Selections in SQL Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>782</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-27 21:08:14</wp:comment_date>
			<wp:comment_date_gmt>2011-05-27 21:08:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You're wrong, but right at the same time.<br /><br />There is a major flaw in my sample that renders it useless. However, neither RAND() nor the use of NEWID() has anything to do with the error. Instead, it's my most naive algorithm that's incorrect, a fact I didn't realize untill testing my sample through rigorously due to your comments.<br /><br />For a correct weighted random implementation, see Dems' answer at Stack Overflow: <a rel="nofollow external" href="http://stackoverflow.com/questions/58457/random-weighted-choice-in-t-sql/454454#454454" title="http://stackoverflow.com/questions/58457/random-weighted-choice-in-t-sql/454454#454454" rel="nofollow">stackoverflow.com/.../454454#454454</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>783</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-28 04:40:55</wp:comment_date>
			<wp:comment_date_gmt>2011-05-28 04:40:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is another source to look at.  In fact it goes over different type of weighting calculations and even has output screen captures.  <br /><a rel="nofollow external" href="http://www.experts-exchange.com/Microsoft/Development/MS-SQL-Server/A_4319-Calculating-Special-Means-in-Microsoft-SQL-Server-Part-1-Weighted-Average-and-Harmonic-Mean.html" title="http://www.experts-exchange.com/Microsoft/Development/MS-SQL-Server/A_4319-Calculating-Special-Means-in-Microsoft-SQL-Server-Part-1-Weighted-Average-and-Harmonic-Mean.html" rel="nofollow">www.experts-exchange.com/...</a><br /><br />The one that might be closest to what we need would be the formula shown for calculating students grades which are based on a weighted sample.  That would be &quot;sample 2&quot; shown on the page.  however, it is simply a calculator method for determining each students grade.  it is missing the &quot;random&quot; selection based on those weights but the calculations are simple and might be worth looking into adding in a random selection.<br /><br />mark, you are a smart guy.  someone could easily add in the &quot;Top 1&quot; to the select area then sort by a NewID to give it a random output BUT I am not sure that is actually going to sort over 10k records the correct match based on the weights.<br /><br />So I would like you Mark to look at that simple method and see if you can see if there is a way to take it to the next level.  This formula at the link above does go through every selection in a table and calculate each one separately so that part is taken care of.  Now all that has to happen is take care of the random output selection based on the weighted averages......]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>784</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-28 13:32:04</wp:comment_date>
			<wp:comment_date_gmt>2011-05-28 13:32:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[***** UPDATE *****<br /><br />Mark, I think I have a solution.  I need for you to verify and finalize the SQL with me....I am going to base this partially on the 2nd formula listed at <a rel="nofollow external" href="http://www.experts-exchange.com/Microsoft/Development/MS-SQL-Server/A_4319-Calculating-Special-Means-in-Microsoft-SQL-Server-Part-1-Weighted-Average-and-Harmonic-Mean.html" title="http://www.experts-exchange.com/Microsoft/Development/MS-SQL-Server/A_4319-Calculating-Special-Means-in-Microsoft-SQL-Server-Part-1-Weighted-Average-and-Harmonic-Mean.html" rel="nofollow">www.experts-exchange.com/...</a><br />for the weighted course final grade average.  However, I am going to simplify this down to just 1 table and not 3 and avoid any Joins.  This method SHOULD allow us to break up 1 weight into multiple smaller weights that equal the main weight.<br /><br />Mark, see if you can finalize this.<br /><br />There are 5 people.  We are going to assume each persons entry into the table is worth exactly the same to start off with make the demo easier to work with but Mark's original numbers above should work if this formula is proven to work.<br /><br />Participants:<br />Steve: weight is 1<br />Amy: weight is 1<br />Becky: weight is 1<br />Andy: 4 weights at .25 that total to 1<br />Chris: 2 weights at .50 that total to 1<br /><br />How it looks in the table<br />Steve  1<br />Amy   1<br />Beck  1<br />Andy  .25<br />Andy  .25<br />Andy  .25<br />Andy  .25<br />Chris  .50<br />Chris  .50<br /><br />Now, using the formula at the link above it multiples the weight of each test by the score for each test then sums all of these together to get the persons final grade for the year.  What I am attempting to do is something similar.  However, all we have is the simple weight listed above.  We need the score.  So, in our case the score is going to be the constant RAND() which will be the same for each person.  There is a reason for this because we want to eventually sort by the NewID() function to get our &quot;random&quot; winner.  However, in order to do this EVERY PERSON in the calculation must all be equal to the same weight of 1.  Now if we sort by NewID() we get our random winner.<br /><br />Here is how it works, and I need you Mark to finalize this for me.<br /><br />-- PART 1 --<br />Select Top 1 Name, Weight<br />When Active = True (I put this in there to filter out records that are turned off)<br />Then SUM(Weight * Score)<br />From TableName<br />Order By NewID()<br /><br />-- RESULT --<br />This SHOULD give us EVERYONE totalling up to 1 * RND() or exactly the same number since it is summing up Chris as 1 * RND() and Andy as 1 * RND().  we then simply sort by NewID() which will give us only 1 winner chosen with the TOP 1 in the Select area.<br /><br />-- PART 2 --<br />Now we know our winner we simply select the TOP 1 only for the winner.  If there is only 1 entry then it is it.  For Andy and Chris with multiple entries it will sort those by NewID() and give us only 1.<br /><br />Select Top 1 Name<br />From TableName<br />Where Name = winners name from part 1 above<br />Order By NewID()<br /><br />This formula using part 1 and part 2 combined together would be good for an ad banner rotation or a music database where mainly all banners or music is effectively treated equal where each person or banner or song in the database is equal to any other.  However, if there are multiple banners or songs by 1 person and you dont want to favor those individual banners or songs more because there are simply more of them then we can divide there percentages up to equal what 1 banner or song would equal.  Now, each sub banner or sub song can be chosen but only as a % of the others of the same person or artist or banner owner.  When added together as individual items they total up to 1 main category item.<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>785</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-28 16:11:31</wp:comment_date>
			<wp:comment_date_gmt>2011-05-28 16:11:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[the above formula is really just a take on sorting by NewID since every item basically holds the same weight.  this approach would NOT be able to be used in it's current form with completely random weights like Mark started off with in his original example.  what this formula would be good for is flat sorting of equal values but when you want to break up a value into sub values that equal the main value.  up to now the previous formulas would not allow this unless you used Ben Nadels formula: <a rel="nofollow external" href="http://www.bennadel.com/blog/1472-Ask-Ben-Selecting-A-Random-Row-From-A-Weighted-Filtered-Record-Set.htm?&amp;_=0.7031691207084805&amp;_=0.014333434635773301&amp;_=0.08860672335140407&amp;_=0.506764959776774#comments_35233" title="http://www.bennadel.com/blog/1472-Ask-Ben-Selecting-A-Random-Row-From-A-Weighted-Filtered-Record-Set.htm?&amp;_=0.7031691207084805&amp;_=0.014333434635773301&amp;_=0.08860672335140407&amp;_=0.506764959776774#comments_35233" rel="nofollow">www.bennadel.com/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>786</wp:comment_id>
			<wp:comment_author><![CDATA[GTR]]></wp:comment_author>
			<wp:comment_author_email>gtr1971@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-28 01:49:57</wp:comment_date>
			<wp:comment_date_gmt>2011-07-28 01:49:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello Mark and JP,<br /><br />I've been working on this exact problem lately and I borrowed Mark's idea, though I'm using it in a slightly different way. The difference for me is after getting the weighted values, I want to ADD weight to the records with fewer entries in the db.  I other words, if &quot;User A&quot; had only 4 entries and &quot;User B&quot; had 12, I want to give User A more of a chance of getting picked.<br /><br />That part isn't hard, I just order the weighted values low to high and pick from the top. No biggie.<br /><br />However, it does seem unclear as to whether the User with only 4% of the total entries gets picked more often than the user with 30% of the entries. I'm testing this on a VERY small number of records, so I can't test its validity for doing what we really want.<br /><br />Have either of you tested it more since your last post(s)?<br /><br />Thanks!<br /><br />- Greg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>787</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-01 05:35:07</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 05:35:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[have your ever run this in a large query test, say 1k or 10k loops to see what the outcome was and verify the sampling matches up to the Point % in your example?<br /><br />for instance, there are a total of 91 points in your example when combining all your players.  If Mark has 25 of those 91 points then he has 27.5% of the points, and Kirsten who has 33 points has 36.3%, etc for all the players.<br /><br />Running a batch of 10,000 queries should, if this formula works correctly, produce something nearly identical to the %'s listed above, usually within 1% either way.<br /><br />I really like using NewID and this example seems extremely good but I am curious if it really works and produces the correct percentage breakdown after a large batch is run?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>788</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-01 11:06:34</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 11:06:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have not tried to test/prove the statistical distribution of RAND() using a NEWID() as the seed parameter.<br /><br />A simpler test would be to just run a large batch of RAND(NEWID()) and see whether those numbers are distributed evenly between 0 and 1. If they are, using it as the basis for a weighted random selection should be fine.<br /><br />Let me know if you try it out.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>789</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-01 20:26:46</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 20:26:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like your option much better on paper compared to the other option that seems to be published more often in articles online which actually does the Rand() in the Order By section which can affect performance on SQL Server.  That formula is either:<br />ORDER BY Rand()*(1/Weight) LIMIT 1<br />-or-<br />ORDER BY Rand()*(Weight) LIMIT 1<br />depending upon how you determine your weight and how many results you want to limit the query to.<br /><br />*** I would like to work with you on this to run some tests.  I have a very good feeling your method with not only be faster than the other method listed above but potentially more accurate.  There are hundreds of articles and blogs with people looking for weighted random selections and you are the only one using this method.  However, your method uses the fairly standard random number method using NewID so it makes sense to stay with this method for weighted random selections.  We can run some tests and maybe make a chart doing 10 sample runs.  If this formula works out then we should be able to show and prove the percentages come out pretty close to the percentages they should be.  If so your formula might start to replace the other method.<br /><br />the bottom line is that the calculated weighting should always equal the percentage of the total weights added up.  Nobody seems to discuss this.  They might get results out of their formula but if the percentages dont match up then their formula is not correct.  That is why I would like to test this out with you.<br /><br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>790</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-01 20:44:20</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 20:44:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The problem with doing a<br /><br />SELECT * FROM xyz ORDER BY RAND()<br />or<br />SELECT *, RAND() FROM xyz<br /><br />Is that the RAND() function is calculated just once - thus all rows receive the same value and the row with the highest weight wins.<br /><br />To force RAND() to generate a unique value on each row, we need to provide it a unique seed. We might use a row ID, but that would be deterministic between selections. Thus the use of NEWID() to ensure a unique value for each row for each execution.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>791</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-01 22:58:29</wp:comment_date>
			<wp:comment_date_gmt>2011-05-01 22:58:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[we just need to test this on several large runs to make sure it really does what we think it will.  however, just running RAND(NEWID()) alone might not give true results because we are not muliplying by the score or weight field since that number is different and all this will give us is a random unique number for every row.  we have to do the test with the score or weight factored in then look at the end result percentages and see if they match up.  the other guy, which I had already read did in fact uses your same logic but uses joins and although it is for SQL Server it is really written for cold fusion.  however, his example does not calculate the weighted percentage since there is no multiplication to a score or weight field.  his is ONLY a random calculation without the weighting.....<br /><br />if you want a chart on how accurate just the NewID() function is this guy below actually did the chart for 10 numbers (1 through 10) in large batches and did this 3 times.  Using NewID() in SQL Server he shows the distribution.  What he should have done after his chart is add up each number for all 3 runs and divide by 3.  I did that and all the averages came up nearly identical, proving the NewID() does what is it supposed to.<br /><a rel="nofollow external" href="http://www.carlj.ca/2007/12/16/selecting-random-records-with-sql/" title="http://www.carlj.ca/2007/12/16/selecting-random-records-with-sql/" rel="nofollow">www.carlj.ca/...</a> <br /><br />So Mark, that chart is what what you said to do in running the numbers. However, nothing has been done yet to take it to the next level which is testing it out by multiplying by the score or weighted field.....<br /><br />I guess what I would like to see done is doing a chart like this guy did but use Mark's formula to see how accurate the weighting really is.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>792</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-02 07:43:47</wp:comment_date>
			<wp:comment_date_gmt>2011-05-02 07:43:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I do not think that it's necessary to multiply by the weight factor in tests.<br /><br />There are two basic operations here - one is generating a random factor, another is applying the weight. The latter function is deterministic and thus not interesting when we're looking for statistic anomalies.<br /><br />As long as we can prove that RAND(NEWID()) is truly pseudo-random, the deterministic application of the weight will follow the statistic randomness of RAND(NEWID()).<br /><br />If you wish to perform the tests, I'll gladly put the chart up here or link to your own blog with the results :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>793</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-02 22:32:22</wp:comment_date>
			<wp:comment_date_gmt>2011-05-02 22:32:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, thanks for your replies.  The reason I think it is best to do the multiplication by the weight is because the other formula listed earlier actually has a flaw and I believe that testing your formula out will show it to be more accurate.<br /><br />The flaw with the other formula is that if you run the tests that formula's flaw is when you are using weights that range widely - say from 1 to 100.  When you use weights that wide ranging what that formula creates is a high % error on larger weighted numbers.  What that means is that higher weighted numbers are FARTHER away from where they should be and lower numbers are closer to where they should be.  It turns out that formula has a sliding scale with higher weighted numbers being less accurate and getting far too many views, middle weighted numbers getting the proper amount of views, and lower weighted numbers not getting enough views.  This doesn't really come into play if the weights are close to each other, say 1 to 3 as the % error is close enough to where they should be - but when the weights are larger apart, say 1 to 100 then you start to notice the larger numbers being much higher % outputs than what they should get based on the (weight of individual item/total of all weights for all items) calculation which is the expected result.<br /><br />That is why I think your formula is more accurate and should prevent this % error problem. - We just need to prove it - and if so your formula might replace the other formula as the choice method.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>794</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-02 22:53:28</wp:comment_date>
			<wp:comment_date_gmt>2011-05-02 22:53:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, one more thing - <br /><br />if we simply just test out RAND(NEWID()) are we not simply just getting the NewID() because we are multiplying the unique NewID() by a singular constant number which is RND which is seeded the same for every row of NewID() ??????  We will just be getting a fraction of the seeded NewID() for each row because we are just multiplying each NewID() by the same fractional constant.  If we are just trying to validate randomness then the NewID() does this on it's own and was proven in the link I provided earlier when that guy gave 3 run stats to prove it.  Just adding in the RND doesn't really give us much more.  But maybe you could clarify this.<br /><br />This is why I believe doing the test by multiplying by the weight is important - with a range of weights.  Just my opinion but you are better at this than I am so I look forward to your logic on this.  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>795</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-02 23:14:29</wp:comment_date>
			<wp:comment_date_gmt>2011-05-02 23:14:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mark, email me separately so i can run the tests on my SQL Server but I need your help.  I have a system set up already for ad banners that I can use for the test.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>796</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-03 09:30:21</wp:comment_date>
			<wp:comment_date_gmt>2011-05-03 09:30:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The weight is an insignificant constant in this question. Our formula looks like this:<br /><br />RAND(SEED)*WEIGHT<br /><br />Weight being a constant value, only modified by the left hand side of the multiplication. Both RAND and SEED are nondeterministic in this case (though you could argue RAND is deterministic within the confines of a given seed), while WEIGHT is fully deterministic. Thus, for statistic purposes, the relevant portion remans:<br /><br />RAND(SEED)<br /><br />&quot;because we are multiplying the unique NewID() by a singular constant number which is RND&quot;<br /><br />But RAND is not a constant. If you do not force a new RAND seed per row - a single RAND value is retrieved, stored as a constant and used throughout the query - true. However, by creating a new RAND instance with a new seed for each row, RAND becomes truly pseudo-random, and thusly we're actually testing the randomness of RAND.<br /><br />&quot;we are just multiplying each NewID() by the same fractional constant&quot;<br /><br />It's important to note that we're not multiplying NEWID() by anything - we're multiplying the RAND() result by something, namely the weight. NEWID() does not generate a random numeric value in itself, it simply generates a 36char random value which we convert into binary format, to be used as a seed for RAND. If there was a bug in NEWID() that resulted in it being constant for all rows - we'd use the same seed and thus get a constant random value.<br /><br />You may then argue that we should test RAND and NEWID separately to ensure both are random - but I trust NEWID(), especially as it's only purpose is for seeding RAND.<br /><br />The only thing I could see an argument for testing out, is the value distribution between 0 and 1 by calling RAND() consecutively using NEWID() as a seed. The following code shows the distribution rather conclusively, using a sample size of just 100000 - increase it to see the numbers growing even closer. You can use the below as a basis of adding on a weight factor rather easily.<br /><br />[Please see FIG1 in blog body]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>797</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-22 04:26:11</wp:comment_date>
			<wp:comment_date_gmt>2011-05-22 04:26:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[PART 1: had to break up<br /><br />---- IMPORTANT ----<br /><br />Mark, I have been busy so I could not respond to your last comment.  However, I finally had to time to run your script all the way through and I have BAD news.  It does NOT work just like I suggested.  I now have the SQL results to back up my claim and the numbers clearly show the formula is completely wrong.<br /><br />Now, your NewID() calculations ARE correct and there are plenty of other sites that have the same identical breakdowns of the NewID() distribution but that is the only part of the formula that works.  <br /><br />So everyone else understands lets first go over the EXPECTED numbers of what a &quot;random weighted sample&quot; should be.<br /><br />Weighted Numbers by their definition is the (weight assigned for 1 item) / (total of all weights for all items).  That is a weighted number.  That's a division calculation.  That is the weight of EACH item compared to the sum of all the items.<br /><br />So, using Marks own numbers we have the following data:<br />Peter (weight = 17)<br />Mark (weight = 25)<br />Kirsten (weight = 33)<br />Jakob (weight = 12)<br />Mads (weight = 4)<br />Anders (weight = 0)<br /><br />So, if you add up all the weights or points you get a total weight of 91.<br /><br />So now we can get our ACTUAL EXPECTED WEIGHTING for each person.  If you were to do this mathematically for any business critical application these are the numbers YOU and YOUR BOSS and YOUR CUSTOMERS would expect.  Anyone can calculate these numbers so a customer paying you would expect to see these numbers.  <br /> <br />Peter: 17/91 = 18.7% <br />Mark: 25/91 = 27.5%<br />Kirsten: 33/91 = 36.3%<br />Jacob: 12/91 = 13.2%<br />Mads: 4/91 = 4.4%<br />Anders: 0/01 = 0%<br /><br />THESE ARE THE ACTUAL NUMBERS AND ANY FORMULA SHOULD BE +/1 1% of these numbers in large batch runs.  Add up all those %'s and you get 100% as a check.<br /><br />Now, the bad news for Mark's Formula - It doesn't work.  The numbers, just as I had mentioned above in previous posts will produce wrong numbers - REGARDLESS whether we use the NewID() function.  In fact the NewID() is actually part of the problem as I will explain below.<br /><br />Here are the actual numbers for both a batch run of 1,000 and 10,000.  Large enough to prove the formula is wrong.<br /><br />FOR THE BATCH RUN OF 1,000 HERE ARE THE NUMBERS:<br />Peter: 103 which equals 10.3% ---- should be 18.7%<br />Mark: 296 which equals 29.6% ---- should be 27.5%<br />Kirsten: 564 which equals 56.4% ---- should be 36.3%<br />Jakob: 37 which equals 3.7% ---- should be 13.2%<br />Mads: 0 which equals 0% ---- should be 4.4%<br />Anders: 0 all equal 0% which is correct, never pulled it<br />-- OVERVIEW:  if you total the numbers they equal to 1000<br />BOTTOM LINE:  results not even close to expected values<br /><br />FOR THE BATCH RUN OF 10,000 HERE ARE THE NUMBERS:<br />Peter: 1106 which equals 11.06% ---- should be 18.7%<br />Mark: 3154 which equals 31.54% ---- should be 27.5%<br />Kirsten: 5451 which equals 54.51% ---- should be 36.3%<br />Jakob: 282 which equals 2.82% ---- should be 13.2%<br />Mads: 6 which equals 0.6% ---- should be 4.4%<br />Anders: 0 all equal 0% which is correct, never pulled it<br />-- OVERVIEW:  if you total the numbers they equal to 10,000<br />BOTTOM LINE: numbers for 1k are almost identical to 10k which means the formula is running a nearly identical result pattern but both are WAY TO FAR OFF from the expected results.  That proves the formula is wrong.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>798</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-22 04:27:44</wp:comment_date>
			<wp:comment_date_gmt>2011-05-22 04:27:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[--- PART 2 ----<br /><br />Why I believe the formula is wrong.  The NewID() is not a stepping sequential increment. The numbers are all over the place.  To properly, in my opinion, do a seeding you would have to do a 1 to x increment and then ONLY seed by those numbers.  If you have 1,000 then you should be seeding ONLY with the numbers 1 to 1000 randomly multiplied to each rows WEIGHT or POINTS then take the highest scoring 1 and that is your winner. (See the link below as this other person does something similar to this and his formula is the most accurate you can get) In doing it this way you would not get wide ranging way out of wack calculations causing the % error that I mentioned in my other posts above.  This is the flaw with using NewID() is that the % error using it is huge.  JUST AS I SAID IN EARLIER POSTS the WEIGHTS or POINTS in the middle are somewhat closer to being accurate but lower numbers and higher numbers are horribly way off. The ONLY time the NewID() would be accurate is if you seed using it on a very, very, very large sample at the upper limits of how many NewID() numbers can be assigned.  Then it would be as close to 1 to x as possible.  This is important to understand.  if the query you are doing is seeding 10,000 rows but NewID() can do 100,000,000,000,000 or what ever number that is you can see you are multiplying some rows by numbers that are so huge and others that are so small causing very large % errors.  so instead of being seeded by 1 to 10,000 it is being seeded in the end by 1 to 100,000,000,000,000.......not very accurate.<br /><br />Mark, you are smart.  There is probably a fix to this.  However, I found another person who did it a different way, still using New(ID) but he took it a step further and his results are the most accurate you can get.  VERY ACCURATE.  What's crazy is that people on his blog point back to your calculation as a better, simpler way, only to find out now it is not accurate.  The link to that other formula and explanation is:<br /><a rel="nofollow external" href="http://www.bennadel.com/blog/1472-Ask-Ben-Selecting-A-Random-Row-From-A-Weighted-Filtered-Record-Set.htm" title="http://www.bennadel.com/blog/1472-Ask-Ben-Selecting-A-Random-Row-From-A-Weighted-Filtered-Record-Set.htm" rel="nofollow">www.bennadel.com/...</a><br />In a nutshell what he is doing is taking weight and using a pivot table to enter in the person x times for every WEIGHT OR POINT.  Basically Peter would be entered in 17 times, Mark 25 times, etc.  In the end you get a pivot table that enters everyone in the total amount of times of their WEIGHT or POINT.  THEN he sorts by the New(ID).  Far more accurate.  There is NO multiplication and there is NO RANDOM being used.  Now you are simply picking out a number from the hat in a raffle.  The more points you have the more numbers you have in the hat and your chances increases.  THE MOST ACCURATE WAY TO DO THIS.....<br /><br />Now, to make this formula even worse, lets take a more real world example.  Lets say this was for an ad banner system.  Customers like Kirsten and Jakob want to pay the same amount for just 1 banner but break up that same amount of exposure into multiple banners.  Kirsten wants to show 3 banners instead of everyone elses 1 banner.  To do this you would simply divide up her standard WEIGHT or POINTS by 3 for the 3 banners. Thus making here be entered into the table 3 times:<br />Kirsten1: (33 Points / 3) = 11 points for the 1st banner<br />Kirsten2: (33 Points / 3) = 11 points for the 2nd banner<br />Kirsten3: (33 Points / 3) = 11 points for the 3rd banner<br />(the numbers could be divided any way but equal back to her original 33 points.  Could be 15, 10, 8 for example)<br /><br />Jakob wants 2 banners and gets entered in 2 times:<br />Jakob1: (12 Points / 2) = 6 points for the 1st banner<br />Jakob2: (12 Points / 2) = 6 points for the 2nd banner]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>799</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-22 04:28:30</wp:comment_date>
			<wp:comment_date_gmt>2011-05-22 04:28:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[---- PART 3 ----<br /><br />Now, IF YOUR FORMULA WAS CORRECT this would NOT matter that they broke up their weights into multiple weights that equal the main original weight.  If the formula worked correctly then each of the individual banners would add together and equal what 1 banner would equal.  Your formula does NOT do this.<br /><br />In fact, as we proved, smaller numbers are way too far away and inaccurate from their expected value.  So, using this formula if Kirsten and Jakob were to convert from 1 banner to more than 1 banner this would actually punish them because the WEIGHT or POINTS would drop and the formula punishes them because it treats lower WEIGHTS or POINTS worse off and the actual query from the database shows they will not get enough views. <br /><br />I dont want to show the results, it looks really bad on this formula and makes things even worse.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>800</wp:comment_id>
			<wp:comment_author><![CDATA[jp]]></wp:comment_author>
			<wp:comment_author_email>walkoffhomerun12@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-22 11:25:53</wp:comment_date>
			<wp:comment_date_gmt>2011-05-22 11:25:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[to simplify:<br /><br />Using NewID() would be OK only in the ORDER BY since there is no multiplication so no % error growth.  Simply using NewID() to randomly populate a sort would be OK since you are just ordering by unique numbers.  This is what the other formula uses from the link I provided above.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Setting Up and Testing Active Directory Failover</title>
		<link>http://improve.dk/setting-up-and-testing-active-directory-failover/</link>
		<pubDate>Sun, 02 Mar 2008 03:31:34 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/02/setting-up-and-testing-active-directory-failover.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I spend a lot of time architecting for scalability, availability and security during my daily work. Currently I've got a distributed system consisting of several windows services communicating across machines using WCF and authenticating through Active Directory.</p>

<p>In such a situation, if the Active Directory Domain Controller (let's just call it DC from now on) dies, everything more or less dies as no clients/servers are able to authenticate incoming requests anymore. Security is paramount, so the services are not allowed to simply cache the domain logon, thus the logon has the occur at each service call - requiring a fully working DC.</p>

<p>In this post I'll attempt to implement a secondary failover DC and investigate how it affects a downtime situation. I'll be using a couple of simple WCF based applications to test the DC. I will be using three virtual machines. Luxor is the primary DC. MGM is part of the domain, and this is the machine hosting the WCF server. Later on I'll add the third virtual machine, Excalibur, being the failover DC. The WCF client will be running from my own machine. Note that I will not show how to install the primary DC, <a href="http://www.petri.co.il/how_to_install_active_directory_on_windows_2003.htm">there are plenty other great guides on how to setup the primary DC</a>. I also won't be going into <a href="http://support.microsoft.com/kb/814591">how to install the primary DNS server</a>.</p>

<p>This is the WCF server interface:</p>

<pre lang="csharp" escaped="true">using System;
using System.Security.Principal;
using System.ServiceModel;
using System.ServiceModel.Channels;
using System.ServiceModel.Description;

namespace Contracts
{
	public class WCFHelper
	{
		/// &lt;summary&gt;
		/// Creates an instance of the specified interface type by channeling to the service host.
		/// &lt;/summary&gt;
		/// &lt;typeparam name="T"&gt;The interface type to create.&lt;/typeparam&gt;
		/// &lt;param name="binding"&gt;The binding protocol to use.&lt;/param&gt;
		/// &lt;param name="endpointAddress"&gt;The complete address for the endpoint.&lt;/param&gt;
		/// &lt;returns&gt;An instance of type T.&lt;/returns&gt;
		public static T CreateChannel&lt;T&gt;(Binding binding, string endpointAddress)
		{
			// Create an endpoint for the specified binding &amp; address
			ServiceEndpoint endpoint = new ServiceEndpoint(ContractDescription.GetContract(typeof(T)), binding, new EndpointAddress(endpointAddress));
			binding.SendTimeout = new TimeSpan(0, 0, 1);
			binding.ReceiveTimeout = new TimeSpan(0, 0, 1);
			binding.OpenTimeout = new TimeSpan(0, 0, 1);
			binding.CloseTimeout = new TimeSpan(0, 0, 1);

			// Create a channel factory of type T
			ChannelFactory&lt;T&gt; factory = new ChannelFactory&lt;T&gt;(endpoint);
			factory.Credentials.Windows.ClientCredential.UserName = "RedundancyCheck";
			factory.Credentials.Windows.ClientCredential.Password = "RedundancyCheck";
			factory.Credentials.Windows.ClientCredential.Domain = "IPAPER";
			factory.Credentials.Windows.AllowedImpersonationLevel = TokenImpersonationLevel.Impersonation;

			// Return the created channel
			return factory.CreateChannel();
		}

		/// &lt;summary&gt;
		/// Creates a ServiceHost hosting the specific implementation TImplementationType of interface TInterfaceType at the specified endpointAddress.
		/// &lt;/summary&gt;
		/// &lt;typeparam name="TInterfaceType"&gt;The interface type to host.&lt;/typeparam&gt;
		/// &lt;typeparam name="TImplentationType"&gt;The implementation type to host.&lt;/typeparam&gt;
		/// &lt;param name="binding"&gt;The binding protocol to use.&lt;/param&gt;
		/// &lt;param name="endpointAddress"&gt;The endpoint where the service should be hosted at.&lt;/param&gt;
		/// &lt;param name="mexEndpointAddress"&gt;The endpoint where the service metadata should be hosted at.&lt;/param&gt;
		/// &lt;returns&gt;An instance of ServiceHost.&lt;/returns&gt;
		public static ServiceHost CreateServiceHost&lt;TInterfaceType, TImplentationType&gt;(Binding binding, string endpointAddress, string mexEndpointAddress)
		{
			// Create new service host
			ServiceHost host = new ServiceHost(typeof(TImplentationType));

			// Create endpoints
			host.AddServiceEndpoint(typeof(TInterfaceType), binding, endpointAddress);

			// Create metadata endpoint if it doesn't exist
			ServiceMetadataBehavior smb = host.Description.Behaviors.Find&lt;ServiceMetadataBehavior&gt;();
			if (smb == null)
			{
				smb = new ServiceMetadataBehavior();
				smb.MetadataExporter.PolicyVersion = PolicyVersion.Policy15;
				host.Description.Behaviors.Add(smb);
			}
			if (binding is NetTcpBinding)
				host.AddServiceEndpoint(ServiceMetadataBehavior.MexContractName, MetadataExchangeBindings.CreateMexTcpBinding(), mexEndpointAddress);
			else if (binding is BasicHttpBinding)
				host.AddServiceEndpoint(ServiceMetadataBehavior.MexContractName, MetadataExchangeBindings.CreateMexHttpBinding(), mexEndpointAddress);
			else
				throw new ArgumentOutOfRangeException("Invalid binding: " + binding);

			return host;
		}
	}
}</pre>

<p>Notice that I've hardcoded the user "IPAPERRedundancyCheck" with a password of "RedundancyCheck" - this is for test purposes only, don't even bother commenting on password security :) Also notice that I've set a timeout of 1 second - when the DC fails, I don't want to spend 30 seconds before knowing if it's down, I want to know about it right away. And since all machines are running locally, 1 second is plenty.</p>

<p>This is the server that'll be running on the MGM machine on port 8000:</p>

<pre lang="csharp">using System;
using System.Security;
using System.Security.Permissions;
using System.ServiceModel;
using Contracts;

namespace WcfServer
{
	class Program
	{
		static void Main(string[] args)
		{
			// Create service host
			ServiceHost host = WCFHelper.CreateServiceHost&lt;IServer, Server&gt;(new NetTcpBinding(SecurityMode.Transport), "net.tcp://localhost:8000", "net.tcp://localhost:8000/mex");

			// Open host
			host.Open();

			Console.Read();
		}
	}

	[ServiceBehavior(IncludeExceptionDetailInFaults = true)]
	public class Server : IServer
	{
		public string Ping()
		{
			// Security check
			try
			{
				new PrincipalPermission(null, "ADTest").Demand();
			}
			catch
			{
				throw new SecurityException();
			}

			// Let caller know that we're alive
			return "Pong!";
		}
	}
}</pre>

<p>We've got an implementation of the IServer interface with the single method "Ping". We test that the user is part of the "ADTest" role by demanding it on the current principal. If something fails we throw a SecurityException which will let the client now authentication failed. If the client is authenticated, we return a pong.</p>

<p>And finally we have the client that'll be running on my own machine:</p>

<pre lang="csharp">using System;
using System.ServiceModel;
using System.Threading;
using Contracts;

namespace WcfClient
{
	class Program
	{
		static void Main(string[] args)
		{
			while (true)
			{
				try
				{
					IServer server = WCFHelper.CreateChannel(new NetTcpBinding(SecurityMode.Transport), "net.tcp://192.168.0.35:8000");

					using (server as IDisposable)
					{
						try
						{
							Console.WriteLine(server.Ping());
						}
						catch (Exception ex)
						{
							Console.WriteLine(ex.Message);
						}
					}
				}
				catch (CommunicationObjectFaultedException)
				{ }

				Thread.Sleep(250);
			}
		}
	}
}</pre>

<p>We create a channel to the MGM machine (static IP of 192.168.0.35). We'll continue to call the IServer service every 250ms, writing either the result of the Ping function, or a message explaining any problems that have occurred. Note that in real life situations we'd not create a new channel each time, but in this case we have to, so we really do authenticate on each call (so we're affected immediatly when the DC dies).</p>

<p>The following clip will show what happens when we run the server &amp; client while the DC goes down (by pausing the virtual machine). Note that we're receiving a timeout exception, not a SecurityException. This is because I'm using SecurityMode.Transport which requires us to authenticate before even reaching the service, thus the method is never invoked, and the PrincipPermission.Demand() call is NOT the one failing us, it's the WCF security layer trying to open a TCP transport. As soon as the DC (running on LUXOR) fails, we lose connectivity with our service (running on MGM).</p>

<p>
http://www.youtube.com/watch?v=P7ufIfZlfjU
</p>

<p>The goal obviously is to prevent this from happening, we cannot have all our services brought to a standstill if the DC fails. The first step in installing a failover AD DC is to get a DNS secondary server up and running (on the soon to be secondary DC machine) so we have redundant DNS functionality.</p>

<p>A quick recap of the servers:</p>

<pre class="plain">
LUXOR = Primary DC, primary DNS
EXCALIBUR = To be secondary DC, secondary DNS
MGM = Client server
</pre>

<p>
http://www.youtube.com/watch?v=BE5mB417BNs
</p>

<p>Now that we've got the secondary DNS set up, we're ready to install Active Directory on the secondary AD server (EXCALIBUR). The following video shows how easy it is to install a failover DC:</p>

<p>
http://www.youtube.com/watch?v=x5qTxr-pglg
</p>

<p>That's it! After the server reboots, it now functions as a failover DC in case the primary one kicks the bucket. I'll end this post post by running my WcfServer application on the MGM server whilst both LUXOR and EXCALIBUR are running. You'll se a fluent stream of "Pong"s returning. After shutting down LUXOR, the WCF client will immediately start reporting connection problems, but after a short while it automatically starts returning Pongs again - it got a hold of the second DC! Now, if I shut down the second DC aswell, we'll get errors in our client again. If I then restart the primary DC, after a short while, the client starts Ponging again - we got a hold of the primary DC. So we haven't eliminated downtime completely, but we've reduced it to a 5-30 sec period before everything automatically switches over to the failover DC.</p>

<p>
http://www.youtube.com/watch?v=KWkEjiulJu8
</p>

<p>This is my first blog post utilizing videos - does it work? Do you prefer seeing live video like this, or a long series of screenshots? I know what I prefer :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1266</wp:post_id>
		<wp:post_date>2008-03-02 03:31:34</wp:post_date>
		<wp:post_date_gmt>2008-03-02 03:31:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-and-testing-active-directory-failover</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="active-directory"><![CDATA[Active Directory]]></category>
		<category domain="post_tag" nicename="availability"><![CDATA[Availability]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Setting Up and Testing Active Directory Failover]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0679aa3cd34edfd7e94815429b6bd035</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="521" src="http://www.youtube.com/embed/KWkEjiulJu8?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3b707adcf31751c189f2c7b291a111ca</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="521" src="http://www.youtube.com/embed/x5qTxr-pglg?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3a88705beccf979aa6db58089727d43f</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="521" src="http://www.youtube.com/embed/P7ufIfZlfjU?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_2c92910adb8c21fc898134df96ce48e8</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="521" src="http://www.youtube.com/embed/BE5mB417BNs?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>802</wp:comment_id>
			<wp:comment_author><![CDATA[Kristian Kristensen]]></wp:comment_author>
			<wp:comment_author_email>kristian@zianet.dk</wp:comment_author_email>
			<wp:comment_author_url>http://zianet.dk/blog/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-02 07:52:30</wp:comment_date>
			<wp:comment_date_gmt>2008-03-02 07:52:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>803</wp:comment_id>
			<wp:comment_author><![CDATA[Sam Magee]]></wp:comment_author>
			<wp:comment_author_email>sam_t_magee@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.smagee.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-05 22:20:36</wp:comment_date>
			<wp:comment_date_gmt>2008-05-05 22:20:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The article was great.  Love to use of videos and Virtual PC, it makes everything very easy to follow.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>804</wp:comment_id>
			<wp:comment_author><![CDATA[Mike Bright]]></wp:comment_author>
			<wp:comment_author_email>mabright@us.ibm.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-11-21 00:50:10</wp:comment_date>
			<wp:comment_date_gmt>2008-11-21 00:50:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good! The video really adds a lot of information that would have to be typed out otherwise. Now, if you could combine the screenshots and video or zoom in and pause for a sec on the parts where we need to focus or need to see specific details it would be perfect!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>805</wp:comment_id>
			<wp:comment_author><![CDATA[GiusMan]]></wp:comment_author>
			<wp:comment_author_email>ggiammo@kataneonline.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-10 17:01:00</wp:comment_date>
			<wp:comment_date_gmt>2009-03-10 17:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very cool.<br />... got a question hope u can answer.. once the secondary DC is set, how do u keep it up to date... menaing.. if u add a new user on DC1, how does it get to DC2 ?<br /><br />thx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>806</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-10 22:57:39</wp:comment_date>
			<wp:comment_date_gmt>2009-03-10 22:57:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As long as they're connected, they'll automatically synchronize any changes. This goes for both AD and DNS changes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>807</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email>bessry@mail.nih.gov</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-12 18:25:35</wp:comment_date>
			<wp:comment_date_gmt>2009-08-12 18:25:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In our environment we have a hung DC every now and then at which point our monitoring system reports some services are down.<br /><br />Example of our Environment:  <br />Domain Controller called DC1 and DC2<br />Member Server called: Member<br />Member server doing monitoring called: Monitor<br /><br />So DC1 will become hung on restart at which point the server called &quot;Monitor&quot; will start reporting that services are down on server &quot;Member&quot;.  We use a domain account which is a member of the admin group on all servers to use to check for down services.  I know this is a kerberos/netlogon issue but can't explain why DC1 being hung would affect the server Monitor from being able to successfully login to Memeber.  The netlogon service should notice DC1 is hung and failover to DC2....any insight would be much appreciated]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>808</wp:comment_id>
			<wp:comment_author><![CDATA[GiusMan]]></wp:comment_author>
			<wp:comment_author_email>ggiammo@kataneonline.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-17 19:33:39</wp:comment_date>
			<wp:comment_date_gmt>2009-08-17 19:33:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,<br />it is safe to say that u can repeat this procedure to add a 3rd failover DC ? what make the difference between primary and secondary  DCs?<br /> the reason I am asking is that i want to replace the DC1 and i thought this would be a great way to do it: create DC3 ... decommission DC1... what do u think ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>809</wp:comment_id>
			<wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
			<wp:comment_author_email>bessry@mail.nih.gov</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-09 17:02:26</wp:comment_date>
			<wp:comment_date_gmt>2009-09-09 17:02:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think a key point to make is that you are instantly &quot;pausing&quot; your virtual machine.  Does pausing make the server un pingable?  <br /><br />Basically what i'm trying to understand is what check does the netlogon service do to verify the DC it's authenticating against is really able to process authentication requests.  I think it only pings..and if the DC responds to ping, then it assums the DC is up and functioning.  Thus if a DC hangs and is still pingable, client workstation/member server's netlogon service will not try and discover a new DC.  Or if a DC is just slow to reboot.....    ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>810</wp:comment_id>
			<wp:comment_author><![CDATA[tasmanian_devil]]></wp:comment_author>
			<wp:comment_author_email>railic@etfbl.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-19 09:12:37</wp:comment_date>
			<wp:comment_date_gmt>2009-10-19 09:12:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[ServiceContract(Namespace = &quot;<a rel="nofollow external" href="http://test.dk/Server&quot;" title="http://test.dk/Server&quot;" rel="nofollow">http://test.dk/Server&quot;</a>)] is Win 2003 Server with AD ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>811</wp:comment_id>
			<wp:comment_author><![CDATA[KNSas]]></wp:comment_author>
			<wp:comment_author_email>getmein3822@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-02-19 06:19:18</wp:comment_date>
			<wp:comment_date_gmt>2010-02-19 06:19:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found this article very useful. I have one question:<br /><br />do you think there will be any issues when many applications are dependent on the DC and the PDC is down for a long time. This demo shows that if a DC (FSMO-PDC I hope it is) in same site is down , the app picks up the next availale DC in 30 seconds. Did you try this across sites? will there be any issues with authentication if the PDC is down for a long time.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>MTH Going Open</title>
		<link>http://improve.dk/mth-going-open/</link>
		<pubDate>Fri, 07 Mar 2008 00:00:31 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/07/mth-going-open.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Some of you may know that I used to play a lot of poker. Unfortunately that's not the case any more. I really enjoy live poker when I'm in Vegas, I enjoy the major tournaments and I've definitely not participated in my last WSOP. But as for online poker and the daily grind, I've quit it. I just don't find it exciting any more. While the mathematical aspect acquired my interest early on, I never enjoyed grinding as such, it was purely for monetary reasons.</p>

<p>Anyways, one of the ways I kept enjoying was by utilizing one of my skills, multi tasking. I remember back in the days when you could play all the Party skins at the same time, about 20 tables simultaneously. While multitabling I started developing a small helper application for my own use, Multi Table Helper (MTH). Before long, it got released publicly and it got quite popular.</p>

<p>Anyways, fast forward a couple of years, MTH was up to version 2.28, I had it running on Stars &amp; Party and actually on Crypto and FTP as well, locally. Now, this was also about the time my company went haywire in regards to client jobs. I'd lost my interest in online poker. I worked round the clock, so MTH didn't get the attention it needed.</p>

<p>Fast forward about a year more. I realized MTH needed an update, and I actually wanted to continue the development. I started the Core project. The Core project was meant to be semi-open source. I worked on creating a stable and extensible core that could be extended in any way possible. I never got to finish it off though.</p>

<p>I've now realized that I won't have the time to finish the Core project off anytime soon, and without playing poker myself, it's tough to find a real interest in it. So here we go, I'm releasing both the original latest release of MTH as well as the MTH Core source code under the GPL license.</p>

<p>Now, a couple of notices.</p>

<p>I've removed pretty much everything registration related, there may still be some leftovers though. You cannot compile neither project as it is now since it depends on <a href="http://desaware.com/products/universalcom/spyworks/index.aspx">Desaware SpyWorks</a>. SpyWorks is not free and thus I cannot bundle it. If you wish to compile MTH in its current state, you will have to buy SpyWorks yourself.</p>

<p>MTH uses AutoIt3 as well, I have not bundled it, you will have to download and install it yourself.</p>

<p>MTH's Speech recognition depends on the Windows Speech API, you will have to download and install that from Microsoft first.</p>

<p>MTH is released under the <a href="https://github.com/improvedk/Multi-Table-Helper/blob/master/License.txt">GNU General Public License</a>. You are allowed to continue work on MTH, make releases and use parts in your own projects. You may not use parts of MTH for commercial products, any parts of MTH used in your own projects must be released as by the demands of the GPL license. Please see the license.txt file included in the downloads.</p>

<p>The classic MTH (2.28) is not particularly beautiful architecturally, but it is by far the most complete application of the two. The Core project is much further from actually working, but I hope someone will continue the work and complete the Core project as I originally imagined it. Both applications will need some work, but it should be a very good starting point.</p>

<h2>Those of you that have bough MTH</h2>

<p>Thank you. I will not be accepting any further registrations. I will keep the current registration service running, I do not have any plans of shutting it down, so you should be able to use MTH just like you do today.</p>

<h2>Help</h2>

<p>If you have any questions regarding the source code, or any other related matter, please let me know. I will not guarantee any help in regards of making the code run, but I might be able to give some pointers.</p>

<h2>Downloads</h2>

<p><a title="https://github.com/improvedk/Multi-Table-Helper" href="https://github.com/improvedk/Multi-Table-Helper">https://github.com/improvedk/Multi-Table-Helper</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1267</wp:post_id>
		<wp:post_date>2008-03-07 00:00:31</wp:post_date>
		<wp:post_date_gmt>2008-03-07 00:00:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mth-going-open</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="mth"><![CDATA[MTH]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="poker"><![CDATA[Poker]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[MTH Going Open]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Using Network Load Balancing for Availability &amp; Scalability</title>
		<link>http://improve.dk/using-network-load-balancing-for-availability-and-scalability/</link>
		<pubDate>Sat, 08 Mar 2008 04:47:46 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/08/using-network-load-balancing-for-availability-scalability.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There are two primary reasons for venturing into the realms of clustering/load balancing - availability &amp; scalability. In this post I'll give a quick demo of how to setup Windows Network Load Balancing (NLB) on Server 2003 and how it affects the availability of a web application.</p>

<p>When we have several nodes doing the same thing, if one of them fails, the cluster as a whole continues - provided that the nodes are not so overburdened that a single node failing will kill the others due to the extra load. Most applications will have an upper limit on how much it can scale on a single box. You can get very far by vertically scaling your solution (buying faster &amp; usally exponentially more expensive hardware), but true scalability always comes in the form of horizontal scaling. Add another box and receive more or less linear return of investment in regards of added computing power.</p>

<p>NLB enables us to easily add new nodes to a cluster and thus letting them share the workload. There are several issues to consider before setting up a cluster for a real application. Does the application share user file data? - in such a case you'll have to make sure all nodes in the cluster have access to those files, and remember - the cluster is no stronger than the weakest link. Usually you'd probably go for a <a href="http://en.wikipedia.org/wiki/Storage_area_network">SAN</a> to store all common files. State is also an important factor as most web applications rely on storing user specific data in statebags like the Session object. When the load is balanced out on several servers, the user could potentially visit several servers during his visit to the website, and unless the state storage is centralized, the user will have different session data on each server. Again, remember that you'll have to provide a redundant storage location for the session data, or else you'll compromise the availability of the cluster.</p>

<p>In this demonstration I'll be using two virtual PCs running on my own host computer. All three computers are running on the subnet 192.168.0.X. Here are the virtual machines involved:</p>

<pre class="plain">
192.168.0.34 - VENETIAN
192.168.0.32 – MIRAGE
</pre>

<p>When you setup an NLB cluster, you create a new virtual IP address that gets mapped to each individual server, besides their own static IP address. In this demo I'll setup the cluster on the virtual IP address 192.168.0.50. Before we get too far, I should mention that if you are going to setup an NLB cluster in a production environment, you should use machines with dual NICs so one NIC can connect to the public lan while the other NIC connects to a private switched lan where only the cluster nodes are connected. This ensures that the internal cluster communication is not polluting the general network traffic, aswell as making it a lot more efficient since we'll then be able to utilize <a href="http://en.wikipedia.org/wiki/Unicast">unicast communciation</a> between the nodes instead of relying on <a href="http://en.wikipedia.org/wiki/Multicast">multicast communication</a>.</p>

<p>For demonstrating the effects of a node crash, I've created a very simple load testing tool, the main functionality is an infinite loop trying to make a request at a time while registering success/failures. It'll also show the text result that is returned in a one-line textbox:</p>

<pre lang="csharp" escaped="true">while (running)
{
	HttpWebRequest req = (HttpWebRequest)WebRequest.Create(txtUrl.Text);
	req.Timeout = 1000;
	req.KeepAlive = false;

	try
	{
		WebResponse res = req.GetResponse();
		using (StreamReader sr = new StreamReader(res.GetResponseStream()))
			lastResult = sr.ReadToEnd();

		successfulRequests++;
	}
	catch (WebException)
	{
		failedRequests++;
	}
}</pre>

<p>As I'm running this test on two VPCs on my local machine, I won't be getting any extra performance out of my cluster since the VPCs will just use 50% CPU each. This demo will concentrate on the availability of the cluster - but feel assured that performance will be better if you distribute the cluster over several separate computers.</p>

<p>Here's the demo of how to setup &amp; use NLB:</p>

<p>
http://www.youtube.com/watch?v=32uWPp8PpUA
</p>

<h2>Other good resources</h2>

<p>Rick Strahl on <a href="http://www.west-wind.com/presentations/loadbalancing/NetworkLoadBalancingWindows2003.asp">Web Farming with the Network Load Balancing Service in Windows Server 2003</a></p>

<p>Peter A. Bromberg on <a href="http://www.eggheadcafe.com/articles/20020302.asp">Network Load Balancing, Session State and IP Affinity</a></p>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/03/SimpleLoadTester.zip">SimpleLoadTester.zip - Sample code</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1268</wp:post_id>
		<wp:post_date>2008-03-08 04:47:46</wp:post_date>
		<wp:post_date_gmt>2008-03-08 04:47:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-network-load-balancing-for-availability-and-scalability</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="availability"><![CDATA[Availability]]></category>
		<category domain="post_tag" nicename="load-balancing"><![CDATA[Load Balancing]]></category>
		<category domain="post_tag" nicename="nlb"><![CDATA[NLB]]></category>
		<category domain="post_tag" nicename="scalability"><![CDATA[Scalability]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Using Network Load Balancing for Availability & Scalability]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[using-network-load-balancing-for-availability-scalability]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_63b620d45300802dbaad9553dbecdd52</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="521" src="http://www.youtube.com/embed/32uWPp8PpUA?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>812</wp:comment_id>
			<wp:comment_author><![CDATA[Colin]]></wp:comment_author>
			<wp:comment_author_email>cgroothius@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-19 14:45:01</wp:comment_date>
			<wp:comment_date_gmt>2008-05-19 14:45:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this...cant open your tester though in VS 2005 SP1...error message says that your project was created in a newer version?  Did you make it in 2008?<br /><br />C.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>813</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-19 18:27:39</wp:comment_date>
			<wp:comment_date_gmt>2008-05-19 18:27:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Colin,<br /><br />It's created using VS2008, yup. If you get the VS2008 Express Edition, it should be able to open the solution.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Controlling SqlConnection Timeouts</title>
		<link>http://improve.dk/controlling-sqlconnection-timeouts/</link>
		<pubDate>Mon, 10 Mar 2008 22:24:39 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/10/controlling-sqlconnection-timeouts.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When performing queries against a SQL Server database, there are a couple of methods readily available. However, an option is missing.</p>

<p>The primary timeout value is that of SqlConnection.ConnectionTimeout. This specifies how long time the SQL Server service has to respond to a connection attempt. You cannot set this value directly, you'll have to set it as part of the connection string:</p>

<pre lang="xml" escaped="true">Data Source=server;Initial Catalog=databaseUser Id=username;Password=password;Connect Timeout=30</pre>

<p>Note that the value is expressed in seconds, not milliseconds. The default value is 30 seconds. Secondly, we can use the <a href="http://msdn2.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.commandtimeout.aspx">SqlCommand.CommandTimeout</a> value. This sets the timeout value of a specific query running on SQL Server. The problem with these two is that we're missing a point in the pipeline, which goes:</p>

<p>TCP Connection to SQL Server -&gt; SqlConnection.Open -&gt; SqlCommand.Execute</p>

<p>The last two are covered, but if for some reason the SQL Server is dead, taken off the network, totally overloaded, we may get a timeout on the TCP level - and this could take a while. We currently have no way of controlling this timeout besides a server wide network level setting. Often, it's not desirable to have your application potentially spending several minutes before receiving a TCP timeout - or sometimes simply wait indefinitely. We need some way to control this.</p>

<p>What I present below is an example of a SqlConnection extension method called QuickOpen (in lack of a better name, it isn't quicker, it simply fails quicker). It'll take a timeout parameter in milliseconds, after which it'll throw a simple Exception. You can modify this to a more proper exception, this is just to show the point. Overall, using this method will introduce a slight delay (a couple of ms), so use it only when necessary, or when a couple of ms per SqlConnection.Open doesn't matter.</p>

<pre lang="csharp" escaped="true">public static class SqlExtensions
{
	public static void QuickOpen(this SqlConnection conn, int timeout)
	{
		// We'll use a Stopwatch here for simplicity. A comparison to a stored DateTime.Now value could also be used
		Stopwatch sw = new Stopwatch();
		bool connectSuccess = false;

		// Try to open the connection, if anything goes wrong, make sure we set connectSuccess = false
		Thread t = new Thread(delegate()
		{
			try
			{
				sw.Start();
				conn.Open();
				connectSuccess = true;
			}
			catch { }
		});

		// Make sure it's marked as a background thread so it'll get cleaned up automatically
		t.IsBackground = true;
		t.Start();

		// Keep trying to join the thread until we either succeed or the timeout value has been exceeded
		while (timeout &gt; sw.ElapsedMilliseconds)
			if (t.Join(1))
				break;

		// If we didn't connect successfully, throw an exception
		if (!connectSuccess)
			throw new Exception("Timed out while trying to connect.");
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1269</wp:post_id>
		<wp:post_date>2008-03-10 22:24:39</wp:post_date>
		<wp:post_date_gmt>2008-03-10 22:24:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>controlling-sqlconnection-timeouts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="timeout"><![CDATA[Timeout]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Controlling SqlConnection Timeouts]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>818</wp:comment_id>
			<wp:comment_author><![CDATA[John]]></wp:comment_author>
			<wp:comment_author_email>jinx101@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-16 23:20:40</wp:comment_date>
			<wp:comment_date_gmt>2011-08-16 23:20:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Brilliant.  Thanks for posting. :)  It also helps explain why the timeout never seemed to work on the connection.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>819</wp:comment_id>
			<wp:comment_author><![CDATA[Ray]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-31 17:23:05</wp:comment_date>
			<wp:comment_date_gmt>2011-05-31 17:23:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My version of your process in VB.<br />Thanks<br />Imports Microsoft.VisualBasic<br />Imports System.Threading<br /><br />Public NotInheritable Class SqlExtensions<br />    Private Sub New()<br />    End Sub<br /><br />    Shared ThreadProcConn As Data.SqlClient.SqlConnection<br />    Shared connectSuccess As Boolean = False<br />    Public Shared Sub ThreadProc()<br />        Try    ' Try to open the connection, if anything goes wrong, make sure we set connectSuccess = false<br />            ThreadProcConn.Open()<br />            connectSuccess = True<br />        Catch<br />            connectSuccess = False<br />        End Try<br />    End Sub<br />    Public Shared Sub QuickOpen(ByVal conn As Data.SqlClient.SqlConnection, ByVal timeout As Integer)<br />        ThreadProcConn = conn<br />        Dim t As New Thread(AddressOf ThreadProc)<br />        Dim StartTime As Date = Date.Now<br />        ' Make sure it's marked as a background thread so it'll get cleaned up automatically<br />        t.IsBackground = True<br />        t.Start()<br />        ' Keep trying to join the thread until we either succeed or the timeout value has been exceeded<br />        While StartTime.AddSeconds(timeout) &gt; Date.Now<br />            If t.Join(1) Then<br />                Exit While<br />            End If<br />        End While<br />        ' If we didn't connect successfully, throw an exception<br />        If Not connectSuccess Then<br />            Throw New Exception(&quot;Server Unavailable&quot;)<br />        End If<br />    End Sub<br />End Class<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>820</wp:comment_id>
			<wp:comment_author><![CDATA[Kiki]]></wp:comment_author>
			<wp:comment_author_email>kikistidbits@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kikistidbits.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-29 18:00:08</wp:comment_date>
			<wp:comment_date_gmt>2012-04-29 18:00:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool! I did something similar for queries against Active Directory.<br /><br />Now I just wish I could use the QuickConnect method also in auto-generated TableAdapters. Any ideas how to accomplish this?<br /><br />Kiki]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>821</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Vermilion]]></wp:comment_author>
			<wp:comment_author_email>mvermilion@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-09 16:35:54</wp:comment_date>
			<wp:comment_date_gmt>2008-05-09 16:35:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This helped me out a lot.  In my situation on Windows Mobile I did it a little differently.  There was no StopWatch in the compact framework so I tried the DateTime idea you suggested, but it didn't work reliably.  It would eventually start returning false after using it several times.  The following seems to work reliably:<br /><br />t.IsBackground = true;<br />t.Start();<br />t.Join(timeout);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>822</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-09 20:21:59</wp:comment_date>
			<wp:comment_date_gmt>2008-05-09 20:21:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Michael,<br /><br />That's a great way to simplify my functionality. I love it when I'm reminded of even more KISS'ish ways to accomplish the same functionality :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>823</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Vermilion]]></wp:comment_author>
			<wp:comment_author_email>mvermilion@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-10 05:50:50</wp:comment_date>
			<wp:comment_date_gmt>2008-05-10 05:50:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I could ramble on for hours about everything I've done today, but my application finally works correctly thanks to you.  BTW I think I might have also added t.Abort() after the Join() to resolve some problem I was having, although there were so many problems mixing together that it's hard for me to say whether that was needed.  Also, I just upgraded my project to Compact Framework 3.5 and MS has now implemented the StopWatch.  For another, MS has now added a sound player into the Compact Framework.  Anyway, I spent the whole day trying to solve problems with my application losing wifi connection. I had sounds playing that were making calls to an external method and I think funny things were happening when I stressed that along with the connection timeout.  Anyway making everything syncronous, including the SQL connection blocking the main thread and the SoundPlayer blocking the main thread (ie connect/disconnect sounds) seems to have done it. <br /><br />U-Da-Man]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>824</wp:comment_id>
			<wp:comment_author><![CDATA[Freddie]]></wp:comment_author>
			<wp:comment_author_email>axkan@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-01-05 06:34:09</wp:comment_date>
			<wp:comment_date_gmt>2009-01-05 06:34:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you so much.<br />It helped me a lot.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>825</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Vermilion]]></wp:comment_author>
			<wp:comment_author_email>mvermilion@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-06-21 17:13:05</wp:comment_date>
			<wp:comment_date_gmt>2010-06-21 17:13:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Daniel - Glad you got it working. I've been using this in production for a year now and it works great.  I haven't touched this system in that time and haven't got any complaints about this not working, so props to Mark.  Finally got some enhancement requests recently for merge replication, which looks interesting.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97543</wp:comment_id>
			<wp:comment_author><![CDATA[Kevin Maguire]]></wp:comment_author>
			<wp:comment_author_email>kevin.maguire.1979@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.136.233.222</wp:comment_author_IP>
			<wp:comment_date>2013-08-26 19:01:51</wp:comment_date>
			<wp:comment_date_gmt>2013-08-26 17:01:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great stuff Mark - Exactly the code I was looking for to solve my problem!
Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377536511.433209896087646484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96564</wp:comment_id>
			<wp:comment_author><![CDATA[Freddie]]></wp:comment_author>
			<wp:comment_author_email>ff@sharpit.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.166.57.213</wp:comment_author_IP>
			<wp:comment_date>2013-08-25 11:48:56</wp:comment_date>
			<wp:comment_date_gmt>2013-08-25 09:48:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A try catch around open and return false in the catch might be a good idea :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377424136.247518062591552734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96562</wp:comment_id>
			<wp:comment_author><![CDATA[Freddie]]></wp:comment_author>
			<wp:comment_author_email>ff@sharpit.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.166.57.213</wp:comment_author_IP>
			<wp:comment_date>2013-08-25 11:46:28</wp:comment_date>
			<wp:comment_date_gmt>2013-08-25 09:46:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Speaking of KISS and .Net 4.5

var task = Task.Run(() =&gt;
             {
               conn.Open();
               return true;
             });
if (!(task.Wait(AppParams.LOCAL_SQL_FAST_TIMEOUT*1000) &amp;&amp; task.Result))
{
  throw new Exception("Connection failed");
}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377423988.196402072906494140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165468</wp:comment_id>
			<wp:comment_author><![CDATA[Roger Tranchez]]></wp:comment_author>
			<wp:comment_author_email>rogertranchez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.53.62.210</wp:comment_author_IP>
			<wp:comment_date>2014-02-14 12:59:09</wp:comment_date>
			<wp:comment_date_gmt>2014-02-14 11:59:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank Mark, it helped me to be able to show a MessageBox after 10 seconds trying to connect, instead of having the user to wait for approx. 50 secs.

I'm using Compact Framework with Windows Mobile 6.5.

By the way, I'm observing that the thread that contains the Open() keeps active in the background (I can see it in Task Manager - processes from the handheld) even if I close all the Windows, even if I abort the thread.

It lasts for (no surprise) 50 seconds, and after that, the process automatically closes itself.

As this does not affect the normal handheld operation while the user is checking the connection settings, and is invisible for the user, it does not matter to me. The first time I've noticed it because the program was not finishing immediately in Visual Studio while debugging.

Best regards,

Roger]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392379149.6091849803924560546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C# String Enumerations</title>
		<link>http://improve.dk/csharp-string-enumerations/</link>
		<pubDate>Thu, 13 Mar 2008 22:02:10 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/13/c-string-enumerations.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Switches are rarely nice in an architectural aspect, but they are often required none the less. One of the ways we can reduce the risk of errors as well as increase readability is to use enumeration values instead of constants. Unfortunately this only works for numeric types, we cannot create a string enumeration. Here's a workaround.</p>  <p>This is a typical console application, taking in an input value (stored in the input variable) and switching on the content:</p>

<pre lang="csharp" escaped="true">using System;

namespace StringEnumeration
{
	class Program
	{
		static void Main(string[] args)
		{
			string input = "Hello";

			switch (input)
			{
				case "Hello":
					Console.WriteLine("Hello world!");
					break;
				case "Goodbye":
					Console.WriteLine("Goodbye world!");
					break;
				default:
					Console.WriteLine("Does not compute!");
					break;
			}
		}
	}
}</pre>

<p>The first step is to define the enumeration of values we need to have in our switch statement:</p>

<pre lang="csharp" escaped="true">enum Input
{
	Hello,
	Goodbye
}</pre>

<p>We cannot convert from strings to the Input enumeration type directly, so we'll have to use a magic function like this:</p>

<pre lang="csharp" escaped="true">class EnumHelper
{
	public static T Parse&lt;T&gt;(string input)
	{
		return (T)Enum.Parse(typeof(T), input, true);
	}
}</pre>

<p>Using the above function, we can refactor our initial code like so:</p>

<pre lang="csharp" escaped="true">string input = "Hello";

switch (EnumHelper.Parse&lt;Input&gt;(input))
{
	case Input.Hello:
		Console.WriteLine("Hello world!");
		break;
	case Input.Goodbye:
		Console.WriteLine("Goodbye world!");
		break;
	default:
		Console.WriteLine("Does not compute!");
		break;
}</pre>

<p>Take notice that I'm passing in true as the third parameter of the Enum.Parse method, this means the type conversion will not be case sensitive, you can change this parameter as needed, or maybe refactor it into a parameter of the function. If the conversion fails - if a matching enumeration does not exist - an ArgumentException is thrown.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1270</wp:post_id>
		<wp:post_date>2008-03-13 22:02:10</wp:post_date>
		<wp:post_date_gmt>2008-03-13 22:02:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>csharp-string-enumerations</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[59]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[c-string-enumerations]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[C# String Enumerations]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>826</wp:comment_id>
			<wp:comment_author><![CDATA[DG]]></wp:comment_author>
			<wp:comment_author_email>asdf@asdf.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-13 09:03:30</wp:comment_date>
			<wp:comment_date_gmt>2009-04-13 09:03:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Beautiful!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SQL Server Mirroring - A Practical Approach</title>
		<link>http://improve.dk/sql-server-mirroring-a-practical-approach/</link>
		<pubDate>Sun, 23 Mar 2008 18:19:44 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/23/sql-server-mirroring-a-practical-approach.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this post I'll take a practical approach at talking about what SQL Server Mirroring is, the advantages and considerations that follows.

<h2>Availability, not scalability</h2>

<p>SQL Server Mirroring aims to increase database availability, not scalability. Boiled down, a mirrored database consists of a principal database on SQL Server instance X and an exact mirror of that database on instance Y. Everytime a transaction has occured on X, it is executed on Y as well. While this is happening, the Y instance database is in recovery mode, meaning you cannot query it directly, and thus you cannot use this as a secondary readonly database to achieve scalability.

<p>While you can run mirroring on different SQL Server instances on the same machine, this defeats the purpose as most errors will be hardware/system based, and usually these will affect all instances on the same phyiscal server. Trying out mirroring across instances is a good way to test it out however. In my demos I will be using virtual PCs, each loaded with SQL Server 2005 Enterprise sp1.

<h2>Operating modes</h2>

<p>SQL Server supports <a href="http://msdn2.microsoft.com/en-us/library/ms191456.aspx">three different operating modes</a>.

<h3>High performance (asynchronous)</h3>

<p>As the name implies, maintaining high performance is the key issue in this mode. Whenever a transaction is completed on the principal, the log is sent to the mirror, but the principal does not wait for this to complete. Thus if the mirror were to die out, throw an error during execution, the databases would become out of synch. The mirror could also trail behind due to a difference in computing power or other external factors. If the principal fails, you will have to do a manual failover to the mirror.

<h3>High safety (synchronous) - also known as "high protection"</h3>

<p>As with the high performance mode, each time a transaction occurs on the principal, it is sent to the mirror. The principal will not commit the transaction until the mirror has committed the transaction also. Thus you will never risk your databases being out of synch. The downside is that your mirrored setup will be no faster than the slowest machine that is part of the mirror, plus the implicit overhead in server chatting. As with the high performance mode, you will have to make a manual failover in case of principal failure.

<h3>High safety with automatic failover (synchronous)</h3>

<p>This mode involves a third instance besides the principal and mirror, known as the witness. The witness instance constantly monitors the principal for availability, and if a problem is detected, it will automatically perform a failover. At this point, the database as a whole will still be available, but you should manually get the failed mirror up and running again and reinitiate mirroring.

<h2>Prerequisites</h2>

<p>There are a <a href="http://msdn2.microsoft.com/en-us/library/ms366349.aspx">couple of things that should be in place</a> before attempting to setup database mirroring.

<h3>Service pack 1</h3>

<p>Make sure all instances have been upgraded to <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=cb6c71ea-d649-47ff-9176-e7cac58fd4bc&amp;displaylang=en">service pack 1</a>. If you do not have service pack 1, you will receive the following warning when trying to start the mirror:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/03/enablemirroring_2.jpg"><img class="alignnone size-full wp-image-2014" alt="enablemirroring_2" src="http://improve.dk/wp-content/uploads/2008/03/enablemirroring_2.jpg" width="612" height="246" /></a></div></div>

<h3>Unified SQL Server service account</h3>

<p>If you're using Active Directory, make sure the SQL Server service accounts are running as the same user. Local System will not work as it does not have any network credentials. If you're not using Active Directory, just make sure the services are running on an account with the same name &amp; password on each machine. Make sure you change the service account through the SQL Server Configuration application and not the services console. Alternatively you can specify user accounts that should be used for mirror replication, but having the servers run on the same domain account is the easiest way.

<h3>Full recovery model</h3>

<p>Make sure the database you want to mirror is setup to use the full recovery backup model, otherwise there'll be no log to ship to the mirror instance and mirroring will not be possible.

<h2>Licensing</h2>

<p>Mirroring is supported in the SQL Server Standard and Enterprise editions. Neither Express nor Workgroup edition will work. Enterprise supports the high performance operating mode, Standard only supports the two high safety modes. You can use the free Express version for the mirror server. Note that you <a href="http://www.microsoft.com/sql/howtobuy/sqlserverlicensing.mspx">do NOT need an extra SQL Server license for the mirroring server</a>, provided that it does nothing else but maintain the mirrored database - take note of the 30 days clause.

<h2>Test setup</h2>

<p>My demos will be using three servers, all running Windows Server 2003 Standard (fully updated) through Virtual PC. All three have SQL Server 2005 Enterprise installed. I will be using the Microsoft sample database Adventureworks. You can <a href="http://codeplex.com/SqlServerSamples#databases">download the AdventureWorks database</a> at CodePlex.

<p>The three servers are RIO, MANDALAY and MGM (yes, I like Vegas). MGM will only be used for setting up a witness, RIO and MANDALAY will both host the actual databases, MANDALAY being the initial principal and RIO being the initial mirror. All servers are completely fresh installations using SQL Server authentication.

<p>I will be connecting to the instances from SQL Server Management Studio running on my desktop computer.

<h2>Initial setup of the databases</h2>

<p>The first step is to restore the AdventureWorks .bak backup file to both servers. On the principal (MANDALAY) we should make a normal restore (RESTORE WITH RECOVERY) so the database is online. On the mirror (RIO), we should restore into the recovering state so no changes can be made (RESTORE WITH NORECOVERY). You can watch how it's done here, or skip on to the next section.

<p>
http://www.youtube.com/watch?v=eHeVZ1NzIO0
</p>

<h2>Mirroring configuration</h2>

<p>Now that we've got both databases setup, we're ready to setup the actual mirror. A couple of notes on what I'm doing during the setup. In the first demo, I'll setup a synchronous high safety mirror with a witness. As all the virtual PCs are running on the same machine, I'll have to use different ports for the endpoints. Whether you want to use encryption for the endpoint communication is scenario specific. Encryption will <a href="http://www.microsoft.com/technet/prodtechnol/sql/2005/technologies/dbm_best_pract.mspx">have an overhead</a> - albeit a minor one - so it's up to you to determine if it's neccessary. As our SQL Services are running on the same account across the machines, we do not have to specify any custom service account names during the setup.

<p>For some reason, SQL Server needs a fully qualified domain name for the instance addresses. If you're setting this up on a computer that is part of the domain, you should simply use the domain name, [Computer].[domain]:port. In this example my desktop is not part of the Active Directory domain and thus it'll use addresses like TCP://COMPUTER:PORT which is not accepted. I'll fix it by simply writing the machine IP addresses manually instead. The IP for MANDALAY is 192.168.0.31 and for RIO it's 192.168.0.33. Note that you should ALWAYS use FQDNs, using IPs are not recommended as it may result in configuration as well as runtime issues. See <a href="http://sqlblog.com/blogs/adam_machanic/archive/2007/06/13/database-mirroring-fqdns-are-your-friends.aspx">Adam Machanics blogpost</a> on the same issue as I ran into a couple of times.

<p>
http://www.youtube.com/watch?v=rlAMl3D47bo
</p>

<h2>Testing the mirror</h2>

<p>Besides my DBA excesses, I'm a developer. And what's more natural than to whip together a small application that tests the mirrors availability?

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/03/mirrortester_2.jpg"><img class="alignnone size-full wp-image-2015" alt="mirrortester_2" src="http://improve.dk/wp-content/uploads/2008/03/mirrortester_2.jpg" width="468" height="360" /></a></div></div>

<p>It continuously attempts to connect to the databases using three different connection strings:

<pre lang="csharp" escaped="true">string principalConnection = "Data Source=Mandalay;Connect Timeout=1;Initial Catalog=AdventureWorks;User Id=sa;Password=sadpassword;Pooling=false";
string mirrorConnection = "Data Source=Rio;Connect Timeout=1;Initial Catalog=AdventureWorks;User Id=sa;Password=sadpassword;Pooling=false";
string totalConnection = "Data Source=Mandalay;Failover Partner=Rio;Connect Timeout=1;Initial Catalog=AdventureWorks;User Id=sa;Password=sadpassword;Pooling=false";</pre>

<p>The first connects directly to MANDALAY, the principal database. The second one goes to RIO, the mirror. And the last one is the mirror enabled connection string that combines the two. The principal should respond and act like any other normal database. The mirror will throw an exception as we cannot interact with a datbase in recovery mode. The combined connection will automatically connect to the current principal database, whether it be MANDALAY or RIO.

<p>To detect a broken connection quickly, I connect to the databases every 250ms and display a green bar if the connection succeeded (and an UPDATE &amp; SELECT went well), and red if any kind of exception arose. To detect a connection timeout in a timely fashion, I'm using my <a href="http://improve.dk/blog/2008/03/10/controlling-sqlconnection-timeouts">QuickOpen</a> functionality. The SUM(SafetyStockLevel) is the result of a simple SELECT query being done on the database (the UPDATE modifies the same table, hence the changing values), just to make sure we're actually talking to a live database.

<p>In the following test, it gets a bit more complicated to follow. I've got two SQL Server Profiler windows open, the left one is monitoring the MANDALAY server, the right one is monitoring the RIO server. The windows are so small you cannot see what actually gets logged, but that is the point. The only relevant data in this case is the bottom rightmost value, Rows:X that displays an increasing rowcount when the server is active.

<p>I will start out by starting up the mirror testing application. We should see a red bar for the mirror database (RIO) as we cannot connect to it directly, while the principal (MANDALAY) and the mirrored connection should both show green bars. The MANDALAY profiler should also show activity, whilst the RIO profiler should not show any activity.

<p>When it's running, I'll initiate a manual mirror failover. A failover means we're switching roles, thus RIO will become the new principal and MANDALAY will become the mirror. Effectively this should mean the combined connection still shows a green bar, MANDALAY shows red and RIO switches to green.

<p>
http://www.youtube.com/watch?v=W7iw58KN4Sg
</p>


<h2>The TCP/IP connection retry algorithm</h2>

<p>The failover went perfect. There's a short amount of downtime as the actual failover takes place, but shortly thereafter, we get green bars again - but one too many. When we started out, we got a red bar when trying to connect to the mirror, RIO. Shouldn't we be getting a red bar when trying to connect to MANDALAY after we've switched the roles so MANDALAY has now become the new mirror? As you can see in the profilers, only RIO is being queried, so although MANDALAY is not responding, the connection string pointing to MANDALAY is succeeding. And what's more confusing is that the new instance of the testing application showed the expected result, a green bar for RIO and red for MANDALAY - at the same time as the existing one showed all greens.

<p>The explanation is due to the <a href="http://msdn2.microsoft.com/en-us/library/ms365783.aspx">connection retry algorithm for TCP/IP connections</a>. When we have a mirrored connection, the partner names are cached when used. Although we couldn't query RIO before, the partner name was cached. Thus when we make the failover and MANDALAY looses connection, it'll automatically make a retry attempt by connecting to the mirror partner, RIO. When the database comes up again, RIO is responding to both connections successfully. So although the connection string specifies MANDALAY as the endpoint, we're actually talking to RIO directly.

<p>Now, when the cache times out, or if we start a new application (the cache is tied to the SqlClient within a specific AppDomain), the partner name has not been cached and a retry will not be attempted, and that's why the new instance shows the expected result alongside the old instance.

<h2>When a database dies</h2>

<p>This is the scenario we've been preparing for. But what happens when one of the databases die? In high safety mode, a transaction has to be committed on both the principal and on the mirror before it's declared successful, but in case the mirror dies (whether due to the service stopping, the physical hardware crashing or something else) the principal will enter a disconnected state, still offering full availability. When you get the mirror database up and running again, it will automatically synchronize with the principal and the mirror will continue as if nothing had happened. High performance mode will also continue unaffected with a dead mirror, and it will also automatically resynch when the mirror comes back online.

<p>Here's a quick video demonstrating the availability of the principal when the mirror goes down (the short red bars are caused by Virtual PC pausing all VPCs when the menu bar is open).

<p>
http://www.youtube.com/watch?v=UQFrD3RmNrg
</p>

<p>If the principal dies, we need to promote the mirror to the principal role. As soon as the mirror has undertaken the principal role, we have access to our database again. This can be done safely in the synchronous high safety operating mode as we do not risk any dataloss due to all transactions being made simultaneously in both databases. In the high performance mode thugh, we cannot do this as there could potentially be transactions that has not yet been transferred to the mirror, which would result in data loss. In this case we have to get the principal back online - or accept possible data loss, depending on what's acceptable.

<p>In the following video I'll simulate a dead principal. I'll show the availability tester application running, using MANDALAY as the principal, RIO being the mirror. I'll the pause the MANDALAY server, effectively simulating it dropping completely off the network. You'll then notice all red bars in the tester application, as expected. To get the database up again, we have to do a manual failover to the mirror server, making it the new principal. We do that by executing the query:

<pre lang="tsql" escaped="true">ALTER DATABASE AdventureWorks SET PARTNER FORCE_SERVICE_ALLOW_DATA_LOSS</pre>

<p>There is no GUI that'll execute this query. Soon after I've executed the query, we get green bars again. Notice that all bars are green, this is due to the connection retry algorithm as explained earlier - the MANDALAY server is still offline. As I refresh the database list on RIO, you'll notice that the database is now listed as "Principal, Disconnected", confirming that the RIO database has undertaken the principal role, while disconnected from the mirror. I'll then resume MANDALAY, and as I refresh the MANDALAY database list, you'll notice that the database automatically changed state into "Mirror, Suspended / Restoring" - it picked up on the role change and is now awaiting further commands. It will not automatically resynch as mirroring is suspended when we force the principiality change through the ALLOW_SERVICE_DATA_LOSS parameter. We first have to resume the mirroring functionality. After having resumed mirroring, I'll wait for the databases to synch up completely, after which I'll do a manual failover so MANDALAY becomes the principal again. There's a short downtime as the failover takes place, but after that, we've got green bars and MANDALAY returns as the principal, RIO changing to mirror.

<p>
http://www.youtube.com/watch?v=R73OPBzS0ag
</p>

<p>And there we go, we just experienced a principal going down with minimal service unavailability.

<h2>High security with a witness</h2>

<p>The restoration process we just experienced can be automated if we choose to utilize a third server known as the witness. The witness server continually monitors the principal and will initiate a failover in case the principal dies, as well as restoring the mirrors functionality when it returns (that is, converting the previous principal to the new mirror). It requires a third server, MGM (IP 192.168.0.35) for the witness part. Setup is more or less as usual, we just need to include the FQDN for the witness server.

<p>In the last video I'll show how to setup the mirroring including a witness server. I will then start the availability testing application and pause the principal server afterwards. This will immediatly result in red boxes all over, but after a short while, the RIO server (the new principal) becomes green, and a moment after, the mirrored connection itself also becomes green. The MANDALAY box is also green, but again, this is due to the retry mechanism as explained earlier. You'll then see that the previous mirror database has now changed status to "Principal, Disconnected", proving that it has overtaken the principal responsibility and that it has lost connection to the mirror. I'll then show how the MANDALAY database has changed status to mirror, and how we can do a manual failover so everything goes back to normal. This is the point when FQDNs became neccessary. Using IPs resulted in the mirror not being able to make the failover. As stated earlier, using IPs is a bad practice, you should always use FQDNs. I've added the AD hostnames to my hosts file so I can enter them from my non-AD member desktop machine.

<p>
http://www.youtube.com/watch?v=oa6ZYxIPNFg
</p>

<h2>Conclusion</h2>

<p>SQL Mirroring is a great way to increase your availability rate in case of database failures. You need to understand precisely where mirroring will help and where it won't make a difference. It won't help when you fire out a TRUNCATE [WRONG_TABLE] statement since it'll just be replicated on the mirror, for that you'll still have to make a rollback via the logs. It'll help you in the case of a server crashing due to either hardware, software or network failures (depending on your network setup) and so forth. It'll also enable you to <a href="http://msdn2.microsoft.com/en-us/library/bb497962.aspx">do rolling upgrades</a>.

<p>While configuration is rather straight forward, mirroring will add complexity to your setup and errors may be harder to track down. You also have to consider the licensing requirements depending on the level of mirroring you're planning to use.

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/03/SQL_Mirroring_Tester.zip">SQL_Mirroring_Tester.zip - Test solution</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1271</wp:post_id>
		<wp:post_date>2008-03-23 18:19:44</wp:post_date>
		<wp:post_date_gmt>2008-03-23 18:19:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-server-mirroring-a-practical-approach</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="availability"><![CDATA[Availability]]></category>
		<category domain="post_tag" nicename="mirroring"><![CDATA[Mirroring]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SQL Server Mirroring - A Practical Approach]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_66c655e06289076a4cf35370b024c098</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="375" src="http://www.youtube.com/embed/W7iw58KN4Sg?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3d1760149d2ebe4752b8a01ec548b17c</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="375" src="http://www.youtube.com/embed/UQFrD3RmNrg?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b22b9f14e979f68bd43d2eb03abc8e52</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="375" src="http://www.youtube.com/embed/oa6ZYxIPNFg?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_3c23bb93594c634a8fb7cae42220bc17</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="375" src="http://www.youtube.com/embed/eHeVZ1NzIO0?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_79a9f082e1c9fe43df01813e6cdab95b</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="375" src="http://www.youtube.com/embed/R73OPBzS0ag?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_23718f4c40a39db4d62d8ded4507f0b5</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="500" height="375" src="http://www.youtube.com/embed/rlAMl3D47bo?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>827</wp:comment_id>
			<wp:comment_author><![CDATA[ASP]]></wp:comment_author>
			<wp:comment_author_email>spavkov@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.aspdotnetfaq.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-21 11:25:53</wp:comment_date>
			<wp:comment_date_gmt>2008-04-21 11:25:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very useful post,<br /><br />Keep up the good work!<br />Slobo]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>828</wp:comment_id>
			<wp:comment_author><![CDATA[raghu]]></wp:comment_author>
			<wp:comment_author_email>raghu.dadi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-20 19:36:30</wp:comment_date>
			<wp:comment_date_gmt>2008-06-20 19:36:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent one]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>829</wp:comment_id>
			<wp:comment_author><![CDATA[sharad]]></wp:comment_author>
			<wp:comment_author_email>chandrasharad@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-12 23:16:55</wp:comment_date>
			<wp:comment_date_gmt>2009-03-12 23:16:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Mark - Downloaded the tester, but when I try to open the solution file I get an error- says this project SQL Mirror Tester.csproj cannot be opened since it is not supported by this version of the application.<br />Tried both VS2005 and VS2008.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>830</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-12 23:25:53</wp:comment_date>
			<wp:comment_date_gmt>2009-03-12 23:25:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@sharad<br /><br />Ii just tried downloading the solution, and I had no problems opening it in VS2008. Do you have C# installed as part of the VS installation? Otherwise it'll give you that error.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>831</wp:comment_id>
			<wp:comment_author><![CDATA[sharad]]></wp:comment_author>
			<wp:comment_author_email>chandrasharad@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-13 00:00:01</wp:comment_date>
			<wp:comment_date_gmt>2009-03-13 00:00:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What do you mean by C# installed as part of VS 2008?<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>832</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-14 00:59:44</wp:comment_date>
			<wp:comment_date_gmt>2009-03-14 00:59:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You select which tools &amp; languages you want to install when installing VS2008. You'll get that exact message if you need the language of a project you're trying to open.<br /><br />If that's not the reason, I'm not sure why.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>833</wp:comment_id>
			<wp:comment_author><![CDATA[sharad]]></wp:comment_author>
			<wp:comment_author_email>chandrasharad@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-16 23:55:29</wp:comment_date>
			<wp:comment_date_gmt>2009-03-16 23:55:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark - It works now. You were right about it missing the C# component.<br />I uninstalled and installed VS 2008.<br /><br />Thanks a ton!<br />Sharad]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>836</wp:comment_id>
			<wp:comment_author><![CDATA[AndyAnge]]></wp:comment_author>
			<wp:comment_author_email>ingeneiroandresangel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-01-03 13:24:28</wp:comment_date>
			<wp:comment_date_gmt>2012-01-03 13:24:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi, do you know how i can reconnect the servers when the status is disconnected ?<br /><br />thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>837</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/default.aspx</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-01-05 09:09:59</wp:comment_date>
			<wp:comment_date_gmt>2012-01-05 09:09:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@AndyAnge<br />I'd follow the troubleshooting steps outlined here:<br /><a rel="nofollow external" href="http://social.msdn.microsoft.com/Forums/en-SG/sqldatabasemirroring/thread/8d2f9d69-7b32-49b2-a578-e1f2938cdfa7" title="http://social.msdn.microsoft.com/Forums/en-SG/sqldatabasemirroring/thread/8d2f9d69-7b32-49b2-a578-e1f2938cdfa7" rel="nofollow">social.msdn.microsoft.com/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>838</wp:comment_id>
			<wp:comment_author><![CDATA[Abi Chapagai]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-14 10:36:36</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 10:36:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br />I have a typical situation in setting up database mirroring? I saw this post and wanted to explain you my issues, please email me at: abi.chapagai@gmail.com<br />So that i can give you the details. <br />I look forward hearing from you soon. <br />Abi]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>839</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-14 22:29:04</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 22:29:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Abi<br />I'm not expert in SQL Server mirroring, I've just done some experiments with it to get a feeling of it's capabilities and lacks thereof. I suggest you post your question/setup here as there's a larger chance of me/someone else giving proper advice.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21585</wp:comment_id>
			<wp:comment_author><![CDATA[Clustering and mirroring | Enterprise IT Notes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://enterpriseitnotes.wordpress.com/2013/04/19/clustering-and-mirroring/</wp:comment_author_url>
			<wp:comment_author_IP>66.135.48.190</wp:comment_author_IP>
			<wp:comment_date>2013-04-19 13:06:22</wp:comment_date>
			<wp:comment_date_gmt>2013-04-19 11:06:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://improve.dk/sql-server-mirroring-a-practical-approach/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366369582.892571926116943359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>XmlOutput vs XmlSerializer Performance</title>
		<link>http://improve.dk/xmloutput-vs-xmlserializer-performance/</link>
		<pubDate>Sat, 29 Mar 2008 18:43:28 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/29/xmloutput-vs-xmlserializer-performance.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I got quite a lot of comments for my <a href="http://improve.dk/blog/2007/10/20/xmldocument-fluent-interface">XmlDocument fluent interface</a>, and I'm very glad I did. I'm always open towards new ways to solve problems, and I got a couple of suggestions to my post that I afterwards experimented with. One of those is using the XmlSerializer to serialize strongly typed classes (or structs - performance is the same) into XML. <a href="http://www.vonsharp.net/">Jon von Gillern</a> originally suggested it, but <a href="http://www.u2u.info/Blogs/Kris">Kris Vandermotten</a> made me want to test it out.</p>

<p>There are two aspects of these solutions, one is readability &amp; maintanability, the other is pure performance. I said that my XmlDocument wrapper would be a lot faster than the serialization way using Reflection, but Kris wasn't so sure. Admittedly, I hadn't tested it out, so I though I might actually be wrong in that assumption. Let the testing commence.</p>

<p>I'll be using my User XML snippet as an example. This is how the XML is generated using my API:</p>

<pre lang="csharp" escaped="true">XmlOutput xo = new XmlOutput()
	.XmlDeclaration()
	.Node("root").Within()
		.Node("user").Within()
			.Node("username").InnerText("orca")
			.Node("realname").InnerText("Mark S. Rasmussen")
			.Node("description").InnerText("I'll handle any escaping (like &lt; &amp; &gt; for example) needs automagically.")
			.Node("articles").Within()
				.Node("article").Attribute("id", "25").InnerText("Handling DBNulls")
				.Node("article").Attribute("id", "26").InnerText("Accessing my privates")
				.EndWithin()
			.Node("hobbies").Within()
				.Node("hobby").InnerText("Fishing")
				.Node("hobby").InnerText("Photography")
				.Node("hobby").InnerText("Work");

string output = xo.GetOuterXml();</pre>

<p>Note that I just retrieve the complete XML in a string, I don't print or save this, it's just to get a valid comparison point. This is how we'll generate the same code using the XmlSerializer:</p>

<pre lang="csharp" escaped="true">public class User
{
	public string Username;
	public string Realname;
	public string Description;
	public List&lt;Article&gt; Articles;
	public List&lt;Hobby&gt; Hobbies;
}

public class Article
{
	[XmlAttribute]
	public int ID;

	[XmlText]
	public string Content;
}

public class Hobby
{
	[XmlText]
	public string Content;
}</pre>

<pre lang="csharp" escaped="true">public static string ConvertToXml(object item)
{
	XmlSerializer xmlser = new XmlSerializer(item.GetType());

	using (MemoryStream ms = new MemoryStream())
	{
		xmlser.Serialize(ms, item);
		UTF8Encoding textconverter = new UTF8Encoding();
		return textconverter.GetString(ms.ToArray());
	}
}</pre>

<pre lang="csharp" escaped="true">User user = new User();
user.Username = "orca";
user.Realname = "Mark S. Rasmussen";
user.Description = "I'll handle any escaping (like &lt; &amp; &gt; for example) needs automagically.";

user.Articles = new List&lt;Article&gt;();
user.Articles.Add(new Article() { ID = 25, Content = "Handling DBNulls" });
user.Articles.Add(new Article() { ID = 26, Content = "Accessing my privates"});

user.Hobbies = new List&lt;Hobby&gt;();
user.Hobbies.Add(new Hobby() { Content = "Fishing" });
user.Hobbies.Add(new Hobby() { Content = "Photography" });
user.Hobbies.Add(new Hobby() { Content = "Work" });

string output = ConvertToXml(user);</pre>

<p>Note that only the last codesnippet is the one being looped, the other two are simply one-time helpers to actually create the XML. I have run the tests in a number of iterations to get a total code time, furthermore, I've run each of the iteration tests 10 times to calculate the average execution time. This is the basic code to run the tests:</p>

<pre lang="csharp" escaped="true">sw.Reset();
iterationTime = 0;
for (int testIteration = 0; testIteration &lt; testIterations; testIteration++)
{
	sw.Start();
	for (int i = 0; i &lt; iterations; i++)
	{
		// Perform XML creation
	}
	sw.Stop();
	iterationTime += sw.ElapsedMilliseconds;
	Console.WriteLine(sw.ElapsedMilliseconds);

	sw.Reset();
}
Console.WriteLine("Total XmlSerializer: " + iterationTime / testIterations);</pre>

<p>And finally, the results (times in ms on a base 10 logarithmic scale):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/03/xmloutputspeed_2.jpg"><img class="alignnone size-full wp-image-2009" alt="xmloutputspeed_2" src="http://improve.dk/wp-content/uploads/2008/03/xmloutputspeed_2.jpg" width="559" height="354" /></a></div></div>

<p>As expected, the XmlSerializer is somewhat slower on the low iteration numbers, this is due to the initial code emits XmlSerializer will do, as Kris also mentioned. This is also the reason XmlSerializer is actually speeding up as the iterations go up, the initial compilation is meaning less and less. XmlOutput has a rather linear use of time. Never the less, the initial compilation time is neglible as it's only the first request that has this performance hit (and we could sgen followed by ngen this to avoid it). Thus, if we simply reset the timer after the first iteration, this is the new graph we get (note that we can't plot the 1st iteration as a value of 0 cannot be plotted on the logarithmic scale):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/03/xmloutputspeed2_2.jpg"><img class="alignnone size-full wp-image-2010" alt="xmloutputspeed2_2" src="http://improve.dk/wp-content/uploads/2008/03/xmloutputspeed2_2.jpg" width="559" height="354" /></a></div></div>

<p>This time XmlSerializer behaves a lot more linearly like XmlOutput, but it's still several factors slower than XmlOutput. In conclusion, speed does not seem to be the advantage of XmlSerializer. Depending on your scenario, using strongly typed classes might be more appropriate, but I really believe this is scenario dependent and thus I'll leave that out of the discussion.</p>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/03/SerializationBenchmark.zip">SerializationBenchmark.zip - Sample code</a></p>

<h2>Update</h2>

<p>I misread Kris' comment about sgen, I read it as ngen. I've removed my comment regarding this. To be fair, I've redone the performance tests, using sgen on the assembly during compilation. And I must say, it certainly does improve the performance somewhat of the serializer, though still not enough to compete with XmlOutput/XmlDocument.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/03/xmloutputspeed3_2.jpg"><img class="alignnone size-full wp-image-2011" alt="xmloutputspeed3_2" src="http://improve.dk/wp-content/uploads/2008/03/xmloutputspeed3_2.jpg" width="561" height="341" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1272</wp:post_id>
		<wp:post_date>2008-03-29 18:43:28</wp:post_date>
		<wp:post_date_gmt>2008-03-29 18:43:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>xmloutput-vs-xmlserializer-performance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[XmlOutput vs XmlSerializer Performance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>841</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info.blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-30 12:09:46</wp:comment_date>
			<wp:comment_date_gmt>2008-04-30 12:09:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Marc,<br /><br />Good article, good test.<br /><br />You only tested the actual XML serialization though. The XmlSerializable types will outperform XmlDocument when you start to access the data in them, or modify that data.<br /><br />Also, you might want to test with a StringWriter instead of a MemoryStream. When you use a MemoryStream, you actually first encode the unicode to bytes, and afterwards you have to decode them to get a string (in the process of which you even called ToArray(), making a copy of the data in the stream!). Using a StringWriter would avoid all that.<br /><br />Try also to store the XmlSerializer in a static field for reuse, I wonder what the overhead for its creation is.<br /><br />As you can see, I haven't modified your benchmark to try this myself, so I don't know what the impact will be.<br /><br />Kris.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>842</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-30 13:16:00</wp:comment_date>
			<wp:comment_date_gmt>2008-04-30 13:16:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Kris,<br /><br />Thanks for your comments. I'm sure you're right in regards to modification, and I really like the thought of using (De)Serialization in that regard. The reason I didn't test it in this test due to XmlOutput only being a contender in regards of creating Xml.<br /><br />I'll try a couple of tests using your suggestions and update / create a followup post.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Response.TransmitFile + Close Will Kill Your Application</title>
		<link>http://improve.dk/response-transmitfile-close-will-kill-your-application/</link>
		<pubDate>Sat, 29 Mar 2008 21:59:18 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/03/29/response-transmitfile-close-will-kill-your-application.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just before last weekend I noticed that a website I'm responsible for started spitting out "Server is busy" messages, not something you want to see on a website with millions of visitors per day. The quickfix was to recycle the application pool, and thus I solved the symptoms by setting a 15 mins recycle cycle on all the application pools. Not exactly optimal, but sometimes pissing your pants is the way to go.</p>

<p>The first step I made to analyze what was causing this is the Performance Monitor tool. We weren't experiencing above average traffic, so that couldn't explain it. What first struck me was the the "ASP.NETRequests Queued" queue was 0, not 5000+ as I'd expected! That meant the requests were not being queued, so the server didn't have trouble handling the requests themselves. The reason was to be found in the "ASP.NETRequests Current" counter. This was constantly rising even though the CPU, memory and disk counters looked fine. It obviously didn't look like a performance problem, more like a configuration issue. So I increased the appQueueRequestLimit to 20k and set the recycle cycle to 30 minutes, at most the "ASP.NETRequests Current" went to about 10k before being recycled and thus reset to 0.</p>

<p>Now, that didn't fix the problem, just the symptom. We hadn't experienced this issue previously, so I thought back at what changes had been made in the latest release version. The primary functionality of the system is to serve images, thus we have an Image.ashx file with a responsibility of serving the images as well as logging various parameters of the request. The previous system version had a funtionality like so:</p>

<ol>
	<li>Find image path</li>
	<li>Response.TransmitFile()</li>
	<li>Logging</li>
</ol>

<p>The disadvantage of doing it that way is that the client will not have the image served before the statistics have been logged, even though that's purely a serverside functionality. I wanted the client to receive the image as quickly as possible, and then letting the server continue its job afterwards. The obvious solution is to spawn a new thread doing the logging, but with the amount of requests we've got, I really don't want to spawn any more threads than absolutely neccessary, excessive context switching will have a negative impact when the thread count gets high enough. So the new version functioned like this:</p>

<ol>
	<li>Find image path</li>
	<li>Response.TransmitFile()</li>
	<li>Response.Flush()</li>
	<li>Response.Close()</li>
	<li>Logging</li>
</ol>

<p>This had the great advantage that the client receives the image immediatly while the server continues logging afterwards. We use only a single thread, the actual request thread. A friend of mine pointed out I might want to move the logging out of the ASP.NET worker process so as to not block incoming requests. The thing is, this will require new thread spawning, and I really don't mind blocking a worker process as we can easily tune the amount of concurrent worker processes, and the "Server too busy" functionality is actually there for a reason - I don't wanna end up in a situation where the server is running a million logging threads but still accepting new connections willingly - in _that_ case, I'd really like the server to block new requests.</p>

<p>Anyways, although this looked good, this was the sole reason for the "Server too busy" errors we were experiencing! After some testing I discovered that if you call Response.TransmitFile() and then afterwards call Response.Close(), the request process is stuck! It will simply keep on living, and thus the "ASP.NETRequests Current" counter will keep increasing. It will not be removed until a pool recycle event is fired! This does not happen if you use Response.WriteFile, Response.BinaryWrite or if you manually stream the file, only if you use TransmitFile!</p>

<h3>This will kill your application:</h3>

<pre lang="csharp" escaped="true">protected void Page_Load(object sender, EventArgs e)
{
	Response.Buffer = false;
	Response.TransmitFile("Tree.jpg");
	Response.Close();
}</pre>

<h3>But this won't:</h3>

<pre lang="csharp" escaped="true">protected void Page_Load(object sender, EventArgs e)
{
	Response.WriteFile("Tree.jpg");
	Response.Flush();
	Response.Close();
}

protected void Page_Load(object sender, EventArgs e)
{
	Response.BinaryWrite(File.ReadAllBytes(Server.MapPath("Tree.jpg")));
	Response.Flush();
	Response.Close();
}

protected void Page_Load(object sender, EventArgs e)
{
	int chunkSize = 64;
	byte[] buffer = new byte[chunkSize];
	int offset = 0;
	int read = 0;
	using (FileStream fs = File.Open(Server.MapPath("Tree.jpg"), FileMode.Open, FileAccess.Read, FileShare.Read))
	{
		while ((read = fs.Read(buffer, offset, chunkSize)) &gt; 0)
		{
			Response.OutputStream.Write(buffer, 0, read);
			Response.Flush();
		}
	}

	Response.Close();
}</pre>

<p>I can replicate the exact same errors on Server 2003 with IIS running i *32 mode, Vista x64 and Server 2003 in x64 mode. It does not matter if you're running ASPX pages or ASHX HttpHandlers, same problem.</p>

<p>I used this code snippet to get a list of the current active requests in IIS (to verify that the "ASP.NETRequests Current" and "W3SVC_W3WPActive Requests" are not lying:</p>

<pre lang="csharp" escaped="true">ServerManager iisManager = new ServerManager();

foreach (WorkerProcess w3wp in iisManager.WorkerProcesses)
{
	Console.WriteLine("W3WP ({0})", w3wp.ProcessId);

	foreach (Request request in w3wp.GetRequests(0).Where(req =&gt; req.Url == "/default.aspx"))
	{
		Console.WriteLine("URL: " + request.Url);
		Console.WriteLine("TimeElapsed: " + request.TimeElapsed);
		Console.WriteLine("TimeInState: " + request.TimeInState);
		Console.WriteLine("TimeInModule: " + request.TimeInModule);
		Console.WriteLine("CurrentModule: " + request.CurrentModule);
		Console.WriteLine("PipelineState: " + request.PipelineState);
		Console.WriteLine();
	}
}</pre>

<pre class="plain">W3WP (7580)
URL: /default.aspx
TimeElapsed: 4223509
TimeInState: 4223509
TimeInModule: 4223509
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2529463
TimeInState: 2529463
TimeInModule: 2529463
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2527809
TimeInState: 2527809
TimeInModule: 2527809
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2521117
TimeInState: 2521117
TimeInModule: 2521117
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2516562
TimeInState: 2516562
TimeInModule: 2516562
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2515470
TimeInState: 2515470
TimeInModule: 2515470
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2514378
TimeInState: 2514378
TimeInModule: 2514378
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler

URL: /default.aspx
TimeElapsed: 2291749
TimeInState: 2291749
TimeInModule: 2291749
CurrentModule: IsapiModule
PipelineState: ExecuteRequestHandler</pre>

<p>So obviously the requests are there, they're just stale.</p>

<p>If we take a look at an <a href="http://iismonitor.motobit.com/">IISTrace</a> trace, we can see all of the requests in the "Send data" state. They have all sent all the data and no further data is being sent, but they're still stuck in the "Send data" state:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/03/iistrace_2.jpg"><img class="alignnone size-full wp-image-2005" alt="iistrace_2" src="http://improve.dk/wp-content/uploads/2008/03/iistrace_2.jpg" width="610" height="419" /></a></div></div>

<p>For all the other ways to send the file, the request exits the Send data state as soon as all processing is done (that is, not directly after Response.Close). Calling Response.End has no influence.</p>

<h2>Symptoms</h2>

<p>You may be experiencing this problem without knowing it. Unless you have a some load on your site, chances are you will never actually see this problem. While the requests will go stale and continue to live, a recycle event will kill them off as the process is closed. But you will see this in your System log:</p>

<p>A process serving application pool 'Classic .NET AppPool' exceeded time limits during shut down. The process id was '13304'.</p>

<p>Since the requests continue living, recycling the pool will time out and thus force the process to shut down, and thereby generating the above event. This may lead to increased memory usage depending on your recycle settings. So unless you have more requests than the Request queue limit setting on your application pool, within the recycle period, you will not notice this problem.</p>

<h2>Fix</h2>

<p>The easiest way to get around this problem (bug?) is to just spawn a new thread doing the logging so the main thread will complete right after TransmitFile. In most cases the logging operation will be rather fast so the threads will be shortlived and thus not create too many concurrent threading operations.</p>

<pre lang="csharp" escaped="true">Response.Buffer = false;
Response.TransmitFile("Tree.jpg");

Thread t = new Thread(delegate()
{
	// Logging
});
t.Start();</pre>

<h2>Bonus code</h2>

<p>Jonathan Gilbert posted a couple of great comments regarding spawning your own threads in the process and the possibility of extracing the actual logging process into a separate service. Since my blogs comments suck in regards to posting code, here are his code parts:</p>

<pre lang="csharp" escaped="true">static object log_sync = new object();
static Queue&lt;LogData&gt; log_queue = new Queue&lt;LogData&gt;();
static bool log_thread_running = false;

static void post_log_entry(LogData log_entry)
{
	lock (log_sync)
	{
		log_queue.Enqueue(log_entry);

		if (log_thread_running)
			Monitor.PulseAll(log_sync);
		else
			new Thread(log_thread_proc).Start();
	}
}

static void log_thread_proc()
{
	lock (log_sync)
	{
		if (log_thread_running)
			return;

		log_thread_running = true;

		try
		{
			while (true)
			{
				while (log_queue.Count == 0)
					Monitor.Wait(log_sync);

				LogData one_item = null;
				List&lt;LogData&gt; multiple_items = null;

				if (log_queue.Count == 1)
					one_item = log_queue.Dequeue();
				else
				{
					multiple_items = new List&lt;LogData&gt;(log_queue);
					log_queue.Clear();
				}

				// The following block: Exit; try/finally{Enter}
				// ..is the logical inverse of a lock() block. :-)
				Monitor.Exit(log_sync);

				try
				{
					if (one_item != null)
						process_log_entry(one_item);

					if (multiple_items != null)
						foreach (LogData item in multiple_items)
							process_log_entry(item);
				}
				finally
				{
					Monitor.Enter(log_sync);
				}
			}
		}
		catch (Exception e)
		{
			// TODO: log this unexpected error
		}
		finally
		{
			log_thread_running = false;
		}
	}
}</pre>

<pre lang="csharp" escaped="true">static object log_sync = new object();
static BinaryFormatter log_formatter = new BinaryFormatter(); // in System.Runtime.Serialization.Formatters.Binary
static Stream log_stream;

static void post_log_entry(LogData log_entry)
{
	lock (log_sync)
	{
		if (log_writer == null)
		{
			Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);

			// In practice, I would let the OS pick the port number when binding in the Windows Service
			// and write it to a central location that the ASP.NET process can read from.
			socket.Connect(new IPEndPoint(IPAddress.Loopback, SecretPortNumber));

			log_stream = new NetworkStream(socket, true);
		}

		log_formatter.Serialize(log_stream, log_entry);
	}
}</pre>

<pre lang="csharp" escaped="true">class LogService : System.ServiceProcess.ServiceBase
{
	static void Main(string[] args)
	{
		if ((args.Length &gt; 0) &amp;&amp; string.Equals(args[0], "/console", StringComparison.InvariantCultureIgnoreCase))
		{
			LogService service = new LogService();

			service.StartDirect();
			Console.WriteLine("Press enter to stop debugging");
			Console.ReadLine();
			service.StopDirect();
		}
		else
			ServiceBase.Run(new LogService());
	}

	LogService()
	{
		ServiceName = "LogService";
		CanStop = true;
	}

	public void StartDirect()
	{
		OnStart(null);
	}

	public void StopDirect()
	{
		OnStop();
	}

	protected override void OnStart(string[] args)
	{
		socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);

		// Again, in implementation, change this to bind to port 0 and then after the Bind call
		// has succeeded, read the port number back from the LocalEndPoint property and write it
		// to a place where the ASP.NET side can read it.
		socket.Bind(new IPEndPoint(IPAddress.Loopback, SecretPortNumber));

		socket.Listen(5);

		shutdown = false;

		Thread main_thread = new Thread(main_thread_proc);

		main_thread.IsBackground = true;
		main_thread.Start();
	}

	protected override void OnStop()
	{
		shutdown = true;
	}

	Socket socket;
	bool shutdown;

	void main_thread_proc()
	{
		BinaryFormatter log_formatter = new BinaryFormatter();

		using (NetworkStream log_stream = new NetworkStream(socket, true))
		{
			while (!shutdown)
			{
				LogData log_entry = (LogData)log_formatter.Deserialize(stream);

				process_log_entry(log_entry);
			}
		}
	}
}</pre>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/03/ResponseCloseTest.zip">ResponseCloseTest.zip - Sample code</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1273</wp:post_id>
		<wp:post_date>2008-03-29 21:59:18</wp:post_date>
		<wp:post_date_gmt>2008-03-29 21:59:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>response-transmitfile-close-will-kill-your-application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="crash"><![CDATA[crash]]></category>
		<category domain="post_tag" nicename="iis-2"><![CDATA[iis]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Response.TransmitFile + Close Will Kill Your Application]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>843</wp:comment_id>
			<wp:comment_author><![CDATA[Nic]]></wp:comment_author>
			<wp:comment_author_email>nic.siggel@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-30 00:30:33</wp:comment_date>
			<wp:comment_date_gmt>2008-03-30 00:30:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello,<br /><br />Nice post of the caveats of using TransmitFile() and logging...<br /><br />I was wondering if you found any better option on this without having to resort to<br /><br />Response.BinaryWrite or<br /><br />        while ((read = fs.Read(buffer, offset, chunkSize)) &gt; 0)<br />        {<br />            Response.OutputStream.Write(buffer, 0, read);<br />            Response.Flush();<br />        }<br /><br /><br />I have been working on a httpHandler to do the same type of handling transfer and logging for different files; however I am handling large media files (anywhere between 15 to 300 MB) and so in order to not kill the performance of the web site with limited number of threads and overloading the system memory, I would like to continue using the Response.TransmitFile() calls, as this call is optimized for this scenario.<br /><br />Ideally I would like to be able to log a downloadstart_event and then a download_completed event when TransmitFile() completed, however I don't seem to be able to find an async event to catch and handle for the TransmitFile() call.<br /><br />I would appreciate any insight you or anyone one else might have...<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>844</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-30 03:21:48</wp:comment_date>
			<wp:comment_date_gmt>2008-03-30 03:21:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nic,<br /><br />In your scenario I'd go the route of transmitting the file manually. While TransmitFile may be slightly more optimized, the real performance barrier in this case is the network IO of the client, not on the server.<br /><br />Furthermore that will also allow you to log exactly how much the client downloaded by polling Response.IsClientConnected and thus abort the transmission if the client cancels the download.<br /><br />You can see my last appended codeexample for an easy way to do asynchronous logging. This will not allow you to log the actual sent bytes amount though.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>845</wp:comment_id>
			<wp:comment_author><![CDATA[Ben Strackany]]></wp:comment_author>
			<wp:comment_author_email>ben@developmentnow.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.developmentnow.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-30 18:59:05</wp:comment_date>
			<wp:comment_date_gmt>2008-03-30 18:59:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark -<br /><br />Good tip here ... sound like you've been working with this a lot. Good to see a recent post, since a lot of the top google hits were either old or not so performant for large files. <br /><br />We're looking to build something similar for large downloads ... any suggestions for IIS tweaks or other tips? Users will be able to buy &amp; download large media files, but I don't want to tie up ASP.NET's requests on downloads.<br /><br />TIA,<br /><br />Ben Strackany]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>846</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-03-30 19:50:07</wp:comment_date>
			<wp:comment_date_gmt>2008-03-30 19:50:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Ben,<br /><br />Thanks for your comment. I was actually planning on making a post with general recommendations on file serving through ASP.NET, including the IIS part. Instead of giving a couple of hints now, I'd rather spill it all out in the post - I think I'll have it ready during this week :)<br /><br />Feel free to check back in a couple of days or subscribe to my feed.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>847</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>alex@designercoding.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-07 04:30:08</wp:comment_date>
			<wp:comment_date_gmt>2008-04-07 04:30:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello, I'm currently working on a similar project that hasn't gone live yet but after seeing this i realized i might have the same problem.<br />Have you tried using the System.Web.HttpApplication.CompleteRequest() method instead of HttpResponse.Close() ?<br />I am doing:<br />TransmitFile(file.FullName);<br />resp.Flush();<br />app.CompleteRequest();<br />and am hoping (and now checking) that it doesn't have the same problem as .Close() does.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>848</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-04-07 20:01:21</wp:comment_date>
			<wp:comment_date_gmt>2008-04-07 20:01:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Alex,<br /><br />CompleteRequest won't help you with this issue. CompleteRequest basically accomplishes the same as Response.End, that is, the request closes. If you call this directly after Response.TransmitFile, why call it at all? You don't need to call Response.End explicitly.<br /><br />The Response.Close trick makes sense if you have some &quot;long&quot; running operation that needs to complete along with the image request, CompleteRequest will not allow that as the execution stops and thus your operation will never be called.<br /><br />Nevertheless, CompleteRequest does not cause any problems, just like if you called Response.End.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>849</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Gilbert]]></wp:comment_author>
			<wp:comment_author_email>JonathanG@iQmetrix.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-08 16:29:18</wp:comment_date>
			<wp:comment_date_gmt>2008-08-08 16:29:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Spooling up a new thread is very expensive. I would propose one of three alternatives:<br /><br />1. The simpler alternative is to use a thread pool, either the system thread pool or a hand-crafted pool. Avoiding the thread startup cost will reduce the load on the server.<br /><br />2. An option that is even nicer on the server is to use a single, persistent thread for logging. The first request that needs to do logging fires it up, and then from that point on, log entries are placed into a sync queue which the persistent thread pulls from. Example:<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>850</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Gilbert]]></wp:comment_author>
			<wp:comment_author_email>JonathanG@iQmetrix.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-08 16:29:54</wp:comment_date>
			<wp:comment_date_gmt>2008-08-08 16:29:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[  static object log_sync = new object();<br />  static Queue&lt;LogData&gt; log_queue = new Queue&lt;LogData&gt;();<br />  static bool log_thread_running = false;<br /><br />  static void post_log_entry(LogData log_entry)<br />  {<br />    lock (log_sync)<br />    {<br />      log_queue.Enqueue(log_entry);<br /><br />      if (log_thread_running)<br />        Monitor.PulseAll(log_sync);<br />      else<br />        new Thread(log_thread_proc).Start();<br />    }<br />  }<br /><br />  static void log_thread_proc()<br />  {<br />    lock (log_sync)<br />    {<br />      if (log_thread_running)<br />        return;<br /><br />      log_thread_running = true;<br /><br />      try<br />      {<br />        while (true)<br />        {<br />          while (log_queue.Count == 0)<br />            Monitor.Wait(log_sync);<br /><br />          LogData one_item = null;<br />          List&lt;LogData&gt; multiple_items = null;<br /><br />          if (log_queue.Count == 1)<br />            one_item = log_queue.Dequeue();<br />          else<br />          {<br />            multiple_items = new List&lt;LogData&gt;(log_queue);<br />            log_queue.Clear();<br />          }<br /><br />          // The following block: Exit; try/finally{Enter}<br />          // ..is the logical inverse of a lock() block. :-)<br />          Monitor.Exit(log_sync);<br /><br />          try<br />          {<br />            if (one_item != null)<br />              process_log_entry(one_item);<br /><br />            if (multiple_items != null)<br />              foreach (LogData item in multiple_items)<br />                process_log_entry(item);<br />          }<br />          finally<br />          {<br />            Monitor.Enter(log_sync);<br />          }<br />        }<br />      }<br />      catch (Exception e)<br />      {<br />        // TODO: log this unexpected error<br />      }<br />      finally<br />      {<br />        log_thread_running = false;<br />      }<br />    }<br />  }<br /><br />The only problem with this approach is that if it does get backed up, eventually the worker process will be recycled at which point any log entries not yet written will be lost.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>851</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Gilbert]]></wp:comment_author>
			<wp:comment_author_email>JonathanG@iQmetrix.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-08 16:30:22</wp:comment_date>
			<wp:comment_date_gmt>2008-08-08 16:30:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[3. The most scalable approach, but the one that is the most work, is to create a separate Windows Service in charge of the logging. The ASP.NET worker thread then maintains a single, persistent connection to it and posts the log items across the boundary. The advantage of this is that if the system becomes bogged down, the logging will fill up the queue in the IPC connection and cause requests to block within the ASP.NET worker thread, thus implicitly throttling the connection rate. I would not use .NET Remoting for this, as it will spawn a separate channel for each thread. The throttling comes specifically from having only one channel. Example (client side):<br /><br />  static object log_sync = new object();<br />  static BinaryFormatter log_formatter = new BinaryFormatter(); // in System.Runtime.Serialization.Formatters.Binary<br />  static Stream log_stream;<br /><br />  static void post_log_entry(LogData log_entry)<br />  {<br />    lock (log_sync)<br />    {<br />      if (log_writer == null)<br />      {<br />        Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);<br /><br />        // In practice, I would let the OS pick the port number when binding in the Windows Service<br />        // and write it to a central location that the ASP.NET process can read from.<br />        socket.Connect(new IPEndPoint(IPAddress.Loopback, SecretPortNumber));<br /><br />        log_stream = new NetworkStream(socket, true);<br />      }<br /><br />      log_formatter.Serialize(log_stream, log_entry);<br />    }<br />  }<br /><br />For this to work, obviously the LogData class needs to be in a separate interface DLL that can be referenced from both the ASP.NET project and the Windows Service. You mention in the article that a friend suggested this sort of off-loading but that thread creation would be required. This example shows that thread creation would not be required. The Windows Service can operate in a single-threaded mode:<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>852</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Gilbert]]></wp:comment_author>
			<wp:comment_author_email>JonathanG@iQmetrix.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-08 16:32:14</wp:comment_date>
			<wp:comment_date_gmt>2008-08-08 16:32:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[  class LogService : System.ServiceProcess.ServiceBase<br />  {<br />    static void Main(string[] args)<br />    {<br />      if ((args.Length &gt; 0)<br />       &amp;&amp; string.Equals(args[0], &quot;/console&quot;, StringComparison.InvariantCultureIgnoreCase))<br />      {<br />        LogService service = new LogService();<br /><br />        service.StartDirect();<br />        Console.WriteLine(&quot;Press enter to stop debugging&quot;);<br />        Console.ReadLine();<br />        service.StopDirect();<br />      }<br />      else<br />        ServiceBase.Run(new LogService());<br />    }<br /><br />    LogService()<br />    {<br />      ServiceName = &quot;LogService&quot;;<br />      CanStop = true;<br />    }<br /><br />    public void StartDirect()<br />    {<br />      OnStart(null);<br />    }<br /><br />    public void StopDirect()<br />    {<br />      OnStop();<br />    }<br /><br />    protected override void OnStart(string[] args)<br />    {<br />      socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);<br /><br />      // Again, in implementation, change this to bind to port 0 and then after the Bind call<br />      // has succeeded, read the port number back from the LocalEndPoint property and write it<br />      // to a place where the ASP.NET side can read it.<br />      socket.Bind(new IPEndPoint(IPAddress.Loopback, SecretPortNumber));<br /><br />      socket.Listen(5);<br /><br />      shutdown = false;<br /><br />      Thread main_thread = new Thread(main_thread_proc);<br /><br />      main_thread.IsBackground = true;<br />      main_thread.Start();<br />    }<br /><br />    protected override void OnStop()<br />    {<br />      shutdown = true;<br />    }<br /><br />    Socket socket;<br />    bool shutdown;<br /><br />    void main_thread_proc()<br />    {<br />      BinaryFormatter log_formatter = new BinaryFormatter();<br /><br />      using (NetworkStream log_stream = new NetworkStream(socket, true))<br />      {<br />        while (!shutdown)<br />        {<br />          LogData log_entry = (LogData)log_formatter.Deserialize(stream);<br /><br />          process_log_entry(log_entry);<br />        }<br />      }<br />    }<br />  }]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>853</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Gilbert]]></wp:comment_author>
			<wp:comment_author_email>JonathanG@iQmetrix.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-08 16:33:09</wp:comment_date>
			<wp:comment_date_gmt>2008-08-08 16:33:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Note that the code in this post is untested. It contains all of the necessary inter-thread handling that I could see, but it doesn't contain adequate error handling. There may also be minor typos. Use at your own risk :-)<br /><br />Also, the 2048 character post limit is both annoying and buggy; I got my last block down to 2032 characters according to wc.exe, but it still insisted it was too long. I had to split the previous paragraph into a new post.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>854</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 13:29:52</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 13:29:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Jonathan Gilbert<br />Sorry, I know my blog isn't really up to par when it comes to posting code - I've been meaning to do a brushup on the codebase at some point.<br /><br />Thanks for the great post describing some valid issues, as well as some great suggestions. It's true that spooling up threads do require a lot of extra work, and it'll add to context switching as well.<br /><br />Besides doing a custom service connection, we could also utilize MSMQ, although the overhead of using MSMQ might not be worth it. But that'd at least save us some code writing :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>855</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Gilbert]]></wp:comment_author>
			<wp:comment_author_email>JonathanG@iQmetrix.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 22:28:14</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 22:28:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MSMQ is nice and easy to use, and I don't think its overhead is particularly high, but as far as I know it does not offer any form of flow control. Worse, when queues start to get big, the entire system's performance is affected (though this may not apply to your app -- it's something I've seen with inbound queues with more than 250,000 pending messages). One advantage of MSMQ is that it would make it relatively easy to offload the logging to a separate physical machine without losing reliability (e.g. the logging machine could be down for repairs every now and then without affecting the fidelity of the log information). It's all trade-offs :-) As my sample shows, though, what amounts to a custom TCP protocol can be quite trivial to implement using .NET serialization.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>856</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-09 22:41:37</wp:comment_date>
			<wp:comment_date_gmt>2008-08-09 22:41:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really should look into the actual costs of using MSMQ at some point, I hate discussing stuff I don't have any facts for :)<br /><br />I'd say that if you're running a system where it's even possible for your statistics processing to have a backlog of 250k messages while retaining overall system performance, there are probably other issues we might also want to look into.<br /><br />In such a case I'd most likely be implementing some kind of lightweight persisted queue. Of course these issues are extremely scenario based. In my production case, loosing the backlog of stats messages in case of a breakdown is not an issue, while in other cases we might need to guarantee 100% durability.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>857</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>david_brisco@aotx.uscourts.gov</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-29 20:49:56</wp:comment_date>
			<wp:comment_date_gmt>2008-08-29 20:49:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,<br />I have been experiencing this problem as well.  Have any of you noticed that no web log entry is written when the call to close is omitted (after a call to transmitFile)?<br />Thanks,<br />David.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>858</wp:comment_id>
			<wp:comment_author><![CDATA[Shiv Kumar]]></wp:comment_author>
			<wp:comment_author_email>shivk@erols.com</wp:comment_author_email>
			<wp:comment_author_url>http://matlus.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-11-01 08:25:26</wp:comment_date>
			<wp:comment_date_gmt>2010-11-01 08:25:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,<br /><br />Just read the initial part of your post...<br /><br />Just wanted to say that we've been using MSMQ on <a rel="nofollow external" href="http://exposureroom.com" title="http://exposureroom.com" rel="nofollow">http://exposureroom.com</a> which is an extremely busy website and we've never had backlog issues or resource issues. In fact when we look at the queue there never anything in it while at the same time we can see that it logs 1000s of messages in a minute sometimes seconds.<br /><br />We use MSMQ for more than just logging. The entire ExposureRoom system is comprised of many complimentary services and invariably they are long running tasks. These tasks are executed using MSMQ (which triggers a process sending it information via a command line and doesn't actually do the work itself).<br /><br />As regards TransmitFile, evenry thumbnail and video we serve is served using TransmitFile. Using Flus() and Close() is a bad idea.<br /><br />The only Requests that we had hanging were session related (only 4 pages used sessions). So today we don't use Sessions at all and since making that change no Requests are left hanging.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>859</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>cward@dynamicbydesign.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-15 17:27:51</wp:comment_date>
			<wp:comment_date_gmt>2011-06-15 17:27:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the good write up.  If I understand correctly I should have no problem doing the following:<br /><br />protected void Page_Load(object sender, EventArgs e)<br />{<br />        string filePath = MapPath(&quot;file.pdf&quot;);<br />        FileInfo OutFile = new FileInfo(filePath);<br />        Response.Clear();<br />        Response.AddHeader(&quot;Content-Disposition&quot;, &quot;attachment;filename=&quot; + OutFile.Name);<br />        Response.AddHeader(&quot;Content-Length&quot;, OutFile.Length.ToString());        <br />        Response.ContentType = &quot;application/pdf&quot;;        <br />        Response.TransmitFile(filePath);<br />        Response.End();<br />} <br /><br />So I should have any problems?  Or do I not want to call the Response.End()?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>860</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-15 17:34:36</wp:comment_date>
			<wp:comment_date_gmt>2011-06-15 17:34:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Chris<br />Unless you need to end the processing at this point (to avoid any later output of data), I wouldn't call Response.End. It shouldn't cause problems though.<br /><br />Response.End is generally considered bad practice since it aborts the current thread causing exceptions to be thrown, and it alters the flow of the request. See this Stack Overflow thread for some more opinions:<br /><a rel="nofollow external" href="http://stackoverflow.com/questions/1087777/is-response-end-considered-harmful" title="http://stackoverflow.com/questions/1087777/is-response-end-considered-harmful" rel="nofollow">stackoverflow.com/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>861</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-01-10 14:41:54</wp:comment_date>
			<wp:comment_date_gmt>2013-01-10 14:41:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[great stuff !<br />you saved my day!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>148202</wp:comment_id>
			<wp:comment_author><![CDATA[Vikas]]></wp:comment_author>
			<wp:comment_author_email>vikasmaderna@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.88.242.90</wp:comment_author_IP>
			<wp:comment_date>2013-11-21 12:35:14</wp:comment_date>
			<wp:comment_date_gmt>2013-11-21 11:35:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post on TransmitFile

Do you think if file size is between 800mb to 2gb, still can we use this function without issue?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385033714.2065479755401611328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>148353</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>2.130.37.18</wp:comment_author_IP>
			<wp:comment_date>2013-11-21 18:45:57</wp:comment_date>
			<wp:comment_date_gmt>2013-11-21 17:45:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Vikas
You should still be able to use TransmitFile, though I haven't tried to do so myself. For larger files we write them out manually so we can log the progress.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385055957.19392490386962890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Missing ASP.NET Performance Counters</title>
		<link>http://improve.dk/missing-asp-net-performance-counter-values/</link>
		<pubDate>Tue, 01 Apr 2008 00:33:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/04/01/missing-asp-net-performance-counter-values.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Before attempting to optimize code or fix any kind of load issue, you should first gather data and become aware of what bottlenecks you're experiencing. A great way to do this is through the Performance Monitor application. Recently I tried monitoring my ASP.NET applications, but all my counters had a value of 0. As I thought initially, it's a simple problem, but the solution was not easily found.</p>

<p>In <a href="http://www.velocityreviews.com/forums/t101885-aspnet-performance-counters-not-updating.html">some</a> <a href="http://www.velocityreviews.com/forums/t70137-re-aspnet-performance-counters-are-all-zero-.html">cases</a> it might be due to lack of permissions on the performance counter registry keys.</p>

<p>In my case it's because I was running Server 2003 x64, but my IIS was running in 32 bit mode (due to a couple of reasons, mainly lack of x64 support in some 3rd party components). When you run the IIS worker processes in 32 bit mode, the performance counters that are used are part of the SysWow64 scheme. The problem with this is that the usual Performance Monitor application will not read these 32 bit performance counters, and as a result you will see them all with a value of 0.</p>

<p>The fix is simple... Simply open up C:\Windows\SysWOW64\perfmon.exe instead of the usual Performance Monitor link in the Administrative Tools directory. This version of perfmon is the good old 32 bit version that will read the 32 bit ASP.NET performance counters. This trick applies for all x64 versions of Windows.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1274</wp:post_id>
		<wp:post_date>2008-04-01 00:33:32</wp:post_date>
		<wp:post_date_gmt>2008-04-01 00:33:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>missing-asp-net-performance-counter-values</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="performance-counters"><![CDATA[Performance Counters]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Missing ASP.NET Performance Counters]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spawning Threads in ASP.NET Can Be Dangerous</title>
		<link>http://improve.dk/spawning-threads-in-aspnet-can-be-dangerous/</link>
		<pubDate>Mon, 07 Apr 2008 01:10:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/04/07/spawning-threads-in-asp-net-can-be-dangerous.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In my <a href="http://improve.dk/blog/2008/03/29/response-transmitfile-close-will-kill-your-application">earlier blog post</a> about the dangers of using Response.TransmitFile, I gave an example of a workaround involving spawning a new thread in the ASP.NET page. While this does solve the issue at hand, it presents us with a new way to kill our application even quicker than last.</p>

<p>Usually when an uncaught exception occurs in an ASP.NET application, we will be presented with a "friendly" error message like the one below:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/04/caughtexception.jpg"><img class="alignnone size-full wp-image-2036" alt="caughtexception" src="http://improve.dk/wp-content/uploads/2008/04/caughtexception.jpg" width="594" height="487" /></a></div></div>

<p>While there is an overhead of exceptions being thrown, they're not directly dangerous and will at worst affect scalability (ignoring the actual reason of the exception being thrown). The problem is that ASP.NET will <i>only catch exceptions on the processing thread</i>. That means, if you spawn a new thread and an exception is thrown (and is not caught inside the thread itself), it will propagate and eventually <i>crash the w3wp.exe process</i>.</p>

<h3>Safe</h3>

<pre lang="csharp" escaped="true">protected void Page_Load(object sender, EventArgs e)
{
	Response.Write("CAN HAZ W3WP.EXE?");

	throw new Exception("I'll will be caught by ASP.NET :D");
}</pre>

<h3>Unsafe, will crash w3wp.exe</h3>

<pre lang="csharp" escaped="true">protected void Page_Load(object sender, EventArgs e)
{
	Response.Write("CAN HAZ W3WP.EXE?");

	new Thread(delegate()
	{
		throw new Exception("I'll not be caught by ASP.NET :(");
	}).Start();
}</pre>

<p>There are several repercussions of the w3wp.exe crashing. There's a major overhead in spawning a new w3wp.exe process on the next request, you will loose all session (if you're using inprocess session storage), application and cache state. If you have error reporting turned on, you furthermore also see the "DW20.exe" process running and taking up 100% CPU for a significant amount of time (depending on w3wp.exe memory usage, etc) - if this happens often, you might have a large amount of DW20.exe error reporting processes running, effectively crashing your server.</p>

<p>So how do we avoid this? Simple, make sure <i>all code</i> in spawned threads is handling exceptions:</p>

<pre lang="csharp" escaped="true">protected void Page_Load(object sender, EventArgs e)
{
	Response.Write("CAN HAZ W3WP.EXE?");

	new Thread(delegate()
	{
		try
		{
			throw new Exception("I'll be caught by our own exception handler :)");
		}
		catch
		{
			Response.Write("What doesn't kill me will make me stronger!");
		}
	}).Start();
}</pre>

<p>If you're experiencing this issue, you will see errors in the System event log like this one:</p>

<blockquote>A process serving application pool 'DefaultAppPool' terminated unexpectedly. The process id was '708'. THe process exit code was '0xe0434f4d'.</blockquote>

<p>And like this one in the Application log:</p>

<blockquote>EventType clr20r3, P1 w3wp.exe, P2 6.0.3790.3959, P3 45d6968e, P4 crashw3wp, P5 1.0.0.0, P6 47f94ca4, P7 3, P8 b, P9 system.exception, P10 NIL.</blockquote>

<p><a href="http://blogs.msdn.com/tess">Tess</a> has a really great post on <a href="http://blogs.msdn.com/tess/archive/2006/04/27/584927.aspx">how to debug an unknown cause of the crash</a>.</p>

<p>This issue is relevant to all flavors of Windows and all versions of IIS &amp; .NET.</p>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/04/CrashW3WP.zip">CrashW3WP.zip - Sample code</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1275</wp:post_id>
		<wp:post_date>2008-04-07 01:10:32</wp:post_date>
		<wp:post_date_gmt>2008-04-07 01:10:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spawning-threads-in-aspnet-can-be-dangerous</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="post_tag" nicename="crash"><![CDATA[crash]]></category>
		<category domain="post_tag" nicename="threading"><![CDATA[Threading]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[spawning-threads-in-asp-net-can-be-dangerous]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Spawning Threads in ASP.NET Can Be Dangerous]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>145351</wp:comment_id>
			<wp:comment_author><![CDATA[webpage]]></wp:comment_author>
			<wp:comment_author_email>enriquelyttleton@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.Newdesign1.pl/</wp:comment_author_url>
			<wp:comment_author_IP>77.252.69.186</wp:comment_author_IP>
			<wp:comment_date>2013-11-15 17:43:07</wp:comment_date>
			<wp:comment_date_gmt>2013-11-15 16:43:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey there! I know this is somewhat off topic but I was wondering if you knew where I could find a captcha plugin 
for my comment form? I'm using the same blog platform as yours and I'm 
having difficulty finding one? Thanks a lot!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384533787.2464869022369384765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Profiling Code the Easy Way</title>
		<link>http://improve.dk/profiling-code-the-easy-way/</link>
		<pubDate>Wed, 16 Apr 2008 21:17:38 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/04/16/profiling-code-the-easy-way.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I often do code profiling, usually involving a stopwatch and some boilerplate code. I decided to make a quick'n'simple class that'll help me get rid of some of that code and concentrate on the actual code being profiled.</p>

<p>There are just four functions in the class, all overload variations. In a nutshell, they'll allow you to profile a single action with &amp; without warmup, multiple iterations and multiple iterations run i parallel. The code is more or less self explanable so I'll just throw it out there:</p>

<pre lang="csharp" escaped="true">using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Threading;

namespace CodeProfiler
{
	public class CodeProfiler
	{
		/// &lt;summary&gt;
		/// Measures the runtime of an action once
		/// &lt;/summary&gt;
		/// &lt;param name="action"&gt;The action to profile&lt;/param&gt;
		/// &lt;param name="warmup"&gt;Whether the action should be run once before the actual measurement&lt;/param&gt;
		/// &lt;returns&gt;The total runtime&lt;/returns&gt;
		public static TimeSpan ProfileAction(Action action, bool warmup)
		{
			if (warmup)
				action();

			Stopwatch sw = new Stopwatch();
			sw.Start();
			action();
			sw.Stop();
			return sw.Elapsed;
		}

		/// &lt;summary&gt;
		/// Measures the runtime of an action once, will run the action before to warm up
		/// &lt;/summary&gt;
		/// &lt;param name="action"&gt;The action to profile&lt;/param&gt;
		/// &lt;returns&gt;The total runtime&lt;/returns&gt;
		public static TimeSpan ProfileAction(Action action)
		{
			return ProfileAction(action, true);
		}

		/// &lt;summary&gt;
		/// Measures the total runtime of performing the specified action multiple times
		/// &lt;/summary&gt;
		/// &lt;param name="action"&gt;The action to profile&lt;/param&gt;
		/// &lt;param name="iterations"&gt;The number of iterations the action should be performed&lt;/param&gt;
		/// &lt;returns&gt;The total runtime&lt;/returns&gt;
		public static TimeSpan ProfileAction(Action action, int iterations)
		{
			TimeSpan total = new TimeSpan();

			// Perform single warmup
			action();

			// Profile iterations
			for (int i = 0; i &lt; iterations; i++)
				total = total.Add(ProfileAction(action, false));

			return total;
		}

		/// &lt;summary&gt;
		/// Measures the total runtime of performing the specified action using multiple threads
		/// &lt;/summary&gt;
		/// &lt;param name="action"&gt;The action to profile&lt;/param&gt;
		/// &lt;param name="iterations"&gt;The total number of iterations that should be profiled&lt;/param&gt;
		/// &lt;param name="dop"&gt;The number of simultaneous threads that should be used&lt;/param&gt;
		/// &lt;returns&gt;The total runtime&lt;/returns&gt;
		public static TimeSpan ProfileAction(Action action, int iterations, int dop)
		{
			object locker = new object();
			List&lt;Thread&gt; threads = new List&lt;Thread&gt;(iterations);

			// Warmup
			action();

			// Create profiling threads
			for (int i = 0; i &lt; dop; i++)
			{
				Thread t = new Thread(delegate()
				{
					while (true)
					{
						lock (locker)
						{
							if (iterations &gt; 0)
								iterations--;
							else
								break;
						}

						action();
					}
				});
				threads.Add(t);
			}

			Stopwatch sw = new Stopwatch();
			sw.Start();

			// Start profiling threads
			threads.ForEach(t =&gt; t.Start());

			// Wait for all threads to stop
			threads.ForEach(t =&gt; t.Join());

			sw.Stop();

			return sw.Elapsed;
		}
	}
}</pre>

<p>Using the CodeProfiler class, it's easy for us to do code profiling, including measuring the effects of parallelization. Here's an example of calculating the square root of the numbers 1 through 10 million 100 times, using 1-16 simultaneous threads. FYI I'm runing on a quad core machine.</p>

<pre lang="csharp" escaped="true">using System;

namespace CodeProfiler
{
	class Program
	{
		static void Main(string[] args)
		{
			Action action = () =&gt;
			{
				for (int i = 0; i &lt; 10000000; i++)
					Math.Sqrt(i);
			};

			for(int i=1; i&lt;=16; i++)
				Console.WriteLine(i + " thread(s):t" + CodeProfiler.ProfileAction(action, 100, i));

			Console.Read();
		}
	}
}</pre>

<p>And the result as expected, the performance panning out when threads &gt;= cores. Using more threads than there is cores will usually not result in added performance, just increased context switching which is not desirable. Here's the resulting execution times with seconds on the Y axis and number of threads on the X axis.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/04/codeprofilergraph_2.jpg"><img class="alignnone size-full wp-image-2033" alt="codeprofilergraph_2" src="http://improve.dk/wp-content/uploads/2008/04/codeprofilergraph_2.jpg" width="487" height="294" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/04/codeprofilercmd_2.jpg"><img class="alignnone size-full wp-image-2034" alt="codeprofilercmd_2" src="http://improve.dk/wp-content/uploads/2008/04/codeprofilercmd_2.jpg" width="327" height="262" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1276</wp:post_id>
		<wp:post_date>2008-04-16 21:17:38</wp:post_date>
		<wp:post_date_gmt>2008-04-16 21:17:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>profiling-code-the-easy-way</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="profiling"><![CDATA[Profiling]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Profiling Code the Easy Way]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Securing .NET Code</title>
		<link>http://improve.dk/securing-dotnet-code/</link>
		<pubDate>Wed, 16 Apr 2008 19:51:58 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/04/16/securing-net-code-2.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Time flies fast. Back in 2006, during my time as an <a href="http://en.wikipedia.org/wiki/Microsoft_Student_Partners">MSP</a>, I made a series of presentations on securing intellectual property in .NET code, resulting in my <a href="http://improve.dk/articles/dotnet/securing-dotnet-code/">Securing .NET Code</a> article. Although it's about two years old, most points are still valid today, unfortunately.</p>

<p>I recorded a screencast of this article sometime in 2007, but I never really got it published, except for a link on the Microsoft Denmark site. It was my first screencast and unfortunately I made some mistakes, the biggest one being the click sounds from the mouse. An even bigger mistake was me deleting the original Camtasia recording files so I can't create a new version without them.</p>

<p>Never the less, if you prefer watching to reading, it might be interesting to look through.</p>

<p>
http://www.youtube.com/watch?v=Dc9EE4YRGy8
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1277</wp:post_id>
		<wp:post_date>2008-04-16 21:51:58</wp:post_date>
		<wp:post_date_gmt>2008-04-16 19:51:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>securing-dotnet-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[securing-net-code-2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Securing .NET Code]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Performance Comparison - Reading Data From the Database Strongly Typed</title>
		<link>http://improve.dk/performance-comparison-reading-data-from-the-database-strongly-typed/</link>
		<pubDate>Wed, 30 Apr 2008 01:10:09 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/04/30/performance-comparison-reading-data-from-the-database-strongly-typed.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm a big fan of strongly typed database querying as well as returning strong typed results. Due to the nature of static languages, you'll get compile time checking of all our tables and columns. You can easily rename columns as you can be sure all your (internal) references are accounted for.</p>

<p>Returning strongly typed lists of objects instead of DataReaders/DataTables / any other object based containers will also make it easier to transfer through data layers as you're always certain of what's available for you to read and what's not.</p>

<p>But it comes at a cost. Performance.</p>

<p>I set out to test various different ways we could query our database and generate a strongly typed List with the results in it. I'm using the <a href="http://codeplex.com/SqlServerSamples">standard AdventureWorks 2005 database</a> for my testing. For the actual profiling, I'll be using <a href="http://improve.dk/blog/2008/04/16/profiling-code-the-easy-way">my CodeProfiler class</a> from a previous blogpost.</p>

<p>I'll be using two different entities, Product and CompleteProduct:</p>

<pre lang="csharp" escaped="true">[Table(Name = "Production.Product")]
public class Product
{
	[Column]
	public virtual int ProductID { get; set; }
	[Column]
	public virtual string Name { get; set; }
	[Column]
	public virtual string ProductNumber { get; set; }
	[Column]
	public virtual bool MakeFlag { get; set; }
	[Column]
	public virtual short SafetyStockLevel { get; set; }
	[Column]
	public virtual decimal ListPrice { get; set; }
	[Column]
	public virtual DateTime SellStartDate { get; set; }
}

[Table(Name = "Production.Product")]
public class CompleteProduct
{
	[Column]
	public int ProductID { get; set; }
	[Column]
	public string Name { get; set; }
	[Column]
	public string ProductNumber { get; set; }
	[Column]
	public bool MakeFlag { get; set; }
	[Column]
	public bool FinishedGoodsFlag { get; set; }
	[Column]
	public string Color { get; set; }
	[Column]
	public short SafetyStockLevel { get; set; }
	[Column]
	public short ReorderPoint { get; set; }
	[Column]
	public decimal StandardCost { get; set; }
	[Column]
	public decimal ListPrice { get; set; }
	[Column]
	public string Size { get; set; }
	[Column]
	public string SizeUnitMeasureCode { get; set; }
	[Column]
	public string WeightUnitMeasureCode { get; set; }
	[Column]
	public decimal? Weight { get; set; }
	[Column]
	public int DaysToManufacture { get; set; }
	[Column]
	public string ProductLine { get; set; }
	[Column]
	public string Class { get; set; }
	[Column]
	public string Style { get; set; }
	[Column]
	public int? ProductSubcategoryID { get; set; }
	[Column]
	public int? ProductModelID { get; set; }
	[Column]
	public DateTime SellStartDate { get; set; }
	[Column]
	public DateTime? SellEndDate { get; set; }
	[Column]
	public DateTime? DiscontinuedDate { get; set; }
	[Column]
	public Guid rowguid { get; set; }
	[Column]
	public DateTime ModifiedDate { get; set; }
}</pre>

<p>They both map to the same table, Production.Product. CompleteProduct covers all columns, Product just covers the ones I'm interested in.</p>

<h2>Method #1 - Manually mapping from DataReader</h2>

<pre lang="csharp" escaped="true">private static void performDataReader()
{
	var result = new List&lt;Product&gt;();

	using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
	{
		using (SqlCommand cmd = conn.CreateCommand())
		{
			cmd.CommandText = COMMAND_TEXT;

			conn.Open();
			using (SqlDataReader sqldr = cmd.ExecuteReader())
			{
				while (sqldr.Read())
				{
					Product p = new Product();
					p.ProductID = Convert.ToInt32(sqldr["ProductID"]);
					p.Name = sqldr["Name"].ToString();
					p.ProductNumber = sqldr["ProductNumber"].ToString();
					p.MakeFlag = Convert.ToBoolean(sqldr["MakeFlag"]);
					p.SafetyStockLevel = Convert.ToInt16(sqldr["SafetyStockLevel"]);
					p.ListPrice = Convert.ToDecimal(sqldr["ListPrice"]);
					p.SellStartDate = Convert.ToDateTime(sqldr["SellStartDate"]);

					result.Add(p);
				}
			}
		}
	}
}</pre>

<p>Pros: <i>Fast</i></p>

<p>Cons: <i>Has to be written for each object model</i></p>

<h2>Method #2 - Manully mapping from DataTable</h2>

<pre lang="csharp" escaped="true">private static DataTable getDT()
{
	DataTable result = new DataTable();

	using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
	{
		using (SqlCommand cmd = conn.CreateCommand())
		{
			cmd.CommandText = COMMAND_TEXT;

			using (SqlDataAdapter sqlda = new SqlDataAdapter(cmd))
				sqlda.Fill(result);
		}
	}

	return result;
}

private static void performDataTable()
{
	var result = new List&lt;Product&gt;();

	foreach (DataRow dr in getDT().Rows)
	{
		Product p = new Product();
		p.ProductID = Convert.ToInt32(dr["ProductID"]);
		p.Name = dr["Name"].ToString();
		p.ProductNumber = dr["ProductNumber"].ToString();
		p.MakeFlag = Convert.ToBoolean(dr["MakeFlag"]);
		p.SafetyStockLevel = Convert.ToInt16(dr["SafetyStockLevel"]);
		p.ListPrice = Convert.ToDecimal(dr["ListPrice"]);
		p.SellStartDate = Convert.ToDateTime(dr["SellStartDate"]);

		result.Add(p);
	}
}</pre>

<p>Pros: <i>Pretty fast, easy row access, disconnected from database</i></p>

<p>Cons: <i>Has to be written for each object model</i></p>

<p>Comment: <i>I often use a getDT()'ish way of accessing my tables. It's easier than using DataReaders as they're disconnected, you can traverse them back and forth multiple times.</i></p>

<h2>Method #3 - Automatic mapping using DataContext.Translate</h2>

<pre lang="csharp" escaped="true">private static void performEntityQuery()
{
	List&lt;Product&gt; result;

	using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
	{
		using (DataContext dc = new DataContext(conn))
		{
			using (SqlCommand cmd = conn.CreateCommand())
			{
				cmd.CommandText = COMMAND_TEXT;

				conn.Open();
				using(SqlDataReader sqldr = cmd.ExecuteReader())
				{
					result = dc.Translate&lt;Product&gt;(sqldr).ToList();
				}
			}
		}
	}
}</pre>

<p>Pros: <i>Works for all object models, easy to use</i></p>

<p>Cons: <i>Slow</i></p>

<h2>Method #4 - Linq to SQL query for complete entity</h2>

<pre lang="csharp" escaped="true">private static void performLinqQuery()
{
	List&lt;Product&gt; result;

	using(DataContext dc = new DataContext(CONNECTION_STRING))
	{
		result = dc.GetTable&lt;Product&gt;().OrderBy(p =&gt; p.ProductID).Take(rowcount).ToList();
	}
}</pre>

<p>Pros: <i>Could it be easier? Works for all object models</i></p>

<p>Cons: <i>Slow</i></p>

<h2>Method #5 - Linq to SQL query for partial entity</h2>

<pre lang="csharp" escaped="true">private static void performSubsetLinqQuery()
{
	List&lt;Product&gt; result;

	using (DataContext dc = new DataContext(CONNECTION_STRING))
	{
		result = dc.GetTable&lt;CompleteProduct&gt;().OrderBy(p =&gt; p.ProductID).Take(rowcount).Select(p =&gt; new Product() {
			ListPrice = p.ListPrice,
			ProductID = p.ProductID,
			MakeFlag = p.MakeFlag,
			Name = p.Name,
			ProductNumber = p.ProductNumber,
			SafetyStockLevel = p.SafetyStockLevel,
			SellStartDate = p.SellStartDate }).ToList();
	}
}</pre>

<p>Pros: <i>Easy, works for all object models</i></p>

<p>Cons: <i>Slow</i></p>

<p>Comments: <i>In the previous method I retrieved complete Product entities. This time I'm retrieving only some columns of the CompleteProduct entity, mapping them over into a new Product. I've included this to see if there's any performance difference in comparison to loading complete entities.</i></p>

<h2>Method #6 - Automatically mapping from DataReader</h2>

<pre lang="csharp" escaped="true">private static List&lt;T&gt; mapList&lt;T&gt;(SqlDataReader dr)
{
	List&lt;T&gt; list = new List&lt;T&gt;();

	PropertyInfo[] properties = typeof(T).GetProperties();
	T t = Activator.CreateInstance&lt;T&gt;();

	while(dr.Read())
	{
		foreach (PropertyInfo pi in properties)
			pi.SetValue(t, dr[pi.Name], null);

		list.Add(t);
	}

	return list;
}

private static void performAutomappedDataReader()
{
	List&lt;Product&gt; result;

	using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
	{
		using (SqlCommand cmd = conn.CreateCommand())
		{
			cmd.CommandText = COMMAND_TEXT;

			conn.Open();
			using (SqlDataReader sqldr = cmd.ExecuteReader())
			{
				result = mapList&lt;Product&gt;(sqldr);
			}
		}
	}
}</pre>

<p>Pros: <i>Simple to use, works for all object models</i></p>

<p>Cons: <i>Slow, reflection based</i></p>

<h2>Method #7 - Enhanced automatic mapping from DataReader</h2>

<pre lang="csharp" escaped="true">private static void performEnhancedAutomappedDataReader()
{
	List&lt;Product&gt; result;

	using (SqlConnection conn = new SqlConnection(CONNECTION_STRING))
	{
		using (SqlCommand cmd = conn.CreateCommand())
		{
			cmd.CommandText = COMMAND_TEXT;

			conn.Open();
			using (SqlDataReader sqldr = cmd.ExecuteReader())
			{
				result = EntityMapper.MapToEntities&lt;Product&gt;(sqldr).ToList();
			}
		}
	}
}</pre>

<p>Pros: <i>???</i></p>

<p>Cons: <i>???</i></p>

<p>Comments: <i>This is an enhanced version of the previous method that I've made. Explaining the inner workings is outside the scope of this particular topic so I'll have to explain it in my next post. For now, just imagine something very cool and sexy. UPDATE: <a href="http://improve.dk/blog/2008/05/02/mapping-datareader-to-objects-using-reflection-emit">you can read about the method here</a>.</i></p>

<h2>Method #8 - SubSonic SqlQuery</h2>

<pre lang="csharp" escaped="true">private static void performSubSonicQuery()
{
	List&lt;Product&gt; result =
		new Select
			(
				Subsonic.Product.ProductIDColumn.QualifiedName,
				Subsonic.Product.NameColumn.QualifiedName,
				Subsonic.Product.ProductNumberColumn.QualifiedName,
				Subsonic.Product.MakeFlagColumn.QualifiedName,
				Subsonic.Product.SafetyStockLevelColumn.QualifiedName,
				Subsonic.Product.ListPriceColumn.QualifiedName,
				Subsonic.Product.SellStartDateColumn.QualifiedName
			)
			.Top(rowcount.ToString())
			.From(Subsonic.Product.Schema)
			.OrderAsc(Subsonic.Product.ProductIDColumn.QualifiedName)
			.ExecuteTypedList&lt;Product&gt;();
}</pre>

<p>Pros: <i>Works for all object models</i></p>

<p>Cons: <i>Slow</i></p>

<p>Comments: <i>I've never used SubSonic before, so I may have overlooked some obvious performance enhancements, thus, take my numbers with a grain of salt.</i></p>

<h2>Method #9 - NHibernate CreateCriteria</h2>

<pre lang="csharp" escaped="true">private static Configuration nhCfg;
private static ISessionFactory nhFactory;

private static void performNHibernateQuery()
{
	List&lt;Product&gt; result;

	using (ISession session = nhFactory.OpenSession())
	{
		result = (List&lt;Product&gt;)session.CreateCriteria(typeof(Product)).AddOrder(Order.Asc("ProductID")).SetMaxResults(rowcount).List&lt;Product&gt;();
	}
}</pre>

<p>Pros: <i>Easy, works for all object models, concise querying</i></p>

<p>Cons: <i>Slow</i></p>

<p>Comments: <i>I've never used NHibernate before, so I may have overlooked some obvious performance enhancements, thus, take my numbers with a grain of salt.</i></p>

<h2>Method #10 - Compiled LinqQuery</h2>

<pre lang="csharp" escaped="true">private static Func&lt;DataContext, int, IEnumerable&lt;Product&gt;&gt; compiledQuery;
private static void performCompiledLinqQuery()
{
	List&lt;Product&gt; result;

	using (DataContext dc = new DataContext(CONNECTION_STRING))
	{
		result = compiledQuery(dc, rowcount).ToList();
	}
}</pre>

<p>Pros: <i>Among the fastest, no matter the rowcount, works for all object models</i></p>

<p>Cons: <i>Requires a bit more setting up and helper functionality to store the compiled queries</i></p>

<h2>The profiling</h2>

<p>I profiled each of the test cases by returning 1, 10, 100, 1.000, 10.000 and 100.000 rows. The numbers are the total execution time of 50 iterations of each method. I'm on a quad core machine so I set the max parallelization degree to three, thus saving myself a core for running SQL Server and Windows.</p>

<pre lang="csharp" escaped="true">static void Main(string[] args)
{
	// Make sure we don't get disturbed by other processes
	Process.GetCurrentProcess().PriorityClass = ProcessPriorityClass.High;

	// We'll let NHibernate cache it's Configuration and SessionFactory as we'd probably do this in most live applications
	nhCfg = new Configuration();
	nhCfg.AddAssembly(Assembly.GetExecutingAssembly());
	nhFactory = nhCfg.BuildSessionFactory();

	foreach(int rc in new int[] { 1, 10, 100, 1000, 10000, 100000 })//, 100, 1000, 10000, 100000 })
	{
		Console.WriteLine("Rowcount: " + rc);
		rowcount = rc;

		// Set the rowcount
		COMMAND_TEXT = ORIGINAL_COMMAND_TEXT.Replace("{rowcount}", rowcount.ToString());

		// Make sure the enhanced automapped datareader does not use cached resources from previous run
		EntityMapper.ClearCachedMapperMethods();

		// Compile the query for the compiled linq query test
		compiledQuery = CompiledQuery.Compile&lt;DataContext, int, IEnumerable&lt;Product&gt;&gt;((DataContext dc, int takeCount) =&gt; dc.GetTable&lt;Product&gt;().OrderBy(p =&gt; p.ProductID).Take(takeCount));

		Console.WriteLine("performDataReader: " + CodeProfiler.ProfileAction(performDataReader, iterations, 3));
		Console.WriteLine("performDataTable: " + CodeProfiler.ProfileAction(performDataTable, iterations, 3));
		Console.WriteLine("performEntityQuery: " + CodeProfiler.ProfileAction(performEntityQuery, iterations, 3));
		Console.WriteLine("performLinqQuery: " + CodeProfiler.ProfileAction(performLinqQuery, iterations, 3));
		Console.WriteLine("performCompiledLinqQuery: " + CodeProfiler.ProfileAction(performCompiledLinqQuery, iterations, 3));
		Console.WriteLine("performSubsetLinqQuery: " + CodeProfiler.ProfileAction(performSubsetLinqQuery, iterations, 3));
		Console.WriteLine("performAutomappedDataReader: " + CodeProfiler.ProfileAction(performAutomappedDataReader, iterations, 3));
		Console.WriteLine("performEnhancedAutomappedDataReader: " + CodeProfiler.ProfileAction(performEnhancedAutomappedDataReader, iterations, 3));
		Console.WriteLine("performSubSonicQuery: " + CodeProfiler.ProfileAction(performSubSonicQuery, iterations, 3));
		Console.WriteLine("performNHibernateQuery: " + CodeProfiler.ProfileAction(performNHibernateQuery, iterations, 3));
	}

	Console.Write("Done");
	Console.Read();
}</pre>

<h2>The results</h2>

<p>The following two graphs shows the total runtime of 50 iterations for each different method, as well as the total runtime divided by number of rows. Runtime in seconds along the Y-axis, number of rows along the X-axis. It basically shows that all LINQ to SQL flavors suffer from initial setup, but they scale extremely well, ending up outperforming all other contestants by a fair margin. One could argue that it's rarely relevant in cases of more than a thousand rows as we'll rarely pull out that much data at once. Never the less, I find it interesting - it's something I'll have to look under the hood to find an explanation of. Ignoring some variance due to the low row number, DataReader, DataTable and my Enhanced Automapped DataReader functions outperform most contestants.</p>

<p>UPDATE:</p>

<p>It seems the reason the LINQ flavors are so speedy is because their object mapper methods are being cached in the local thread cache. And since the CodeProfiler will execute all iterations on the same thread, each iteration (except the first) will simply reuse the mapper methods. See System.Data.Linq.SqlClient.ObjectReaderCompiler.Compile() for reference.</p>

<p>UPDATE 2:</p>

<p>As <a href="http://www.u2u.info/Blogs/Kris">Kris Vandermotten</a> duly commented, I should have tested a compiled LINQ query as well as that really is a separate scenario. I've added a tenth method as well as a new line in the graphs. The compiled LINQ query, although requiring a bit more plumbing code, really blows the competition away. It's fast for even single row queries since we no longer suffer from the compilation time. For larger rowsets the advantage diminishes as the saved compilation time is spread out over a large amount of rows.</p>

<p>UPDATE 3:</p>

<p>As a friend of mine, <a href="http://intellect.dk/">Jakob Andersen</a> points out, I really should be a bit more specific in regards to the purpose of these comparisons.</p>

<p>I am in no way trying to make the claim that it's unreasonable that an OR/M framework hurts performance. Neither am I claiming that my comparisons between LINQ to SQL, Subsonic and nHibernate are fair. Really, to make a fair comparison, one should compare the very specific features of the frameworks, not a feature set as general as what I'm doing in these tests.</p>

<p>The thing is, some of these frameworks (nHibernate, I'm looking at you especially) just offer so much more functionality that it's a burden they have to live with. While this extra functionality might cost a bit when we're just trying to test the actual object translation performance, it might gain you a whole lot more in real life scenarios. Take for instance, if you utilize nHibernates caching, you might save the time that goes towards the database lookups - saving you much more than the actual translation process in most cases.</p>

<p>So, as mentioned in a couple of tests - take these results with a grain of salt. They're rather out-of-the-box simple tests of direct querying &amp; result translation performance. We're ignoring all of the extra OR/M features that we have available, and we're ignoring that these different frameworks offer very different functionality.</p>

<h3>Total runtime</h3>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/04/totalgraph1_2.jpg"><img class="alignnone size-full wp-image-2023" alt="totalgraph1_2" src="http://improve.dk/wp-content/uploads/2008/04/totalgraph1_2.jpg" width="619" height="683" /></a></div></div>

<h3>Runtime per row</h3>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/04/totalgraph2_2.jpg"><img class="alignnone size-full wp-image-2024" alt="totalgraph2_2" src="http://improve.dk/wp-content/uploads/2008/04/totalgraph2_2.jpg" width="620" height="591" /></a></div></div>

<p>Remember, even though there seems to be somewhat of a speed difference, the fastest method takes only 0,000074 seconds, while the slowest takes 0,00085 seconds. No matter what, you should'nt consider refactoring your solutions in regards to performance unless you really have a high hit count, or unless it's for valid architectural reasons. Otherwise you might just risk having Ted Dziuba <a href="http://teddziuba.com/2008/04/im-going-to-scale-my-foot-up-y.html">shove his foot up your ass</a>.</p>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/04/PerformanceComparison_ReadingStronglyTyped.zip">PerformanceComparison_ReadingStronglyTyped.zip - Sample code</a></p>

<p><a href="http://improve.dk/wp-content/uploads/2008/04/Reading_Data_From_Database_Profiling.xlsx">Reading_Data_From_Database_Profiling.xslx - Profiling results</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1278</wp:post_id>
		<wp:post_date>2008-04-30 01:10:09</wp:post_date>
		<wp:post_date_gmt>2008-04-30 01:10:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>performance-comparison-reading-data-from-the-database-strongly-typed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="orm"><![CDATA[ORM]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Performance Comparison - Reading Data From the Database Strongly Typed]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>874</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-02 16:37:00</wp:comment_date>
			<wp:comment_date_gmt>2008-05-02 16:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You might want to take a look at <a rel="nofollow external" href="http://blogs.msdn.com/ricom/archive/2007/06/22/dlinq-linq-to-sql-performance-part-1.aspx" title="http://blogs.msdn.com/ricom/archive/2007/06/22/dlinq-linq-to-sql-performance-part-1.aspx" rel="nofollow">blogs.msdn.com/...</a> ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>875</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-03 00:12:06</wp:comment_date>
			<wp:comment_date_gmt>2008-05-03 00:12:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, that's a brilliant series of articles, once again proving the grounds that LINQ to SQL can perform on par of most other alternatives if used properly.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>876</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-06 18:26:46</wp:comment_date>
			<wp:comment_date_gmt>2008-05-06 18:26:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, but the point is: you should store the results of linq query compilation for reuse, and your method 4 and 5 don't do that!<br /><br />See also <a rel="nofollow external" href="http://blogs.msdn.com/ricom/archive/2008/01/11/performance-quiz-13-linq-to-sql-compiled-queries-cost.aspx" title="http://blogs.msdn.com/ricom/archive/2008/01/11/performance-quiz-13-linq-to-sql-compiled-queries-cost.aspx" rel="nofollow">blogs.msdn.com/...</a> and <a rel="nofollow external" href="http://blogs.msdn.com/ricom/archive/2008/01/14/performance-quiz-13-linq-to-sql-compiled-query-cost-solution.aspx" title="http://blogs.msdn.com/ricom/archive/2008/01/14/performance-quiz-13-linq-to-sql-compiled-query-cost-solution.aspx" rel="nofollow">blogs.msdn.com/...</a>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>877</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-07 21:45:27</wp:comment_date>
			<wp:comment_date_gmt>2008-05-07 21:45:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are absolutely right, I should've tested that, I'm embarrased that I did not think of the CompiledQuery functionality!<br /><br />Anyways, I've added a tenth method as well as updated the conclusion &amp; charts.<br /><br />Thanks for helping me out doing this properly ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>878</wp:comment_id>
			<wp:comment_author><![CDATA[Jakob Andersen]]></wp:comment_author>
			<wp:comment_author_email>jta@miracleas.dk</wp:comment_author_email>
			<wp:comment_author_url>http://intellect.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-09 11:09:03</wp:comment_date>
			<wp:comment_date_gmt>2008-05-09 11:09:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good work comparing those things. But i have a few reservations:<br /><br />1. You write as pro for a few of the methods &quot;Works for all object models&quot;. But in most cases you have to supply the relationsship between your object model and your relational model. And just because this is in XML and perhabs can be generated by a tool its still some important mapping logic thats stored here. And if mapping is wrongly typed or generated by your tool the performance impacts could be much larger than the small number you are working with here because the data store is actually queryed the wrong way.<br /><br />2. You write: &quot;you'll get compile time checking of all our tables and columns&quot;, that not true. You still not get checking of columnnames and tables in for instance SQL strings and mapping documents at compiletime. Given the right tools you only have to do a column rename one place instead of all queries. But still, you are not bulletproof because the compiler doesn't know the database structure at compiletime.<br /><br />Last of all, most of the tools you are comparing here doesn't hide the fact that they have an overhead. But it is often a tradeoff when you choose these RAD-type tools that provides an higher abstraction. An important note on that point is that my humble opinion is that even though you move to a higher level of abstraction you still need to know whats going on behind the curtains.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>879</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-10 00:16:29</wp:comment_date>
			<wp:comment_date_gmt>2008-05-10 00:16:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jakob, I've appended a third update to my conclusion that ought ot clear up my intentions with these tests :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Mapping Datareader to Objects Using Reflection.Emit</title>
		<link>http://improve.dk/mapping-datareader-to-objects-using-reflection-emit/</link>
		<pubDate>Fri, 02 May 2008 01:27:53 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/05/02/mapping-datareader-to-objects-using-reflection-emit.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've previously written of how to automatically <a href="http://improve.dk/blog/2007/11/19/automatically-mapping-datatable-to-objects">map a DataTable into a strongly typed collection of objects</a>. There's a problem though, <a href="http://improve.dk/blog/2008/04/30/performance-comparison-reading-data-from-the-database-strongly-typed">it's not fast</a>... I wanted to improve on it, and this is what I ended up with.</p>

<p>The original method relied heavily on reflection to set the values directly. Reflection's bad in regards of speed, mkay? But reflection is not necessarily evil, you can do great good with it. Now, the problem with the original method is that each field is set using reflection for each row, that's [number of fields] * [number of rows] fields being set using reflection, resulting in pretty poor performance. If we compare it to the <a href="http://improve.dk/blog/2008/04/30/performance-comparison-reading-data-from-the-database-strongly-typed">manual way</a>, there's obviously some kind of a gap. If we could just somehow, in a generic way, create mapper methods like we do manually...</p>

<p>We'll have to create a DynamicMethod that takes in a DbDataReader, converts the current row to a generic type T. We'll call it MapDR, although it doesn't really matter what it's called.</p>

<pre lang="csharp">// Our method will take in a single parameter, a DbDataReader
Type[] methodArgs = { typeof(DbDataReader) };

// The MapDR method will map a DbDataReader row to an instance of type T
DynamicMethod dm = new DynamicMethod("MapDR", typeof(T), methodArgs, Assembly.GetExecutingAssembly().GetType().Module);
ILGenerator il = dm.GetILGenerator();</pre>

<p>In this method, we'll create an instance of the generic type T and store it as a variable.</p>

<pre lang="csharp">// We'll have a single local variable, the instance of T we're mapping
il.DeclareLocal(typeof(T));

// Create a new instance of T and save it as variable 0
il.Emit(OpCodes.Newobj, typeof(T).GetConstructor(Type.EmptyTypes));
il.Emit(OpCodes.Stloc_0);</pre>

<p>Then we'll look each property of the type.</p>

<pre lang="csharp">foreach (PropertyInfo pi in typeof(T).GetProperties())</pre>

<p>Now we'll read the column value from the DbDataReader using the properties name. By reading it, we're pushing it onto the stack.</p>

<pre lang="csharp">// Load the T instance, SqlDataReader parameter and the field name onto the stack
il.Emit(OpCodes.Ldloc_0);
il.Emit(OpCodes.Ldarg_0);
il.Emit(OpCodes.Ldstr, pi.Name);

// Push the column value onto the stack
il.Emit(OpCodes.Callvirt, typeof(DbDataReader).GetMethod("get_Item", new Type[] { typeof(string) }));</pre>

<p>Now's the ugly part. Depending on the type, there are different ways to convert it into the corresponding .NET type, i've made a switch statement handling most common types, although it does lack support for nullable types, guids and various other numeric formats. It should show to idea though. Converting the value will push the resulting correctly typed value onto the stack, and pop the original value in the process.</p>

<pre lang="csharp">// Depending on the type of the property, convert the datareader column value to the type
switch (pi.PropertyType.Name)
{
	case "Int16":
		il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToInt16", new Type[] { typeof(object) }));
		break;
	case "Int32":
		il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToInt32", new Type[] { typeof(object) }));
		break;
	case "Int64":
		il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToInt64", new Type[] { typeof(object) }));
		break;
	case "Boolean":
		il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToBoolean", new Type[] { typeof(object) }));
		break;
	case "String":
		il.Emit(OpCodes.Callvirt, typeof(string).GetMethod("ToString", new Type[] { }));
		break;
	case "DateTime":
		il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToDateTime", new Type[] { typeof(object) }));
		break;
	case "Decimal":
		il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToDecimal", new Type[] { typeof(object) }));
		break;
	default:
		// Don't set the field value as it's an unsupported type
		continue;
}</pre>

<p>And finally we set the properties value, thereby popping the value from the stack.</p>

<pre lang="csharp">// Set the T instances property value
il.Emit(OpCodes.Callvirt, typeof(T).GetMethod("set_" + pi.Name, new Type[] { pi.PropertyType }));</pre>

<p>After we've mapped all the properties, we'll load the T instance onto the stack and return it.</p>

<pre lang="csharp">// Load the T instance onto the stack
il.Emit(OpCodes.Ldloc_0);

// Return
il.Emit(OpCodes.Ret);</pre>

<p>To improve performance, let's cache this mapper method as it'll work for the type T the next time we need it. Notice that what we're caching is not the method itself, but a delegate to the method - enabling us to actually call the method.</p>

<pre lang="csharp" escaped="true">private delegate T mapEntity&lt;T&gt;(DbDataReader dr);
private static Dictionary&lt;Type, Delegate&gt; cachedMappers = new Dictionary&lt;Type, Delegate&gt;();

// Cache the method so we won't have to create it again for the type T
cachedMappers.Add(typeof(T), dm.CreateDelegate(typeof(mapEntity&lt;T&gt;)));

// Get a delegate reference to the dynamic method
mapEntity&lt;T&gt; invokeMapEntity = (mapEntity&lt;T&gt;)cachedMappers[typeof(T)];</pre>

<p>Now all we gotta do is loop the DbDataReader rows and return the mapped entities.</p>

<pre lang="csharp">// For each row, map the row to an instance of T and yield return it
while (dr.Read())
	yield return invokeMapEntity(dr);</pre>

<p>And of course, here's the final method/class. Remember that this is more a proof of concept than a complete class. It ought to handle all necessary types. Also, it might be relevant to consider whether one should map public as well as private properties. Whether it should handle type validation errors, missing columns or not, I'm not sure. As it is now, it'll throw a normal ArgumentOutOfRangeException in cases of missing columns, and relevant type conversion errors - all those can be handled by the callee using try/catch blocks.</p>

<pre lang="csharp" escaped="true">using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Reflection;
using System.Reflection.Emit;

namespace Improve.Framework.Data
{
	public class EntityMapper
	{
		private delegate T mapEntity&lt;T&gt;(DbDataReader dr);
		private static Dictionary&lt;Type, Delegate&gt; cachedMappers = new Dictionary&lt;Type, Delegate&gt;();

		public static IEnumerable&lt;T&gt; MapToEntities&lt;T&gt;(DbDataReader dr)
		{
			// If a mapping function from dr -&gt; T does not exist, create and cache one
			if (!cachedMappers.ContainsKey(typeof(T)))
			{
				// Our method will take in a single parameter, a DbDataReader
				Type[] methodArgs = { typeof(DbDataReader) };

				// The MapDR method will map a DbDataReader row to an instance of type T
				DynamicMethod dm = new DynamicMethod("MapDR", typeof(T), methodArgs, Assembly.GetExecutingAssembly().GetType().Module);
				ILGenerator il = dm.GetILGenerator();
				
				// We'll have a single local variable, the instance of T we're mapping
				il.DeclareLocal(typeof(T));

				// Create a new instance of T and save it as variable 0
				il.Emit(OpCodes.Newobj, typeof(T).GetConstructor(Type.EmptyTypes));
				il.Emit(OpCodes.Stloc_0);

				foreach (PropertyInfo pi in typeof(T).GetProperties())
				{
					// Load the T instance, SqlDataReader parameter and the field name onto the stack
					il.Emit(OpCodes.Ldloc_0);
					il.Emit(OpCodes.Ldarg_0);
					il.Emit(OpCodes.Ldstr, pi.Name);

					// Push the column value onto the stack
					il.Emit(OpCodes.Callvirt, typeof(DbDataReader).GetMethod("get_Item", new Type[] { typeof(string) }));

					// Depending on the type of the property, convert the datareader column value to the type
					switch (pi.PropertyType.Name)
					{
						case "Int16":
							il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToInt16", new Type[] { typeof(object) }));
							break;
						case "Int32":
							il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToInt32", new Type[] { typeof(object) }));
							break;
						case "Int64":
							il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToInt64", new Type[] { typeof(object) }));
							break;
						case "Boolean":
							il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToBoolean", new Type[] { typeof(object) }));
							break;
						case "String":
							il.Emit(OpCodes.Callvirt, typeof(string).GetMethod("ToString", new Type[] { }));
							break;
						case "DateTime":
							il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToDateTime", new Type[] { typeof(object) }));
							break;
						case "Decimal":
							il.Emit(OpCodes.Call, typeof(Convert).GetMethod("ToDecimal", new Type[] { typeof(object) }));
							break;
						default:
							// Don't set the field value as it's an unsupported type
							continue;
					}

					// Set the T instances property value
					il.Emit(OpCodes.Callvirt, typeof(T).GetMethod("set_" + pi.Name, new Type[] { pi.PropertyType }));
				}

				// Load the T instance onto the stack
				il.Emit(OpCodes.Ldloc_0);

				// Return
				il.Emit(OpCodes.Ret);
				
				// Cache the method so we won't have to create it again for the type T
				cachedMappers.Add(typeof(T), dm.CreateDelegate(typeof(mapEntity&lt;T&gt;)));
			}

			// Get a delegate reference to the dynamic method
			mapEntity&lt;T&gt; invokeMapEntity = (mapEntity&lt;T&gt;)cachedMappers[typeof(T)];
			
			// For each row, map the row to an instance of T and yield return it
			while (dr.Read())
				yield return invokeMapEntity(dr);
		}

		public static void ClearCachedMapperMethods()
		{
			cachedMappers.Clear();
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1279</wp:post_id>
		<wp:post_date>2008-05-02 01:27:53</wp:post_date>
		<wp:post_date_gmt>2008-05-02 01:27:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mapping-datareader-to-objects-using-reflection-emit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="orm"><![CDATA[ORM]]></category>
		<category domain="post_tag" nicename="reflection"><![CDATA[Reflection]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Mapping Datareader to Objects Using Reflection.Emit]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>880</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-06 19:18:10</wp:comment_date>
			<wp:comment_date_gmt>2008-05-06 19:18:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To avoid the big switch (pi.PropertyType.Name), I usually generate a cast or unbox instruction, depending on whether pi.PropertyType is a reference or value type respectively. Granted, that implies that the actual type returned from the datareader must be equal to the property type, not just convertible to it. But that's what I usually want anyway. It works for all types (supported by the datareader) automatically, and it's faster at execution time.<br /><br />Also, I store all MethodInfo's etc. I need in static readonly variables, that speeds up the code generation.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>881</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-06 19:25:34</wp:comment_date>
			<wp:comment_date_gmt>2008-05-06 19:25:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Oh, and you want to verify if the property has a public setter method before you generate code to set it. Don't forget that readonly properties are not an error condition, they can be used to calculate derived data.<br /><br />BTW, you should get the Set method using pi.GetSetMethod().<br /><br />And you might want to consider making your cache access thread-safe, as this is likely to be used server-side.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>882</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-05-07 21:51:36</wp:comment_date>
			<wp:comment_date_gmt>2008-05-07 21:51:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good comment/idea regarding the cast|unboxing trick instead of my switch, in most cases that'll probably work out better.<br /><br />I can see that storing the MethodInfo's might be more efficient, but I don't really think it'll change the results much as we cache the mapper function between calls, so it'll only help us on the very first call in this domain.<br /><br />You're right again regarding the read only properties, but that's where we move away from the proof-of-concept code that I've made and into the more serious realm, imho :)<br /><br />A lock on the cachedMappers Dictionary, when creating new mapper functions, ought to take of the synchronization issues that might occur.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>883</wp:comment_id>
			<wp:comment_author><![CDATA[Rice]]></wp:comment_author>
			<wp:comment_author_email>w_pz@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-09 15:00:04</wp:comment_date>
			<wp:comment_date_gmt>2008-06-09 15:00:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good<br />Linq to SQL is the same thoery]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>884</wp:comment_id>
			<wp:comment_author><![CDATA[Rice]]></wp:comment_author>
			<wp:comment_author_email>w_pz@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://dreamstec.cnblogs.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-10 02:26:04</wp:comment_date>
			<wp:comment_date_gmt>2008-06-10 02:26:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[can you introduce the property lazy load about Linq to SQL ?<br />and how to imple the property load after invoke DbReader.Read()<br />.<br />thanks <br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>885</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-11 16:35:39</wp:comment_date>
			<wp:comment_date_gmt>2008-06-11 16:35:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rice,<br /><br />Regarding lazy loading, please see the following URLs:<br /><a rel="nofollow external" href="http://www.davidhayden.com/blog/dave/archive/2007/08/05/LINQToSQLLazyLoadingPropertiesSpecifyingPreFetchWhenNeededPerformance.aspx" title="http://www.davidhayden.com/blog/dave/archive/2007/08/05/LINQToSQLLazyLoadingPropertiesSpecifyingPreFetchWhenNeededPerformance.aspx" rel="nofollow">www.davidhayden.com/...</a> <a rel="nofollow external" href="http://www.thedatafarm.com/blog/2007/02/13/TheShadowySideOfLINQToSQL.aspx" title="http://www.thedatafarm.com/blog/2007/02/13/TheShadowySideOfLINQToSQL.aspx" rel="nofollow">www.thedatafarm.com/...</a> <br />I'm now sure what you're asking in regards to the DbReader.Read() method?<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>886</wp:comment_id>
			<wp:comment_author><![CDATA[Rice]]></wp:comment_author>
			<wp:comment_author_email>w_pz@163.com</wp:comment_author_email>
			<wp:comment_author_url>http://dreamstec.cnblogs.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-12 05:40:17</wp:comment_date>
			<wp:comment_date_gmt>2008-06-12 05:40:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks<br />I have resoved the first question via dbdatareader's DbDataRecord.<br />the second lazy loading<br />how to implement the property access use the CustomerAttribute.<br />Nhibernate use the dynamic proxy , the property of instance must be virtual . the castle dynamic generate the entity proxy, when invoke the property ,the castle intercept the invoke ,then invoke the realy property.<br />but the linq to sql is not , i want to know the implement theory,similar to AOP.  <br />thanks ...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>887</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-12 20:46:05</wp:comment_date>
			<wp:comment_date_gmt>2008-06-12 20:46:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rice,<br /><br />What is the CustomerAttribute? I'm not sure how LINQ implements lazy loading internally as I haven't worked with it yet. I've only used LINQ with custom mapped POCOs that have no LINQ collection relations and thus are not able to lazy load.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>888</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>rob.manley@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-09 23:51:19</wp:comment_date>
			<wp:comment_date_gmt>2009-10-09 23:51:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi all<br /><br />I am still learning however I can understand most of the code above. Nevertheless, I am having difficulties making it work. <br /><br />Could anyone send me a working example with a database please?<br /><br />Thanks<br />Rob]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35916</wp:comment_id>
			<wp:comment_author><![CDATA[buy levitra]]></wp:comment_author>
			<wp:comment_author_email>agustinhomer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://warkeeper.com/index.php/Участник:Coyrozpq9</wp:comment_author_url>
			<wp:comment_author_IP>69.175.111.51</wp:comment_author_IP>
			<wp:comment_date>2013-05-09 13:43:08</wp:comment_date>
			<wp:comment_date_gmt>2013-05-09 11:43:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your current write-up offers verified beneficial to me. It’s quite 
informative and you're simply certainly extremely well-informed of this type. You get popped my own face to varying views on this topic together with intriguing, notable and reliable content material.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368099788.0694949626922607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Programmers at Work</title>
		<link>http://improve.dk/book-programmers-at-work/</link>
		<pubDate>Wed, 07 May 2008 22:10:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/05/08/programmers-at-work.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I just finished reading the book <a href="http://www.amazon.com/Programmers-Work-Interviews-Computer-Industry/dp/1556152116">Programmers at Work</a> by Susan Lammers.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/05/programmersatwork_2.jpg"><img class="alignnone size-full wp-image-2048" alt="programmersatwork_2" src="http://improve.dk/wp-content/uploads/2008/05/programmersatwork_2.jpg" width="439" height="500" /></a></div></div>

<p>It's a unique book unlike most others I've read. Most of the books I read are practically oriented, how to do this, how to do that (in an abstract way, but still practical).</p>

<p>Programmers at Work contains interviews with 19 of the most influential computer programmers, written in the early 80's. It's an eye opener how similar the though processes, scenarios and development ideas where back then to what we're used to today. They didn't have nearly the same facilities at hand, neither hardware nor codewise, but the goals were the same. It's fun to read some fundamental discussions about whether OS's have a place at all, or whether they should simply be discarded (I guess that'd be the embedded devices of today).</p>

<p>While all interviewees are techy guys in one way or the other, there's great diversity among them. Some are downright developers/architects while others work on the UI, graphics and even audio design.</p>

<p>There are lots of great war stories in most interviews, 40% of them about Apple - it really becomes clear how big a part Apple played back then, and how small they became for a period which seems to be nearing an end.</p>

<p>Leonard Richardson has a great writeup on <a href="http://www.crummy.com/2008/02/17/0">where the original interviewees are at today</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1280</wp:post_id>
		<wp:post_date>2008-05-08 00:10:08</wp:post_date>
		<wp:post_date_gmt>2008-05-07 22:10:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-programmers-at-work</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[programmers-at-work]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Programmers at Work]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Generic Dijkstra&#039;s Algorithm</title>
		<link>http://improve.dk/generic-dijkstras-algorithm/</link>
		<pubDate>Tue, 13 May 2008 21:37:02 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/05/12/generic-dijkstras-algorithm.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Through various projects, I've had to do some shortest-path finding in a connected graph. An efficient and straight-forward way to do this is using <a href="http://en.wikipedia.org/wiki/Dijkstra's_algorithm">Dijkstra's Algorithm</a>. Notice that it'll only work for graphs with non negative path weights, like 2D maps for instance. While I've used the algorithm on several occasions, it's only now that I've rewritten it in generic form</p>

<p>The code is pretty much self explanatory if you keep the <a href="http://en.wikipedia.org/wiki/Dijkstra's_algorithm#Pseudocode">pseudo code implementation</a> next to it.</p>

<pre lang="csharp" escaped="true">using System;
using System.Collections.Generic;
using System.Linq;

namespace Improve.Framework.Algorithms
{
	public class Dijkstra&lt;TNode&gt;
	{
		/// &lt;summary&gt;
		/// Calculates the shortest route from a source node to a target node given a set of nodes and connections. Will only work for graphs with non-negative path weights.
		/// &lt;/summary&gt;
		/// &lt;param name="connections"&gt;All the nodes, as well as the list of their connections.&lt;/param&gt;
		/// &lt;param name="sourceNode"&gt;The node to start from.&lt;/param&gt;
		/// &lt;param name="targetNode"&gt;The node we should seek.&lt;/param&gt;
		/// &lt;param name="fnEquals"&gt;A function used for testing if two nodes are equal.&lt;/param&gt;
		/// &lt;param name="fnDistance"&gt;A function used for calculating the distance/weight between two nodes.&lt;/param&gt;
		/// &lt;returns&gt;An ordered list of nodes from source-&gt;target giving the shortest path from the source to the target node. Returns null if no path is possible.&lt;/returns&gt;
		public static List&lt;TNode&gt; ShortestPath(IDictionary&lt;TNode, List&lt;TNode&gt;&gt; connections, TNode sourceNode, TNode targetNode, Func&lt;TNode, TNode, bool&gt; fnEquals, Func&lt;TNode, TNode, double&gt; fnDistance)
		{
			// Initialize values
			Dictionary&lt;TNode, double&gt; distance = new Dictionary&lt;TNode, double&gt;(); ;
			Dictionary&lt;TNode, TNode&gt; previous = new Dictionary&lt;TNode, TNode&gt;(); ;
			List&lt;TNode&gt; localNodes = new List&lt;TNode&gt;();

			// For all nodes, copy it to our local list as well as set it's distance to null as it's unknown
			foreach (TNode node in connections.Keys)
			{
				localNodes.Add(node);
				distance.Add(node, double.PositiveInfinity);
			}

			// We know the distance from source-&gt;source is 0 by definition
			distance[sourceNode] = 0;

			while (localNodes.Count &gt; 0)
			{
				// Return and remove best vertex (that is, connection with minimum distance
				TNode minNode = localNodes.OrderBy(n =&gt; distance[n]).First();
				localNodes.Remove(minNode);

				// Loop all connected nodes
				foreach (TNode neighbor in connections[minNode])
				{
					// The positive distance between node and it's neighbor, added to the distance of the current node
					double dist = distance[minNode] + fnDistance(minNode, neighbor);

					if (dist &lt; distance[neighbor])
					{
						distance[neighbor] = dist;
						previous[neighbor] = minNode;
					}
				}

				// If we're at the target node, break
				if (fnEquals(minNode, targetNode))
					break;
			}

			// Construct a list containing the complete path. We'll start by looking at the previous node of the target and then making our way to the beginning.
			// We'll reverse it to get a source-&gt;target list instead of the other way around. The source node is manually added.
			List&lt;TNode&gt; result = new List&lt;TNode&gt;();
			TNode target = targetNode;
			while (previous.ContainsKey(target))
			{
				result.Add(target);
				target = previous[target];
			}
			result.Add(sourceNode);
			result.Reverse();

			if (result.Count &gt; 1)
				return result;
			else
				return null;
		}
	}
}</pre>

<p>Once we've made the list of nodes &amp; connections, invoking the algorithm is rather simple. We just need to provide an equality function as well as a distance function:</p>

<pre lang="csharp" escaped="true">// Run Dijkstra's algorithm
List&lt;Point2D&gt; result = Dijkstra&lt;Point2D&gt;.ShortestPath(connections, mouse, target, (p1, p2) =&gt; p1 == p2, (p1, p2) =&gt; p1.DistanceTo(p2));</pre>

<p>
http://www.youtube.com/watch?v=ctEXUmZ5TDY
</p>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2008/05/Shortest_Path.zip">Shortest_Path.zip - Sample code</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1281</wp:post_id>
		<wp:post_date>2008-05-13 23:37:02</wp:post_date>
		<wp:post_date_gmt>2008-05-13 21:37:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generic-dijkstras-algorithm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="algorithms"><![CDATA[Algorithms]]></category>
		<category domain="post_tag" nicename="dijkstra"><![CDATA[Dijkstra]]></category>
		<category domain="post_tag" nicename="generics"><![CDATA[Generics]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Generic Dijkstra's Algorithm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cc6214500582eaa5a87ed665bdcb3eda</wp:meta_key>
			<wp:meta_value><![CDATA[<iframe width="695" height="521" src="http://www.youtube.com/embed/ctEXUmZ5TDY?feature=oembed" frameborder="0" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5098</wp:comment_id>
			<wp:comment_author><![CDATA[Kirill Chilingarashvili]]></wp:comment_author>
			<wp:comment_author_email>kirchik@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.devarchive.net</wp:comment_author_url>
			<wp:comment_author_IP>176.73.175.222</wp:comment_author_IP>
			<wp:comment_date>2013-03-18 07:49:55</wp:comment_date>
			<wp:comment_date_gmt>2013-03-18 06:49:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi

nice and short implementation.
I can suggest only not to use sort in every iteration as this is quite slow
I found that using SortedList structure and inserting into it once per iteration faster about 20-50 times on real map graphs
BTW here is my blog post 
http://blog.devarchive.net/2013/03/fast-dijkstras-algorithm-inside-ms-sql.html
(Fast Dijkstra’s Algorithm Inside MS SQL CLR Stored Procedure)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363589395.246798038482666015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Using IDisposable to Write Indented Text</title>
		<link>http://improve.dk/using-idispoable-to-write-indented-text/</link>
		<pubDate>Mon, 02 Jun 2008 21:55:12 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/06/01/using-idisposable-to-write-indented-text.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I often need to output indented text in one way of the other, it could be HTML, XML, source code etc (please look beyond the actual problem domain - I'd enver write XML this way, it's just an example). Usually that involved me writing tab characters manually (or by calling a function that returned the current indentation string), cluttering the actual output. An example might look like this:</p>

<pre lang="csharp" escaped="true">StringBuilder sb = new StringBuilder();
sb.AppendLine("public static void Hello()");
sb.AppendLine("{");
sb.AppendLine("\tif(true)");
sb.AppendLine("\t\tConsole.WriteLine("World!");");
sb.AppendLine("}");

Console.Write(sb.ToString());
Console.Read();</pre>

<p>This ought to result in the following snippet:</p>

<pre lang="csharp" escaped="true">public static void Hello()
{
	if(true)
		Console.WriteLine("World!");
}</pre>

<p>Pretty simple code, but it's a bit hard for the eyes, especially if there's a lot of it.</p>

<p>By utilizing the IDisposable interface, we can create a StringBuilder-esque class that handles the indentation for us. Here's an example of how we might write the previous snippet using the IndentedStringBuilder (note that it's not really a StringBuilder since StringBuilder's a sealed class):</p>

<pre lang="csharp" escaped="true">using (IndentedStringBuilder sb = new IndentedStringBuilder())
{
	sb.AppendLine("public static void Hello()");
	sb.AppendLine("{");

	using (sb.IncreaseIndent())
	{
		sb.AppendLine("if(true)");

		using (sb.IncreaseIndent())
			sb.AppendLine("Console.WriteLine("World!");");
	}

	sb.AppendLine("}");

	Console.Write(sb.ToString());
	Console.Read();
}</pre>

<p>Each time Dispose() is called on the instance, the indentation level is decreased. Calling IncreaseIndent() increases the indentation level, as well as returning a reference to the IndentedStringBuilder instance itself. The using construct will make sure Dispose is called on the reference each time we exit the using block - and calling Dispose does not do anything to the object other than calling the Dispose method - which'll decrease the indentation level.</p>

<p>Here's the IndentedStringBuilder class:</p>

<pre lang="csharp" escaped="true">using System;
using System.Text;

namespace Improve.Framework.Text
{
	public class IndentedStringBuilder : IDisposable
	{
		private StringBuilder sb;
		private string indentationString = "\t";
		private string completeIndentationString = "";
		private int indent = 0;

		/// &lt;summary&gt;
		///  Creates an IndentedStringBuilder
		/// &lt;/summary&gt;
		public IndentedStringBuilder()
		{
			sb = new StringBuilder();
		}

		/// &lt;summary&gt;
		/// Appends a string
		/// &lt;/summary&gt;
		/// &lt;param name="value"&gt;&lt;/param&gt;
		public void Append(string value)
		{
			sb.Append(completeIndentationString + value);
		}

		/// &lt;summary&gt;
		/// Appends a line
		/// &lt;/summary&gt;
		/// &lt;param name="value"&gt;&lt;/param&gt;
		public void AppendLine(string value)
		{
			Append(value + Environment.NewLine);
		}

		/// &lt;summary&gt;
		/// The string/chars to use for indentation, t by default
		/// &lt;/summary&gt;
		public string IndentationString
		{
			get { return indentationString; }
			set
			{
				indentationString = value;

				updateCompleteIndentationString();
			}
		}

		/// &lt;summary&gt;
		/// Creates the actual indentation string
		/// &lt;/summary&gt;
		private void updateCompleteIndentationString()
		{
			completeIndentationString = "";

			for (int i = 0; i &lt; indent; i++)
				completeIndentationString += indentationString;
		}

		/// &lt;summary&gt;
		/// Increases indentation, returns a reference to an IndentedStringBuilder instance which is only to be used for disposal
		/// &lt;/summary&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public IndentedStringBuilder IncreaseIndent()
		{
			indent++;

			updateCompleteIndentationString();

			return this;
		}

		/// &lt;summary&gt;
		/// Decreases indentation, may only be called if indentation &gt; 1
		/// &lt;/summary&gt;
		public void DecreaseIndent()
		{
			if (indent &gt; 0)
			{
				indent--;

				updateCompleteIndentationString();
			}
		}

		/// &lt;summary&gt;
		/// Decreases indentation
		/// &lt;/summary&gt;
		public void Dispose()
		{
			DecreaseIndent();
		}

		/// &lt;summary&gt;
		/// Returns the text of the internal StringBuilder
		/// &lt;/summary&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public override string ToString()
		{
			return sb.ToString();
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1282</wp:post_id>
		<wp:post_date>2008-06-02 23:55:12</wp:post_date>
		<wp:post_date_gmt>2008-06-02 21:55:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-idispoable-to-write-indented-text</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="idisposable"><![CDATA[IDisposable]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Using IDisposable to Write Indented Text]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[using-idisposable-to-write-indented-text]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>889</wp:comment_id>
			<wp:comment_author><![CDATA[Henk]]></wp:comment_author>
			<wp:comment_author_email>hennadiy.kyrabko@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://code-clarity.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-01-04 11:23:51</wp:comment_date>
			<wp:comment_date_gmt>2010-01-04 11:23:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent solution! Thank you Mark!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>890</wp:comment_id>
			<wp:comment_author><![CDATA[David Keaveny]]></wp:comment_author>
			<wp:comment_author_email>davidkeaveny@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://davidkeaveny.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-25 00:46:48</wp:comment_date>
			<wp:comment_date_gmt>2011-08-25 00:46:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice solution; I was planning on implementing exactly the same thing, to solve exactly the same problem, but it seems you've beaten me to it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>891</wp:comment_id>
			<wp:comment_author><![CDATA[Christopher]]></wp:comment_author>
			<wp:comment_author_email>christopher1065@msn.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-03-13 18:47:54</wp:comment_date>
			<wp:comment_date_gmt>2012-03-13 18:47:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I was hoping you had also solved the issue of what happens when embedded escape sequences (trn) are in the append string. Let us know if you solved this please. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Analyzing Assembly Evidence</title>
		<link>http://improve.dk/analyzing-assembly-evidence/</link>
		<pubDate>Wed, 11 Jun 2008 00:54:24 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/06/11/analyzing-assembly-evidence.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When the CLR loads an assembly and needs to determine the appropriate permission set to apply, it's based on various evidence. Assembly evidence tells the CLR about the origins of the assembly, the zone it's loaded from and the file hash of the actual assembly file - these are just some of the more common evidence types the CLR uses, there are a lot more that are rarely used. Any object can be a piece of evidence, the CLR will only react on well known evidence types though.</p>

<p>There are two different overall origins of evidence, assembly provided and CLR provided. When the CLR loads an assembly, it recognizes the evidence based on the location the assembly is loaded from, file hash and so forth - this is the CLR provided evidence. The other type of evidence is custom evidence provided by the assembly itself. Although useful, we have to be careful not to blindly trust this evidence as it's provided by the assembly manufacturer. Thus an assembly manufacturer might provide a piece of evidence claiming that the assembly is provided by Microsoft / Google / some other trustworthy corporation - even though that might not be the case.</p>

<p>Any loaded assembly has an evidence property of type <a href="http://msdn.microsoft.com/en-us/library/system.security.policy.evidence.aspx">System.Security.Policy.Evidence</a>. The Evidence class has three relevant functions for obtaining the actual evidence, namely GetHostEnumerator, GetAssemblyEnumerator and GetEnumerator. GetHostEnumerator returns an IEnumerator containing the evidence policies, likewise the GetAssemblyEnumerator returns the assembly provided (and inherently untrustworthy) policies, while the GetEnumerator returns the union of the two.</p>

<p>Just a quick tip. I hate using enumerators, I much prefer foreach loops. The following method will take an IEnumerator and yield an IEnumerable, enabling you to foreach the collection:</p>

<pre lang="csharp" escaped="true">public static IEnumerable GetEnumerable(IEnumerator enumerator)
{
	while (enumerator.MoveNext())
		yield return enumerator.Current;
}</pre>

<p>I've created a simple assembly containing an empty class (the contents of the assembly is not relevant in regards to evidence) called TestAssembly. The following code will load in the TestAssembly from the application directory and enumerate the CLR provided evidence. Note that I've got a special case for the<a href="http://msdn.microsoft.com/en-us/library/system.security.policy.hash(VS.80).aspx">System.Security.Policy.Hash</a> type as it includes a rather lengthy hash of the file. The hash evidence can be used to validate the assembly contents against a pre-known hash of the assembly as a simple way of tamper protecting your applications assemblies.</p>

<pre lang="csharp" escaped="true">Assembly asm = Assembly.LoadFile(Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location), "TestAssembly.dll"));

foreach (object obj in EnumeratorHelper.GetEnumerable(asm.Evidence.GetHostEnumerator()))
	if (obj is Hash)
		Console.WriteLine(@"&lt;System.Security.Policy.Hash version=""1""&gt;&lt;RawData&gt;4D5A900003...00000&lt;/RawData&gt;&lt;/System.Security.Policy.Hash&gt;");
	else
		Console.WriteLine(obj.ToString());</pre>

<p>This is the resulting output:</p>

<pre lang="xml" escaped="true">&lt;System.Security.Policy.Zone version="1"&gt;
	&lt;Zone&gt;MyComputer&lt;/Zone&gt;
&lt;/System.Security.Policy.Zone&gt;

&lt;System.Security.Policy.Url version="1"&gt;
	&lt;Url&gt;file:///D:/Webmentor Projekter/Security/AnalyzeEvidence2/bin/Debug/TestAssembly.DLL&lt;/Url&gt;
&lt;/System.Security.Policy.Url&gt;

&lt;System.Security.Policy.Hash version="1"&gt;
	&lt;RawData&gt;4D5A900003...00000&lt;/RawData&gt;
&lt;/System.Security.Policy.Hash&gt;</pre>

<p>As we can see, it gives us the URL from where the assembly was loaded, our security zone (MyComputer since it was loaded locally), and finally the dummy hash.</p>

<p>I've got a test server running called Mirage. Mirage is part of the Active Directory domain ipaper.lan and I've set a website up on it answering to the default address http://mirage.ipaper.lan. When loading the TestAssembly from this website, the evidence changes a bit:</p>

<pre lang="csharp" escaped="true">Assembly asm = Assembly.LoadFrom("http://mirage.ipaper.lan/TestAssembly.dll");</pre>

<pre lang="xml" escaped="true">&lt;System.Security.Policy.Zone version="1"&gt;
	&lt;Zone&gt;Internet&lt;/Zone&gt;
&lt;/System.Security.Policy.Zone&gt;

&lt;System.Security.Policy.Url version="1"&gt;
	&lt;Url&gt;http://mirage.ipaper.lan/TestAssembly.dll&lt;/Url&gt;
&lt;/System.Security.Policy.Url&gt;

&lt;System.Security.Policy.Site version="1"&gt;
	&lt;Name&gt;mirage.ipaper.lan&lt;/Name&gt;
&lt;/System.Security.Policy.Site&gt;

&lt;System.Security.Policy.Hash version="1"&gt;
	&lt;RawData&gt;4D5A900003...00000&lt;/RawData&gt;
&lt;/System.Security.Policy.Hash&gt;</pre>

<p>This time the SecurityZone is defined as Internet. Although my server is placed on my local network, it's known as the internet by my computer. This time we also get the Site policy since the assembly is loaded from a website, namely mirage.ipaper.lan. The security zone is actually provided by Windows (using the<a href="http://msdn.microsoft.com/en-us/library/ms537133(VS.85).aspx">IInternetSecurityManager::MapUrlToZone method</a>) and not by the CLR itself, except in the case of locally loaded assemblies - in which it'll automatically set the zone to MyComputer. Thus, if I add mirage.ipaper.lan to my Internet Options control panel Intranet sites list, my SecurityZone changes to Intranet instead of Internet. Likewise I can add it to my trusted &amp; untrusted sites list and modify the resulting SecurityZone.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1283</wp:post_id>
		<wp:post_date>2008-06-11 00:54:24</wp:post_date>
		<wp:post_date_gmt>2008-06-11 00:54:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>analyzing-assembly-evidence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Analyzing Assembly Evidence]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>892</wp:comment_id>
			<wp:comment_author><![CDATA[Marie Joe Kiran]]></wp:comment_author>
			<wp:comment_author_email>kiranreloaded@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-09 08:48:58</wp:comment_date>
			<wp:comment_date_gmt>2008-10-09 08:48:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great Article. Very Informative.<br />Keep it Up!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>AS3 Numbers - Get Real</title>
		<link>http://improve.dk/as3-numbers-get-real/</link>
		<pubDate>Thu, 12 Jun 2008 21:51:05 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/06/11/as3-numbers-get-real.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Skilled developers are hard to come by these days, that includes Flash/AS3/Flex developers. As the product I'm working on is very much dependent on a Flash based frontend, I've been forced to learn &amp; work with AS3 &amp; Flex recently.</p>

<p>It's a great experience, learning a new language - especially now that Silverlight is marching forward. As the old saying goes, know your enemy. Anyways, enough with the chit chatting, on with the problems.</p>

<p>Today I tried making a very simple functionality, I wanted to be able to select a number of images by making them highlight when selected, and dim out when deselected:</p>

<pre lang="mxml" escaped="true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"&gt;

	&lt;mx:Script&gt;
		&lt;![CDATA[
			private function onClick():void
			{
				if(btnTest.alpha == 0.5)
					btnTest.alpha = 1;
				else
					btnTest.alpha = 0.5;
			}
		]]&gt;
	&lt;/mx:Script&gt;

	&lt;mx:Button id="btnTest" click="onClick()" label="Click me!"/&gt;

&lt;/mx:Application&gt;</pre>

<p><a href="http://improve.dk/wp-content/uploads/2008/06/120.swf">A.swf - Demo</a></p>

<p>In this case the button is "selected" from the start (alpha = 1). When clicked, the alpha changes to half opaque (0.5), switches back to 1 when reclicked, and so forth. All working good.</p>

<p>But it's a bit hard to differentiate between selected and non selected, so let's change the alpha setting to 0.4 instead of 0.5:</p>

<pre lang="mxml" escaped="true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"&gt;

	&lt;mx:Script&gt;
		&lt;![CDATA[
			private function onClick():void
			{
				if(btnTest.alpha == 0.4)
					btnTest.alpha = 1;
				else
					btnTest.alpha = 0.4;
			}
		]]&gt;
	&lt;/mx:Script&gt;

	&lt;mx:Button id="btnTest" click="onClick()" label="Click me!"/&gt;

&lt;/mx:Application&gt;</pre>

<p><a href="http://improve.dk/wp-content/uploads/2008/06/121.swf">B.swf - Demo</a></p>

<p>But what's this, now we're only able to dim it, not reselect it. Why's that? Nothing's changed other than the alpha value. The problem becomes apparent if we trace out the buttons alpha value like so:</p>

<pre lang="mxml" escaped="true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"&gt;

	&lt;mx:Script&gt;
		&lt;![CDATA[
			private function onClick():void
			{
				if(btnTest.alpha == 0.4)
					btnTest.alpha = 1;
				else
					btnTest.alpha = 0.4;

				mx.controls.Alert.show(btnTest.alpha.toString());
			}
		]]&gt;
	&lt;/mx:Script&gt;

	&lt;mx:Button id="btnTest" click="onClick()" label="Click me!"/&gt;

&lt;/mx:Application&gt;</pre>

<p><a href="http://improve.dk/wp-content/uploads/2008/06/122.swf">C.swf - Demo</a></p>

<p>In case you don't have Flash 9 installed, or are just too lazy to click the button, the resulting Alert box shows the following value: 0.3984375 - obviously not quite the 0.4 we specified.</p>

<p>Ok, let's dumb it down a bit and do some quick testing:</p>

<pre lang="mxml" escaped="true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml"
	layout="absolute"
	initialize="onInitialize()"&gt;

	&lt;mx:Script&gt;
		&lt;![CDATA[

			private function onInitialize():void
			{
				// true
				trace(0.4 == 0.4);

				// true
				var zeroPointFour:Number = 0.4;
				trace(zeroPointFour == 0.4);

				// true
				var secondZeroPointFour:Number = 0.4;
				trace(zeroPointFour == secondZeroPointFour);

				// false
				var testSprite:Sprite = new Sprite();
				testSprite.alpha = 0.4;
				trace(testSprite.alpha == 0.4);

				// 0.3984375
				trace(testSprite.alpha);

				// false - duh
				trace(0.3984375 == 0.4)
			}

		]]&gt;
	&lt;/mx:Script&gt;

&lt;/mx:Application&gt;</pre>

<p>Now this is where things start getting weird. We can obviously store the value 0.4 in a number (which is a 64 bit double-precision format according to the <a href="http://en.wikipedia.org/wiki/IEEE_754">IEEE-754 spec</a>). Furthermore, we're also able to compare two instances of Number with the value 0.4 and get the expected equality comparison result, true. Now, it would seem that as soon we set the alpha value on our Sprite, it's corrupted. Sprite inherits the alpha property from <a href="http://livedocs.adobe.com/flex/2/langref/flash/display/DisplayObject.html">DisplayObject</a> - which obviously lists alpha as a value of type Number.</p>

<p>Why does this happen? It's no problem storing the value 0.4 in a 64 bit double precision number:</p>

<pre class="plain">
Sign: +1
Exponent: -2
Mantissa: 1.6
Result: sign x 2<sup>exponent</sup> x mantissa =&gt; +1 x 2<sup>-2</sup> x 1.6 = 0.4
</pre>

<p>It might be (and probably is) me not understanding something right. Can somebody explain to me how the Flash VM handles Numbers, and thereby, explain why this is happening? Is it perhaps not due to the VM's handling of Numbers, but instead just a simple matter of an odd implementation of the alpha property on DisplayObject?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1284</wp:post_id>
		<wp:post_date>2008-06-12 23:51:05</wp:post_date>
		<wp:post_date_gmt>2008-06-12 21:51:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>as3-numbers-get-real</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asflexflash"><![CDATA[AS/Flex/Flash]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[AS3 Numbers - Get Real]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>893</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Velevitch]]></wp:comment_author>
			<wp:comment_author_email>chris.velevitch@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-15 13:38:04</wp:comment_date>
			<wp:comment_date_gmt>2008-06-15 13:38:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The results you're seeing indicates the alpha value is stored as 8 bits:<br /><br />0.4 = 0.01100110011001100110011001100110011001100110011001101 (64 bit precision)<br /><br />0.01100110 = 0.3984375<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>894</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-15 14:04:12</wp:comment_date>
			<wp:comment_date_gmt>2008-06-15 14:04:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chris,<br /><br />Thanks for your comment. Do you know why the alpha is represented as a Number, when it clearly looses precision internally? It's not that I need to represent my alpha values with double precision, I just don't like the design of non-transparent type conversion.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>895</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Velevitch]]></wp:comment_author>
			<wp:comment_author_email>chris.velevitch@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-15 22:18:18</wp:comment_date>
			<wp:comment_date_gmt>2008-06-15 22:18:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I believe it's for 2 reasons. Firstly, it's not humanly possible to see the difference between alpha values that differ at the 64th bit, and I don't think current technology can generated it. Secondly, alpha values are usually calculated from some geometric or trigometric expression.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>896</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-16 20:26:20</wp:comment_date>
			<wp:comment_date_gmt>2008-06-16 20:26:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Chris,<br /><br />I do not require my alpha values to be precise to multiple decimals, I don't even need decimal precision - as you say, we won't notice anyways. As for the expression math, that may be, but that does not change that the original input ought maintain it's value while the end result might loose precision.<br /><br />The thing here is that specifying the alpha value as a Number declares a contract. Whatever you input into my alpha property will be of type Number, and hence act as a number. By silently - somehow - converting the internal representation to only 8 bits, we loose precision - which goes against the Number contract.<br /><br />Now, AS3 does not - to my knowledge - have an 8bit datatype, so that is out of the question. DisplayObject ought to save the original value as a Number and only use their less precise internal value in internal calculations. If I set my value to X, I should get X back - as long as I do not cross the precision boundaries of the specified type, Number.<br /><br />This is priggishness, I know, but it's important none the less, imho.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>897</wp:comment_id>
			<wp:comment_author><![CDATA[v4corg]]></wp:comment_author>
			<wp:comment_author_email>roman@vertex4.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sunage-the-game.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-06-07 08:30:30</wp:comment_date>
			<wp:comment_date_gmt>2009-06-07 08:30:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[to the 8-bit representation: i believe more that the real internally used alpha - value is a simple ubyte (0-255) whichs getter function just &quot;Numbers&quot; it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Providing Custom Assembly Evidence</title>
		<link>http://improve.dk/providing-custom-assembly-evidence/</link>
		<pubDate>Fri, 13 Jun 2008 01:21:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/06/13/providing-custom-assembly-evidence.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently <a href="http://improve.dk/blog/2008/06/11/analyzing-assembly-evidence">mentioned</a> the possibility of having an assembly provide custom evidence alongside the CLR provided evidence. Let's see how to do it.</p>

<h2>Creating the evidence</h2>

<p>The first step is to actually create the evidence itself. The evidence can be in any form, as long as it's serializable. That means you can use strings, complex types (provided they're serializable), or plain old'n'good XML. In lack of a better example, I'll create a piece of evidence that tells the birthdate and name of the developer behind the assembly. Really useful, I know.</p>

<pre lang="xml" escaped="true">&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;myEvidence&gt;
	&lt;birthDay&gt;1985-07-25&lt;/birthDay&gt;
	&lt;name&gt;Mark S. Rasmussen&lt;/name&gt;
&lt;/myEvidence&gt;</pre>

<h2>Saving the evidence in binary form</h2>

<p>To embed our XML as evidence, we first have to save it in binary form. To save a bit of typing, I use my SaveXmlAsBinaryEvidence function:</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Saves the input XML in binary format that can be used when linking custom evidence to an assembly
/// &lt;/summary&gt;
/// &lt;param name="xml"&gt;&lt;/param&gt;
/// &lt;param name="outputFile"&gt;&lt;/param&gt;
public static void SaveXmlAsBinaryEvidence(string xml, string outputFile)
{
	Evidence customEvidence = new Evidence();
	customEvidence.AddAssembly(xml);

	using (FileStream fs = new FileStream(outputFile, FileMode.Create))
	{
		BinaryFormatter bf = new BinaryFormatter();
		bf.Serialize(fs, customEvidence);
	}
}</pre>

<p>This allows us to save out the evidence in binary format using a single line:</p>

<pre lang="csharp" escaped="true">EvidenceCreator.SaveXmlAsBinaryEvidence(File.ReadAllText("MyEvidence.xml"), "MyEvidence.evidence");</pre>

<h2>Compiling the relevant assembly in netmodule form</h2>

<p>I've created a simple assembly named TestAssembly that consists of a single file, MyClass:</p>

<pre lang="csharp" escaped="true">using System;

namespace TestAssembly
{
	public class MyClass
	{
		public void Test()
		{
			Console.Write("Hello world!");
		}
	}
}</pre>

<p>If we compile it directly in Visual Studio, we end up with an assembly called TestAssembly.dll - this is not what we want. We need to compile the code into a .netmodule module file so we can manually link it together with our assembly into a finished assembly. Running the following command (with relevant path variables setup, or from the Visual Studio Command Prompt) will compile MyClass into a netmodule called MyClass.netmodule:</p>

<pre lang="csharp" escaped="true">csc /target:module MyClass.cs</pre>

<p>You can actually load the .netmodule file into Reflector to verify the contents. It'll work nicely, though Reflector will give a warning since our netmodule does not contain an assembly manifest.</p>

<h2>Creating an assembly by linking the netmodule and evidence together</h2>

<p>The final step is to link our evidence (MyEvidence.evidence) and netmodule (MyClass.netmodule) together. Make sure both files reside in the same directory (they don't have to, but it'll be easier). The following command will invoke AL.exe and do the final assembly linking:</p>

<pre lang="csharp" escaped="true">al /target:library /evidence:MyEvidence.evidence /out:MyClass.dll MyClass.netmodule</pre>

<p>If you load up the resulting assembly in Reflector, you'll see the attached evidence under the Resources directory:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/06/reflector_evidence_2.jpg"><img class="alignnone size-full wp-image-2051" alt="reflector_evidence_2" src="http://improve.dk/wp-content/uploads/2008/06/reflector_evidence_2.jpg" width="208" height="98" /></a></div></div>

<p>Now, if we <a href="http://improve.dk/blog/2008/06/11/analyzing-assembly-evidence">analyze the assembly evidence</a> by loading the assembly and enumerating the assembly provided evidence like so:</p>

<pre lang="csharp" escaped="true">al /target:library /evidence:MyEvidence.evidence /out:MyClass.dll MyClass.netmodule</pre>

<p>We see our custom evidence:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/06/analyzing_custom_evidence_2.jpg"><img class="alignnone size-full wp-image-2052" alt="analyzing_custom_evidence_2" src="http://improve.dk/wp-content/uploads/2008/06/analyzing_custom_evidence_2.jpg" width="501" height="237" /></a></div></div>

<h2>Trustworthiness</h2>

<p><a href="http://improve.dk/blog/2008/06/11/analyzing-assembly-evidence">As mentioned earlier</a>, assembly provided evidence is inherently not trustworthy. There are however ways to secure it. We could use a public/private cryptosystem to sign the actual evidence. That way, anyone reading the evidence could verify the evidence providers signature and thus be sure that the entity linking the evidence into the assembly is trustworthy.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1285</wp:post_id>
		<wp:post_date>2008-06-13 01:21:08</wp:post_date>
		<wp:post_date_gmt>2008-06-13 01:21:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>providing-custom-assembly-evidence</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="assembly"><![CDATA[Assembly]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Providing Custom Assembly Evidence]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>.NET Security TechTalk</title>
		<link>http://improve.dk/dotnet-security-techtalk/</link>
		<pubDate>Fri, 13 Jun 2008 08:51:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/06/13/net-security-techtalk.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I will be hosting two TechTalks on security in .NET, at Microsoft Denmark in August. The TechTalks will be held in DANISH.</p>

<p><a href="http://www.intellect.dk/">Jakob Andersen</a> will be co-hosting the TechTalks, hopefully filling in on my weak points and vice versa.</p>

<p>I urge participants to comment on this post regarding topics you would like us to talk about, problems you've had, suggestions and so forth.</p>

<p>If you're not attending, please comment anyways - I'll be blogging a lot on security for the time being and I'm always seeking relevant topics to research further :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1286</wp:post_id>
		<wp:post_date>2008-06-13 10:51:45</wp:post_date>
		<wp:post_date_gmt>2008-06-13 08:51:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dotnet-security-techtalk</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[net-security-techtalk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>901</wp:comment_id>
			<wp:comment_author><![CDATA[Gustav Brock]]></wp:comment_author>
			<wp:comment_author_email>gustav@cactus.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-18 11:54:14</wp:comment_date>
			<wp:comment_date_gmt>2008-06-18 11:54:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A good idea would be to list some recommended reading which we could study to prepare for your TechTalk.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>902</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-18 21:31:06</wp:comment_date>
			<wp:comment_date_gmt>2008-06-18 21:31:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Gustav,<br /><br />Good comment. I'll make sure to add relevant articles as I prepare my material.<br /><br />I will however be going through the very basics on the first techtalk, so everyone should be able to follow along, no matter the beforehand experience.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>903</wp:comment_id>
			<wp:comment_author><![CDATA[Gustav Brock]]></wp:comment_author>
			<wp:comment_author_email>gustav@cactus.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-06-19 06:26:26</wp:comment_date>
			<wp:comment_date_gmt>2008-06-19 06:26:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[OK. A half day more at the beach!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TechTalk Material</title>
		<link>http://improve.dk/techtalk-material-security-2008/</link>
		<pubDate>Wed, 06 Aug 2008 18:38:23 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/08/06/techtalk-material.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I held my TechTalk on CAS security in the .NET framework today. As promised, here are the demos and slides (in Danish). If you're asked for a key password, it's "123456".</p>

<p><a href="http://improve.dk/wp-content/uploads/2008/08/Net_Security_Introduction_Slides.ppt">Net_Security_Introduction_Slides.ppt</a><br />
<a href="http://improve.dk/wp-content/uploads/2008/08/Net_Security_Introduction_Demos.zip">Net_Security_Introduction_Demos.zip</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1287</wp:post_id>
		<wp:post_date>2008-08-06 20:38:23</wp:post_date>
		<wp:post_date_gmt>2008-08-06 18:38:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>techtalk-material-security-2008</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[techtalk-material]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[techtalk-material-security-200]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>904</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>brian@kodehoved.dk</wp:comment_author_email>
			<wp:comment_author_url>http://kodehoved.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-07 14:48:43</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 14:48:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I hope everything went well. I'm enjoying my vacation atm, so I couldn't join you. How many showed up?<br /><br />Brian]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>905</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-07 19:16:53</wp:comment_date>
			<wp:comment_date_gmt>2008-08-07 19:16:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Brian,<br /><br />I think it went pretty well for both me and Jakob, although it's tough to say until we receive the official feedback.<br /><br />I think we were about 25-30 in total, pretty much as expected according to the signup amount, so that's great.<br /><br />Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Updating XmlOutput</title>
		<link>http://improve.dk/updating-xmloutput/</link>
		<pubDate>Sun, 10 Aug 2008 00:09:14 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/08/10/updating-xmloutput.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since I originally posted my XmlOutput class I've received lots of great feedback. I'm happy that many of you have found it useful.</p>

<p>I have been using the class myself for most of my xml writing requirements lately (in appropriate scenarios) and I've ended up augmenting it a little bit. Nothing major, just a couple of helpful changes.</p>

<h2>Automatic xml declaration</h2>

<p>Instead of manually declaring our xml declaration each time:</p>

<pre lang="csharp" escaped="true">XmlOutput xo = new XmlOutput()
	.XmlDeclaration()
	.Node("root").Within()
		.Node("result").Attribute("type", "boolean").InnerText("true");</pre>

<p>XmlOutput will instead add an XmlDeclaration with the default parameters:</p>

<pre lang="csharp" escaped="true">var xo = new XmlOutput()
	.Node("root").Within()
		.Node("result").Attribute("type", "boolean").InnerText("true");</pre>

<p>Note that this is a breaking change, meaning it will result in different output than the earlier version did. While you could make an XmlDocument without an XmlDeclaration earlier, you can no longer do this.</p>

<h2>Checking for duplicate XmlDeclaration</h2>

<p>XmlOutput will throw an InvalidOperationException in case an XmlDeclaration has already been added to the document. I do not allow for overwriting the existing XmlDeclaration as XmlOutput really is forward-only writing and since it might often be a flaw that the XmlDeclaration is overwritten.</p>

<h2>IDisposable</h2>

<p>Just as I <a href="http://improve.dk/blog/2008/06/01/using-idispoable-to-write-indented-text">used IDisposable to easily write indented text</a>, I've done the same to XmlOutput. For smaller bits of xml, it might cause more bloat than good - but it's optional when to use it. Using IDisposable will simply call EndWithin() in the Dispose method, making indented xml generation more readable.</p>

<pre lang="csharp" escaped="true">using (xo.Node("user").Within())
{
	xo.Node("username").InnerText("orca");

	// Notice that we're not calling EndWithin() after this block as it's implicitly called in the Dispose method
	using (xo.Node("numbers").Within())
		for (int i = 0; i &lt; 10; i++)
			xo.Node("number").Attribute("value", i);

	xo.Node("realname").InnerText("Mark S. Rasmussen");
}</pre>

<h2>InnerText &amp; Attribute object values</h2>

<p>Instead of explicitly requiring input values of type string, both InnerText and Attribute will now accept objects for the text values. This allows you to easily pass in integers, StringBuilders and so forth.</p>

<h2>ToString override</h2>

<p>Another breaking change - ToString will now return the OuterXml value of the XmlOutput object.</p>

<h2>Making it easy to do it right</h2>

<p>Jakob Andersen made a <a href="http://intellect.dk/post/Fluent-interfaces-Make-it-easy-to-do-it-right.aspx">great post</a> regarding how we might extend XmlOutput to return different kinds of interfaces after different operations. This would allow us to utilize IntelliSense as that'd only show the methods that were possible at the current state.</p>

<p>I started implementing it, but I kept running into walls after having thought it through. Let me start out by representing a state machine displaying the different interfaces involved:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/08/statemachine_2.jpg"><img class="alignnone size-full wp-image-2069" alt="statemachine_2" src="http://improve.dk/wp-content/uploads/2008/08/statemachine_2.jpg" width="548" height="768" /></a></div></div>

<p><a href="http://improve.dk/wp-content/uploads/2008/08/XmlOutput_State_Machine.zip">XmlOutput_State_Machine.zip - Visio diagram</a></p>

<p>So basically, calling a Create method will return an IXmlOutputStartDocument which only supports creating a Node and creating an XmlDeclaration. If you create an XmlDeclaration, you'll get an IXmlOutputCanWriteFirstNode which only allows you to create a node as that's the only valid option (ignoring read-only operations). Continuing on, creating a Node at that point will return you an IXmlOutputInsideRootNode which again supports creating either sibling nodes, attributes or innertext. If you call InnerText at this point, we get to a blind alley at the IXmlOutputInsideRootNodeWithText which only allows creating attributes.</p>

<p>Now, on paper, this seems great. The problem however becomes apparent when we start using it:</p>

<pre lang="csharp" escaped="true">// xo is now an IXmlOutputCanWriteFirstNode
var xo = XmlOutput.Create()
	.XmlDeclaration();

// We've created a root node and ignored the returned IXmlOutputInsideRootNode
xo.Node("root");

// This fails! Since xo is an IXmlOutputCanWriteFirstNode, we're not allowed to create attributes.
// Creating the root node above should've changed our type to IXmlOutputInsideRootNode, but it can't since
// xo is statically typed as an IXmlOutputCanWriteFirstNode
xo.Attribute("hello", "world");</pre>

<p>One way to get around this is to create a new variable after each operation, but I don't really think I'll have to explain why this is a bad idea:</p>

<pre lang="csharp" escaped="true">// xo1 is now an IXmlOutputCanWriteFirstNode
var xo1 = XmlOutput.Create()
	.XmlDeclaration();

// xo2 is now an IXmlOutputCanWriteFirstNode
var xo2 = xo1.Node("root");

// xo3 is now an IXmlOutputInsideRootNode
var xo3 = xo2.Attribute("hello", "world");</pre>

<p>Another issue is that we'll need to have the types change based on the stack level. Imagine we create an IXmlOutputOutsideNode like this:</p>

<p>XmlOutput.Create -&gt; Node –&gt; Node</p>

<p>This will result in us having create a single node inside the root node. We are still within the root node scope (creating another Node will also be a child of the rootnode, but a sibling of the just created node). The problem is, at this point we're able to call EndWithin() since the IXmlOutputOutsideNode interface allows it, but we can't move out of the root node scope as we're on the bottom of the stack. Unless we create interfaces like IXmlOutputOutsideNodeLevel1, Level2, LevelX interfaces, we can't really support allowing and disallowing EndWithin depending on stack level - and this is a mess I don't want to get into.</p>

<p>So what's the conclusion? While the interface based help in regards to fluent interfaces is a great idea, it's not really easy to implement, as least not as long as we need some kind of recursive functionality on our interfaces. If we had a simple linear fluent interface, it might be easier for us to support it, though we will still have the variable issue.</p>

<h3>Code</h3>

<pre lang="csharp" escaped="true">using System;
using System.Collections.Generic;
using System.Xml;

namespace Improve.Framework.Xml
{
	public class XmlOutput : IDisposable
	{
		// The internal XmlDocument that holds the complete structure.
		XmlDocument xd = new XmlDocument();

		// A stack representing the hierarchy of nodes added. nodeStack.Peek() will always be the current node scope.
		Stack&lt;XmlNode&gt; nodeStack = new Stack&lt;XmlNode&gt;();

		// Whether the next node should be created in the scope of the current node.
		bool nextNodeWithin;

		// The current node. If null, the current node is the XmlDocument itself.
		XmlNode currentNode;

		// Whether the Xml declaration has been added to the document
		bool xmlDeclarationHasBeenAdded = false;

		/// &lt;summary&gt;
		/// Overrides ToString to easily return the current outer Xml
		/// &lt;/summary&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public override string ToString()
		{
			return GetOuterXml();
		}

		/// &lt;summary&gt;
		/// Returns the string representation of the XmlDocument.
		/// &lt;/summary&gt;
		/// &lt;returns&gt;A string representation of the XmlDocument.&lt;/returns&gt;
		public string GetOuterXml()
		{
			return xd.OuterXml;
		}

		/// &lt;summary&gt;
		/// Returns the XmlDocument
		/// &lt;/summary&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public XmlDocument GetXmlDocument()
		{
			return xd;
		}

		/// &lt;summary&gt;
		/// Changes the scope to the current node.
		/// &lt;/summary&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput Within()
		{
			nextNodeWithin = true;

			return this;
		}

		/// &lt;summary&gt;
		/// Changes the scope to the parent node.
		/// &lt;/summary&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput EndWithin()
		{
			if (nextNodeWithin)
				nextNodeWithin = false;
			else
				nodeStack.Pop();

			return this;
		}

		/// &lt;summary&gt;
		/// Adds an XML declaration with the most common values.
		/// &lt;/summary&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput XmlDeclaration() { return XmlDeclaration("1.0", "utf-8", ""); }

		/// &lt;summary&gt;
		/// Adds an XML declaration to the document.
		/// &lt;/summary&gt;
		/// &lt;param name="version"&gt;The version of the XML document.&lt;/param&gt;
		/// &lt;param name="encoding"&gt;The encoding of the XML document.&lt;/param&gt;
		/// &lt;param name="standalone"&gt;Whether the document is standalone or not. Can be yes/no/(null || "").&lt;/param&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput XmlDeclaration(string version, string encoding, string standalone)
		{
			// We can't add an XmlDeclaration once nodes have been added, as the standard declaration will already have been added
			if (nodeStack.Count &gt; 0)
				throw new InvalidOperationException("Cannot add XmlDeclaration once nodes have been added to the XmlOutput.");

			// Create &amp; add the XmlDeclaration
			XmlDeclaration xdec = xd.CreateXmlDeclaration(version, encoding, standalone);
			xd.AppendChild(xdec);

			xmlDeclarationHasBeenAdded = true;

			return this;
		}

		/// &lt;summary&gt;
		/// Creates a node. If no nodes have been added before, it'll be the root node, otherwise it'll be appended as a child of the current node.
		/// &lt;/summary&gt;
		/// &lt;param name="name"&gt;The name of the node to create.&lt;/param&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput Node(string name)
		{
			XmlNode xn = xd.CreateElement(name);

			// If nodeStack.Count == 0, no nodes have been added, thus the scope is the XmlDocument itself.
			if (nodeStack.Count == 0)
			{
				// If an XmlDeclaration has not been added, add the standard declaration
				if (!xmlDeclarationHasBeenAdded)
					XmlDeclaration();

				// Add the child element to the XmlDocument directly
				xd.AppendChild(xn);

				// Automatically change scope to the root DocumentElement.
				nodeStack.Push(xn);
			}
			else
			{
				// If this node should be created within the scope of the current node, change scope to the current node before adding the node to the scope element.
				if (nextNodeWithin)
				{
					nodeStack.Push(currentNode);

					nextNodeWithin = false;
				}

				nodeStack.Peek().AppendChild(xn);
			}

			currentNode = xn;

			return this;
		}

		/// &lt;summary&gt;
		/// Sets the InnerText of the current node using CData.
		/// &lt;/summary&gt;
		/// &lt;param name="text"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public XmlOutput InnerText(object text)
		{
			return InnerText(text.ToString(), true);
		}

		/// &lt;summary&gt;
		/// Sets the InnerText of the current node.
		/// &lt;/summary&gt;
		/// &lt;param name="text"&gt;The text to set.&lt;/param&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput InnerText(object text, bool useCData)
		{
			if (useCData)
				currentNode.AppendChild(xd.CreateCDataSection(text.ToString()));
			else
				currentNode.AppendChild(xd.CreateTextNode(text.ToString()));

			return this;
		}

		/// &lt;summary&gt;
		/// Adds an attribute to the current node.
		/// &lt;/summary&gt;
		/// &lt;param name="name"&gt;The name of the attribute.&lt;/param&gt;
		/// &lt;param name="value"&gt;The value of the attribute.&lt;/param&gt;
		/// &lt;returns&gt;this&lt;/returns&gt;
		public XmlOutput Attribute(string name, object value)
		{
			XmlAttribute xa = xd.CreateAttribute(name);
			xa.Value = value.ToString();

			currentNode.Attributes.Append(xa);

			return this;
		}

		/// &lt;summary&gt;
		/// Same as calling EndWithin directly, allows for using the using statement
		/// &lt;/summary&gt;
		public void Dispose()
		{
			EndWithin();
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1288</wp:post_id>
		<wp:post_date>2008-08-10 00:09:14</wp:post_date>
		<wp:post_date_gmt>2008-08-10 00:09:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>updating-xmloutput</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="xml"><![CDATA[XML]]></category>
		<category domain="post_tag" nicename="xmloutput"><![CDATA[XmlOutput]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Updating XmlOutput]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How I Raised Myself from Failure to Success in Selling</title>
		<link>http://improve.dk/book-how-i-raised-myself-from-failure-to-success-in-selling/</link>
		<pubDate>Sun, 10 Aug 2008 02:19:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/08/10/how-i-raised-myself-from-failure-to-success-in-selling.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having recently read <a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1218331941&amp;sr=8-1">The Pragmatic Programmer</a> and <a href="http://www.amazon.com/Working-Effectively-Legacy-Robert-Martin/dp/0131177052">Working Effectively with Legacy Code</a> (both books are amazing - and neither need further review or description as they are globally appreciated as classics), I was feeling ready to read something non-development related, just to get back on my feet again.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/08/frankbettger_2.jpg"><img class="alignnone size-full wp-image-2067" alt="frankbettger_2" src="http://improve.dk/wp-content/uploads/2008/08/frankbettger_2.jpg" width="319" height="500" /></a></div></div>

<p>I'd heard our CEO speaking highly of a sales book by <a href="http://en.wikipedia.org/wiki/Frank_Bettger">Frank Bettger</a>, but I'd never really thought more of it. When I found a copy of <a href="http://www.amazon.com/Raised-Myself-Failure-Success-Selling/dp/067179437X/ref=pd_bbs_sr_1?ie=UTF8&amp;s=books&amp;qid=1218331785&amp;sr=1-1">How I Raised Myself from Failure to Success in Selling</a> in a bag I'd borrowed for a trip to Belgium, I thought I might as well give it a try.</p>

<p>While it's no programming book, I do feel it was a great read, and I believe it's got some great tips for anyone dealing with clients - no matter if it's sales or support related. Some of the chapters may be borderline self-help-ish, but he keeps a sane level of thought all the way through. One of the greatest features of the book is that 70% of the text are war stories of how he either accomplished or failed when speaking with a client. Some of the things he mentions will seem obvious at first, but when you think about it, you realize how you've never actually thought about the process behind the technique.</p>

<p>It's a quick and quite enjoyable read due to his light style of writing and war stories. I highly recommend it to just about anyone, no matter your field of work.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1289</wp:post_id>
		<wp:post_date>2008-08-10 04:19:08</wp:post_date>
		<wp:post_date_gmt>2008-08-10 02:19:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>book-how-i-raised-myself-from-failure-to-success-in-selling</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[how-i-raised-myself-from-failure-to-success-in-selling]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[How I Raised Myself from Failure to Success in Selling]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Twitter</title>
		<link>http://improve.dk/twitter/</link>
		<pubDate>Sun, 10 Aug 2008 14:53:15 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/08/10/twitter.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've finally succumbed to creating a <a href="http://twitter.com/improvedk">Twitter account</a>. My gut instinct doesn't like Twitter, but on the other hand, I do see some possibilities. I don't know. As the ol' Cain would've said: Stay a while, and listen!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1290</wp:post_id>
		<wp:post_date>2008-08-10 16:53:15</wp:post_date>
		<wp:post_date_gmt>2008-08-10 14:53:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>twitter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="twitter"><![CDATA[Twitter]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>906</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Christensen]]></wp:comment_author>
			<wp:comment_author_email>mch@prototypeinvest.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.prototypeinvest.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-08-11 09:41:21</wp:comment_date>
			<wp:comment_date_gmt>2008-08-11 09:41:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Be careful it's highly addictive :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TechTalk Material Part 2</title>
		<link>http://improve.dk/techtalk-material-part-2/</link>
		<pubDate>Wed, 20 Aug 2008 18:46:09 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/08/20/techtalk-material-part-2.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I continued my TechTalk on security in the .NET framework today, taking off from where we left last time. As promised, here are the demos and slides (in Danish).</p>

<p>Regarding the demos, the baseline folders contain the code as it was at the beginning of the presentation, the others contain the code as it ended up after the presentation.</p>

<p><a href="http://improve.dk/wp-content/uploads/2008/08/Net_Security_Part2_Slides.ppt">Net_Security_Part2_Slides.ppt - Slides</a><br />
<a href="http://improve.dk/wp-content/uploads/2008/08/Net_Security_Part2_Demos.zip">Net_Security_Part2_Demos.zip - Demos</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1291</wp:post_id>
		<wp:post_date>2008-08-20 20:46:09</wp:post_date>
		<wp:post_date_gmt>2008-08-20 18:46:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>techtalk-material-part-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>aspnet_regiis -ga Token Reference Error</title>
		<link>http://improve.dk/aspnet-regiis-ga-token-reference-error/</link>
		<pubDate>Tue, 02 Sep 2008 18:37:27 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/09/02/aspnet_regiis-ga-token-reference-error.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Some time ago Peter Loft Jensen wrote about how to easily give a user account the neccessary permissions to access the IIS metabase &amp; required directories, and thus be used for running the IIS process.</p>

<p>We're running all x64 servers, but our IIS is running in 32 bit mode due to some non-x64 compatible 3rd party libraries. Usually this means we have to use the Frameworkversionaspnet_regiis.exe bin instead of the Framework64 version - otherwise it might interfere with our 32 bit IIS settings.</p>

<p>Doing that resulted in the following error:</p>

<pre lang="bash">C:\WINDOWS\microsoft.net\Framework\v2.0.50727>aspnet_regiis -ga [domain][user]
Start granting [domain][user] access to the IIS metabase and other directories used by ASP.NET.
An error has occurred: 0x800703f0 An attempt was made to reference a token that does not exist.</pre>

<p>The solution was quite simple, it seems you must use the x64 version on an x64 system to run the -ga command. After using the binary in the Framework64 directory, the command ran perfectly.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1292</wp:post_id>
		<wp:post_date>2008-09-02 18:37:27</wp:post_date>
		<wp:post_date_gmt>2008-09-02 18:37:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aspnet-regiis-ga-token-reference-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[aspnet_regiis -ga Token Reference Error]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[aspnet_regiis-ga-token-reference-error]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>907</wp:comment_id>
			<wp:comment_author><![CDATA[Ган-Оч Энхболд]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-03-19 03:59:34</wp:comment_date>
			<wp:comment_date_gmt>2012-03-19 03:59:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In case the machine and the OS and IIS are all 32bit and still the user experiences such error, I might suggest doing a <br /><br />aspnet_regiis -enable [-r || -ir || -r] whichever one applies.<br /><br />I had the same problem installing TFS Build Controller, after googling, yahooing, and binging for the 0x800704f0 error nothing really helped because all links are tied to the x64 problem. <br /><br />Then, after some 4 hours of unsuccessful web surfing, having our server on Win2003, IIS 6.0, I figured ASP.NET 4.0 has not been installed properly. and voila.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Using Squid as a Reverse Proxy With a .NET Url Rewriter</title>
		<link>http://improve.dk/using-squid-as-a-reverse-proxy-with-a-dotnet-url-rewriter/</link>
		<pubDate>Sun, 05 Oct 2008 18:25:18 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/10/05/using-squid-as-a-reverse-proxy-with-a-net-url-rewriter.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Once you start receiving visitors from all over the world, a new kind of scaling issue arise. It's not a matter of adding more servers to the cluster or optimizing code (we'll assume these factors are perfect), it's a simple matter of geography and mathematics. Serving code from one end of the world to the other will take time, no matter how quick your servers are handling the request. The speed of light suddenly seems quite slow.</p>

<p>At one of my current projects we serve a lot of image data. Letting US based clients fetch all the data from Denmark results in very slow response times. The obvious solution is to partner up with a <a href="http://en.wikipedia.org/wiki/Content_Delivery_Network">CDN</a> provider, problem solved. While this may solve the problem, it'll also cost you a bit as CDN providers, rightfully, are not cheap. If you don't need the amount of PoPs that the CDN provides, you can setup your own service quite easily using <a href="http://www.squid-cache.org/">Squid</a>.</p>

<h2>The scenario</h2>

<p>We want to setup Squid as a <a href="http://en.wikipedia.org/wiki/Reverse_proxy">reverse proxy</a>. By utilizing a reverse proxy setup, we can use the Squid server with minimal changes to our current configuration. This is very case dependent however - it'll not be optimal for non-cacheable resources like personalized pages, shortlived data and so forth. In our case we have non-expiring static images with static urls - the perfect case for a reverse proxy setup. Squid will comply completely with the cache properties set by the HTTP headers of your requests, so make sure you've got them under control in your solution. In our case, images are served with a lifetime of a year and a static <a href="http://en.wikipedia.org/wiki/HTTP_ETag">etag</a>which'll ensure Squid won't purge them unless it's running short on disk space. So just to summarize this would be the typical scenario for a US based client visiting our website:</p>

<h3>Squid has not cached data</h3>

<p>Client: Can I please have image X?<br />
Squid: Oh, I don't have it, please wait while I fetch it from Denmark...<br />
Squid: [Fetching image from Denmark, storing it on disk and caching it in memory]<br />
Squid: There you go, here's image x!</p>

<h3>Squid has cached data</h3>

<p>Client: Can I please have image x?<br />
Squid: There you go, here's image x!</p>

<p>After the very first request, Squid will have cached the data and thus all further requests will be served directly from the Squid server location in the US, instead of the client having to go all the way to Denmark. This is basically what a reverse proxy CDN setup does, except it'll have a lot more PoPs all around the world, and several in the US alone probably.</p>

<h2>Installing Squid</h2>

<p>So how do we get this working? In this example I'll be setting up a Squid server on a local VPC that'll act as a reverse proxy for my website, www.improve.dk. In effect, this will mean that all cacheable resources will be served locally on my computer, while non-cacheable resources will be transparently fetched from improve.dk directly. To avoid overriding the improve.dk domain completely, I'll set it up to listen on cache.improve.dk and forward the requests to improve.dk instead. To enabled this, I've added a line in my hosts file pointing cache.improve.dk to my local VPC running Squid.</p>

<p>Start by <a href="http://www.acmeconsulting.it/SquidNT/">obtaining a binary release</a> of Squid. I'll be using the latest stable release, standard 2.7.STABLE4.</p>

<p>Squid does not require installation as such, simply unzip it where you wish. To make it simple, I'll install Squid directly in C:squid as the standard Squid configuration expects it to be installed here - it's easy to change though!.</p>

<p>We'll start by installing Squid as a service, before doing the actual configuration. Open a command prompt and go to C:squidsbin. Now run "squid -i -n Squid". This will install Squid as a service under the name "Squid".</p>

<pre class="plain">C:\squid\sbin>squid -i -n Squid
Registry stored HKLMSOFTWAREGNUSquid2.6SquidConfigFile value c:/squid/etc/squid.conf
Squid Cache version 2.7.STABLE4 for i686-pc-winnt
installed successfully as Squid Windows System Service.
To run, start it from the Services Applet of Control Panel.
Don't forget to edit squid.conf before starting it.</pre>

<h2>Configuring Squid</h2>

<p>Before we start Squid, we have to configure it. Go to C:squidetc and make a copy of squid.conf.default and call it squid.conf. Do the same for mime.conf.default (we won't change this one, but it's needed). There are hundreds of configuration options, all very well documented. Now, I won't go over all the options, so simply delete the entire contents of the squid.conf file, we'll add only the configuration options that we need.</p>

<p>Add the following lines:</p>

<pre class="plain">acl all src all
acl manager proto cache_object
acl port80 port 80
acl domains url_regex .cache.improve.dk/</pre>

<p>The above lines define our acl's which are used to specify what is allowed and what is not allowed. The first line is used as a catch-all that matches everything. The second line matches a special management interface that we will not be used (and thus might as well deny access to). The third line matches port80. The fourth line defines a regular expression that is used to define what addresses are allowed to be requested. It is very important to define the allowed URLs as your proxy might otherwise be used for any service basically.</p>

<p>Add the following lines:</p>

<pre class="plain"># DENY CACHEMGR
http_access deny manager

# Deny requests to unknown ports
http_access deny !port80

# ALLOWED DOMAINS
http_access allow domains

# And finally deny all other access to this proxy
http_access deny all

# DENY ALL ICP
icp_access deny all

# HTTP PORT
http_port 80 transparent allow-direct</pre>

<p>The acl lines simply specify the match cases, not what is actually allowed and denied. Here we start out by denying access to the management interface and denying access to anything but port 80. Then we allow access to only the specified domains in the regex - and afterwards deny access to everything else by saying "http_access deny all". We also deny ICP traffic as this is only used in a clustered Squid setup for intersquid chat. Finally we allow transparent direct access to the origin server (the actual www.improve.dk server) on port 80.</p>

<p>Add the following lines:</p>

<pre class="plain"># Memory
cache_mem 64 MB
maximum_object_size_in_memory 2048 KB

# Cache directory
cache_dir ufs c:/SQUID_CACHE 204800 16 256</pre>

<p>Here we set the memory limits for Squid. Note that this is not the total memory limit for Squid, only the limit for hot objects in transit (please see the Squid documentation for complete explanation). We also define that any objects over 2MB should not be stored in memory. Our performance really comes from serving small files directly from memory, instead of storing one PDF at 200MBs in memory. Besides storing the files in memory, Squid also stores them on disk. In the cache_dir line we setup the directory for the disk cache, as well as the max disk size in MBs (200GB in my case). The other options should be left at default (see docs).</p>

<p>Add the following lines:</p>

<pre class="plain"># Logging
access_log c:/SQUID_LOGS/access.log squid
cache_log c:/SQUID_LOGS/cache.log
cache_store_log c:/SQUID_LOGS/store.log
pid_filename c:/SQUID_LOGS/squid.pid
logfile_rotate 100</pre>

<p>This defines the location of the Squid log files. It'll log all cache requests as well as all disk storage activity. You can customize the log format as well (see docs). The logfile_rotate setting defines how many rotations of log files we'll use as a max. Each time we do a rotation, the old logfiles are left behind, while a new set of files are created with the rotation number appended. When the rotation has reached 100, it'll start over from number 0 and overwrite/recreate old log files.</p>

<p>Add the following lines:</p>

<pre class="plain"># Url rewriting
url_rewrite_program C:/squid/etc/scripts/SquidRewriter.exe
url_rewrite_children 5

# Objects without an explicit expiry date will never be considered fresh
refresh_pattern . 0 0% 0

# Remove all proxy headers
header_access X-Cache deny all
header_access X-Cache-Lookup deny all
header_access Via deny all

# ALLOW DIRECT
always_direct allow all</pre>

<p>These are the final configuration lines. Ignore the url_rewrite lines for now, I'll get back to them in just a sec. The refresh_pattern setting is very scenario dependent, it defines the lifetime of objects that do not have an explicit expiry date sent along. As my cache is only intended for static files, any files not having an expiry time should never be cached, and thus I've set the lifetime to 0. The header sections basically remove any extra headers normally appended by Squid / any proxy. The final line simply says that all requests (if needed) should be forwarded directly to the origin server, and not ask other servers in the cluster for the data.</p>

<h2>Creating a .NET url rewriter</h2>

<p>Whenever a request is made for the proxy, it'll be in the form cache.improve.dk/file. cache.improve.dk doesn't really exist, and the website doesn't answer to it, so while Squid receives a request for cache.improve.dk, it should map it back to improve.dk. You could do this by configuration, but that's no fun (in my case I had to do this for hundreds of domains, so it wasn't feasibly to do by configuration).</p>

<p>Luckily Squid provides an easy interface for creating custom rewriters, log &amp; storage daemons and so forth. Each time a request comes in Squid will write the url to stdin for the url rewriting daemon and it'll expect the rewritten url to be output to stdout. It'll also include some extra whitespace-separated options, but they can simply be ignored, just as Squid will also ignore anything after the first whitespace of the stdout output.</p>

<p>To do the job, I've made an über simple console application that does the job:</p>

<pre lang="csharp">using System;

namespace SquidRewriter
{
	class Program
	{
		static void Main(string[] args)
		{
			while (true)
			{
				string input = Console.ReadLine();

				if (input == null || input.Length == 0)
					return;

				Console.WriteLine(input.Replace("cache.improve.dk", "improve.dk"));
			}
		}
	}
}</pre>

<p>We need the null check as when Squid closes the process we'll get a nullref exception otherwise. Now simply copy the app into C:squidetcscripts and Squid will automatically start it up as a child processes (or several, depending on the configuration - 5 in our case). This simple rewriter can of course be written in any language that can talk to stdin &amp; stdout, that be C[++], Python, F#, you name it.</p>

<h2>Starting Squid</h2>

<p>Before we can start Squid, we need to create the swap directories. These are the directories in which Squid stores the cached data. Creating the swap directories is a one-time procedure that has to be done before Squid is started for the first time. Do this by running C:squidsbinsquid.exe -z. If you encounter any problems when starting squid, refer to the C:SQUID_LOGScache.log file to see what went wrong.</p>

<p>Once you start Squid (from the Services administration), you'll notice that it starts the squid.exe process, as well as a number of SquidRewriter.exe processes.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/10/squid1_2.jpg"><img class="alignnone size-full wp-image-1953" alt="squid1_2" src="http://improve.dk/wp-content/uploads/2008/10/squid1_2.jpg" width="373" height="92" /></a></div></div>

<p>If you open a browser and go to cache.improve.dk, you'll see the normal improve.dk website. The only difference is that the website is now ported through our locally running Squid. You can confirm this by looking at the C:SQUID_LOGSaccess.log file:</p>

<pre class="plain">1223221967.146   4146 192.168.0.11 TCP_MISS/200 24172 GET http://cache.improve.dk/ - DIRECT/89.221.162.250 text/html
1223221967.917    861 192.168.0.11 TCP_MISS/200 476 GET http://cache.improve.dk/styles/print.css - DIRECT/89.221.162.250 text/css
1223221967.917    861 192.168.0.11 TCP_MISS/200 549 GET http://cache.improve.dk/scripts/general.js - DIRECT/89.221.162.250 application/x-javascript
1223221967.957    901 192.168.0.11 TCP_MISS/200 6273 GET http://cache.improve.dk/styles/screen.css - DIRECT/89.221.162.250 text/css
1223221968.598    621 192.168.0.11 TCP_MISS/200 695 GET http://cache.improve.dk/images/bg.gif - DIRECT/89.221.162.250 image/gif
1223221968.608    631 192.168.0.11 TCP_MISS/200 4724 GET http://cache.improve.dk/images/logos/top.gif - DIRECT/89.221.162.250 image/gif
1223221968.978    961 192.168.0.11 TCP_MISS/200 586 GET http://cache.improve.dk/images/interface/topmenu/topbg.gif - DIRECT/89.221.162.250 image/gif
1223221972.243   1222 192.168.0.11 TCP_MISS/200 24117 GET http://cache.improve.dk/ - DIRECT/89.221.162.250 text/html
1223221972.253     50 192.168.0.11 TCP_REFRESH_HIT/304 292 GET http://cache.improve.dk/styles/screen.css - DIRECT/89.221.162.250 -
1223221972.263     50 192.168.0.11 TCP_REFRESH_HIT/304 289 GET http://cache.improve.dk/styles/print.css - DIRECT/89.221.162.250 -
1223221972.263     50 192.168.0.11 TCP_REFRESH_HIT/304 292 GET http://cache.improve.dk/scripts/general.js - DIRECT/89.221.162.250 -
1223221972.283     20 192.168.0.11 TCP_REFRESH_HIT/304 287 GET http://cache.improve.dk/images/bg.gif - DIRECT/89.221.162.250 -
1223221972.293     30 192.168.0.11 TCP_REFRESH_HIT/304 293 GET http://cache.improve.dk/images/logos/top.gif - DIRECT/89.221.162.250 -
1223221972.303     30 192.168.0.11 TCP_REFRESH_HIT/304 307 GET http://cache.improve.dk/images/interface/topmenu/topbg.gif - DIRECT/89.221.162.250 -</pre>

<p>Now, the above log basically confirms that I suck at setting up caching properties for my blog. Naturally, for the first request we'll get all TCP_MISS statuses as Squid does not have any of the resources cached. For the next request we get all TCP_REFRESH_HIT's as Squid does have them cached, but it needs to do a 304 check on the server to see if it's been modified. Had I set a more liberal refresh_pattern, I could've cached these and completely avoided a roundtrip to the improve.dk server (resulting in a TCP_MEM_HIT if it's cached in-memory). But still, the next user accessing the Squid will have the data served locally, even though Squid has to do a refresh check to the improve.dk server. This issue confirms a very important point - Squid will be best for static data that does not frequently change, and can thus be cached safely. Or at least for dynamic content, you have to consider your usage of expiry policies through the HTTP headers.</p>

<p>If you add a reference to the local Squid server for google.com, in your hosts line, then you'll see the error message that pops up due to us filtering away non-improve.dk domains:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/10/squid2_2.jpg"><img class="alignnone size-full wp-image-1954" alt="squid2_2" src="http://improve.dk/wp-content/uploads/2008/10/squid2_2.jpg" width="570" height="523" /></a></div></div>

<h2>Reconfiguration &amp; log rotation</h2>

<p>When Squid is running, it'll ignore any changes you make to the config files until you restart Squid. You can also force Squid to read the config files again without having it restart, simply run the following command:</p>

<pre class="plain">C:\squid\sbin\squid.exe -k reconfigure -n Squid</pre>

<p>To force a log rotation, run:</p>

<pre class="plain">C:\squid\sbin\squid.exe -k rotate -n Squid</pre>

<h2>Final considerations</h2>

<p>Setting up a Squid server to help speed up your solution for foreign visitors is both cheap &amp; easy. Squid runs in *nix as well as Windows. It has no hardware requirements to speak of and it's CPU utilization is very limited. Note that it'll only support a single core, so you won't get anything from a fancy quad-core setup. Also, it only (there are unofficial builds for x64) runs on x86 so if you want to utilize more than ~3GBs of memory, you'll have to run multiple instances on different port/ips. As for the setup, I'd recommend to create a special user for Squid that only has access to the Squid directories, otherwise it'll run with SYSTEM permissions by default.</p>

<p>Squid can not only be used for improving foreign visitor speed, it can also take a lot of static file traffic off of your normal servers. Simply put a Squid in front of your normal servers and let all static/cacheable traffic go through the Squid instead of through the normal app servers.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1293</wp:post_id>
		<wp:post_date>2008-10-05 18:25:18</wp:post_date>
		<wp:post_date_gmt>2008-10-05 18:25:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-squid-as-a-reverse-proxy-with-a-dotnet-url-rewriter</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="reverse-proxy"><![CDATA[Reverse Proxy]]></category>
		<category domain="post_tag" nicename="scalability"><![CDATA[Scalability]]></category>
		<category domain="post_tag" nicename="squid"><![CDATA[Squid]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Using Squid as a Reverse Proxy With a .NET Url Rewriter]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[using-squid-as-a-reverse-proxy-with-a-net-url-rewriter]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>908</wp:comment_id>
			<wp:comment_author><![CDATA[jeetu]]></wp:comment_author>
			<wp:comment_author_email>jeetu.4591@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-10-07 10:36:15</wp:comment_date>
			<wp:comment_date_gmt>2010-10-07 10:36:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i am ubuntu desktop 10.04 with squid proxy <br />and windows 7  home basic<br /><br />after configuring squid proxy i am unable to connect remove server through VNC,WINSCP and PUTTY software <br /><br />so please help me out<br /><br />Thanks in Advance<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>I Don&#039;t Like Static Methods</title>
		<link>http://improve.dk/i-dont-like-static-methods/</link>
		<pubDate>Thu, 16 Oct 2008 21:01:18 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/10/15/i-dont-like-static-methods.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Inspired by a recent <a href="http://stackoverflow.com/questions/205689/class-with-single-method-best-approach">question on StackOverflow</a>, I felt like sharing my thoughts on static methods in general.</p>

<p>I used to love utility classes filled up with static methods. They made a great consolidation of helper methods that would otherwise lie around causing redundancy and maintenance hell. They're very easy to use, no instantiation, no disposal, just fire'n'forget. I guess this was my first unwitting attempt at creating a service oriented architecture - lots of stateless services that just did their job and nothing else. As a system grows however, dragons be coming.</p>

<h2>Polymorphism</h2>

<p>Say we have the method UtilityClass.SomeMethod that happily buzzes along. Suddenly we need to change the functionality slightly. Most of the functionality is the same, but we have to change a couple of parts nonetheless. Had it not been a static method, we could make a derivate class and change the method contents as needed. As it's a static method, we can't. Sure, if we just need to add functionality either before or after the old method, we can create a new class and call the old one inside of it - but that's just gross.</p>

<h2>Interface woes</h2>

<p>Static methods cannot be defined through interfaces for logic reasons. And since we can't override static methods, static classes are useless when we need to pass them around by their interface. This renders us unable to use static classes as part of a strategy pattern. We might patch some issues up by <a href="http://blogs.msdn.com/kirillosenkov/archive/2008/02/06/how-to-override-static-methods.aspx">passing delegates instead of interfaces</a>.</p>

<h2>Testing</h2>

<p>This basically goes hand in hand with the interface woes mentioned above. As our ability of interchanging implementations is very limited, we'll also have trouble replacing production code with test code. Again, we can wrap them up but it'll require us to change large parts of our code just to be able to accept wrappers instead of the actual objects.</p>

<h2>Fosters blobs</h2>

<p>As static methods are usually used as utility methods and utility methods usually will have different purposes, we'll quickly end up with a large class filled up with non-coherent functionality - ideally, each class should have a single purpose within the system. I'd much rather have a five times the classes as long as their purposes are well defined.</p>

<h2>Parameter creep</h2>

<p>To begin with, that little cute and innocent static method might take a single parameter. As functionality grows, a couple of new parameters are added. Soon further parameters are added that are optional, so we create overloads of the method (or just add default values, in languages that support them). Before long, we have a method that takes 10 parameters. Only the first three are really required, parameters 4-7 are optional. But if parameter 6 is specified, 7-9 are required to be filled in as well... Had we created a class with the single purpose of doing what this static method did, we could solve this by taking in the required parameters in the constructor, and allowing the user to set optional values through properties, or methods to set multiple interdependent values at the same time. Also, if a method has grown to this amount of complexity, it most likely needs to be in its own class anyways.</p>

<h2>Demanding consumers to create an instance of classes for no reason</h2>

<p>One of the most common arguments is, why demand that consumers of our class create an instance for invoking this single method, while having no use for the instance afterwards? Creating an instance of a class is a very very cheap operation in most languages, so speed is not an issue. Adding an extra line of code to the consumer is a low cost for laying the foundation of a much more maintainable solution in the future. And finally, if you want to avoid creating instances, simply create a singleton wrapper of your class that allows for easy reuse - although this does make the requirement that your class is stateless. If it's not stateless, you can still create static wrapper methods that handle everything, while still giving you all the benefits in the long run. Finally, you could also make a class that hides the instantiation as if it was a singleton: MyWrapper.Instance is a property that just returns new MyClass();</p>

<h2>Only a Sith deals in absolutes</h2>

<p>Of course, there are exceptions to my dislike of static methods. True utility classes that do not pose any risk to bloat are excellent cases for static methods - System.Convert as an example. If your project is a one-off with no requirements for future maintenance, the overall architecture really isn't very important - static or non static, doesn't really matter - development speed does, however.</p>

<h2>Standards, standards, standards!</h2>

<p>Using instance methods does not inhibit you from also using static methods, and vice versa. As long as there's reasoning behind the differentiation and it's standardised. There's nothing worse than looking over a business layer sprawling with different implementation methods.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1294</wp:post_id>
		<wp:post_date>2008-10-16 23:01:18</wp:post_date>
		<wp:post_date_gmt>2008-10-16 21:01:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-dont-like-static-methods</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[I Don't Like Static Methods]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>909</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-16 17:47:34</wp:comment_date>
			<wp:comment_date_gmt>2008-10-16 17:47:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,<br /><br />You make a lot of valid points there. I'd like to add a few.<br /><br />1) Overload explosion<br />Take an example: the FolderBrowserDialog class in System.Windows.Forms. This class really has only one important method: ShowDialog. Conceptually, this method takes a lot of parameters, all of them optional. One parameter is implemented as a physical parameter (with an overload): the owner of the dialog box. All of the other conceptual parameters are passed as properties to the object. Let's just take the most commonly used: Description, RootFolder, SelectedPath and ShowNewFolderButton. With the owner, that's five parameters. If we use overloads to supply default values, that 2^5 = 32 overloads. That's a lot.<br />But it really explodes when you realize that two of those are of type string: Description and SelectedPath. So how do you create the two overloads that have just the description parameter and just the selectedPath parameter? Answer: you can't.<br /><br />2) Multiple return values and ref parameters<br />Take the same example: SelectedPath provides input (which folder is selected when the dialog box opens), but also output (which folder was selected by the user in the dialog box). And we can't return the SelectedPath, because we have a return value already (DialogResult). We could of course state that a null value being returned means the dialog box was cancelled, but that's ugly and it doesn't scale. We could use a ref parameter, equally ugly. Or we could create a new type with multiple properties to hold all of the return values. But then we might just as well make the method an instance method.<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>910</wp:comment_id>
			<wp:comment_author><![CDATA[Kris Vandermotten]]></wp:comment_author>
			<wp:comment_author_email>kris@u2u.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.u2u.info/Blogs/Kris</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-10-16 17:48:17</wp:comment_date>
			<wp:comment_date_gmt>2008-10-16 17:48:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[(continued from previous comment)<br /><br />3) Designer support<br />Same example again: I can't drag and drop a static method on a designer (such as the Forms designer). I can do that with the FolderBrowserDialog, because it inherits from Component. That allows setting the parameters as properties in the designer. But it also allows for more complex stuff such as data binding in the designer. Talking of which:<br /><br />4) Data binding<br />Properties can support data binding. Method parameters cannot.<br /><br />A lot of arguments against static methods. And yet, I would not go as far as you did, saying you dislike static methods. I think they have their uses. You mention one: helper classes like System.Convert. I'd like to add the example of System.Math. That being said, both of those would probably be implemented as static classes with extention methods these days (like System.Linq.Enumerable).<br />Another example is factory methods. If you just need factories, but not abstract factories, static Create methods on the class being created are just fine. Example: XmlReader.Create, HashAlgorithm.Create, etc. Note that Parse methods (e.g. on Int32, DateTime etc) in a way are factories too, just like conversion operators. All of these are static.<br /><br />Anyway, just my two cents.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>911</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>brian@kodehoved.dk</wp:comment_author_email>
			<wp:comment_author_url>http://kodehoved.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2008-12-02 13:41:03</wp:comment_date>
			<wp:comment_date_gmt>2008-12-02 13:41:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Most of your points are valid, but I would still not go as far as avoiding static methods entirely. If nothing else static methods are useful for implementing extension methods, which in turn can be used to provide implementations for interfaces which e.g. LINQ uses to great effect.<br /><br />Static methods are also needed for Factory methods. Since the language doesn't provide any other means to centralize object creation this feature is vital imo. <br /><br />Furthermore since all classes are not sealed per default we'll often end up with types which are a little slower than they really need to be due to late binding. Statics on the other hand can always be called as fast as possible. Admittedly, this is not a big issue. <br /><br />But all in all, I agree that static methods are often the result of incomplete design. People tend to build generic helper classes with misc. neat methods many of which would be much better off as members of a dedicated class. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>912</wp:comment_id>
			<wp:comment_author><![CDATA[Jens Mikkelsen]]></wp:comment_author>
			<wp:comment_author_email>jm@pentia.dk</wp:comment_author_email>
			<wp:comment_author_url>http://mcore.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-02-03 12:20:49</wp:comment_date>
			<wp:comment_date_gmt>2009-02-03 12:20:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&quot;And finally, if you want to avoid creating instances, simply create a singleton wrapper of your class that allows for easy reuse&quot;<br /><br />Welcome to the anti-pattern no. 1. :) <br /><br />IMO: Avoid static methods when they are not required and don't use a patterns for something its not meant for...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93633</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-08-21 20:30:29</wp:comment_date>
			<wp:comment_date_gmt>2013-08-21 18:30:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Rob
Sure - if used properly, the decorator pattern is a nice way of achieving a "decoration" of other code. However, you usually use the decorator pattern on non-static classes as a way of decorating the class as a whole, rather than just adding code before/after a single static method. That'll quickly get very cluttered unless you're very careful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377109829.8805630207061767578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93445</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>saskuach@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>38.100.128.26</wp:comment_author_IP>
			<wp:comment_date>2013-08-21 15:34:22</wp:comment_date>
			<wp:comment_date_gmt>2013-08-21 13:34:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark you said "Sure, if we just need to add functionality either before or after the old method, we can create a new class and call the old one inside of it – but that’s just gross."

Why is this gross? Isn't that the decorator pattern? Yes, it's more work, but some would say it's ultimately less fragile for that same reason.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377092062.1515738964080810546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Implementing Imperative Security Declaratively Using PostSharp</title>
		<link>http://improve.dk/implementing-imperative-security-declaratively-using-postsharp/</link>
		<pubDate>Sat, 01 Nov 2008 03:44:43 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2008/11/01/implementing-imperative-security-declaratively-using-postsharp.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>At a recent TechTalk I talked about code access security and how to perform declarative and imperative security demands &amp; requests. There's no doubt declarative security checking is nicer than imperative checking, but not everything can be done declaratively.</p>

<p>Say we have the following method:</p>

<pre lang="csharp">static void writeFile(string filePath)
{
	File.WriteAllText("test", filePath);
}</pre>

<p>We want to make sure we have permission to write to the filepath. Declaratively, we can request (SecurityAction.RequestMinimum) for an unrestricted FileIOPermission which would ensure that we had write access. But requesting unrestricted IO access is way overkill, since we only need access to select paths.</p>

<p>I got the question, why we could not perform that security check declaratively? As all declarative security checks are done at JIT and not at runtime, we simply do not have any knowledge of the filePath parameter value, and thus we can't require permission for those specific paths. The only way we can demand permission for just the paths we need, is to do an imperative permission demand like so:</p>

<pre lang="csharp">static void writeFile(string filePath)
{
	var perm = new FileIOPermission(FileIOPermissionAccess.Write, filePath);
	perm.Demand();

	File.WriteAllText("test", filePath);
}</pre>

<p>This however, clutters up our writeFile implementation as we now dedicate 2/3 lines for security checking... If only we could do this declaratively.</p>

<p><a href="http://www.postsharp.org/about/">PostSharp Laos</a> is a free open source <a href="http://en.wikipedia.org/wiki/Aspect-oriented_programming">AOP</a> framework for .NET. Using PostSharp, we can define our own custom attributes that define proxy methods that will be invoked at runtime, instead of the actual method they decorate. Thus, we are able to define an imperative security check in our custom attribute, which will run before our actual method. I'll jump right into it and present such an attribute:</p>

<pre lang="csharp" escaped="true">// We need to make our attributes serializable:
// http://doc.postsharp.org/1.0/index.html#http://doc.postsharp.org/1.0/UserGuide/Laos/Lifetime.html
[Serializable]
public class FilePathPermissionAttribute : OnMethodInvocationAspect
{
	private readonly string parameterName;
	private readonly FileIOPermissionAccess permissionAccess;
	private int parameterIndex = -1;

	// In the constructor, we take in the required permission access (write, read, etc) as well as
	// the parameter name that should be used for filepath input
	public FilePathPermissionAttribute(FileIOPermissionAccess permissionAccess, string parameterName)
	{
		this.parameterName = parameterName;
		this.permissionAccess = permissionAccess;
	}

	// This method is run at compiletime, and it's only run once - therefore performance is no issue.
	// We use this to find the index of the requested parameter in the list of parameters.
	public override void CompileTimeInitialize(MethodBase method)
	{
		ParameterInfo[] parameters = method.GetParameters();

		for (int i = 0; i &lt; parameters.Length; i++)
			if (parameters[i].Name.Equals(parameterName, StringComparison.InvariantCulture))
				parameterIndex = i;

		if (parameterIndex == -1)
			throw new Exception("Unknown parameter: " + parameterName);
	}

	// This method is run when our method is invoked, instead of our actual method. That means this method
	// becomes a proxy for our real method implementation.
	public override void OnInvocation(MethodInvocationEventArgs eventArgs)
	{
		// Demand the IOPermission to the requested file path
		var perm = new FileIOPermission(permissionAccess, eventArgs.GetArgumentArray()[parameterIndex].ToString());
		perm.Demand();

		// If the permission demand above didn't explode, we are now free to invoke the real method.
		// Calling .Proceed() automatically executes the real method, passing all parameters along.
		eventArgs.Proceed();
	}
}</pre>

<p>In this attribute, we take two parameters, the FileIOPermissionAccess that is required, as well as the name of the parameter containing the file path we should demand permission for. The CompileTimeInitialize method is actually run at compile time - it will look through the list of parameters the method receives, and find the index of the parameter (by its name) and store it for later use. The stored values will be serialized in binary format, thus the need for making the class Serializable. If the parameter name is not found, we throw an exception. It's important to note that this exception will be thrown at compile time, not at runtime. Thus there's nothing dangerous in specyfying the parameter by its name (in string format) as we still have full compile time checking. Finally, the OnInvocation method is run when the decorated method is invoked. It'll do the imperative security check and proceed with the original method call.</p>

<p>Using our FilePathPermission attribute, we can now rewrite our writeFile method as:</p>

<pre lang="csharp">[FilePathPermission(FileIOPermissionAccess.Write, "filePath")]
static void writeFile(string filePath)
{
	Console.WriteLine("Let's pretend we just successfully wrote a file to: " + filePath);
}</pre>

<p>And there we go, we've now abstracted the security plumbing code out of our method implementation, while still doing an imperative security demand at runtime. In the same way, we can implement logging, exception handling, parameter sanitation, validation and so forth.</p>

<p>So what happens behind the scenes? The state we saved at compile time is embedded as a resource:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/11/laos1_2.jpg"><img class="alignnone size-full wp-image-1960" alt="laos1_2" src="http://improve.dk/wp-content/uploads/2008/11/laos1_2.jpg" width="519" height="308" /></a></div></div>

<p>PostSharp also includes a special class it uses to keep track of the decorated methods, aspect state and so forth:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2008/11/laos2_2.jpg"><img class="alignnone size-full wp-image-1961" alt="laos2_2" src="http://improve.dk/wp-content/uploads/2008/11/laos2_2.jpg" width="612" height="632" /></a></div></div>

<p>Let's compare the complete initial code:</p>

<pre lang="csharp">public class Program
{
	static void Main(string[] args)
	{
		// This could be any kind of user input
		string filePath = @"C:test.txt";

		try
		{
			// We'll simulate that our assembly does not have FileIOPermission by denying it
			var perm = new FileIOPermission(PermissionState.Unrestricted);
			perm.Deny();

			// Now let's simulate that we need to write a file to the user provided path
			writeFile(filePath);
		}
		catch (SecurityException ex)
		{
			Console.WriteLine(ex);
		}
		finally
		{
			// Always, always, always remember to revert your stack walk modifiers
			CodeAccessPermission.RevertDeny();
		}

		// So we keep the console window open
		Console.Read();
	}

	[FilePathPermission(FileIOPermissionAccess.Write, "filePath")]
	static void writeFile(string filePath)
	{
		Console.WriteLine("Let's pretend we just successfully wrote a file to: " + filePath);
	}
}</pre>

<p>With the reflected code after PostSharp has done its magic:</p>

<pre lang="csharp">public class Program
{
	// Methods
	[CompilerGenerated]
	static Program()
	{
		if (!~PostSharp~Laos~Implementation.initialized)
			LaosNotInitializedException.Throw();

		~PostSharp~Laos~Implementation.~targetMethod~1 = methodof(Program.writeFile);
		~PostSharp~Laos~Implementation.FilePathPermissionAttribute~1.RuntimeInitialize(~PostSharp~Laos~Implementation.~targetMethod~1);
	}

	private static void ~writeFile(string filePath)
	{
		Console.WriteLine("Let's pretend we just successfully wrote a file to: " + filePath);
	}

	private static void Main(string[] args)
	{
		string filePath = @"C:test.txt";

		try
		{
			try
			{
				FileIOPermission perm = new FileIOPermission(PermissionState.Unrestricted);
				perm.Deny();

				writeFile(filePath);
			}
			catch (SecurityException ex)
			{
				Console.WriteLine(ex);
			}
		}
		finally
		{
			CodeAccessPermission.RevertDeny();
		}

		Console.Read();
	}

	[DebuggerNonUserCode, CompilerGenerated]
	private static void writeFile(string filePath)
	{
		Delegate delegateInstance = new ~PostSharp~Laos~Implementation.~delegate~0(Program.~writeFile);
		object[] arguments = new object[] { filePath };
		MethodInvocationEventArgs eventArgs = new MethodInvocationEventArgs(delegateInstance, arguments);
		~PostSharp~Laos~Implementation.FilePathPermissionAttribute~1.OnInvocation(eventArgs);
	}
}</pre>

<p>Note that these are debug builds, but the code modifications are the same in both release and debug mode. The main method is unaffected. A static initializer has been added which takes care of PostSharp's intialization, obtaining pointers to the proxy methods - of which there is only one in this example. Finally, the writeFile method has been renamed to ~writeFile (otherwise unmodified), and a new writeFile method has been added. The new writeFile method, generated by PostSharp, invokes our FilePathPermissionAttributes OnInvocation method, passing in an MethodInvocationEventArgs parameter containing the parameter values.</p>

<p>While PostSharp does make a lot of things happen automagically at the compile stage, the effects are rather easy to get a comprehension of. Also, since PostSharp is completely open source and <a href="http://www.postsharp.org/about/documentation/">very well documented</a>, you can always pinpoint exactly what happens and why it happens.</p>

<p>What about performance? There's definitely a performance hit when using PostSharp. The build may be longer since PostSharp is invoked as part of the build process, but in my experience this is a rather quick process. As for runtime performance penalties, I constructed the following short app to test the performance hit by executing it both with and without the LaosTest attribute (using <a href="http://www.improve.dk/blog/2008/04/16/profiling-code-the-easy-way">CodeProfiler</a> for profiling):</p>

<pre lang="csharp" escaped="true">[Serializable]
public class LaosTestAttribute : OnMethodInvocationAspect
{
	public override void OnInvocation(MethodInvocationEventArgs eventArgs)
	{
		eventArgs.Proceed();
	}
}

class Program
{
	static int i = 0;

	static void Main(string[] args)
	{
		TimeSpan ts = CodeProfiler.ProfileAction(() =&gt;
		{
			for (int n = 0; n &lt; 1000000; n++)
				test();
		}, 5);

		Console.WriteLine(ts.ToString());
		Console.Read();
	}

	[LaosTest]
	static void test()
	{
		i++;
	}
}</pre>

<p>Profiling 10^6 calls to test() over five iterations yielded a total runtime of 13.879ms when using the PostSharp attribute - in release mode, excluding the first call. Running the same test, without the attribute, takes just 23ms. That's 600 times quicker than when using PostSharp. But, still, that's just 0.0027ms per call when using PostSharp (and nearly unmeasurable when not). Given that in all real life situations, the actual business logic will be much much slower, this performance penalty has almost no effect. Usually, we're much better off sacrificing these minute amounts of speed over much better manageability of our source code.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1295</wp:post_id>
		<wp:post_date>2008-11-01 03:44:43</wp:post_date>
		<wp:post_date_gmt>2008-11-01 03:44:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>implementing-imperative-security-declaratively-using-postsharp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="postsharp"><![CDATA[PostSharp]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Implementing Imperative Security Declaratively Using PostSharp]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechTalk: Optimizing SQL Server 2005</title>
		<link>http://improve.dk/techtalk-optimizing-sql-server-2005/</link>
		<pubDate>Thu, 22 Jan 2009 20:58:19 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/01/22/techtalk-optimizing-sql-server-2005.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I held a TechTalk on optimizing SQL Server 2005 on the 21st of January. I think it went well so I'm looking forward to the evaluations - please fill them out :)</p>

<p>I have put up the slides, code and test database backup for you to download.</p>

<p><a href="http://improve.dk/wp-content/uploads/2009/01/Optimizing_SQL_Server_2005.zip">Optimizing_SQL_Server_2005.zip - Slides + code</a><br />
<a href="http://improve.dk/wp-content/uploads/2009/01/Test.zip">Test.zip - DB Backup</a></p>

<p>Note that the slides are in <b>Danish</b> - sorry non-danes.</p>

<p>As I mentioned at the end of the TechTalk, I barely made it through all of my slides, and that's even after I sacrificed a lot of the topics &amp; depth I wanted to talk about. Depending on the evaluations I get back, I'll probably be announcing a part 2 on this topic later on.</p>

<p>The tool I used to generate test data was Red Gate's <a href="http://www.red-gate.com/products/SQL_Data_Generator/index.htm">SQL Data Generator</a>. It's a great tool for quickly making a large set of test data so you can analyze the actual benefits of a properly indexed table.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1296</wp:post_id>
		<wp:post_date>2009-01-22 21:58:19</wp:post_date>
		<wp:post_date_gmt>2009-01-22 20:58:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>techtalk-optimizing-sql-server-2005</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Utilizing Transactional NTFS Through .NET</title>
		<link>http://improve.dk/utilizing-transactional-ntfs-through-dotnet/</link>
		<pubDate>Sun, 15 Feb 2009 22:31:41 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/02/14/utilizing-transactional-ntfs-through-net.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>We're used to using transactions when dealing with the database layer. Transactions ensure we can perform multiple queries as one atomic event, either they all succed or they all fail, obeying the rules of <a href="http://en.wikipedia.org/wiki/ACID">ACIDity</a>. Until Vista, performing transactional file operations haven't been possible.</p>

<p>Transaction NTFS (or TxF) is available from Vista and onwards, which means Server 2008 is also capable. XP and Server 2003 do not support TxF and there are currently no plans of adding TxF support in systems previous to Vista.</p>

<p>So what is the benefit of using TxF? The benefit is that we can now perform ACID operations in the file level, meaning we can perform several file operations (whether that be moves, deletions, creations etc) and make sure all of them are committed atomically. It also provides isolation from/for other processes, so whenever a transaction has been started, we will always see a consistent view of a view until we have committed the transaction, even though it has been modified otherwhere. Surendra Verma has a great video on Channel 9 <a href="http://channel9.msdn.com/shows/Going+Deep/Surendra-Verma-Vista-Transactional-File-System/">explaining TxF</a>. Jon Cargille and Christian Allred has another video on Channel 9 that goes even more in-depth on the <a href="http://channel9.msdn.com/shows/Going+Deep/Transactional-Vista-Kernel-Transaction-Manager-and-friends-TxF-TxR/">inner workings on TxF and the Vista KTM</a>.</p>

<p>Why hasn't TxF gotten more momentum? Most likely because it's not part of the BCL! To utilize TxF we have to call Win32 API functions, which is a big step away from lazily utilizing database transactions by just wrapping our code inside of a <a href="http://msdn.microsoft.com/en-us/library/system.transactions.transactionscope.aspx">TransactionScope</a>.</p>

<p>Using TxF is actually quite simple once we've made a couple of necessary managed wrapper classes. Let me present you to KtmTransactionHandle:</p>

<pre lang="csharp" escaped="true">using System;
using System.ComponentModel;
using System.Runtime.InteropServices;
using System.Transactions;
using Microsoft.Win32.SafeHandles;

namespace TxFTest
{
	public class KtmTransactionHandle : SafeHandleZeroOrMinusOneIsInvalid
	{
		/// &lt;summary&gt;
		/// http://msdn.microsoft.com/en-us/library/aa344210(VS.85).aspx
		/// &lt;/summary&gt;
		[ComImport]
		[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
		[Guid("79427A2B-F895-40e0-BE79-B57DC82ED231")]
		private interface IKernelTransaction
		{
			void GetHandle([Out] out IntPtr handle);
		}

		/// &lt;summary&gt;
		/// http://msdn.microsoft.com/en-us/library/ms724211.aspx
		/// &lt;/summary&gt;
		[DllImport("kernel32")]
		private static extern bool CloseHandle(IntPtr handle);

		private KtmTransactionHandle(IntPtr handle): base(true)
		{
			this.handle = handle;
		}

		/// &lt;summary&gt;
		/// http://msdn.microsoft.com/en-us/library/cc303707.aspx
		/// &lt;/summary&gt;
		public static KtmTransactionHandle CreateKtmTransactionHandle()
		{
			if (Transaction.Current == null)
				throw new InvalidOperationException("Cannot create a KTM handle without Transaction.Current");

			return KtmTransactionHandle.CreateKtmTransactionHandle(Transaction.Current);
		}

		/// &lt;summary&gt;
		/// http://msdn.microsoft.com/en-us/library/cc303707.aspx
		/// &lt;/summary&gt;
		public static KtmTransactionHandle CreateKtmTransactionHandle(Transaction managedTransaction)
		{
			IKernelTransaction tx = (IKernelTransaction)TransactionInterop.GetDtcTransaction(Transaction.Current);
			IntPtr txHandle;
			tx.GetHandle(out txHandle);

			if (txHandle == IntPtr.Zero)
				throw new Win32Exception("Could not get KTM transaction handle.");

			return new KtmTransactionHandle(txHandle);
		}

		protected override bool ReleaseHandle()
		{
			return CloseHandle(handle);
		}
	}
}</pre>

<p>The KtmTransactionHandle represents a specific transaction going on inside of the <a href="http://en.wikipedia.org/wiki/Kernel_Transaction_Manager">KTM</a>. In the code, there's references for further reading of the specific fucntions, most of them stemming from MSDN. Note that the CreateTransactionHandle method assumes there's already a current transaction, if there is not, an exception will be thrown.</p>

<p>The second class we need is called TransactedFile. I basically made this to be used as a direct replacement of System.IO.File. It does not include all of the functionality of System.IO.File, but it does have the two most important ones, Open and Delete - most of the other functions are just wrappers of these two, so they are easily appended later on.</p>

<pre lang="csharp" escaped="true">using System;
using System.ComponentModel;
using System.IO;
using System.Runtime.InteropServices;
using Microsoft.Win32.SafeHandles;

namespace TxFTest
{
	public class TransactedFile
	{
		/// &lt;summary&gt;
		/// http://msdn.microsoft.com/en-us/library/aa363916(VS.85).aspx
		/// &lt;/summary&gt;
		[DllImport("kernel32", SetLastError=true)]
		private static extern bool DeleteFileTransactedW(
			[MarshalAs(UnmanagedType.LPWStr)]string file,
			KtmTransactionHandle transaction);

		/// &lt;summary&gt;
		/// http://msdn.microsoft.com/en-us/library/aa363859(VS.85).aspx
		/// &lt;/summary&gt;
		[DllImport("kernel32", SetLastError=true)]
		private static extern SafeFileHandle CreateFileTransactedW(
			[MarshalAs(UnmanagedType.LPWStr)]string lpFileName,
			NativeFileAccess dwDesiredAccess,
			NativeFileShare dwShareMode,
			IntPtr lpSecurityAttributes,
			NativeFileMode dwCreationDisposition,
			int dwFlagsAndAttributes,
			IntPtr hTemplateFile,
			KtmTransactionHandle hTransaction,
			IntPtr pusMiniVersion,
			IntPtr pExtendedParameter);

		[Flags]
		private enum NativeFileShare
		{
			FILE_SHARE_NONE = 0x00,
			FILE_SHARE_READ = 0x01,
			FILE_SHARE_WRITE = 0x02,
			FILE_SHARE_DELETE = 0x04
		}

		[Flags]
		private enum NativeFileMode
		{
			CREATE_NEW = 1,
			CREATE_ALWAYS = 2,
			CREATE_EXISTING = 3,
			OPEN_ALWAYS = 4,
			TRUNCATE_EXISTING = 5
		}

		[Flags]
		private enum NativeFileAccess
		{
			GENERIC_READ = unchecked((int)0x80000000),
			GENERIC_WRITE = 0x40000000
		}

		/// &lt;summary&gt;
		/// Transaction aware implementation of System.IO.File.Open
		/// &lt;/summary&gt;
		/// &lt;param name="path"&gt;&lt;/param&gt;
		/// &lt;param name="mode"&gt;&lt;/param&gt;
		/// &lt;param name="access"&gt;&lt;/param&gt;
		/// &lt;param name="share"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static FileStream Open(string path, FileMode mode, FileAccess access, FileShare share)
		{
			using (KtmTransactionHandle ktmHandle = KtmTransactionHandle.CreateKtmTransactionHandle())
			{
				SafeFileHandle fileHandle = CreateFileTransactedW(
					path,
					TranslateFileAccess(access),
					TranslateFileShare(share),
					IntPtr.Zero,
					TranslateFileMode(mode),
					0,
					IntPtr.Zero,
					ktmHandle,
					IntPtr.Zero,
					IntPtr.Zero);

				if (fileHandle.IsInvalid)
					throw new Win32Exception(Marshal.GetLastWin32Error());

				return new FileStream(fileHandle, access);
			}
		}

		/// &lt;summary&gt;
		/// Reads all text from a file as part of a transaction
		/// &lt;/summary&gt;
		/// &lt;param name="path"&gt;&lt;/param&gt;
		/// &lt;param name="contents"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		public static string ReadAllText(string path)
		{
			using (StreamReader reader = new StreamReader(Open(path, FileMode.Open, FileAccess.Read, FileShare.Read)))
			{
				return reader.ReadToEnd();
			}
		}

		/// &lt;summary&gt;
		/// Writes text to a file as part of a transaction
		/// &lt;/summary&gt;
		/// &lt;param name="path"&gt;&lt;/param&gt;
		/// &lt;param name="contents"&gt;&lt;/param&gt;
		public static void WriteAllText(string path, string contents)
		{
			using (StreamWriter writer = new StreamWriter(Open(path, FileMode.OpenOrCreate, FileAccess.Write, FileShare.None)))
			{
				writer.Write(contents);
			}
		}

		/// &lt;summary&gt;
		/// Deletes a file as part of a transaction
		/// &lt;/summary&gt;
		/// &lt;param name="file"&gt;&lt;/param&gt;
		public static void Delete(string file)
		{
			using (KtmTransactionHandle ktmHandle = KtmTransactionHandle.CreateKtmTransactionHandle())
			{
				if (!DeleteFileTransactedW(file, ktmHandle))
					throw new Exception("Unable to perform transacted file delete.");
			}
		}

		/// &lt;summary&gt;
		/// Managed -&gt; Native mapping
		/// &lt;/summary&gt;
		/// &lt;param name="mode"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		private static NativeFileMode TranslateFileMode(FileMode mode)
		{
			if (mode != FileMode.Append)
				return (NativeFileMode)(int)mode;
			else
				return (NativeFileMode)(int)FileMode.OpenOrCreate;
		}

		/// &lt;summary&gt;
		/// Managed -&gt; Native mapping
		/// &lt;/summary&gt;
		/// &lt;param name="access"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		private static NativeFileAccess TranslateFileAccess(FileAccess access)
		{
			if (access == FileAccess.Read)
				return NativeFileAccess.GENERIC_READ;
			else
				return NativeFileAccess.GENERIC_WRITE;
		}

		/// &lt;summary&gt;
		/// Direct Managed -&gt; Native mapping
		/// &lt;/summary&gt;
		/// &lt;param name="share"&gt;&lt;/param&gt;
		/// &lt;returns&gt;&lt;/returns&gt;
		private static NativeFileShare TranslateFileShare(FileShare share)
		{
			return (NativeFileShare)(int)share;
		}
	}
}</pre>

<p>The primary two API functions used are <a href="http://msdn.microsoft.com/en-us/library/aa363916(VS.85).aspx">DeleteFileTransactedW</a> and <a href="http://msdn.microsoft.com/en-us/library/aa363859(VS.85).aspx">CreateFileTransactedW</a>. Note that these functions are the 'W' versions, accepting unicode paths for the files. To send the strings as null terminated unicode, we have to add the MarshalAs(UnmanagedType.LPWstr) attribute to the 'path' parameter.</p>

<p>The BCL FileMode, FileShare and FileAccess all have native counterparts. The constant values are in the Microsoft.Win32.NativeMethods class, but unfortunately it's internal so we'll have to make our own. There are three helper functions for translating between the managed and native versions of FileMode, FileShare and FileAccess.</p>

<p>The Open and Delete methods both try to obtain a KTM transaction handle as their first action. If a current transaction does not exist, they will throw an exception since KtmTransactionHandle assumes one exists. We could modify these to either perform a transacted operation or non transacted, depending on the availability of a current transaction, but in this case we're explicitly assuming a transaction will be available.</p>

<p>Next up the Delete operation will attempt to delete the file using the DeleteFileTransactedW function, passing in the KTM transaction handle. The Open function first tries to obtain a <a href="http://msdn.microsoft.com/en-us/library/microsoft.win32.safehandles.safefilehandle.aspx">SafeFileHandle</a> for the file, which is basically a wrapper class around a normal file handle. Using the SafeFileHandle, we can create a new FileStream, passing in the file handle as a parameter.</p>

<p>Using these two classes, we can now perform transactional file operations:</p>

<pre lang="csharp" escaped="true">using System;
using System.Data.SqlClient;
using System.Transactions;

namespace TxFTest
{
	class Program
	{
		static void Main(string[] args)
		{
			try
			{
				using (var ts = new TransactionScope())
				{
					TransactedFile.WriteAllText("test.txt", "hello world");
				}

				// At this point test.txt does not exist since we didn't ts.complete()

				using (var ts = new TransactionScope())
				{
					TransactedFile.WriteAllText("test.txt", "hello world");

					// The transaction hasn't been committed, so the file is still not logically available outisde
					// of the transaction, but it is available inside of the transaction
					Console.WriteLine(TransactedFile.ReadAllText("test.txt"));

					// After the transaction is committed, the file is available outside of the transaction
					ts.Complete();
				}

				// Since the TransactionScope works for both database and files, we can combine the two. This is great for ensuring
				// integrity when we store database related files
				using (var ts = new TransactionScope())
				{
					SqlCommand cmd = new SqlCommand("INSERT INTO SomeTable (A, B) VALUES ('a', 'b'); SELECT @@IDENTITY");
					int insertedID = Convert.ToInt32(cmd.ExecuteScalar());

					TransactedFile.WriteAllText(insertedID + ".txt", "Blob file related to inserted database row");

					ts.Complete();
				}
			}
			catch (Exception ex)
			{
				Console.WriteLine(ex);
			}

			Console.Write("Done");
			Console.Read();
		}
	}
}</pre>

<p>Note that the KTM transaction is able to participate in a distributed transaction using the MS DTC service. That means we can both perform database and file operations inside of a transaction scope and have all of them performed ACIDically.</p>

<p>Using transactions comes at a cost - performance. Since the system has to guarantee the ACID properties are respected, there will be administrative overhead as well as the possibility of extra disk activity. Whenever we modify an existing file, the original file is left untouched until the new file has been written to disk, otherwise we might risk destryoying the original file if the computer were to crash halfways through a write procedure.</p>

<p>There are of course <a href="http://msdn.microsoft.com/en-us/library/aa365738(VS.85).aspx">limitations in TxF</a>, as there are in all good things. Most notably it'll only work for local volumes, you can't use TxF on file shares as it's not supported by the CIFS/SMB protocols.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1297</wp:post_id>
		<wp:post_date>2009-02-15 23:31:41</wp:post_date>
		<wp:post_date_gmt>2009-02-15 22:31:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>utilizing-transactional-ntfs-through-dotnet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="ntfs"><![CDATA[NTFS]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="txf"><![CDATA[TxF]]></category>
		<category domain="post_tag" nicename="win32"><![CDATA[Win32]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[utilizing-transactional-ntfs-through-net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Utilizing Transactional NTFS Through .NET]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>913</wp:comment_id>
			<wp:comment_author><![CDATA[Peter]]></wp:comment_author>
			<wp:comment_author_email>decaf@alphaleonis.com</wp:comment_author_email>
			<wp:comment_author_url>http://alphafs.codeplex.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-11 17:57:32</wp:comment_date>
			<wp:comment_date_gmt>2009-04-11 17:57:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a very nice introduction to transactional NTFS. Thank you for helping to spread this knowledge.<br /><br />I would also like to take this opportunity to mention the open source library AlphaFS which contains interop wrappers for transactional NTFS along with many more filesystem operations currently unsupported directly in .NET. All provided within interfaces very similar to those of System.IO.<br /><br />The library can be freely downloaded from <a rel="nofollow external" href="http://alphafs.codeplex.com" title="http://alphafs.codeplex.com" rel="nofollow">http://alphafs.codeplex.com</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Resource URLs and Their Effect on Client Side Caching</title>
		<link>http://improve.dk/resource-urls-and-their-effect-on-client-side-caching/</link>
		<pubDate>Sun, 08 Mar 2009 03:57:56 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/03/08/resource-urls-and-their-effect-on-client-side-caching.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the best way to improve performance of any website is to reduce the load from clients by allowing them to cache resources. There are various ways to ensure we utilize client side caching to the fullest extent, an often overlooked parameter however, is the actual URL for the resource we want to cache.</p>

<h2>The traditional methods</h2>

<p>Basically client side caching comes down to three different parameters, the cache policy, the expiration dates as well as the last-modified / etag of the resource.</p>

<p>Through the no-cache policy we can completely disallow all caching of the resource, in which case the resource URL does not matter at all. For this blog entry, I'll assume we allow caching, just as I'll assume we have control over the HTML rendered that references the resource.</p>

<p>When caching is allowed, the expiration date defines whether the client can use a locally stored version or whether it has to make a request for the server. Before the browser makes a request to the server, it'll check if the resource is cached locally. If it is, it will check the expires header of the file - and as long as the expiration date has not been passed, the file will be loaded locally, and no request will be made to the server. Obviously, this is the optimal solution since we completely avoid the overhead of a request to the server - which will help both the client &amp; server performance.</p>

<p>If the expiry date has been passed - or if an expiry date wasn't sent along with the resource when it was cached - the browser will have to make a request to the server. The server can then check whether the resource has been modified since the last-modified header or etag header (provided the server sent these with the resource originally, and thereby enabling the client to send them back) and send either a 304 or a 200 status back.</p>

<h2>URL impact</h2>

<p>So what does the actual resource URL have to do with caching? Let's take Google as an example. On the frontpage of Google there's an ever changing doodle logo, let's for discussions sake say the url is google.com/doodle.jpg. Now, since the image isn't static, we definitely need either to send an expiry header, or if that's not possible, an etag/last-modified header so the client can at least cache the resource data, and only have to make a if-modified-since request to the server.</p>

<p>Why might it not be possible to send an expiry header? Remember that if we specify an expiry date, the client will not even check in with the server for updates to that resource until the resource has expired locally. Thus, if the resource needs to change in the meantime, clients will suddenly show outdated conent. Because of this, if we do not know the schedule for when resources might change, it can be dangerous / inappropriate to send an expiry header.</p>

<p>There's a simple way of avoiding the unknown schedule problem while still allowing the client to fully cache the resource without making if-modified-since requests. Simply change the resource URL. If the doodle url is google.com/doodle.jpg, make the next one google.com/doodle1.jpg, doodle2.jpg etc. The URL will still have to be sent along with the HTML code, so there's no harm in sending a different URL for the new doodle. In this way, the client can be allowed to cache the resource indefinitely - as long as a change in the resource will be saved as a new URL.</p>

<h2>Surrogate vs natural keys in URLs</h2>

<p>Imagine a scenario where we published books on the internet, with any number of related pages. The catch is, the pages may change over time. Maybe the publisher corrected some errors, added an appendix etc. This rules out setting an expiry header on the individual page resources since we have to be sure we always fetch the most recent version.</p>

<p>There are two ways we might store the data in the database. Here's one:</p>

<pre class="plain">
[tblBooks]  
BookID, Name
</pre>

<pre class="plain">
[tblPages]  
BookID, Number, Data
</pre>

<p>In this example, we use the page's natural key, a composite of the BookID and Number columns. The pages of a book will always be numbered 1..n and there can be no two pages with the same number, so we have a unique index. Using this table layout, our resource URLs would probably look like this: /Books/[BookID]/[Number]. This means page 2 of the book with ID 5 will always have the same URL: /Books/5/2. Since the URL is the same, the resource might change (if the page is replaced), and we can't predict when the change will occur (a publisher can do it at any point), we have to rely on last-modified/etags and have the client perform if-modified since requests.</p>

<p>A second way to store the data in the database would be this:</p>

<pre class="plain">
[tblBooks]  
BookID, Name
</pre>

<pre class="plain">
[tblPages]  
PageID, BookID, Number, Data
</pre>

<p>The difference being that we've introduced a surrogate key in the tblPages table: PageID. This allows us to use URLs like this: /Books/[BookID]/[PageID]. While not as user friendly, it allows us to set an indefinite expiry header and thereby allowing the client to avoid server requests completely.</p>

<h2>Adding versions to URLs</h2>

<p>Keeping with the book/pages example, let's add a [LastModified] column to the [tblPages] table:</p>

<pre class="plain">
[tblPages]
BookID, Number, Data, LastModified
</pre>

<p>We still have a natural key, but now we also store the last modification date of the row - this could either be an application updated value or a database timestamp. The idea is to preserve the natural key in the URLs, but add the LastModified value to the URL for no other reason than to generate a new resource URL when it changes. The first URL might be /Books/5/2/?v=2009-03-08_11:25:00, while the updated version of the page will result in a URL like this: /Books/5/2/?v=2009-03-10_07:32:00. The v parameter is not used for anything serverside, but to the client, it's a completely unrelated URL and will thus ignore the previously cached resource. This way we can keep the natural base URL the same while still forcing clients to request the new resource whenever it's changed.</p>

<h2>Recap</h2>

<p>While properly utilizing caching headers itself is an often overlooked issue, it can be further improved by choosing resource URLs wisely. By combining correct caching headers with changing resource URLs, we can effectively allow the client to cache resources entirely clientside for just the right amount of time, resulting in increased performance for both servers and clients. It's no silver bullet as caching strategies will always be very domain specific - make sure you understand your domain and create a caching strategy accordingly.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1298</wp:post_id>
		<wp:post_date>2009-03-08 03:57:56</wp:post_date>
		<wp:post_date_gmt>2009-03-08 03:57:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>resource-urls-and-their-effect-on-client-side-caching</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="caching"><![CDATA[Caching]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="category" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="post_tag" nicename="url"><![CDATA[URL]]></category>
		<category domain="category" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Resource URLs and Their Effect on Client Side Caching]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ANUG Talk: Optimizing SQL Server 2005</title>
		<link>http://improve.dk/anug-talk-optimizing-sql-server-2005/</link>
		<pubDate>Thu, 12 Mar 2009 22:59:38 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/03/11/anug-talk-optimizing-sql-server-2005.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Tonight I held my SQL Server Optimization talk at <a href="http://www.anug.dk/">ANUG</a>. There was an impressive turnout of almost 50 people, and based on the feedback I've received so far, I think it went alright :)</p>

<p>You can download the slides, code and sample database (with sample data) below. Note that slides are in Danish.</p>

<p><a href="http://improve.dk/wp-content/uploads/2009/03/Optimizing_SQL_Server_2005.zip">Optimizing_SQL_Server_2005.zip - Slides + code<br />
</a><a href="http://improve.dk/wp-content/uploads/2009/03/Test.zip">Test.zip - Sample database</a></p>

<p>I'm afraid the query scripts are not in text format, they're only included as images in the slides. I'll probably be presenting some of the topics on my blog over time, where the scripts will also be included.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1299</wp:post_id>
		<wp:post_date>2009-03-12 23:59:38</wp:post_date>
		<wp:post_date_gmt>2009-03-12 22:59:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>anug-talk-optimizing-sql-server-2005</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>915</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Klujeff]]></wp:comment_author>
			<wp:comment_author_email>rkl@ok.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-12 09:45:14</wp:comment_date>
			<wp:comment_date_gmt>2009-03-12 09:45:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you for your talk yesterday, it contained a lot of wonderfull details we can use in our daily work, it was great.<br /><br />I asked you a question regarding extending the database, but didn't remember the exact terminology, wherefore you refused this had any performance costs. For your information I include the details I didn't remember yesterday: <br /><br />I thought about extending the logfile, which uses something called VLF – Virtual Log Files. According to this link: <a rel="nofollow external" href="http://www.sqlskills.com/resources/SQLServerHAChapter9.pdf" title="http://www.sqlskills.com/resources/SQLServerHAChapter9.pdf" rel="nofollow">www.sqlskills.com/.../SQLServerHAChapter9.pdf</a> we should care about the number of VLF, and take care to shring the logfile at each backup (and of course not accept the default increase of 1 MB a time, as you told us).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>916</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-03-12 12:49:46</wp:comment_date>
			<wp:comment_date_gmt>2009-03-12 12:49:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Indeed a too large amount of VLF's may decrease performance. To avoid it from start, we have to plan our log &amp; database auto growth values according to the growth expectations - as they also mention in the article you linked.<br /><br />If you have set your autogrowth size properly - or even better, created a log file with a large enough initial size (so no auto growths will be needed), you should have no problem in regards to VLF's, and will thus not need to shrink your log file after log backups. You would only need to shrink the log file (once) after a log backup in the case you had VLF issues.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Query Optimization - A Case Study</title>
		<link>http://improve.dk/query-optimization-a-case-study/</link>
		<pubDate>Fri, 20 Mar 2009 02:14:39 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/03/20/query-optimization-a-case-study.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday I did an interview with <a href="http://www.publicvoid.dk/">Søren Spelling Lund</a> for <a href="http://www.anug.dk/">ANUG</a> (Aarhus .NET User Group) on SQL Server Optimization, as a followup to my recent talk on that subject. He asked me an interesting question - what is the normal process of determining the need of an optimization, and how to actually do it? This is a case study from today.

<p>The issue started out by one of the sales people telling me the catalogs were loading slowly. Being a limited number of people in a small office, my usual first resolution is to simply ask if anyone in the office are downloading/uploading files, since that'll usually exhaust our rather limited network connection. Unfortunately, that was not the reason. Next step - locate the exact location of the issue. I asked which catalogs specifically were loading slowly, and whether it was all of it loading slowly, just the images or anything else that might narrow down the issue.

<p>The response was quite a bit more precise than I'd hoped for:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-timeout_2.jpg"><img class="alignnone size-full wp-image-2077" alt="sqlio-timeout_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-timeout_2.jpg" width="482" height="61" /></a></div></div>

<p>So it wasn't a matter of things loading slowly... It was a matter of things not loading at all! Funny thing is, during the ANUG interview, Søren asked me how one could detect when optimizations were needed - part of my answer was "When SqlCommands start timing out".

<p>Armed with a precise error message and the location of the error, I detected the exact operation that caused the timeout. It's a simple statistics page, showing the number of page views during the last 7 days - nothing exotic, but yet it failed.

<pre lang="tsql" escaped="true">SELECT
    SUM(TDH.SmallViewCount)
FROM
    tblFEStatsDayHits TDH
INNER JOIN
    tblFEStatsDays TD ON TD.DayID = TDH.DayID
WHERE
    TDH.PaperID = 304275 AND
    DATEDIFF(dd, TD.Day, GETDATE()) &lt; 7</pre>

<p>The query is rather basic, it tries to sum up the SmallViewCount (containing the number of views of a single page) from the table tblFEStatsDayHits. This table has a reference to the helper table tblFEStatsDays, containing a single row per day. Thus tblFEStatsDays is a very small table which is only used for getting the actual day this event occurred on. We filter on a PaperID (which is basically a specific catalog) as well as on DATEDIFF(dd, TD.Day, GETDATE()) being below 7 - making sure we only consider data for the last 7 days. So given a rather simple query, how can this be so bad?

<p>Take a look at the IO statistics:

<pre class="plain">Table 'tblFEStatsDayHits'. Scan count 5, logical reads 484959, physical reads 3, read-ahead reads 304063, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'tblFEStatsDays'. Scan count 5, logical reads 10, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.</pre>

<p>This confirms that tblFEStatsDays isn't of interest to us since it only had 10 page reads. tblFEStatsDayHits on the other hand had 484959 page reads. That's around 3,7 (484959 * 8KB per page) gigs of data being read. Though it's logical reads (that is, from memory), that's still an insane amount, especially since they're most likely physical reads the first time they're read. The database server is running on a RAID1 15k SAS mirror, giving us at most about 150MB/sec of IO performance - ignoring any other active tasks. That's about 25 seconds of uninterrupted IO read time - that's bound to blow up at some point.

<p>Let's look at the execution plan:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan1_2.jpg"><img class="alignnone size-full wp-image-2078" alt="sqlio-plan1_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan1_2.jpg" width="1024" height="114" /></a></div></div>

<p>This pretty much confirms the issue lies in the Clustered Index Scan - which is more or less the last operation you want to see in an exceution plan. It represents a complete read of the whole clustered index - an operation that scales rather linearly with the amount of data you have in your tables. So how big is this table?

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-storage_2.jpg"><img class="alignnone size-full wp-image-2079" alt="sqlio-storage_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-storage_2.jpg" width="494" height="87" /></a></div></div>

<p>It's got a bit short of 60M rows, 3,7 gigs of data (matching up to our 3,7 gig read earlier), and an additional ~3 gigs of extra index data. Clearly, if this operation is to be fast, we need to use indexes wisely so we avoid reading all of this data.

<p>If we look at the execution plan in SQL Server Management Studio 2008 (won't work in SMS2005), it'll actually give us a recommendation for a specific index that it could've used:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-missing-index_2.jpg"><img class="alignnone size-full wp-image-2088" alt="sqlio-missing-index_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-missing-index_2.jpg" width="1024" height="68" /></a></div></div>

<pre lang="tsql" escaped="true">CREATE NONCLUSTERED INDEX
    [&lt;Name of Missing Index, sysname,&gt;]
ON
    [dbo].[tblFEStatsDayHits] ([PaperID])
INCLUDE
    ([DayID],[SmallViewCount])</pre>

<p>That specific index would allow us to filter on the PaperID while including the DayID and SmallViewCount columns at the leaf level. The PaperID column has a rather high cardinality, so by filtering on that, we've already reduced the data amount considerably. SMS predicts adding this index will optimize the query by about 99% - sounds good, let's try:

<pre lang="tsql" escaped="true">CREATE NONCLUSTERED INDEX [NC_PaperID] ON [dbo].[tblFEStatsDayHits] 
(
    [PaperID] ASC
)
INCLUDE
(
    [DayID],
    [SmallViewCount]
)</pre>

<p>After adding the index and rerunning the query, these are the new IO statistiscs:

<pre class="plain">Table 'tblFEStatsDayHits'. Scan count 5, logical reads 1770, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'tblFEStatsDays'. Scan count 5, logical reads 10, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.</pre>
We're down from 484959 to only 1770 page reads, that's an optimization of 99,6%, not too shabby. Let's look at the new execution plan:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan2_2.jpg"><img class="alignnone size-full wp-image-2080" alt="sqlio-plan2_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan2_2.jpg" width="1024" height="116" /></a></div></div>

<p>Comparing the two plans reveals that we've now replaced that nasty clustered index scan with an index seek - one of the most efficient operations that exist. Now most of the time is spent in the parallelism/hash match operations. These operations make individual sums of the SmallViewCount column for all rows with the same DayID value. It's running on multiple threads as indicated by the presence of a parallelism operator.

<p>Now, we're still spending quite a lot of time reading in all of the rows for that specific PaperID and grouping them together by DayID. If a catalog has been having visitors for a year, that's basically 358 extra days of data we're reading in for no reason. How about if we change the query to this semantically identical one (given that it's the 12th of March 2009, 09:52 AM):

<pre lang="tsql" escaped="true">SELECT
    SUM(TDH.SmallViewCount)
FROM
    tblFEStatsDayHits TDH
INNER JOIN
    tblFEStatsDays TD ON TD.DayID = TDH.DayID
WHERE
    TDH.PaperID = 304275 AND
    TD.Day &gt; '2009-03-12 09:52:00'</pre>

<p>What does this change give us? The "DATEDIFF(dd, TD.Day, GETDATE()) &lt; 7" predicate requires SQL Server to look at each row, performing the DATEDIFF operation to determine whether it should be part of hte final sum aggregate. Doing it this way severely limits the usability of our indexes since we can no longer make an index seek on the Day column. If we from the application instead take the current date and subtract 7 days, that's basically the cutoff point that we're interested in. Thus we've now changed the predicate to only select columns with a Day value higher than the current date minus 7 days.

<p>Take a look at the resulting execution plan:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan3_2.jpg"><img class="alignnone size-full wp-image-2081" alt="sqlio-plan3_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan3_2.jpg" width="1024" height="248" /></a></div></div>

<p>It's dramatically simpler. One important point is that if we look at the index seek on tblFEStatsDayHits, it's now using the index called NC_DayID_PaperID! This is not the one we made just before, this is another lingering index on the table. Let's look at it's definition:

<pre lang="tsql" escaped="true">CREATE NONCLUSTERED INDEX [NC_DayID_PaperID] ON [dbo].[tblFEStatsDayHits] 
(
    [DayID] ASC,
    [PaperID] ASC
)</pre>

<p>Why is it suddenly using this index? To understand, we first have to know what's actually happening. The whole process has been turned upside down compared to the last plan. In the last plan, we first read in the actual data filtered by PaperID, and then we filtered on the relevant days. Now we're first finding the relevant DayIDs by joining the tblFEStatsDays table with the NC_DayID_PaperID index, and for each relevant row, we perform a bookmark lookup in the tblFEStatsDayHits table. So why is it not using the NC_PaperID index we made just before? NC_PaperID had a single index column and two included ones (and the implicitly contained clustered key, which is irrelevant as it's also included in the NC_DayID_PaperID index). Thus, NC_PaperID has three int columns, totalling at 12 bytes of index data per row. The NC_DayID_PaperID only has two keys - PaperID and DayID, totalling at 8 bytes per row. If we add the implicit 4 bytes for the clustered key, thats 16 and 12 bytes per row. With a page size of 8060 bytes of index data, that's either 503 rows per page or 671 rows per page. That's about 30% IO saved by using the smaller index. Let's take a look at the IO statistics for this plan:

<pre class="plain">Table 'tblFEStatsDayHits'. Scan count 7, logical reads 96712, physical reads 77, read-ahead reads 73, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'tblFEStatsDays'. Scan count 1, logical reads 2, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.</pre>

<p>Now what happened here? We went from 1770 page reads to just short of 100K reads! If we hover our mouse on the nested loops step of the query plan, we can see there's about 23,5K rows being returned:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-bookmark-io_2.jpg"><img class="alignnone size-full wp-image-2082" alt="sqlio-bookmark-io_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-bookmark-io_2.jpg" width="318" height="432" /></a></div></div>

<p>Thus, for each of those 23,5K rows, we have to perform a bookmark lookup in the tblFEStatsDayHits table, that's about 4 page lookups per resulting row (since the predicate at this point is a DayID, there may be several relevant rows in the tblFEStatsDayHits table, thus the large amount of page reads). The only reason that this is still reasonably fast is that all the pages are already present in memory, so this is a pure CPU operation. But having 100K pages (100000 * 8KB = ~780MB) of data in memory just for this purpose is definitely not optimal! Granted, there's most likely a lot of reuse in these pages, so the sum may not be 780MB's (we'd have to count the number of unique pages that were needed for that), but it's bad nonetheless.

<p>If we hover the mouse on the bookmark lookup operator, we get some extra information:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-bookmark-output_2.jpg"><img class="alignnone size-full wp-image-2083" alt="sqlio-bookmark-output_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-bookmark-output_2.jpg" width="327" height="549" /></a></div></div>

<p>If we look at the output section, we see that the only column that's actually being returned from these bookmark lookups is the SmallViewCount column. Given that we're already using the NC_DayID_PaperID index, how about we add the SmallViewCount column as an included column in that index:

<pre lang="tsql" escaped="true">CREATE NONCLUSTERED INDEX [NC_DayID_PaperID] ON [dbo].[tblFEStatsDayHits] 
(
    [DayID] ASC,
    [PaperID] ASC
)
INCLUDE ([SmallViewCount])</pre>

<p>Let's check the execution plan again:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan4_2.jpg"><img class="alignnone size-full wp-image-2085" alt="sqlio-plan4_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan4_2.jpg" width="830" height="172" /></a></div></div>

<p>Now we're starting to get somewhere! Now we're doing two highly effective index seeks on the tblFEStatsDayHits and tblFEStatsDays tables before we join them together. Let's take a look at the IO statistics as well:

<pre class="plain">Table 'tblFEStatsDayHits'. Scan count 7, logical reads 83, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.
Table 'tblFEStatsDays'. Scan count 1, logical reads 2, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.</pre>

<p>83 page reads! If we compare that to the original 484959 page reads, that's an optimization of 99,982%! A query that took upwards of 30 seconds now takes milliseconds. There's the added reward of having to cache less data in memory (thereby allowing other more important data to stay in memory) and reducing IO load considerably.

<p>Let's for the kicks of it try and run the original DATEDIFF() query and see the resulting execution plan:

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan5_2.jpg"><img class="alignnone size-full wp-image-2086" alt="sqlio-plan5_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan5_2.jpg" width="827" height="171" /></a></div></div>

<p>Using the function predicate requires us to scan the whole tblFEStatsDays.NC_Day index, instead of performing a seek. If we run both queries alongside in SMS, we can see a rather large performance advantage of the non-DATEDIFF query (1 : 99 performance ratio):

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan6_2.jpg"><img class="alignnone size-full wp-image-2087" alt="sqlio-plan6_2" src="http://improve.dk/wp-content/uploads/2009/03/sqlio-plan6_2.jpg" width="1024" height="299" /></a></div></div>

<h2>Conclusion</h2>

<ul>
	<li>Locate the exact cause of the issue before optimizing.</li>
	<li>Do consider SMS's (and other tools for that sakes) suggestions, but don't take for granted that it's the best solution!</li>
	<li>Just because a query plan looks simple, check out the IO statistics to get a better feeling for what actually happens.</li>
	<li>Avoid using functions &amp; other advanced predicates that avoid you from taking advantage of your indexes.</li>
	<li>Watch out for your query changing mind about what indexes to utilize when you make changes to the query.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1300</wp:post_id>
		<wp:post_date>2009-03-20 02:14:39</wp:post_date>
		<wp:post_date_gmt>2009-03-20 02:14:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>query-optimization-a-case-study</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="clustered-index"><![CDATA[Clustered Index]]></category>
		<category domain="post_tag" nicename="execution-plan"><![CDATA[Execution Plan]]></category>
		<category domain="post_tag" nicename="nonclustered-index"><![CDATA[Nonclustered Index]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<category domain="post_tag" nicename="statistics"><![CDATA[Statistics]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Query Optimization - A Case Study]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>917</wp:comment_id>
			<wp:comment_author><![CDATA[trusted-essays.com]]></wp:comment_author>
			<wp:comment_author_email>feliaosbiourne@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.trusted-essays.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-13 13:27:01</wp:comment_date>
			<wp:comment_date_gmt>2012-08-13 13:27:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This case study determined that your views about SQL Server Optimization is right and it can be easily proven by the codes and terms you wrote here. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Deciphering a SQL Server Data Page</title>
		<link>http://improve.dk/deciphering-a-sql-server-data-page/</link>
		<pubDate>Thu, 26 Mar 2009 09:25:39 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/03/26/deciphering-a-sql-server-data-page.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>SQL Server stores all of it's data in what is basically a large array of "pages". Each page is exactly 8kb and can contain various kinds of data, depending on the page type. In this entry we'll explore how to decipher a data page.</p>

<p>As mentioned, all data in SQL Server is stored in pages, this includes data, index data and various other page types (GAM/SGAM/IAM/PFS etc) to support the operations of SQL Server. Each page type has a unique page content and will thus require separate analysis to understand their content. In this entry I'll concentrate on a normal data page, that is, the pages that contain the data of either heap tables or clustered indexes.</p>

<p>A page has a basic structure consisting of a header, the actual page content and finally an array noting the locations of the individual rows in the content section.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/deciph-page-structure_2.jpg"><img class="alignnone size-full wp-image-2074" alt="deciph-page-structure_2" src="http://improve.dk/wp-content/uploads/2009/03/deciph-page-structure_2.jpg" width="397" height="330" /></a></div></div>

<p>First of all, we need to create a new empty database for this to work:</p>

<pre lang="tsql" escaped="true">CREATE DATABASE Test</pre>

<p>To make it easier to reset &amp; redo the examples, you should start a new transaction by running "BEGIN TRAN" as the first command (I'm assuming you're running these queries in SSMS). When you want to reset / start over, just run "ROLLBACK" and nothing will be saved.</p>

<p>First we will look at the structure of data pages for a <a href="http://www.mssqltips.com/tip.asp?tip=1254">heap table</a>. We'll create a simple table containing only a single int (identity) field:</p>

<pre lang="tsql" escaped="true">CREATE TABLE tmp
(
	ID int identity(1,1)
)</pre>

<p>Now, let's insert 2 rows into the table:</p>

<pre lang="tsql" escaped="true">INSERT INTO tmp DEFAULT VALUES
GO 2</pre>

<p>If you do a SELECT on the tmp table at this point, you should get two rows with values 1-2 in the ID column. At this point we want to retrieve a list of the pages used to store the contents of the tmp table. We can do this by using the undocumented DBCC IND command:</p>

<pre lang="tsql" escaped="true">DBCC IND(Test, tmp, -1)</pre>

<p>The first parameter is the database name, Test in our case. The next parameter is the name of the table, while the last parameter is an index ID - using -1 as the ID will return all indexes, which is fine in our case. Running the above command should yield a result like the one below:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/03/deciph-dbcc-ind1_2.jpg"><img class="alignnone size-full wp-image-2075" alt="deciph-dbcc-ind1_2" src="http://improve.dk/wp-content/uploads/2009/03/deciph-dbcc-ind1_2.jpg" width="1024" height="56" /></a></div></div>

<p>The only two important columns at this point are the PagePID, IAMPID and PageType columns. PagePID is the unique (within this database file) page ID for a specific page. IAMPID defines a parent/child relationship between pages. PageType defines the type of page that we're looking at. The most common page types you'll run into are:</p>

<ul>
	<li>1 - Data page</li>
	<li>2 - Index page</li>
	<li>3/4 - Text pages</li>
	<li>8 - <a href="http://blogs.msdn.com/sqlserverstorageengine/archive/2006/07/08/under-the-covers-gam-sgam-and-pfs-pages.aspx">GAM</a> page</li>
	<li>9 - <a href="http://blogs.msdn.com/sqlserverstorageengine/archive/2006/07/08/under-the-covers-gam-sgam-and-pfs-pages.aspx">SGAM</a> page</li>
	<li>10 - <a href="https://blogs.msdn.com/sqlserverstorageengine/archive/2006/06/24/645803.aspx">IAM</a> page</li>
	<li>11 - <a href="http://blogs.msdn.com/sqlserverstorageengine/archive/2006/07/08/under-the-covers-gam-sgam-and-pfs-pages.aspx">PFS</a> page</li>
</ul>

<p>At this point we're interested in the root IAM (page type = 10) page with page ID 119. This is the root page of our heap table index. This is the page that currently tracks all of the data pages belonging to the tmp table. Currently there's only one IAM page, but if necessary, there can be multiple nested IAM pages to support more data pages than can be referenced on a single IAM page.</p>

<p>The root page has a NULL IAMPID, signaling that it doesn't have any parent pages. The second page has an IAMPID of 119 - the ID of the root page. Thus the second page is a child page of the root page. We can also see that the second page is a data page since it's page type is = 1. Notice the page ID of the second page, as both the root and child page ID's will most likely be different in your test!</p>

<p>Before we can retrieve the contents of the page, we have to turn on a specific trace flag, otherwise we won't see any results of the following command, as they're sent only to the error log by default:</p>

<pre lang="tsql" escaped="true">DBCC TRACEON(3604)</pre>

<p>After the trace flag has been turned on, we're ready to run the undocumented DBCC PAGE command. The DBCC PAGE command takes four parameters, the first one being the database name. The second is the file number in the database - this will be 1 since there's only a single file per database by default. The third parameter is the page ID we want to analyze - notice that this varies and will most likely be different in your situation. The final parameter defines the level of detail (0-3) to be included in the output. The most common levels are 0 and 1, 0 outputting only the header values while 1 also includes the actual row data.</p>

<pre lang="tsql" escaped="true">DBCC PAGE(Test, 1, 1839, 1)</pre>

<p>The result should resemble the following:</p>

<pre class="plain">PAGE: (1:119)

BUFFER:

BUF @0x0000000080FF0980

bpage = 0x0000000080C26000           bhash = 0x0000000000000000           bpageno = (1:119)
bdbid = 6                            breferences = 0                      bUse1 = 13010
bstat = 0xc0000b                     blog = 0x32159bb                     bnext = 0x0000000000000000

PAGE HEADER:

Page @0x0000000080C26000

m_pageId = (1:119)                   m_headerVersion = 1                  m_type = 1
m_typeFlagBits = 0x4                 m_level = 0                          m_flagBits = 0x8000
m_objId (AllocUnitId.idObj) = 232    m_indexId (AllocUnitId.idInd) = 256  
Metadata: AllocUnitId = 72057594053132288                                 
Metadata: PartitionId = 72057594044219392                                 Metadata: IndexId = 0
Metadata: ObjectId = 1477580302      m_prevPage = (0:0)                   m_nextPage = (0:0)
pminlen = 8                          m_slotCnt = 2                        m_freeCnt = 8070
m_freeData = 118                     m_reservedCnt = 0                    m_lsn = (217:17834:77)
m_xactReserved = 0                   m_xdesId = (0:0)                     m_ghostRecCnt = 0
m_tornBits = 0                       

Allocation Status

GAM (1:2) = ALLOCATED                SGAM (1:3) = ALLOCATED               
PFS (1:1) = 0x61 MIXED_EXT ALLOCATED  50_PCT_FULL                         DIFF (1:6) = CHANGED
ML (1:7) = NOT MIN_LOGGED            

DATA:

Slot 0, Offset 0x60, Length 11, DumpStyle BYTE

Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP     
Memory Dump @0x000000000B05C060

0000000000000000:   10000800 01000000 0100fe†††††††††††††...........      

Slot 1, Offset 0x6b, Length 11, DumpStyle BYTE

Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP     
Memory Dump @0x000000000B05C06B

0000000000000000:   10000800 02000000 0100fe†††††††††††††...........      

OFFSET TABLE:

Row - Offset                         
1 (0x1) - 107 (0x6b)                 
0 (0x0) - 96 (0x60)</pre>

<p>I'll elegantly jump over the buffer &amp; header parts as they're begging for posts on their own, and I can't realistically show them the respect they need in this post. Instead we'll concentrate on the DATA &amp; OFFSET TABLE parts.</p>

<p>Let's start out from the bottom up and look at the OFFSET TABLE:</p>

<pre class="plain">Row - Offset                         
1 (0x1) - 107 (0x6b)                 
0 (0x0) - 96 (0x60)</pre>

<p>Notice that it should be read from the bottom up as well, row 0 being the first, 1 being the second. The row offset table is basically an integer array pointing out the to locations in the 8KB page of the individual row locations. As we have two rows in our table, and they both fit on this page, there's two entries in the offset table. The first row starts at byte index 96 - the first byte after the 96 byte header. The second row starts at index 107, 11 bytes after the first row. Let's take a look at the first row (the rows are identical):</p>

<pre class="plain">Slot 0, Offset 0x60, Length 11, DumpStyle BYTE

Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP     
Memory Dump @0x000000000B05C060

0000000000000000:   10000800 01000000 0100fe†††††††††††††...........</pre>

<p>The first row has slot 0, it's offset is 0x60 (96) and we already know the length is 11 bytes, from the offset table. Let's take a look at the rows actual content, to understand what is stored.</p>

<ul>
	<li><b>10</b>000800 01000000 0100FE<br />The first byte is a status byte that contains info on how to parse the row contents. The value 0x10 defines the inclusion of a NULL_BITMAP, as indicated by the record attributes.</li>
	<li>10<b>00</b>0800 01000000 0100FE<br />The next byte is currently (MSSQL2005) unused, but may be used in future versions.</li>
	<li>1000<b>0800</b> 01000000 0100FE<br />The next two bytes store the byte index position of where to find the number of columns in this row, within the rows data. SQL Server stores numbers with the low order byte first, so the bytes must be switched around to get the position. Thus 0x0800 becomes 0x0008 (8 in decimal).</li>
	<li>10000800 <b>01000000</b> 0100FE<br />The next four bytes are the contents of the first column, a four byte integer. This is our identity column, and you'll notice that the first row has a value of 0x00000001 while the second has a value of 0x00000002.</li>
	<li>10000800 01000000 <b>0100</b>FE<br />The next two bytes store the number of columns. Notice that this is stored at byte index 8, as indicated by the third and fourth bytes in the row.</li>
	<li>10000800 01000000 0100<b>FE</b><br />Finally the null bitmap is stored in the last byte. 0xFE converted to binary is 1111 1110, indicating that the first column value is not null (the first 0, read backwards). The rest have a default value of 1, actually indicating that it is null. But since there's only one column, these bits are never read. Note that one byte in the null bitmap can support up to 8 columns. The formula for determining the null bitmap size is (#cols+7)/8, using integer division.</li>
</ul>

<p>Let's do a rollback and create a new table with a slightly changed schema and values:</p>

<pre lang="tsql" escaped="true">CREATE TABLE tmp
(
	ID int
)

CREATE CLUSTERED INDEX CI ON tmp (ID)

INSERT INTO tmp (ID) VALUES (1)
GO 2</pre>

<p>We still have a single ID column, but this time it's not an identity column, and we're manually inserting the value "1" into the column. Thus both rows will have the same value. If we runn DBCC IND to get the page id, and then DBCC PAGE on the data page, we'll get the following two rows:</p>

<pre class="plain">Slot 0, Offset 0x60, Length 11, DumpStyle BYTE

Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP     
Memory Dump @0x000000000D90C060

0000000000000000:   10000800 01000000 0200fc†††††††††††††...........      

Slot 1, Offset 0x6b, Length 19, DumpStyle BYTE

Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP VARIABLE_COLUMNS

Memory Dump @0x000000000D90C06B

0000000000000000:   30000800 01000000 0200fc01 00130001 †0............... 
0000000000000010:   000000†††††††††††††††††††††††††††††††...</pre>

<p>The first row is almost identical to the last. It's still 11 bytes long and its status bits indicate there's only a null bitmap. One thing has changed however.</p>

<ul>
	<li>10000800 01000000 <b>0200</b>FC<br />The number of columns indicater now has a value of 0x0002, indicating there is now two columns. How can that be? We only defined one column, and the row length is still 11 bytes.</li>
</ul>

<p>If we take a look at the second row, we'll see that the length is 19 bytes, an extra 8 bytes. Furthermore, the status byte has changed its value to 0x30, indicating there's both a null bitmap, as well as a "variable columns" section. Take a look at the row data (note that I've concatenated the two lines to make it more readable):</p>

<ul>
	<li>30000800 <b>01000000</b> 0200FC01 00130001 000000<br />Obviously the value in this row is also 1, meaning both rows have the same value in the clustered index.</li>
	<li>30000800 01000000 0200<b>FC</b>01 00130001 000000<br />The null bitmap has changed into the value 0xFC or 1111 1100, indicating that the first two (in other words, all) columns do not have null values.</li>
	<li>30000800 01000000 0200FC01 001300<b>01 000000</b><br />The last four bytes is a "uniqueifier" value that is added since the clustered key value is identical for multiple rows. Why wasn't this added before? On the first table we didn't define a clustered index, and therefore it was a heap table. In heap tables, pages are referenced by their phyiscal location and not their clustered key value. In a clustered table, rows are always referenced by their clustered key value. To uniquely reference a column, it's important that each clustered key value is unique (which is why the clustered key is usually also the primary key, as is also the default in SSMS). If a clustered key is not unique, SQL Server adds its own uniqueifier value that makes the key unique - note that this only occurs when necessary, thus the lack of a uniqueifier on the first row, since that one is already unique. The uniqueifier is treated as a variable length column as we can potentially have more than 2^31-1 rows with the same value, at which point the uniqueifier will have to utilize eight bytes to ensure unique clustered key values.</li>
	<li>30000800 01000000 0200FC<b>01 001300</b>01 000000<br />The previous four bytes are used to support the variable length column(s) in the row. The first two bytes indicate the number of variable length columns in the row (0x0001 - the single uniqueifier column), while the second pair of bytes indicate the end index of the first variable length column, that is 0x0013 (19 in decimal, which is also the total length of the row).</li>
</ul>

<p>To elaborate on the variable length columns, consider the following table and values:</p>

<pre lang="tsql" escaped="true">CREATE TABLE tmp
(
	t1 nvarchar(5),
	t2 nvarchar(5)
)

INSERT INTO tmp (t1, t2) VALUES ('a', 'b')</pre>

<p>Let's look at the row contents:</p>

<ul>
	<li><b>30000400</b> 0200FC02 000f0011 00610062 00<br />The first bytes are used for the status &amp; unused bytes, as well as the "number of columns" index.</li>
	<li>30000400 <b>0200</b>FC02 000f0011 00610062 00<br />The next two bytes at index 0x0004 indicate there's two columns.</li>
	<li>30000400 0200<b>FC</b>02 000f0011 00610062 00<br />The null bitmap indicates that no columns have null values.</li>
	<li>30000400 0200FC<b>02 00</b>0f0011 00610062 00<br />The next two bytes indicate the number of variable length columns, 0x0002.</li>
	<li>30000400 0200FC02 00<b>0f00</b>11 00610062 00<br />The next two bytes indicate the ending position of the first variable length column, 0x000f (15).</li>
	<li>30000400 0200FC02 000f00<b>11 00</b>610062 00<br />Likewise, the next two bytes indicate the ending position of the second variable length column, 0x0011 (17). If there were more variable length columns, each one of them would have a two-byte length indicator here, before the actual contents.</li>
	<li>30000400 0200FC02 000f0011 00<b>6100</b>62 00<br />After the variable length column end index indicators, the actual content is stored. We know that the first variable length column value ends at index 15, which gives us the value 0x0061 which happens to be a lowercase 'a'.</li>
	<li>30000400 0200FC02 000f0011 006100<b>62 00</b><br />Likewise, we know that the second column ends at index 17, giving us the value 0x0062, being a lowercase 'b'.</li>
</ul>

<p>As a final example, let's look at what happens when we have null values in our columns.</p>

<pre lang="tsql" escaped="true">CREATE TABLE tmp
(
	t1 nvarchar(5),
	t2 nvarchar(5)
)

INSERT INTO tmp (t1, t2) VALUES ('a', 'b')
INSERT INTO tmp (t1, t2) VALUES (NULL, 'b')
INSERT INTO tmp (t1, t2) VALUES ('a', NULL)
INSERT INTO tmp (t1, t2) VALUES (NULL, NULL)</pre>

<p>The resulting four rows should look like this:</p>

<pre class="plain">Slot 0, Offset 0x60, Length 17, DumpStyle BYTE
Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP VARIABLE_COLUMNS
Memory Dump @0x000000000DB0C060
0000000000000000:   30000400 0200fc02 000f0011 00610062 †0............a.b 
0000000000000010:   00†††††††††††††††††††††††††††††††††††.                

Slot 1, Offset 0x71, Length 15, DumpStyle BYTE
Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP VARIABLE_COLUMNS
Memory Dump @0x000000000DB0C071
0000000000000000:   30000400 0200fd02 000d000f 006200††††0............b.  

Slot 2, Offset 0x80, Length 13, DumpStyle BYTE
Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP VARIABLE_COLUMNS
Memory Dump @0x000000000DB0C080
0000000000000000:   30000400 0200fe01 000d0061 00††††††††0..........a.    

Slot 3, Offset 0x8d, Length 9, DumpStyle BYTE
Record Type = PRIMARY_RECORD         Record Attributes =  NULL_BITMAP     
Memory Dump @0x000000000DB0C08D
0000000000000000:   10000400 0200ff00 00†††††††††††††††††.........</pre>

<p>As a proof of SQL Server only adding fields when needed, there are no variable_columns attributes in the fourth row, since both columns are null and we therefore do not need to keep track of the length of the columns.</p>

<ul>
	<li>30000400 0200FC02 000F0011 00610062 00<br />The first row is identical to what we saw before.&nbsp;</li>
	<li>30000400 0200FD02 000D000F 006200<br />In the second row the null bitmap is different: fd (1111 1101), indicating that the first column is null. We can also see that there's two bytes missing from the row (0x0061) compared to the first row. 0d00 indicates that the first variable length column ends at index 0x000d (13), while the second variable length column ends at index 0f00 / 0x000f / 15. What's interesting is that the variable column length indicators themselves end at index 13, and thus the first row ends where it starts - that is, it's not there at all, it's null. The second column is stored at index 14 + 15, the 6200 / 0x0062 / 'b' value.&nbsp;</li>
	<li>30000400 0200FE01 000D0061 00<br />The third row takes up two bytes less, even though it has only a single null field like the second row. The null bitmap is slightly different (fe / 1111 1110) since it's now the second column that's null. What's interesting is that in this row, only a single variable length column is present, not two. Thus there's only a single variable length column end index identifier, 0d00 / 0x000d / 13. From that we can conclude that columns are handled in order, and thus one might want to consider the order of columns, if a specific column is usually null, it might be more efficient to have it ordered last.&nbsp;</li>
	<li>10000400 0200FF00 00<br />The fourth row takes up just 9 bytes, this time sparing the data of both variable length columns since they're both null according to the null bitmap (ff / 1111 1111).</li>
</ul>

<h2>Conclusion</h2>

<ul>
	<li>By using the undocumented DBCC commands IND and PAGE, we can get the actual page data from any page in the database.</li>
	<li>SQL Server uses a fixed and deterministic row layout, depending on the table metadata and column contents.</li>
	<li>By understanding the way SQL Server stores data, we're able to optimize our storage even further than we would normally be able to.</li>
	<li>Data pages are just one of many page types in SQL Server. Later on, I might introduce other page types.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1301</wp:post_id>
		<wp:post_date>2009-03-26 09:25:39</wp:post_date>
		<wp:post_date_gmt>2009-03-26 09:25:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>deciphering-a-sql-server-data-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-ind"><![CDATA[DBCC IND]]></category>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="page"><![CDATA[Page]]></category>
		<category domain="post_tag" nicename="record"><![CDATA[Record]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Deciphering a SQL Server Data Page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>918</wp:comment_id>
			<wp:comment_author><![CDATA[Sudhir K Giri]]></wp:comment_author>
			<wp:comment_author_email>sudhirkumargiri@yahoo.co.in</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-18 20:50:39</wp:comment_date>
			<wp:comment_date_gmt>2012-11-18 20:50:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Superb article! Beautifully explained! Simply the best.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>919</wp:comment_id>
			<wp:comment_author><![CDATA[Peter]]></wp:comment_author>
			<wp:comment_author_email>peterc_tech@live.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-06-23 20:01:37</wp:comment_date>
			<wp:comment_date_gmt>2009-06-23 20:01:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br /><br />This is an excellent article. It is well organized and easy to follow and understand.  <br /><br />I have the following questions:<br /><br />1. dbcc page does not seem to output to error log by default.  I wonder whether you have 3605 on.<br /><br />2. is the uniqueifier added to the data row same as the one added to index?  I think yes.<br /><br />3. is it true that when evaluting bytes in SQL Server, we always switched the bytes around regardless of the purpose of the bytes.<br /><br />Thanks,<br /><br />Peter]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>920</wp:comment_id>
			<wp:comment_author><![CDATA[Martin]]></wp:comment_author>
			<wp:comment_author_email>mpriester09+blogreply@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-17 21:37:15</wp:comment_date>
			<wp:comment_date_gmt>2011-09-17 21:37:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark. Awesome article. Is there a place where similar information can be found for index pages?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>921</wp:comment_id>
			<wp:comment_author><![CDATA[orca]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/default.aspx</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-21 10:58:24</wp:comment_date>
			<wp:comment_date_gmt>2011-09-21 10:58:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Martin<br />Paul Randal has a post on the anatomy of records in general, including index records - <a rel="nofollow external" href="http://www.sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-record.aspx" title="http://www.sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-record.aspx" rel="nofollow">www.sqlskills.com/...</a>. The page format itself is identical between data and index pages.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>922</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-18 16:28:02</wp:comment_date>
			<wp:comment_date_gmt>2011-07-18 16:28:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Peter - sorry for a two year delay in responding!<br /><br />1)<br />That could be, can't check it as I don't have access to the same environment any longer unfortunately.<br /><br />2)<br />Yes and no. The storage space taken up is the same but the physical location may be different. See <a rel="nofollow external" href="http://improve.dk/archive/2011/07/06/determining-the-uniquifier-column-ordinal-for-clustered-and-nonclustered-indexes.aspx" title="http://improve.dk/archive/2011/07/06/determining-the-uniquifier-column-ordinal-for-clustered-and-nonclustered-indexes.aspx" rel="nofollow">improve.dk/...</a><br /><br />3)<br />No, not always. For numeric types we need to byte switch due to little endianness. For character types we don't byte switch.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1833</wp:comment_id>
			<wp:comment_author><![CDATA[dharmendra Keshari]]></wp:comment_author>
			<wp:comment_author_email>dharmendra.keshari@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.161.219.219</wp:comment_author_IP>
			<wp:comment_date>2013-02-24 04:43:14</wp:comment_date>
			<wp:comment_date_gmt>2013-02-24 03:43:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,

Truly, It is amazing article. Thank you so much to make things so easy to understand. Is there any option to get notification whenever any post is published by you?

Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361677394.771627902984619140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1923</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>80.167.72.33</wp:comment_author_IP>
			<wp:comment_date>2013-02-24 22:45:14</wp:comment_date>
			<wp:comment_date_gmt>2013-02-24 21:45:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Dharmendra

Thanks! You can subscribe to my RSS feed: http://feeds.feedburner.com/Improvedk]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361742315.009622097015380859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2635</wp:comment_id>
			<wp:comment_author><![CDATA[dharmendra Keshari]]></wp:comment_author>
			<wp:comment_author_email>dharmendra.keshari@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.161.63.72</wp:comment_author_IP>
			<wp:comment_date>2013-03-01 16:57:23</wp:comment_date>
			<wp:comment_date_gmt>2013-03-01 15:57:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Mark! I have subscribed it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362153443.2253100872039794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>146701</wp:comment_id>
			<wp:comment_author><![CDATA[Are you wasting storage space? |]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.inspari.dk/2013/11/18/are-you-wasting-storage-space/</wp:comment_author_url>
			<wp:comment_author_IP>66.155.9.105</wp:comment_author_IP>
			<wp:comment_date>2013-11-18 09:08:12</wp:comment_date>
			<wp:comment_date_gmt>2013-11-18 08:08:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] If you want to know even more about the internals of a SQL Server page or row, here is a link to a blog post written by Danish MVP Mark S. Rasmussen that explains things in detail. (http://improve.dk/deciphering-a-sql-server-data-page/) [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Solving Deadlocks Through Locking Hints</title>
		<link>http://improve.dk/solving-deadlocks-through-locking-hints/</link>
		<pubDate>Wed, 01 Apr 2009 14:50:43 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/04/01/solving-deadlocks-through-locking-hints.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Deadlocks in any database can be a hard beast to weed out, especially since they may hide latently in your code, awaiting that specific moment when they explode. An API website, exposing a series of webservices, had been working fine for months, until I decided to run my client app with a lot more threads than usual.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-1_2.jpg"><img class="alignnone size-full wp-image-1970" alt="deadlock-hint-1_2" src="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-1_2.jpg" width="1024" height="302" /></a></div></div>

<p>Great. So we have a deadlock, what's the first step in fixing it? I've outlined the code in PaperHandler.cs that caused the issue, though in pseudo code format:</p>

<pre lang="csharp" escaped="true">using (var ts = new TransactionScope())
{
	if ((SELECT COUNT(*) FROM tblPapers WHERE Url = 'newurl') &gt; 0)
		throw new UrlNotUniqueException();

	// ... Further validation checks

	INSERT INTO tblPapers ... // This is where the deadlock occurred
}</pre>

<p>To see how the above code may result in a deadlock, let's test it out in SQL Server Management Studio (SSMS). Open a new query and execute the following, to create the test database &amp; schema:</p>

<pre lang="tsql">-- Create new test database - change name if necessary
CREATE DATABASE Test
GO

USE Test

-- Create the test table
CREATE TABLE tblPapers
(
	ID int identity(1,1) NOT NULL,
	Url nvarchar(128) NOT NULL
)

-- Make the ID column a primary clustered key
ALTER TABLE dbo.tblPapers ADD CONSTRAINT PK_tblPapers PRIMARY KEY CLUSTERED 
(
	ID ASC
)
ON [PRIMARY]

-- Add a nonclustered unique index on the Url column to ensure uniqueness
CREATE UNIQUE NONCLUSTERED INDEX NC_Url ON tblPapers
(
	Url ASC
)
ON [PRIMARY]</pre>

<p>The tblPapers table contains a number of entities, and each of them must have a unique Url value. Therefore, before we insert a new row into tblPapers, we need to ensure that it's going to be unique.</p>

<p>Now open two new query windows and insert the following query text into both of them:</p>

<pre lang="tsql">USE Test

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE

BEGIN TRAN

-- Ensure unique URL
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'
SELECT COUNT(*) FROM tblPapers WHERE Url = @NewUrl

-- Insert row if above query returned 0 &lt;=&gt; URL is unique
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'
INSERT INTO tblPapers (Url) VALUES (@NewUrl)</pre>

<p>In SQL Server 2005/2008, READ COMMITTED is the default transaction level - we're being explicit about using the SERIALIZABLE isolation level, however. The reason we're going to use the SERIALIZABLE isolation mode is that while READ COMMITTED is the default mode in SQL Server, whenever you create an implicit transaction using TransactionScope, it's <a href="http://msdn.microsoft.com/en-us/library/ms172152.aspx">using the SERIALIZABLE isolation mode by default</a>!</p>

<p>Now, observe what happens if you run two queries concurrently in the following order:</p>

<h3>Query A</h3>

<pre lang="tsql">USE Test
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE				
BEGIN TRAN</pre>

<h3>Query B</h3>

<pre lang="tsql">USE Test
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE				
BEGIN TRAN</pre>

<h3>Query A</h3>

<pre lang="tsql">-- Ensure unique URL
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'				
SELECT COUNT(*) FROM tblPapers WHERE Url = @NewUrl</pre>

<h3>Query B</h3>

<pre lang="tsql">-- Ensure unique URL
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'				
SELECT COUNT(*) FROM tblPapers WHERE Url = @NewUrl</pre>

<h3>Query A</h3>

<pre lang="tsql">-- Insert row since URL is unique
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'				
INSERT INTO tblPapers (Url) VALUES (@NewUrl)</pre>

<h3>Query B</h3>

<pre lang="tsql">-- Insert row since URL is unique
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'				
INSERT INTO tblPapers (Url) VALUES (@NewUrl)</pre>

<p>After executing the last query, you should get the following error in one of the windows:</p>

<pre class="plain">Msg 1205, Level 13, State 47, Line 4
Transaction (Process ID 53) was deadlocked on lock resources with another process and has been chosen as the deadlock victim. Rerun the transaction.</pre>

<p>While in the second window, you'll notice that the insertion went through:</p>

<pre class="plain">(1 row(s) affected)</pre>

<p>What happened here is that the two transactions get locked up in a deadlock. That is, neither one of them could continue without one of them giving up, as they were both waiting on a resource the other transaction had locked.</p>

<p>But what happened, how did this go wrong? Isn't the usual trick to make sure you perform actions in the same order, and you'll avoid deadlocks? Unfortunately it's not that simple, your isolation level plays a large part as well. In this case we know which queries caused the deadlock, but we could've gotten the same information using the profiler. Perform a rollback of the non-victimized transaction so the tblPapers table remains unaffected.</p>

<p>Startup the profiler and connect to the database server. Choose the TSQL_Locks template:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-2_2.jpg"><img class="alignnone size-full wp-image-1971" alt="deadlock-hint-2_2" src="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-2_2.jpg" width="847" height="534" /></a></div></div>

<p>Make sure only the relevant events are chosen, to limit the amount of data we'll be presented with. If necessary, put extra filters on the database name so we avoid queries from other databases. You can also filter it on the connection ID's from SSMS if necessary:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-3_2.jpg"><img class="alignnone size-full wp-image-1972" alt="deadlock-hint-3_2" src="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-3_2.jpg" width="847" height="534" /></a></div></div>

<p>If we run the profiler in the background while executing all steps in SSMS in the meantime, we'll notice a an important event in the profiler, the Deadlock graph. If we hover the mouse over either of the circles representing the two individual processes, we'll get a tooltip showing the exact query that was run when the deadlock occurred - the two insert queries:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-4_2.jpg"><img class="alignnone size-full wp-image-1973" alt="deadlock-hint-4_2" src="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-4_2.jpg" width="880" height="768" /></a></div></div>

<p>Ok, so now that we know what step caused the deadlock, the question now is, why did it occur? Perform a rollback of the non-victimized transaction. Now run step 1-3 again, and run the following query in window A:</p>

<pre lang="tsql">sp_lock @@SPID</pre>

<p>The result should resemble this (ID's will be different):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-5_2.jpg"><img class="alignnone size-full wp-image-1974" alt="deadlock-hint-5_2" src="http://improve.dk/wp-content/uploads/2009/04/deadlock-hint-5_2.jpg" width="456" height="152" /></a></div></div>

<p>Notice the highlighted object ID. Now right click on the deadlock graph in the profiler results table and select "Extract event data". Save the file somewhere and open it in Visual Studio (as XML).</p>

<p>You'll notice the following two lines:</p>

<pre lang="xml" escaped="true">&lt;process id="process383a5c8" ... waitresource="KEY: 7:72057594039238656 (5701f5018387)" ... /&gt;
&lt;process id="process383a868" ... waitresource="KEY: 7:72057594039238656 (5701f5018387)" ... /&gt;</pre>

<p>What these lines tells us is that both processes are waiting on the same resource, namely 5701f5018387. Looking at our sp_locks result from before, we can see that that particular resource has a shared lock (S) on it.</p>

<p>And this brings us down to the core issue - the SERIALIZABLE isolation mode. Different isolation modes provide different locking levels, serializable being one of the more pessimistic ones. SERIALIZABLE will:</p>

<ul>
	<li>Request shared locks on all read data (and keep them until the transaction ends), preventing non-repeatable reads as other transactions can't modify data we've read.</li>
	<li>Prevent phantom reads - that is, a SELECT query will return the same result even if run multiple times - other transactions can't insert data while we've locked it. SQL Server accomplishes this by either locking at the table or key-range level.</li>
</ul>

<p>If we look at the <a href="http://msdn.microsoft.com/en-us/library/ms186396(SQL.90).aspx">Lock Compatibility chart</a>, we'll see that "Shared (S)" locks are compatible with other S &amp; IS (Intent Shared) locks. This means both of the processes are able to perform a shared lock on the initial SELECT COUNT(*) key range. When the INSERT statement is then performed, the database will then attempt to get an exclusive (X) lock on the data - but since the other process has a shared lock, we'll have to wait for it to be released. When the second process tries to perform an INSERT as well, it'll try to get an exclusive lock on the same data. At this point we have two processes that both have a shared lock on the same piece of data, and they both want an exclusive lock on the data. The only way to get out of this situation is to dedicate one of the transactions as a victim and perform a rollback. The unaffected process will perform the INSERT and will be able to commit.</p>

<p>How do we then get rid of the deadlock situation? We <i>could</i> change the isolation mode to the default READ COMMITTED like so:</p>

<pre lang="csharp" escaped="true">var tsOptions = new TransactionOptions();
tsOptions.IsolationLevel = IsolationLevel.ReadCommitted;

using (var ts = new TransactionScope(TransactionScopeOption.Required, tsOptions))
{
	...

	ts.Complete();
}</pre>

<p>However, that will result in another problem if we run the same steps as before:</p>

<pre class="plain">Msg 2601, Level 14, State 1, Line 3
Cannot insert duplicate key row in object 'dbo.tblPapers' with unique index 'NC_Url'.
The statement has been terminated.</pre>

<p>As READ COMMITTED does not protect us against phantom reads, it won't take shared locks on read data. Thus the second process is able to perform the insert without us knowing (we still think COUNT(*) is = 0). As a result, we'll fail by violating the unique NC_Url index constraint.</p>

<p>What we're looking for is an even more pessimistic isolation level - we not only need to protect ourselves against phantom reads, we need to protect against locks on the same data as we've read (we don't care if someone reads our data using READ UNCOMMITTED, that's their problem - as long as they don't lock our data). However, SERILIZABLE is the most pessimistic isolation level in SQL Server, so we're outta luck. That is... Unless we use a locking hint.</p>

<p>Locking hints tell the database engine what kind of locking we would like to use. Take note that locking hints are purely hints - they're not orders. In this case however, SQL Server does obey our command. What we need is the UPDLOCK hint. Change the query so it includes an UPDLOCK hint in the first SELECT statement:</p>

<pre lang="tsql">-- Ensure unique URL
DECLARE @NewUrl varchar(128); SET @NewUrl = 'newurl'
SELECT COUNT(*) FROM tblPapers (UPDLOCK) WHERE Url = @NewUrl</pre>

<p>The UPDLOCK hint tells SQL Server to acquire an update lock on the key/range that we've selected. Since shared locks and update locks are not compatible, the second process will have to wait until the first transaction either commits or performs a rollback. The second process won't return the result of the first SELECT COUNT(*) query until the first process is done - or a timeout occurs.</p>

<p>Note that while this method protects us against the deadlocks &amp; constraint violations, it does so at the cost of decreased concurrency. This will result in other operations being blocked until the insertion procedure is done. In my case, this is a rather rare procedure, so it does not matter. One way to alleviate this problem would be to use the <a href="http://www.databasejournal.com/features/mssql/article.php/3566746/Controlling-Transactions-and-Locks-Part-5-SQL-2005-Snapshots.htm">READ COMMITTED SNAPSHOT isolation level</a> in other parts of the application where it's applicable. YMMV!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1302</wp:post_id>
		<wp:post_date>2009-04-01 14:50:43</wp:post_date>
		<wp:post_date_gmt>2009-04-01 14:50:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solving-deadlocks-through-locking-hints</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="deadlock"><![CDATA[Deadlock]]></category>
		<category domain="post_tag" nicename="isolation-mode"><![CDATA[Isolation Mode]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Solving Deadlocks Through Locking Hints]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>923</wp:comment_id>
			<wp:comment_author><![CDATA[Lance]]></wp:comment_author>
			<wp:comment_author_email>lance@lanceusa.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-05 06:07:43</wp:comment_date>
			<wp:comment_date_gmt>2011-06-05 06:07:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Awesome article and explained my problem exactly.  Solution was simple and easy.  Thanks for saving me tons of time!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>924</wp:comment_id>
			<wp:comment_author><![CDATA[trusted-essay]]></wp:comment_author>
			<wp:comment_author_email>oliverdanes@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.trusted-essays.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-10 11:36:24</wp:comment_date>
			<wp:comment_date_gmt>2012-08-10 11:36:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Solving these deadlocks are such a pain in the a** because for almost a week that I am reviewing this, most of the terms are really hard to understand but I'll not lose hope! In time, I'm gonna share my own insights here about this topic. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>925</wp:comment_id>
			<wp:comment_author><![CDATA[Sameh]]></wp:comment_author>
			<wp:comment_author_email>ssameh@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-01-09 03:39:03</wp:comment_date>
			<wp:comment_date_gmt>2013-01-09 03:39:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Default transaction scope isolation level is read committed unless it is running within nested scope then its isolation level is promoted to Serializable <br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>926</wp:comment_id>
			<wp:comment_author><![CDATA[Sameh]]></wp:comment_author>
			<wp:comment_author_email>ssameh@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-01-09 04:26:42</wp:comment_date>
			<wp:comment_date_gmt>2013-01-09 04:26:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[emm.. after double checking please ignore my previous comment]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89154</wp:comment_id>
			<wp:comment_author><![CDATA[Bogdan]]></wp:comment_author>
			<wp:comment_author_email>bsahlean@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>213.233.67.142</wp:comment_author_IP>
			<wp:comment_date>2013-08-15 20:09:13</wp:comment_date>
			<wp:comment_date_gmt>2013-08-15 18:09:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[S and U locks are compatible. But two U locks aren't compatible.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376590154.00156688690185546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Speaking at devLink 2009</title>
		<link>http://improve.dk/speaking-at-devlink-2009/</link>
		<pubDate>Thu, 02 Apr 2009 07:40:47 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/04/02/speaking-at-devlink-2009.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The <a href="http://devlink.net/Sessions/tabid/124/Default.aspx">session list</a> for <a href="http://devlink.net/">devLink 2009</a> has been announced. I'm delighted to announce that <a href="http://devlink.net/Speakers/MarkRasmussen/tabid/169/Default.aspx">one of my abstracts</a> was chosen - I will be speaking at devLink 2009 in Nashville, TN.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/devlinklogo_2.png"><img class="alignnone size-full wp-image-2143" alt="devlinklogo_2" src="http://improve.dk/wp-content/uploads/2009/04/devlinklogo_2.png" width="365" height="100" /></a></div></div>

<p>I am presenting a session called "Using Network Load Balancing for Availability &amp; Scalability" - I know, original naming is not really part of my skillset. During the session, I will be introducing NLB and demoing how to set it up using a multitude of VMs (might have to get an extra 4 gigs of memory in my laptop). I will also cover some of the basic characteristics scalable &amp; available websites must possess, and how to solve the issue of reliable session state when we start to load balance our webservers - without resorting to SQL Server.</p>

<p>I look forward to attending devLink 2009, it's an awesome list of sessions &amp; speakers! Hope to see some of you there.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1303</wp:post_id>
		<wp:post_date>2009-04-02 09:40:47</wp:post_date>
		<wp:post_date_gmt>2009-04-02 07:40:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-devlink-2009</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="devlink"><![CDATA[devLink]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>927</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>brian@kodehoved.dk</wp:comment_author_email>
			<wp:comment_author_url>http://kodehoved.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-02 08:06:21</wp:comment_date>
			<wp:comment_date_gmt>2009-04-02 08:06:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Grats!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Thoughts on Blogging</title>
		<link>http://improve.dk/thoughts-on-blogging/</link>
		<pubDate>Wed, 08 Apr 2009 10:54:18 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/04/08/thoughts-on-blogging.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am hastily nearing my third year blogging at improve.dk. Before reinventing my blog, I wrote articles and tutorials at the same address, though in Danish. When I rebooted my blog I completely ditched my old material and started blogging in English. After discussing the concept of blogging a lot recently, I've gathered up my thoughts on the subject.</p>

<h2>Why blog?</h2>

<p>I generally recommend starting a blog to all of my peers. But why do it? There's no single answer, as it's very much a subjective matter resulting in different goals.</p>

<p>I recently had a discussion with <a href="http://blogs.msdn.com/danielmf">Daniel</a> from Microsoft Denmark regarding the language of blogs, a discussion that later merged into a discussion on the topic of blogging itself. The discussion originated from a <a href="http://blogs.msdn.com/danielmf/archive/2009/03/07/n-r-du-blogger-p-dansk.aspx">blog post</a> of Daniels (in Danish unfortunately), on why he felt Danish people should blog in Danish. In the following <a href="http://search.twitter.com/search?q=&amp;ands=&amp;phrase=&amp;ors=&amp;nots=&amp;tag=&amp;lang=all&amp;from=improvedk&amp;to=danielovich&amp;ref=&amp;near=&amp;within=15&amp;units=mi&amp;since=2009-03-30&amp;until=2009-04-03&amp;rpp=50">discussion on Twitter</a>, one of Daniels tweets stood out:</p>

<blockquote>
	<a href="http://twitter.com/Danielovich/statuses/1423952537">danielovich:</a><br />
	Why should I write blogposts if no one wanted to read them? Then I would write a word document for myself!
</blockquote>

<p>The above was written as answer to a statement I made on the benefits of blogging:</p>

<blockquote>
	<a href="http://twitter.com/improvedk/statuses/1423925133">improvedk:</a><br />
	You measure benefit only in readers! I benefit by improving my writing skill, using the blog as an incentive to learn new stuff.
</blockquote>


<p>These quotes really show the core issue that we were debating, and at the same time explain why we will never agree. We have different goals. Neither goal is superior, though they have vastly different foundations.</p>

<p><a href="http://www.brentozar.com/">Brent Ozar</a> recently posted a great blog topic on <a href="http://www.brentozar.com/archive/2009/04/how-to-pick-blog-presentation-topics">How to Pick Blog &amp; Presentation Topics</a>. The two most important quotes, in my opinion, of Brent Ozars post are the following:</p>

<blockquote>
	As a presenter, your job isn’t to learn things.<br />
	Your job is to pass on things you’ve already learned.
</blockquote>

<p>I absolutely agree with Brent Ozar. As a presenter, your job isn't to learn things - it's to pass on the things you've already learned. However, this begs the question, am I a presenter? Do I want to be a presenter?</p>

<p>Though I am starting to do more live presentations, I still don't see myself as a presenter when it comes to my blog.</p>

<blockquote>
	<a href="http://twitter.com/improvedk/statuses/1423889131">improvedk:</a><br />
	Even if there were nobody to read my blog, I would benefit tremendously by blogging.
</blockquote>

<p>When I blog, I do it as a means of improving my own learning ability. If I reach a level of knowledge where I'm able to share that knowledge and explain it so others can understand it, then I know that I've understood the material. By forcing myself to blog about new knowledge I acquire, I also force myself to fully understand it, and hence improve my ability to learn.</p>

<p>While broadening my knowledge is the primary goal of my blog, it is of course not the only one. There's a reason I haven't put an IP restriction on the blog, why I have an RSS feed, why I'm running Google Analytics. Of course it does provide encouragement, seeing that people actually read what I write. It does confirm to me that my secondary mission of giving something back to the community is working out. Reader, I thank thee.</p>

<h2>The choice of language</h2>

<p>My native language is Danish, a language that's quite foreign to the English speaking population of the internet. Given that there's only about 6 million Danish speaking people in the world, it's a basic fact that the potential reach of my blog will be humongous when written in English, compared to Danish.</p>

<p>At <a href="http://www.ipaper.dk/Default.aspx?AreaID=6">iPaper</a>, most of our daily communication is in English, both written and spoken. We're an international company with partners all around the world, and we have employees at our office that don't speak Danish at all. Thus, speaking English becomes second nature, and why not continue the trend on my blog? After all, being able to speak and write English is not a transient requirement in the industry.</p>

<p><a href="http://khebbie.dk/">Klaus Hebsgaard</a> had a very good <a href="http://blogs.msdn.com/danielmf/archive/2009/03/07/n-r-du-blogger-p-dansk.aspx#comments">comment</a> on the English vs. Danish discussion.</p>

<blockquote>
	When I search for the solution to a problem, then I search in English through Google
</blockquote>

<p>There are just that many more blogs in English out there, the chances of finding a result quickly diminish if I start searching in Danish. I am but a drop in the ocean, there's a lot of extremely skilled bloggers out there with non-English native languages. I'd be very saddened if they stopped blogging in English. What great blogs am I missing out on at the moment because they're not written in English?</p>

<p>While I compare Danish and English in this post, I believe my arguments are universal, whether it be Swedish, Hebrew, Finnish etc.</p>

<h2>Blogs need not be unique</h2>

<p>One final quote from the discussion with Daniel is perhaps the one I oppose the strongest.</p>

<blockquote>
	<a href="http://twitter.com/Danielovich/statuses/1423874508">danielovich:</a><br />
	Yes, if you don't have anything unique to offer you shouldn't even try!     <br />
	<br />
	<a href="http://twitter.com/Danielovich/statuses/1423880044">danielovich:</a><br />
	... And that's in terms of blogging in English. It will just be pollution in the end!
</blockquote>

<p>If your blogging goal is mostly selfish, to improve your own learning ability, then you should not care the least about the uniqueness of your content. Neither should you care about spelling, grammar etc. If you can combine your own goals with producing unique content, then that is of course the ultimate goal, just like improving spelling &amp; grammar should also be a goal itself.</p>

<p>I subscribe to a number of blogs I find interesting, it's a way for me to keep myself up to date on what's happening, and to ensure I read the blog entries of the people I admire. For all other content, I find it through Google. As we all know, Google is extremely good at sorting away pollution. Thus, even if your non-unique content could be perceived as pollution, <b>it does not matter</b>! Please do blog, if not for our sakes, then for yours!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1304</wp:post_id>
		<wp:post_date>2009-04-08 12:54:18</wp:post_date>
		<wp:post_date_gmt>2009-04-08 10:54:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thoughts-on-blogging</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Thoughts on Blogging]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>928</wp:comment_id>
			<wp:comment_author><![CDATA[Peter Loft Jensen]]></wp:comment_author>
			<wp:comment_author_email>privat@ploft.dk</wp:comment_author_email>
			<wp:comment_author_url>http://blog.ploft.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-08 13:09:05</wp:comment_date>
			<wp:comment_date_gmt>2009-04-08 13:09:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great blogging-thoughts Mark, not only do I agree but also empathizes the whole idea about sharing your experiences and knowledge, wither or not it's unique.<br />My experience as a fairly active blog-reader would also confirm the part about search-language. The right positive results from search engines like google are for my point of view important. I stumble into a great deal of somewhat different problems as systems admin/cable guy at Vertica, that often involves a lot of searching the web for answers that might not be obvious to an average trouble crusher like me. When the answer isn't right at your feet or when I get my hands dirty and do all the digging myself solving the problems, I usually do a blog post about it, basically for my own reference if the issue should occur again, but also for sharing my knowledge that other people could harvest some value of. In that way they doesn't have to go bald of concern when shit hits the fan and their systems goes bad. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>929</wp:comment_id>
			<wp:comment_author><![CDATA[Brent Ozar]]></wp:comment_author>
			<wp:comment_author_email>brento@brentozar.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.brentozar.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-08 13:42:49</wp:comment_date>
			<wp:comment_date_gmt>2009-04-08 13:42:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The answer to the language question boils down to why you're blogging: are you blogging for money, for your career, or for self-improvement?<br /><br />If you're blogging for money, then you want to chase after high numbers of readers, so English makes sense.  But if you're blogging for money, you shouldn't be blogging about sysadmin stuff - you should blog about pr0n. ;-)<br /><br />If you're blogging for your career, then you want to write in the language that your next boss will read.  If you think he'll be able to read Danish, then you can blog in Danish and you'll be fine.  It's almost like an online historical resume.<br /><br />If you're blogging for self-improvement, then just blog in whatever feels easiest.<br /><br />Don't worry about not being good enough in English - I know a lot of native speakers who can't write worth a damn, hahaha.<br /><br />Have fun!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TxF presentation materials</title>
		<link>http://improve.dk/txf-presentation-materials/</link>
		<pubDate>Fri, 24 Apr 2009 07:47:01 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/04/24/txf-presentation-materials.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday I presented on how to use Transactional NTFS (TxF) in .NET, at the <a href="http://www.cnug.dk/">Copenhagen .NET User Group</a>.</p>

<h2>Downloads</h2>

<p>Slides: <a href="http://improve.dk/wp-content/uploads/2009/04/TxF.pptx">TxF.pptx</a><br />
Materials: <a href="http://improve.dk/wp-content/uploads/2009/04/TxFMaterials.zip">TxFMaterials.zip</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1305</wp:post_id>
		<wp:post_date>2009-04-24 09:47:01</wp:post_date>
		<wp:post_date_gmt>2009-04-24 07:47:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>txf-presentation-materials</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>930</wp:comment_id>
			<wp:comment_author><![CDATA[Marketing Search]]></wp:comment_author>
			<wp:comment_author_email>wickedrgb@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.marketingorsearch.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-24 12:21:04</wp:comment_date>
			<wp:comment_date_gmt>2009-04-24 12:21:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Will you provide the same talk to Anug later this year?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>931</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-24 12:32:56</wp:comment_date>
			<wp:comment_date_gmt>2009-04-24 12:32:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If ANUG is interested in the talk as well, I'd be glad to present TxF there as well :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Implementing a Simple Genetic Algorithm</title>
		<link>http://improve.dk/implementing-a-simple-genetic-algorithm/</link>
		<pubDate>Wed, 29 Apr 2009 14:42:37 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/04/29/implementing-a-simple-genetic-algorithm.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this blog post I'll give a quick introduction to what <a href="http://en.wikipedia.org/wiki/Genetic_algorithm">genetic algorithms</a> are and what they can be used for. We'll implement a genetic algorithm that attempts to guess an RGB color by evolving upon a random set of initial guesses, until it at some point evolves into the correct RGB value.</p>

<h2>What are genetic algorithms?</h2>

<p>Contrary to other types of algorithms, genetic algorithms do not have a clear path of improvement for solution candidiates, and it's not an exhaustive search. A genetic algorithm requires a few base components:</p>

<ul>
	<li>A representation of a candidate solutions.</li>
	<li>A way of calculating the correctness of a candidate solution, commonly referred to as the fitness function.</li>
	<li>A mutation function that changes a candidate solution slightly, in an attempt to obtain a better candidate.</li>
</ul>

<p>There are many different ways of implementing genetic algorithms, and there are usually many variables to adjust in a genetic algorithm. How large should the initial population be? How many solutions survives each generation? How do the survivors reproduce? In reproduction, does each survivor give birth to a single child, or multiple? As is noticeable from the terminology, genetic algorithms closely simulate biology.</p>

<h2>The building blocks</h2>

<p>What we're trying to accomplish with this demo implementation, is to guess a random RGB value. The RGB values are stored in what is basically a triple class. The only added functionality is an override of the ToString function to make it easier for us to print the solution candidates.</p>

<pre lang="csharp" escaped="true">class Rgb
{
	internal int R { get; set; }
	internal int G { get; set; }
	internal int B { get; set; }

	public override string ToString()
	{
		return string.Format("({0}, {1}, {2})", R, G, B);
	}
}</pre>

<p>Next up, we have an interface that represents a basic chromosome. In this implementation, a chromosome is basically a candidate solution. The chromosome is also the type that implements the fitness function, to evaluate it's own correctness. The fitness is returned as an arbitrary double value, the higher the value the better a candidate. The ChromosomeValue property is the actual value being tested - in this case, an instance of Rgb.</p>

<pre lang="csharp" escaped="true">interface IChromosome&lt;T&gt;
{
	double Fitness { get; }
	T ChromosomeValue { get; }
}</pre>

<h2>Template based genetic algorithm</h2>

<p>I've implemented the genetic algorithm using the <a href="http://www.dofactory.com/Patterns/PatternTemplate.aspx">template pattern</a> for easy customization and implementation of the algorithm. The algorithm itself is an abstract generic class. This means we have to subtype it before we can use it, a requirement due to the abstract template based implementation.</p>

<pre lang="csharp" escaped="true">public abstract class GeneticAlgorithm&lt;T&gt;</pre>

<p>There's a number of properties that are rather self explanatory, given the commenting.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// This is the amount of chromosomes that will be in the population at any generation.
/// &lt;/summary&gt;
protected int ChromosomePopulationSize;

/// &lt;summary&gt;
/// This is the number of chromosomes that survive each generation, after which they're mutated.
/// &lt;/summary&gt;
protected int GenerationSurvivorCount;

/// &lt;summary&gt;
/// This list holdes the chromosomes of the current population.
/// &lt;/summary&gt;
protected IList&lt;IChromosome&lt;T&gt;&gt; ChromosomePopulation;

/// &lt;summary&gt;
/// This is the current generation number. Incremented each time a new generation is made.
/// &lt;/summary&gt;
public int CurrentGenerationNumber;

/// &lt;summary&gt;
/// This is the current generation population.
/// &lt;/summary&gt;
public IEnumerable&lt;IChromosome&lt;T&gt;&gt; CurrentGenerationPopulation
{
	get { return ChromosomePopulation.AsEnumerable(); }
}</pre>

<p>The constructor takes in two parameters, the size of the population at any given generation, as well as the number of survivors when an evolution is performed - and a new generation is created, based on the survivors of the old generation.</p>

<p>Lastly, we set the current generation as generation number 1, and then we call createInitialChromosomes to instantiate the initial generation 1 population.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Initializes the genetic algorithm by evolving the initial generation of chromosomes.
/// &lt;/summary&gt;
/// &lt;param name="chromosomePopulationSize"&gt;The size of any generation.&lt;/param&gt;
/// &lt;param name="generationSurvivorCount"&gt;The number of chromosomes to survive the evolution of a generation.&lt;/param&gt;
public GeneticAlgorithm(int populationSize, int generationSurvivorCount)
{
	if (generationSurvivorCount &gt;= populationSize)
		throw new ArgumentException("The survival count of a generation must be smaller than the population size. Otherwise the population will become stagnant");

	if (generationSurvivorCount &lt; 2)
		throw new ArgumentException("Where would we be today if either Adam or Eve were alone?");

	ChromosomePopulationSize = populationSize;
	GenerationSurvivorCount = generationSurvivorCount;

	// Create initial population and set generation
	CurrentGenerationNumber = 1;
	createInitialChromosomes();
}</pre>

<p>The createInitialChromosome initializes the ChromosomePopulation list, and then it'll continue adding new chromosomes to it until the current population reaches the specified ChromosomePopulationSize. The initial random chromosomes are returned from the CreateInitialRandomChromosome function.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Creates the initial population of random chromosomes.
/// &lt;/summary&gt;
private void createInitialChromosomes()
{
	ChromosomePopulation = new List&lt;IChromosome&lt;T&gt;&gt;();

	for (int i = 0; i &lt; ChromosomePopulationSize; i++)
		ChromosomePopulation.Add(CreateInitialRandomChromosome());
}</pre>

<p>There are three abstract methods that must be implemented by any subclass, CreateInitialRandomChromosome being one of them. I'll go over the actual implementations later on.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Creates an arbitrary number of mutated chromosomes, based on the input chromosome.
/// &lt;/summary&gt;
protected abstract IEnumerable&lt;IChromosome&lt;T&gt;&gt; Mutate(IChromosome&lt;T&gt; chromosome);

/// &lt;summary&gt;
/// Creates a single random chromosome for the initial chromosome population.
/// &lt;/summary&gt;
protected abstract IChromosome&lt;T&gt; CreateInitialRandomChromosome();

/// &lt;summary&gt;
/// Selects the surviving chromosomes of the current generation.
/// &lt;/summary&gt;
/// &lt;returns&gt;Returns a list of survivors of the current generation.&lt;/returns&gt;
protected abstract IEnumerable&lt;IChromosome&lt;T&gt;&gt; GetGenerationSurvivors();</pre>

<p>The last method that's implemented in the abstract GeneticAlgorithm class is PerformEvolution. PerformEvolution will create a new population for the next generation. First the survivors of the old generation are selected by calling the GetGenerationSurvivors method, which is to be implemented by a subclass. All survivors of the old generation are automatically added to the new generation population.</p>

<p>Then we'll select a random survivor based on an weighted average of their fitness. The randomly selected survivor will be mutated, and the result of the mutation is added to the new generation population. The Mutate function may return an arbitrary number of results, so technically a single survivor could be the parent of all children in the new generation.</p>

<p>Finally we set the current population and increment the generation number.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Performs an evolution by picking up the generation survivors and mutating them.
/// &lt;/summary&gt;
public void PerformEvolution()
{
	IList&lt;IChromosome&lt;T&gt;&gt; newGeneration = new List&lt;IChromosome&lt;T&gt;&gt;();

	// Get the survivors of the last generation
	IEnumerable&lt;IChromosome&lt;T&gt;&gt; survivors = GetGenerationSurvivors();

	// Add the survivors of the previous generation
	foreach (var survivor in survivors)
		newGeneration.Add(survivor);

	// Until the population is full, add a new mutation of any two survivors, selected by weighted random based on their fitness.
	Random rnd = new Random();

	while (newGeneration.Count &lt; ChromosomePopulationSize)
	{
		// Get two random survivors, weighted random sort based on fitness
		var randomSurvivor = survivors
			.OrderBy(c =&gt; rnd.NextDouble() * c.Fitness)
			.First();

		foreach (var offspring in Mutate(randomSurvivor))
		{
			if (newGeneration.Count == ChromosomePopulationSize)
				break;

			newGeneration.Add(offspring);
		}
	}

	// Overwrite current population
	ChromosomePopulation = newGeneration;

	// Increment the current generation
	CurrentGenerationNumber++;
}</pre>

<h2>The rgb guessing implementation</h2>

<p>The actual implementation is a class inheriting from GeneticAlgorithm, specifying Rgb as the generic type we'll be working with.</p>

<pre lang="csharp" escaped="true">class RgbGuesser : GeneticAlgorithm&lt;Rgb&gt;</pre>

<p>The constructor just calls the base class directly, specifying the population size to be 100, and that there should be 10 survivors of each generation.</p>

<pre lang="csharp" escaped="true">public RgbGuesser()
	: base(100, 10)
{ }</pre>

<p>The CreateInitialRandomChromosome method just returns a new Rgb instance with random R, G and B vlaues between 1 and 255.</p>

<pre lang="csharp" escaped="true">protected override IChromosome&lt;Rgb&gt; CreateInitialRandomChromosome()
{
	return new RgbChromosome(random.Next(1, 256), random.Next(1, 256), random.Next(1, 256));
}</pre>

<p>I've implemented an optimization that makes sure the most fit candidate chromosome is always included in the survivors of each generation. This'll make sure we'll never have a new generation with a worse candidate solution that the last.</p>

<p>After returning the top candidate, we then return the remaining candidates based on a weighted random selection of the remaining population. The reason why we're not just returning the "top GenerationSurvivorCount" chromosomes is to avoid <a href="http://en.wikipedia.org/wiki/Genetic_algorithm">premature convergence</a>. Premature convergence is basically a fancy way to describe inbreeding. When our gene pool diversity is limited, so is the range of candidates that may come out of it. It's not a really big issue in the RGB guessing implementation, but premature convergence can be a big issue in other implementations - especially depending on the mutation implementation.</p>

<pre lang="csharp" escaped="true">protected override IEnumerable&lt;IChromosome&lt;Rgb&gt;&gt; GetGenerationSurvivors()
{
	// Return the best chromosome
	var topChromosome = this.ChromosomePopulation
		.OrderByDescending(c =&gt; c.Fitness)
		.First();

	// Return the remaining chromosomes from the pool
	var survivors = this.ChromosomePopulation
		.Where(c =&gt; c != topChromosome)
		.OrderByDescending(c =&gt; random.NextDouble() * c.Fitness)
		.Take(this.GenerationSurvivorCount - 1);

	yield return topChromosome;

	foreach (var survivor in survivors)
		yield return survivor;
}</pre>

<p>The final method to implement is the Mutate method. This is the one that's responsible for mutating a survivor into a new candidate solution that'll hopefully be better than the last. The implementation is really simple. We just make a new RgbChromosome and set it's R, G and B values to the same value as the parent chromosome, added a random value between -5 and 5. The Math.Max and Math.Min juggling is to avoid negative and 255+ values.</p>

<pre lang="csharp" escaped="true">protected override IEnumerable&lt;IChromosome&lt;Rgb&gt;&gt; Mutate(IChromosome&lt;Rgb&gt; chromosome)
{
	RgbChromosome mutation = new RgbChromosome(chromosome.ChromosomeValue.R, chromosome.ChromosomeValue.G, chromosome.ChromosomeValue.B);
	mutation.ChromosomeValue.R = Math.Min(255, Math.Max(0, mutation.ChromosomeValue.R + random.Next(-5, 6)));
	mutation.ChromosomeValue.G = Math.Min(255, Math.Max(0, mutation.ChromosomeValue.G + random.Next(-5, 6)));
	mutation.ChromosomeValue.B = Math.Min(255, Math.Max(0, mutation.ChromosomeValue.B + random.Next(-5, 6)));

	yield return mutation;
}</pre>

<h2>The RgbChromosome</h2>

<p>The final class is the one implementing the IChromosome interface.</p>

<pre lang="csharp" escaped="true">class RgbChromosome : IChromosome&lt;Rgb&gt;</pre>

<p>In this case I've hardcoded a target RGB value that we wish to guess. Note that this is only for demonstrations sake - usually in genetic algorithms we don't know the "answer" and will therefor have to base the fitness function on a set of rules that evaluate the fitness of the candidate.</p>

<pre lang="csharp" escaped="true">private Rgb targetRgb = new Rgb { R = 127, G = 240, B = 50 };</pre>

<p>The fitness function calculates the total difference in RGB values and subtracts that from the maximum difference. As a result, we get a fitness value with lower values indicating a worse solution.</p>

<pre lang="csharp" escaped="true">public double Fitness
{
	get
	{
		int maxDiff = 255 * 3;

		int rDiff = Math.Abs(chromosome.R - targetRgb.R);
		int gDiff = Math.Abs(chromosome.G - targetRgb.G);
		int bDiff = Math.Abs(chromosome.B - targetRgb.B);
		int totalDiff = rDiff + gDiff + bDiff;

		return maxDiff - totalDiff;
	}
}</pre>

<p>Here is the full IChromosome implementation:</p>

<pre lang="csharp" escaped="true">class RgbChromosome : IChromosome&lt;Rgb&gt;
{
	private Rgb targetRgb = new Rgb { R = 127, G = 240, B = 50 };
	private Rgb chromosome;

	public RgbChromosome(int r, int g, int b)
	{
		this.chromosome = new Rgb { R = r, G = g, B = b };
	}

	public double Fitness
	{
		get
		{
			int maxDiff = 255 * 3;

			int rDiff = Math.Abs(chromosome.R - targetRgb.R);
			int gDiff = Math.Abs(chromosome.G - targetRgb.G);
			int bDiff = Math.Abs(chromosome.B - targetRgb.B);
			int totalDiff = rDiff + gDiff + bDiff;

			return maxDiff - totalDiff;
		}
	}

	public Rgb ChromosomeValue
	{
		get { return chromosome; }
	}
}</pre>

<h2>Running the algorithm</h2>

<p>Running the algorithm is as simple as instantiating a new RgbGuesser and then calling PerformEvolution on it repeatedly. Note that there's no built in stop criteria in the algorithm, so it'll continue to evolve the candidates even though a perfect candidate may already have been evolved. This I've introduced a simple check to see whether a perfect candidate exists:</p>

<pre lang="csharp" escaped="true">if (topChromosomes.Where(c =&gt; c.Fitness == 255 * 3).Count() &gt; 0)</pre>

<p>The full code can be seen below:</p>

<pre lang="csharp" escaped="true">// Setup RgbGuesser
RgbGuesser rgbGuesser = new RgbGuesser();

// For each generation, write the generation number + top 5 chromosomes + fitness
for (int i = 1; i &lt; 100000; i++)
{
	Console.WriteLine("Generation: " + rgbGuesser.CurrentGenerationNumber);
	Console.WriteLine("-----");

	// Get top 5 chromosomes
	var topChromosomes = rgbGuesser.CurrentGenerationPopulation
		.OrderByDescending(c =&gt; c.Fitness)
		.Take(5);

	// Get bottom 5 chromosomes
	var bottomChromosomes = rgbGuesser.CurrentGenerationPopulation
		.OrderBy(c =&gt; c.Fitness)
		.Take(5);

	if (topChromosomes.Where(c =&gt; c.Fitness == 255 * 3).Count() &gt; 0)
	{
		Console.WriteLine();
		Console.WriteLine();
		Console.WriteLine();
		Console.WriteLine("### Perfect match found at generation " + rgbGuesser.CurrentGenerationNumber + "!");
		Console.Read();
		return;
	}

	// Print out top 5 and bottom 5 chromosomes
	foreach (var chromosome in topChromosomes)
		Console.WriteLine(Convert.ToInt32(chromosome.Fitness).ToString().PadLeft(3) + ": " + chromosome.ChromosomeValue);
	Console.WriteLine("-----");
	foreach (var chromosome in bottomChromosomes.OrderByDescending(c =&gt; c.Fitness))
		Console.WriteLine(Convert.ToInt32(chromosome.Fitness).ToString().PadLeft(3) + ": " + chromosome.ChromosomeValue);

	Console.WriteLine();
	Console.WriteLine();

	// Homage to Charles Darwin
	rgbGuesser.PerformEvolution();
}

Console.WriteLine("Done");
Console.ReadLine();</pre>

<p>Running the application should eventually result in a perfect candidate being found. If you're lucky, you'll find it at generation 42 :)</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/04/genetic_run_2.jpg"><img class="alignnone size-full wp-image-2148" alt="genetic_run_2" src="http://improve.dk/wp-content/uploads/2009/04/genetic_run_2.jpg" width="677" height="640" /></a></div></div>

<h2>Doing the numbers</h2>

<p>There are different ways of guessing an RGB value. We could just randomly guess until we hit the correct one - with a probability of 1/(255^3).</p>

<p>We could also iterate over all 255^3 solutions, eventually hitting one. Provided the target is completely random, we should hit it after 50% of the solutions have been tested - that is, after just about 8 million tests.</p>

<p>Another more clever approach, given the fitness function would be to just increment each RGB value once and fine the point at which an increment results in a lower score - then we've solved one of the RGB values. Using this approach, we can solve the problem in just 255*3 number of tries at most. But really, that's no fun!</p>

<p>Based on a quick series of tests, 50 seems to be the average max generation we'll have to hit before we've guess the correct RGB value. That's 50 generations of 100 candidates, for a total candidate count of 5000 - somewhat less than the random guessing and iterative solutions. To conclude - in this case, a genetic algorithm is far from the optimal solution, but it's an interesting way of approaching hard-to-define problems that may not have a single optimal solution that can be calculated within a certain time restraint. In those cases genetic algorithms can be a great way of approximating a close-to-perfect solution.</p>

<h2>Update</h2>

<p>Based on some of the comments I've received, I've posted an <a href="http://www.improve.dk/blog/2009/05/01/evolution-of-the-simple-genetic-algorithm">update to the genetic algorithm</a> to make it more "genetic".</p>

<h2>Downloads</h2>

<p>Sample solution code: <a href="http://improve.dk/wp-content/uploads/2009/04/GeneticTesting.zip">GeneticTesting.zip</a><a href="http://improve.dk/images/improve_dk/Windows-Live-Writer/Implementing-a-simple-genetic-algorithm_111FD/GeneticTesting.zip" target="_blank"></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1306</wp:post_id>
		<wp:post_date>2009-04-29 14:42:37</wp:post_date>
		<wp:post_date_gmt>2009-04-29 14:42:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>implementing-a-simple-genetic-algorithm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="algorithms"><![CDATA[Algorithms]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Implementing a Simple Genetic Algorithm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>932</wp:comment_id>
			<wp:comment_author><![CDATA[Jesper Jensen]]></wp:comment_author>
			<wp:comment_author_email>jj@icoder.dk</wp:comment_author_email>
			<wp:comment_author_url>http://icoder.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-30 06:19:33</wp:comment_date>
			<wp:comment_date_gmt>2009-04-30 06:19:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good article, but i have some questions:<br />If one should follow the theory behind this algorithm; Shouldn't the mutate function take another chromosone as parameter, to make some sort of crossover between two parents?<br />How would You design your fitness function, if you didn't have knowledge about the targetRGB?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>933</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-04-30 21:03:17</wp:comment_date>
			<wp:comment_date_gmt>2009-04-30 21:03:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There are multiple ways to implement genetic algorithms, just as there are different ways nature evolve. If we are to simulate the human evolution as closely as possible, then you're absolutely correct, we'd want to make an algorithm that took two chromosomes and mated them somehow. I actually did this as a test, taking in two chromosomes and then made 6 children (8 permutations, whereof two are identical to the parents) and returned those to the gene pool. It wasn't nearly as effective as the single chromosome manipulation however.<br /><br />My example resembles virus evolution more closely. Viruses don't mate per se, instead they evolve due to mutations and spreading to different hosts.<br /><br />If I didn't have an explicit target RGB value, then I'd probably have a set of rules to follow. &quot;We like red, with a hint of green in it&quot;. Based on that rule, one can setup a mathematical formula to calculate the fitness of an RGB color. While not knowing the exact result, this'll allow the fitness function to determine the fitness of a generic RGB color.<br /><br />I'm going to post a followup entry with a more involved example - just have to make it first :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>934</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>mbhoneycutt@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://trycatchfail.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-01 18:16:11</wp:comment_date>
			<wp:comment_date_gmt>2009-05-01 18:16:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post, the code is very clean and readable.<br /><br />To be fair though, this isn't really a genetic algorithm, not in the purest since.  The crossover operator (the mixing of two individuals) is what gives genetic algorithms their real power.  With just a mutation operator, it's not much better than a random walk of the solution space.  Crossover might not have helped much on this problem, but in practice, it is very important.  In most genetic algorithms, the probability of mutation occurring is kept very low, around 1%.  <br /><br />Still, very nice implementation!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>935</wp:comment_id>
			<wp:comment_author><![CDATA[Matt]]></wp:comment_author>
			<wp:comment_author_email>orion2480@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-01 20:26:53</wp:comment_date>
			<wp:comment_date_gmt>2009-05-01 20:26:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[+1 to the *other* Matt's post.  With just a mutation operator this is almost just a Monte Carlo simulation.  Genetic algorithms are used when the solution to a given problem is composed of several elements.  For example, if you were solving a traveling salesman problem, each edge in your graph is an element that can be &quot;shared&quot; between two different &quot;genomes&quot; in a cross-over event.  The benefit of genetic algorithms is that you can have different members of the population getting partials solutions to the problem based on their own evolution, and by merging these partial solutions in a crossover event you have the potential to find a better overall solution.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>936</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-01 20:30:29</wp:comment_date>
			<wp:comment_date_gmt>2009-05-01 20:30:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Matt<br /><br />Thanks for the comment!<br /><br />I'm certainly no expert on genetic algorithms, so I'll stand corrected if necessary :)<br /><br />However, I don't think a crossover between parents is necessary for it to be a valid genetic algorithm - although I'll agree that it's probably more 'pure'. According to Wikipedia, the reproduction is described as: &quot;Breed new generation through crossover and/or mutation (genetic operations) and give birth to offspring&quot;.<br /><br />The evolutionary algorithm is vastly more efficient than a random walk of - provided we're referring to a 100% random based walk. The key difference is that we've got a rather low mutation, and we're still building on the top 10% (minus the weighted offset) of the solutions, instead of just repeatedly trying new random values.<br /><br />Of course we can also do this a lot more efficiently by just keeping a single chromosome and repeatedly adding rnd(-5,5) to all values iteratively until we hit jackpot. That'll probably require way less than the 5k tries mine will usually require - but again, that's no fun :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>937</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-01 21:04:56</wp:comment_date>
			<wp:comment_date_gmt>2009-05-01 21:04:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Matt 1+2<br /><br />Please see my followup post based on your comments:<br /><a rel="nofollow external" href="http://www.improve.dk/blog/2009/05/01/evolution-of-the-simple-genetic-algorithm" title="http://www.improve.dk/blog/2009/05/01/evolution-of-the-simple-genetic-algorithm" rel="nofollow">www.improve.dk/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Evolution of The Simple Genetic Algorithm</title>
		<link>http://improve.dk/evolution-of-the-simple-genetic-algorithm/</link>
		<pubDate>Fri, 01 May 2009 21:03:35 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/05/01/evolution-of-the-simple-genetic-algorithm.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Based on my previous post on how to <a href="http://www.improve.dk/blog/2009/04/29/implementing-a-simple-genetic-algorithm">implement a simple genetic algorithm</a>, I got some great comments pointing out that the algorithm might not be the most pure form of a genetic algorithm. I won't disagree, though I will point out that evolution also does occur due to mutation alone, so genetic algorithms may come in different forms.</p>

<h2>Making it more "genetic"</h2>

<p>The basic point is that I was only mutating my chromosomes, I wasn't actually pairing them up and reproducing via a <a href="http://en.wikipedia.org/wiki/Crossover_(genetic_algorithm)">crossover function</a>.</p>

<p>I've changed my GeneticAlgorithm class slightly to give more control to the subclasses of how reproduction works, whether it be by mutation and/or crossover. What I've done is to change the Mutate method into a Reproduce method, taking in the complete survivor enumeration of IChromosome's instead. That way, the implementing subclass has full control over the selection and breeding of the survivors.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Creates an arbitrary number of mutated chromosomes, based on the input chromosome.
/// &lt;/summary&gt;
protected abstract IEnumerable&lt;IChromosome&lt;T&gt;&gt; Reproduce(IEnumerable&lt;IChromosome&lt;T&gt;&gt; survivors);</pre>

<p>The PerformEvolution method has been changed as well. Instead of selecting the survivor to mutate here, we let it be up to the subclass. Thus, we just loop until we've reached our ChromosomePopulationSize, while passing the survivors into the Reproduce method.</p>

<pre lang="csharp" escaped="true">/// &lt;summary&gt;
/// Performs an evolution by picking up the generation survivors and mutating them.
/// &lt;/summary&gt;
public void PerformEvolution()
{
	IList&lt;IChromosome&lt;T&gt;&gt; newGeneration = new List&lt;IChromosome&lt;T&gt;&gt;();

	// Get the survivors of the last generation
	IEnumerable&lt;IChromosome&lt;T&gt;&gt; survivors = GetGenerationSurvivors();

	// Add the survivors of the previous generation
	foreach (var survivor in survivors)
		newGeneration.Add(survivor);

	// Until the population is full, add a new mutation of any two survivors, selected by weighted random based on their fitness.
	Random rnd = new Random();

	while (newGeneration.Count &lt; ChromosomePopulationSize)
		foreach (var offspring in Reproduce(survivors))
		{
			newGeneration.Add(offspring);

			if (newGeneration.Count == ChromosomePopulationSize)
				break;
		}

	// Overwrite current population
	ChromosomePopulation = newGeneration;

	// Increment the current generation
	CurrentGenerationNumber++;
}</pre>

<p>Instead of overriding Mutate() in the RgbGuesser class, we're now overriding Reproduce. Given that we have three basic genes in each of our chromosomes (R, G &amp; B), we can produce 2^3 different combinations, including the original two combinations AAA and BBB. Each time Reproduce is called, we'll create all eight different combinations and mutate them slightly, before returning them to the GeneticAlgorithm. This way we're producing eight children of each parent pair of chromosomes, and thus, as Matt^2 pointed out, allowing the chromosomes of developing partial solutions themselves more efficiently.</p>

<pre lang="csharp" escaped="true">protected override IEnumerable&lt;IChromosome&lt;Rgb&gt;&gt; Reproduce(IEnumerable&lt;IChromosome&lt;Rgb&gt;&gt; survivors)
{
	// Get two random chromosomes from the survivors
	var chromA = survivors
		.OrderBy(c =&gt; random.NextDouble() * c.Fitness)
		.First();

	var chromB = survivors
		.OrderBy(c =&gt; random.NextDouble() * c.Fitness)
		.Where(c =&gt; c != chromA)
		.First();

	// Now generate and return each different combination based on the two parents, with slight mutation
	var aaa = new RgbChromosome(chromA.ChromosomeValue.R, chromA.ChromosomeValue.G, chromA.ChromosomeValue.B);
	mutateChromosome(aaa);
	yield return aaa;

	var aab = new RgbChromosome(chromA.ChromosomeValue.R, chromA.ChromosomeValue.G, chromB.ChromosomeValue.B);
	mutateChromosome(aab);
	yield return aab;

	var abb = new RgbChromosome(chromA.ChromosomeValue.R, chromB.ChromosomeValue.G, chromB.ChromosomeValue.B);
	mutateChromosome(abb);
	yield return abb;

	var aba = new RgbChromosome(chromA.ChromosomeValue.R, chromB.ChromosomeValue.G, chromA.ChromosomeValue.B);
	mutateChromosome(aba);
	yield return aba;

	var baa = new RgbChromosome(chromB.ChromosomeValue.R, chromA.ChromosomeValue.G, chromA.ChromosomeValue.B);
	mutateChromosome(baa);
	yield return baa;

	var bba = new RgbChromosome(chromB.ChromosomeValue.R, chromB.ChromosomeValue.G, chromA.ChromosomeValue.B);
	mutateChromosome(bba);
	yield return bba;

	var bab = new RgbChromosome(chromB.ChromosomeValue.R, chromA.ChromosomeValue.G, chromB.ChromosomeValue.B);
	mutateChromosome(bab);
	yield return bab;

	var bbb = new RgbChromosome(chromB.ChromosomeValue.R, chromB.ChromosomeValue.G, chromB.ChromosomeValue.B);
	mutateChromosome(bbb);
	yield return bbb;
}

private void mutateChromosome(IChromosome&lt;Rgb&gt; chromosome)
{
	chromosome.ChromosomeValue.R = Math.Min(255, Math.Max(0, chromosome.ChromosomeValue.R + random.Next(-5, 6)));
	chromosome.ChromosomeValue.G = Math.Min(255, Math.Max(0, chromosome.ChromosomeValue.G + random.Next(-5, 6)));
	chromosome.ChromosomeValue.B = Math.Min(255, Math.Max(0, chromosome.ChromosomeValue.B + random.Next(-5, 6)));
}</pre>

<h2>Reducing the chance of mutation</h2>

<p>As weenie points out in the comments, reducing the chance of mutation will actually improve results. By changing the mutateChromosome slightly, we only mutate it for every 1/3 reproductions.</p>

<p>At this point we've got several variables to tune - population size, survivor count, mutation probability &amp; mutation severeness. This sounds like an optimal problem for an evolutionary algorithm :)</p>

<pre lang="csharp" escaped="true">private void mutateChromosome(IChromosome&lt;Rgb&gt; chromosome)
{
	if (random.Next(1, 4) == 1)
	{
		chromosome.ChromosomeValue.R = Math.Min(255, Math.Max(0, chromosome.ChromosomeValue.R + random.Next(-5, 6)));
		chromosome.ChromosomeValue.G = Math.Min(255, Math.Max(0, chromosome.ChromosomeValue.G + random.Next(-5, 6)));
		chromosome.ChromosomeValue.B = Math.Min(255, Math.Max(0, chromosome.ChromosomeValue.B + random.Next(-5, 6)));
	}
}</pre>

<h2>Downloads</h2>

<p><a href="http://improve.dk/wp-content/uploads/2009/05/GeneticTesting2.zip">GeneticTesting2.zip - Sample code</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1307</wp:post_id>
		<wp:post_date>2009-05-01 23:03:35</wp:post_date>
		<wp:post_date_gmt>2009-05-01 21:03:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>evolution-of-the-simple-genetic-algorithm</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="algorithms"><![CDATA[Algorithms]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Evolution of The Simple Genetic Algorithm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>939</wp:comment_id>
			<wp:comment_author><![CDATA[weenie]]></wp:comment_author>
			<wp:comment_author_email>weeniearms@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-02 08:44:04</wp:comment_date>
			<wp:comment_date_gmt>2009-05-02 08:44:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To be honest, I think that the crossover operator you added changed almost nothing. The number of generations needed to find a valid solution varies from 30 to 200 with an average about 70-80. With a slight modification of the code provided i was able to reduce it to about 10-40 with an average about 20. The main problem in here is that you mutate every single chromosome you produce. All you have to do is decrease the mutation probability from 100% to about 10% and you'll see quite an improvement.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>940</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-02 12:36:14</wp:comment_date>
			<wp:comment_date_gmt>2009-05-02 12:36:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@weenie<br /><br />Thanks for the comment. That's what I love about blogging - you live to learn :)<br /><br />I've added an updated section to the entry, reducing the chance of mutation. And you're right, this does bring the average down to about 20 generations.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>941</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>brian_nospam@codeinreview.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.codeinreview.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-05-05 15:51:55</wp:comment_date>
			<wp:comment_date_gmt>2009-05-05 15:51:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Since this is a simple problem, creating a child for each possible combination of the parents gene's is a quick and easy solution, but when problems get larger (such that the number of combinations make this type of reproduction infeasible) and computation time becomes an issue (such that you don't want to be continuously re-evaluating individuals with the same genetic pattern), the crossover operation will work better if it only produces a small number of unique children (using a pivot point or a random selection of chromosomes).  There are a number of different types of crossover operations you can use to avoid simply creating every possible child (including duplicates).<br /><br />But of course, the beauty of these problems is that you get to tune the algorithm to best solve the problem at hand.  That is half the fun - there are so many ways to solve it, and always new things to try.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Tricky SQL Server Decimal Math</title>
		<link>http://improve.dk/tricky-sql-server-decimal-math/</link>
		<pubDate>Wed, 06 May 2009 11:31:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/05/06/tricky-sql-server-decimal-math.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>SQL Server datatypes are not always what they seem to be. <a href="http://www.performanceduo.com/">Martin Schmidt</a> recently had an <a href="http://www.performanceduo.com/post/Gc3a6t-en-Datatype-.aspx">interesting blog post (in danish)</a> regarding implicit decimal conversion that sparked my interest.</p>

<p>Let me sketch up the scenario. We have a simple table with a decimal column like so:</p>

<pre lang="tsql" escaped="true">CREATE TABLE tblDecimalTest
(
	DecimalColumn dec(5,2) NOT NULL
)</pre>

<p>Note that the DecimalColumn has a precision of five and a scale of two. That basically boils down to 999.99 being the largest number we can store and -999.99 being the smallest. The precision of five defines the maximum number of digits in the number, scale defines the number of digits to the right of the decimal point. If we insert an integer value of 999 it'll have .00 stored implicity, thus we can't insert neither 1000 nor 10000 without any decimal digits. Knowing the configured precision and scale is important, as we'll see in just a moment.</p>

<p>Let us insert a single row into the tblDecimalTest table.</p>

<pre lang="tsql" escaped="true">DECLARE @Decimal1 dec(5,2) = 20.5
DECLARE @Decimal2 dec(5,2) = 27.52
INSERT INTO tblDecimalTest (DecimalColumn) VALUES (@Decimal1 / @Decimal2)</pre>

<p>This is the result if we perform a select on the table:</p>

<pre lang="tsql" escaped="true">SELECT * FROM tblDecimalTest

DecimalColumn
0.74</pre>

<p>Both decimal variables were declared as dec(5,2) so it matches the column in the table. Calculating 20.5 / 27.52 on a standard calculator gives a result of 0.7449127, but as we're storing this with a scale of two, the value is rounded off to 0.74.</p>

<p>We just inserted a value of 20.5 / 27.52 into a dec(5,2) column. Let's make a select using those same variables:</p>

<pre lang="tsql" escaped="true">DECLARE @Decimal1 dec(5,2) = 20.5
DECLARE @Decimal2 dec(5,2) = 27.52
SELECT * FROM tblDecimalTest WHERE DecimalColumn = @Decimal1 / @Decimal2

Results:
(0 row(s) affected)</pre>

<p>What is that? No results! Why does this happen? After all, we just inserted @Decimal1 / @Decimal2, so surely we should be able to select that row again? The key lies in how SQL Server <a href="http://msdn.microsoft.com/en-us/library/ms190476.aspx">converts decimal datatypes during math operations</a>. What we're looking for is the divison operator which defines the following precision and scale calculations:</p>

<pre class="plain">e1 / e2:
Result precision = p1 - s1 + s2 + max(6, s1 + p2 + 1)
Result scale = max(6, s1 + p2 + 1)</pre>

<p>Let's input our values into that formula.</p>

<pre class="plain">dec(5,2) / dec(5,2):
Precision	= p1-s1+s2 + max(6, s1+p2+1)	= 5-2+2 + max(6, 2+5+1)		= 5 + max(6,8)	= 5+8 = 13
Scale		= max(6, s1+p2+1)		= max(6, 2+5+1)			= max(6,8)	= 8
Type		= dec(13,8)</pre>

<p>Thus, our division of two dec(5,2) variables is implicitly converted into a dec(13,8) value! Similar conversions are made for addition, subtraction and multiplication.</p>

<pre class="plain">dec(5,2) + dec(5,2), dec(5,2) - dec(5,2):
Precision	= max(s1, s2) + max(p1-s1, p2-s2) + 1	= max(5, 5) + max(3, 3) + 1	= 5+3+1	= 9
Scale		= max(2, 2)				= 2
Type		= dec(9,2)

dec(5,2) * dec(5,2):
Precision	= p1+p2+1	= 5+5+1	= 11
Scale		= s1+2		= 2+2	= 4
Type		= dec(11,4)</pre>

<p>Let's try and check the division result directly:</p>

<pre lang="tsql" escaped="true">DECLARE @Decimal1 dec(5,2) = 20.5
DECLARE @Decimal2 dec(5,2) = 27.52
SELECT @Decimal1 / @Decimal2

(No column name)
0.74491279</pre>

<p>When performing the WHERE clause, we're in fact comparing a dec(5,2) column with a dec(13,8) value. Behind the scenes, SQL Server will implicitly convert the values to a common datatype that fits both - which is dec(13,8). With a precision of 13 and a scale of 8, 0.74 and 0.74491279 are not equal, and thus we don't get any results back. If we were to cast the divison as a dec(5,2) explicitly, we would find the row:</p>

<pre lang="tsql" escaped="true">DECLARE @Decimal1 dec(5,2) = 20.5
DECLARE @Decimal2 dec(5,2) = 27.52
SELECT * FROM tblDecimalTest WHERE DecimalColumn = CAST(@Decimal1 / @Decimal2 AS dec(5,2))

DecimalColumn
0.74</pre>

<p>While testing in SQL Server Management Studio, this might be an obvious problem. When encountering the same problem from code, it's much more difficult to notice - especially if you don't know the precise schema you're working against. Observe the following code working on an empty tblDecimalTest table.</p>

<pre lang="csharp" escaped="true">using(SqlConnection conn = new SqlConnection(@"Data Source=.SQL2008;Initial Catalog=Test;Integrated Security=SSPI"))
{
	using(SqlCommand cmd = conn.CreateCommand())
	{
		decimal dec1 = 20.5M;
		decimal dec2 = 27.52M;

		cmd.CommandText = "INSERT INTO tblDecimalTest (DecimalColumn) VALUES (@DecimalValue)";
		cmd.Parameters.Add("@DecimalValue", SqlDbType.Decimal).Value = dec1 / dec2;

		conn.Open();
		cmd.ExecuteNonQuery();

		cmd.CommandText = "SELECT COUNT(*) FROM tblDecimalTest WHERE DecimalColumn = @DecimalValue";
		Console.WriteLine("Implicit cast: " + cmd.ExecuteScalar());

		cmd.CommandText = "SELECT COUNT(*) FROM tblDecimalTest WHERE DecimalColumn = CAST(@DecimalValue as dec(5,2))";
		Console.WriteLine("Explicit cast: " + cmd.ExecuteScalar());
	}
}</pre>

<p>The result:</p>

<pre class="plain">Implicit cast: 0
Explicit cast: 1</pre>

<p>Without knowledge of the schema, and how SQL Server treats decimal math operations, this could've been a tough bug to track down.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1308</wp:post_id>
		<wp:post_date>2009-05-06 11:31:21</wp:post_date>
		<wp:post_date_gmt>2009-05-06 11:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tricky-sql-server-decimal-math</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="post_tag" nicename="decimal"><![CDATA[Decimal]]></category>
		<category domain="post_tag" nicename="implicit-conversion"><![CDATA[Implicit Conversion]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[Math]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Tricky SQL Server Decimal Math]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>942</wp:comment_id>
			<wp:comment_author><![CDATA[Martin G C Davies]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-06 11:47:23</wp:comment_date>
			<wp:comment_date_gmt>2012-09-06 11:47:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A slight error fixed below:-<br /><br />dec(5,2) + dec(5,2), dec(5,2) - dec(5,2):<br />Precision   = max(s1, s2) + max(p1-s1, p2-s2) + 1   = max(2, 2) + max(3, 3) + 1 = 2+3+1 = 9<br />Scale       = max(2, 2) = 2<br />Type        = dec(6,2)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>943</wp:comment_id>
			<wp:comment_author><![CDATA[Martin G C Davies]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-06 11:48:54</wp:comment_date>
			<wp:comment_date_gmt>2012-09-06 11:48:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And that should have been:-<br /><br />dec(5,2) + dec(5,2), dec(5,2) - dec(5,2):<br />Precision   = max(s1, s2) + max(p1-s1, p2-s2) + 1   = max(2, 2) + max(3, 3) + 1 = 2+3+1 = 6<br />Scale       = max(2, 2) = 2<br />Type        = dec(6,2)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Object Identifier Does Not Represent a Valid Object</title>
		<link>http://improve.dk/iis7-the-object-identifier-does-not-represent-a-valid-object/</link>
		<pubDate>Wed, 08 Jul 2009 13:22:25 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/07/08/iis7-the-object-identifier-does-not-represent-a-valid-object.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When adding sites to IIS7 either by script or by editing the config files directly, you may receive an error in the sites list that says:</p>

<blockquote>Unknown: The object identifier does not represent a valid object. (Exception from HRESULT: 0x800710D8)</blockquote>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/07/iisvalidobject_2.jpg"><img class="alignnone size-full wp-image-1979" alt="iisvalidobject_2" src="http://improve.dk/wp-content/uploads/2009/07/iisvalidobject_2.jpg" width="1024" height="187" /></a></div></div>

<p>I'm running multiple servers in an NLB setup, using the shared configuration feature of IIS7 (config files are stored on a SAN exposed through a CIFS share). My first thoughts were that this was probably related to the shared configuration / network access, but I'm able to reproduce the problem even with location configuration. An interesting observation is that all IIS's on all servers using the shared config will display the same errors on the same sites.</p>

<p>Restarting the sites, app pool or even IIS does not help on the issue, neither does restarting the IIS Manager itself. I have not tried restarting the servers, and I'm not going to.</p>

<p>The only relevant info I could find on Google was <a href="http://forums.iis.net/t/1151841.aspx">this thread</a> on forums.iis.net. Besides various mutations of the restart option, the thread mentions it might be a permissions issue. I'm running IIS Manager under an administrative account and all application pools run under processes with access to the configuration directory. Running Process Monitor confirms that there are no permission issues.</p>

<p>What I've found since then is that a simple file tocuh will fix the problem. That is, if I open the file in notepad and make/undo a change and save the file, all IIS's will reload the configuration and all sites will have loaded correctly on all servers. Using Process Monitor I've verified that change notifications are being sent out to all servers, thereby notifying them of an update to the configuration, causing the reload in IIS. The aforementioned thread does note that IIS will basically start a timer with an interval of a few ms before it'll update the site list of a config change - if reading the config file takes longer than this timeout, we may be in trouble. However, this issue should be fixed by a refresh and most certainly by a restart of the IIS. Also, since this is happening on all servers, it would seem weird that they all exceed the timeout.</p>

<p>To add confusion, this bug is temporal. If I add three sites programmaticaly (three transactions - they're not committed all at once, but in succession) using code like this:</p>

<pre lang="csharp" escaped="true">using (ServerManager mgr = new ServerManager())
{
	if (mgr.Sites[name] != null)
		mgr.Sites.Remove(mgr.Sites[name]);

	// Create site
	Site site = mgr.Sites.Add(name, "http", "*:80:" + domain, physicalPath);

	// Set app pool
	foreach (var app in site.Applications)
		app.ApplicationPoolName = pool;

	// Add extra bindings
	foreach (string hostname in extraBindings)
		site.Bindings.Add("*:80:" + hostname, "http");

	mgr.CommitChanges();
}</pre>

<p>Sometimes all sites work, sometimes 1-3 of them don't. Usually two of them will have failed while one will be working. Running the exact code again will fix the problem. The code is made so it'll just recreate a website if it already exists and thus running the code again will basically just touch the file, causing reloads of the config files across the servers. If I try to access the sites programmatically, I'll receive the same exception as is displayed in the IIS Manager and as a result I might actually be able to detect this issue and just keep retrying until all sites work.</p>

<p>As an alternative, I've also tried just generating the complete applicationHost.config file from scratch so that all changes are definitely made at the same time. By creating the applicationHost.config file separately and then replacing the old one, I don't get the "valid object" error any more. However, a random number of websites &amp; pools will be in the "stopped" state for no apparent reason. All sites &amp; pools have the auto start attributes set to true. I can start the sites manully without problems, it's not a good solution though seeing as there's hundreds of sites and it'll take a considerably amount of time to start half of them manually. Fortunately that part is easy to script:</p>

<pre lang="csharp" escaped="true">using (ServerManager mgr = new ServerManager())
{
	// Start all app pools
	foreach (var pool in mgr.ApplicationPools)
		pool.Start();

	log("Pools started - Done");

	// Start all sites
	foreach (var site in mgr.Sites)
		site.Start();

	log("Sites started - Done");
}</pre>

<p>Anyone else experiencing this issue and have found the cause? Or do you have a better workaround than what I'm doing?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1309</wp:post_id>
		<wp:post_date>2009-07-08 13:22:25</wp:post_date>
		<wp:post_date_gmt>2009-07-08 13:22:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iis7-the-object-identifier-does-not-represent-a-valid-object</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-7"><![CDATA[IIS 7]]></category>
		<category domain="post_tag" nicename="servermanager"><![CDATA[ServerManager]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The Object Identifier Does Not Represent a Valid Object]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>944</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Perry]]></wp:comment_author>
			<wp:comment_author_email>mark.perry@powerplaydirect.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-24 14:11:20</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 14:11:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am also experiencing the same issue. Did you end up find a suitable fix?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>945</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-24 14:43:44</wp:comment_date>
			<wp:comment_date_gmt>2009-08-24 14:43:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Mark<br />Unfortunately not, I'm still stuck on the &quot;file touch&quot; solution. While crude, it works rather reliably.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>946</wp:comment_id>
			<wp:comment_author><![CDATA[Mark Perry]]></wp:comment_author>
			<wp:comment_author_email>mark.perry@powerplaydirect.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-17 12:10:20</wp:comment_date>
			<wp:comment_date_gmt>2009-09-17 12:10:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi<br /><br />Just to say that I have fixed the issue that I was experiencing.<br />This article shows you the steps that I took:<br /><br /><a rel="nofollow external" href="http://blogs.iis.net/webtopics/archive/2009/03/15/caution-while-xcopying-iis-7-0-config-files.aspx" title="http://blogs.iis.net/webtopics/archive/2009/03/15/caution-while-xcopying-iis-7-0-config-files.aspx" rel="nofollow">blogs.iis.net/...</a> <br />I hope this fixes your issues.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>947</wp:comment_id>
			<wp:comment_author><![CDATA[Rob]]></wp:comment_author>
			<wp:comment_author_email>rob@robvolk.com</wp:comment_author_email>
			<wp:comment_author_url>http://robvolk.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-06-04 18:29:04</wp:comment_date>
			<wp:comment_date_gmt>2010-06-04 18:29:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I fixed the issue by stopping and starting IIS manually.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>948</wp:comment_id>
			<wp:comment_author><![CDATA[Bjarke]]></wp:comment_author>
			<wp:comment_author_email>bme@unik.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-08-16 09:39:52</wp:comment_date>
			<wp:comment_date_gmt>2010-08-16 09:39:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've been experiencing the same problem. In my case it was because I've set the application pool to run using a specific user account. After changing the user account password the problem occurred. The solution in this case was to enter the advanced settings of the application pool and reenter the user account and password.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>949</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>christopher.sears@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-08-17 11:03:22</wp:comment_date>
			<wp:comment_date_gmt>2010-08-17 11:03:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had this on IIS7.5 and I think the problem lies with &quot;Windows Process Activation Service&quot;.  Restarting the site, app pool and W3SVC did not resolve, but restarting WPAS did as did IISRESET which includes WPAS.  I'm not sure about the file touch approach, as I had two servers running off a shared config file and once I'd fixed the first, the second was still showing the problem with new sites I'd created successfully on the first (and therefore updating the shared config file).  Once WPAS was restarted on both servers, everything started to behave as expected.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>950</wp:comment_id>
			<wp:comment_author><![CDATA[jryo3101]]></wp:comment_author>
			<wp:comment_author_email>jryo3101@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-10-28 13:36:38</wp:comment_date>
			<wp:comment_date_gmt>2010-10-28 13:36:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I recently saw this issue on an IIS7.5 (2008 R2) server.  The site experiencing this problem had both http and https specified in the Advanced Settings | Enabled Protocols field.<br /><br />According to MS, specifying http as an enabled protocol will also enable https and allow you to create a site binding for tcp 443.<br /><br />Removing https allowed the site to start and stop without this error coming up.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>devLink 2009 Followup</title>
		<link>http://improve.dk/devlink-2009-followup/</link>
		<pubDate>Mon, 17 Aug 2009 09:33:51 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/08/17/devlink-2009-followup.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm finally sitting in the train on my way home from the Airport and an excellent week spent in Nashville, also known as Nash Vegas.</p>

<p>First of all, major kudos go out to <a href="http://www.johnkellar.com/">John Kellar (@johnkellar)</a> and the rest of the <a href="http://www.devlink.net/">devLINK</a> team. I still can't believe the amazing quality of devLINK as a conference, the speaker lineup, food, party, etc, all for a price of just $75! From what I gathered, there were only three international participants at devLINK this year, including me and <a href="http://www.twitter.com/KasperVesth">@KasperVesth</a> - if devLINK continues its current path, I'm sure there'll be plenty more next year.</p>

<p>Also thanks to Elijah Manor for giving me and <a href="http://www.twitter.com/KasperVesth">@KasperVesth</a> a ride home from <a href="http://www.lipscomb.edu/">Lipscomb</a> - cabs are nowhere to be found out there! Likewise, thanks to John Doe (sorry, can't remember your name!) from who we hitched a ride back to the Sheraton from Lipscomb after having walked a mile down the road and realized cabs weren't around.</p>

<p>Besides having to reboot my laptop at the last minute due to my virtual machines not recognizing my network, I think the presentation went quite well. Not as many people as I'd hoped for, but I guess having the last slot with a narrow topic is a challenge in that regard.</p>

<p>You can download my <a href="http://www.improve.dk/downloads/Speech_NLB.rar">code, slides and videos here</a>. I've not included the virtual PCs since they'd take up around 40GB to download.</p>

<p>I hope I'll be able to join you again next year, providing the economy &amp; work schedule allows it :)</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/08/devlink1_2.jpg"><img class="alignnone size-full wp-image-1981" alt="devlink1_2" src="http://improve.dk/wp-content/uploads/2009/08/devlink1_2.jpg" width="1024" height="768" /></a></div></div>

<p><i><a href="http://twitter.com/gainesk">Gaines Kergosien</a> in his chainmain at the Community Leadership Summit the day before devLINK.</i></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/08/devlink2_2.jpg"><img class="alignnone size-full wp-image-1982" alt="devlink2_2" src="http://improve.dk/wp-content/uploads/2009/08/devlink2_2.jpg" width="1024" height="768" /></a></div></div>

<p><i>The outdoor eating area.</i></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/08/devlink3_2.jpg"><img class="alignnone size-full wp-image-1983" alt="devlink3_2" src="http://improve.dk/wp-content/uploads/2009/08/devlink3_2.jpg" width="1024" height="768" /></a></div></div>

<p><i>I've never seen this high a concentration of guitars at any conference!</i></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/08/devlink4_2.jpg"><img class="alignnone size-full wp-image-1984" alt="devlink4_2" src="http://improve.dk/wp-content/uploads/2009/08/devlink4_2.jpg" width="1024" height="768" /></a></div></div>

<p><i>The main entrance at Lipscomb University - perfect venue for the event. Could've used more cabs in the vicinity however.</i></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/08/devlink5_2.jpg"><img class="alignnone size-full wp-image-1985" alt="devlink5_2" src="http://improve.dk/wp-content/uploads/2009/08/devlink5_2.jpg" width="1024" height="768" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/08/devlink6_2.jpg"><img class="alignnone size-full wp-image-1986" alt="devlink6_2" src="http://improve.dk/wp-content/uploads/2009/08/devlink6_2.jpg" width="1024" height="768" /></a></div></div>

<p><i>Hands down the best conference party I've attended. Free buffet at the local Nashville Sounds baseball game. Awesome.</i></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1310</wp:post_id>
		<wp:post_date>2009-08-17 09:33:51</wp:post_date>
		<wp:post_date_gmt>2009-08-17 09:33:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>devlink-2009-followup</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="devlink"><![CDATA[devLink]]></category>
		<category domain="post_tag" nicename="nashville"><![CDATA[Nashville]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Making the ASP.NET State Service Work Across Network</title>
		<link>http://improve.dk/making-the-aspnet-state-service-work-across-network/</link>
		<pubDate>Mon, 24 Aug 2009 18:35:01 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/08/24/making-the-asp-net-state-service-work-across-network.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Once you start distributing your ASP.NET website across multiple webservers, you're going to need a way to share session state. That is, unless your app is stateless, in which case scaling it should be a breeze!</p>

<p>One of the easiest ways to provide common session state for a small cluster (very dependant on load and hardware specs, but ~10 servers max, per state server), is to use the built-in ASP.NET State Service. It's a free service that's installed alongside the .NET Framework on all Windows servers.</p>

<p>While the InProc session storage is stored directly in the w3wp process, the ASP.NET State Service is an independant process that runs alongside your IIS w3wp processes. The State Service does not have to run on a machine with IIS installed - it can run on a machine dedicated to serving session state for other web servers running IIS.</p>

<h2>Performance</h2>

<p>Switching from InProc to State Service <i>will</i> have an impact on performance. We now have to cross not only process boundaries, but also machine boundaries. Furthermore, once we go out-of-process, all objects will have to be serialized, requiring extra work and requires all objects to be marked with the <a href="http://msdn.microsoft.com/en-us/library/system.serializableattribute.aspx">[Serializable]</a> attribute.</p>

<p>The State Service performance is heavily reliant on memory. Once physical memory has been exhausted it'll start paging to disk which will kill performance quickly. Make sure to monitor the memory load on your State Service machine(s) and adjust memory accordingly.</p>

<h2>Enabling remote connectivity</h2>

<p>By default, the State Service will only allow local-to-machine connections. To allow remote connections you'll have to set the HKLMSYSTEMCurrentControlSetServicesaspnet_stateParametersAllowRemoteConnection key to a value of '1'. After changing the AllowRemoveConnection key value, you'll have to restart the State Service service for the change to take effect. Also make sure your firewall allows connectivity to the State Service port (TCP 42424 by default).</p>

<h2>Requirements</h2>

<ul>
	<li>All session objects must be serializable.</li>
	<li>All IIS websites that are to share session state must have a common IIS application path (the <a href="http://improve.dk/viewimage/iisvalidobject">ID column in the sites list</a>). I strongly recommend you look into the IIS7 <a href="http://learn.iis.net/page.aspx/264/shared-configuration/">Shared Configuration</a> feature as it'll help you keep all the web servers IIS7 configuration in synch, including the application path.</li>
	<li>All websites that are to share session state must have the same <a href="http://msdn.microsoft.com/en-us/library/ms998288.aspx">&lt;machineKey /&gt;</a> values so they're able to read one anothers sessions. You can <a href="http://aspnetresources.com/tools/keycreator.aspx">generate the keys online</a>.</li>
</ul>

<h2>Scalability</h2>

<p>If you start saturating your dedicated State Service machine, it's possible to implement session state partitioning by implementing the<a href="http://msdn.microsoft.com/en-us/library/system.web.ipartitionresolver.aspx">System.Web.IPartitionResolver</a> interface. By creating your own implementating, you can route new requests to different state servers and perhaps even check whether the state servers are available or not, to add redundancy. Note however that this will not give you redundancy in case the State Service crashes either due to software or hardware.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1311</wp:post_id>
		<wp:post_date>2009-08-24 18:35:01</wp:post_date>
		<wp:post_date_gmt>2009-08-24 18:35:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>making-the-aspnet-state-service-work-across-network</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="session"><![CDATA[Session]]></category>
		<category domain="post_tag" nicename="state-server"><![CDATA[State Server]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[making-the-asp-net-state-service-work-across-network]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Making the ASP.NET State Service Work Across Network]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>951</wp:comment_id>
			<wp:comment_author><![CDATA[Luke Puplett]]></wp:comment_author>
			<wp:comment_author_email>lukepuplett@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.lukepuplett.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-08-26 10:21:57</wp:comment_date>
			<wp:comment_date_gmt>2009-08-26 10:21:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Readers may also be interested in Microsoft's fault-tolerant distributed caching project called &quot;Velocity&quot;.<br /><br /><a rel="nofollow external" href="http://channel9.msdn.com/shows/ARCast.TV/ARCastTV-Scott-Hanselman-on-scaling-websites-with-caching/" title="http://channel9.msdn.com/shows/ARCast.TV/ARCastTV-Scott-Hanselman-on-scaling-websites-with-caching/" rel="nofollow">channel9.msdn.com/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Cost of Latent Logging Code</title>
		<link>http://improve.dk/the-cost-of-latent-logging-code/</link>
		<pubDate>Sat, 12 Sep 2009 18:27:22 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/09/12/the-cost-of-latent-logging-code.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Logging is an integral part of most applications, whether it's for logging performance metrics or causality data. Avoiding performance hits due to logging can be tricky though as we don't want to spend CPU cycles on the logging infrastructure when logging is disabled, while still keeping the full logging ability when required.</p>

<p>Imagine the following scenario in which we want to log an exception in our application:</p>

<pre lang="csharp" escaped="true">Logger.Log("An error occured at " + DateTime.Now + " on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");</pre>

<p>Inside the Logger.Log method we may have a check for whether logging is enabled like the following:</p>

<pre lang="csharp" escaped="true">if(LoggingEnabled)
	File.AppendAllText("Log.txt", logMessage + Environment.NewLine);</pre>

<p>What's the problem? Although we do not touch the file system when logging is disabled, we still incur the rather large overhead of string concatenation and retrieving the machine and process name. Usually this overhead will be even larger depending on what extra information is logged as part of the actual log message. Yes, we could append the machine and process names within the Logger.Log method, but that's beyond the problem I'm describing.</p>

<p>We can avoid this by checking for LoggingEnabled in our actual application code:</p>

<pre lang="csharp" escaped="true">if(Logger.LoggingEnabled)
	Logger.Log("An error occured at " + DateTime.Now + " on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");</pre>

<p>While this does save us from doing string concatenation and retrieving other data when logging is disabled, it's rather ugly to have logging checks scattered around the application code.</p>

<p>An alternative to sending a log message directly to the Logger.Log method would be to send a Func that fetches the log message if needed:</p>

<pre lang="csharp" escaped="true">public class Logger
{
	public static void Log(Func&lt;string&gt; message)
	{
		if (LoggingEnabled)
			File.AppendAllText("Log.txt", message() + Environment.NewLine);
	}
}</pre>

<pre lang="csharp" escaped="true">Logger.Log(() =&gt; "An error occured at " + DateTime.Now + " on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");</pre>

<p>This has the big benefit of only executing the actual logging message functionality if logging is enabled, thus reducing the overhead to a near zero.</p>

<p>While this is rather straight forward as long as the logging is performed synchrounously, there's a pitfall if we perform asynchronous logging. Take the following asynchronous Logger implementation as an example:</p>

<pre lang="csharp" escaped="true">public static class Logger
{
	private static Queue&lt;Func&lt;string&gt;&gt; logMessages = new Queue&lt;Func&lt;string&gt;&gt;();
	public static bool LoggingEnabled { get; set; }

	public static void Log(Func&lt;string&gt; message)
	{
		if (LoggingEnabled)
			logMessages.Enqueue(message);
	}

	public static void FlushMessages()
	{
		while(logMessages.Count &gt; 0)
			File.AppendAllText("Log.txt", logMessages.Dequeue()() + Environment.NewLine);
	}
}</pre>

<p>Instead of outputting the log message to the log file immediately when the Log function is called, we now store the actual log messages in a <a href="http://en.wikipedia.org/wiki/FIFO_(computing)">FIFO</a> queue. At some point we'll call Logger.FlushMessages to flush out the messages to the text file. To optimize the process we'd usually concatenate the messages in a StringBuilder and perform just a single sequential write to disk, but to KISS I'm just writing out the messages one by one.</p>

<p>We'll perform a number of logs using the following code:</p>

<pre lang="csharp" escaped="true">string date = DateTime.Now.ToString();

Logger.Log("An error occured at " + DateTime.Now + " (" + date + ") on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");</pre>

<p>If you open the log file, you'll notice a discrepancy between the two dates that are logged, while you might expect them to be identical. As the actual lambda function is performed at log flush time instead of log time, the DateTime.Now variable will include the flush moment instead of the original logging moment.</p>

<p>The solution in this case is simple. All we need to do is to store the results of the log Funcs instead of the actual funcs:</p>

<pre lang="csharp" escaped="true">public static class Logger
{
	private static Queue&lt;string&gt; logMessages = new Queue&lt;string&gt;();
	public static bool LoggingEnabled { get; set; }

	public static void Log(Func&lt;string&gt; message)
	{
		if (LoggingEnabled)
			logMessages.Enqueue(message());
	}

	public static void FlushMessages()
	{
		while(logMessages.Count &gt; 0)
			File.AppendAllText("Log.txt", logMessages.Dequeue() + Environment.NewLine);
	}
}</pre>

<p>We can still implement asynchronous logging, as long as the actual log message is retrieved synchronously or we make sure the logging Func only references local immutable variables - though the last case kinda destroys the performance gain.</p>

<pre lang="csharp" escaped="true">string date = DateTime.Now.ToString();

Logger.Log(() =&gt; "An error occured at " + date + " on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");</pre>

<p>To sum up the speed gains of using deferrered lambda logging, I've implemented a simple synchronous Logger implementation:</p>

<pre lang="csharp" escaped="true">public static class Logger
{
	public static bool LoggingEnabled { get; set; }

	public static void Log(string message)
	{
		if (LoggingEnabled)
			File.AppendAllText("Log.txt", message + Environment.NewLine);
	}

	public static void Log(Func&lt;string&gt; message)
	{
		if (LoggingEnabled)
			File.AppendAllText("Log.txt", message() + Environment.NewLine);
	}
}</pre>

<p>And to perform the actual performance measurements I'm using my <a href="http://www.improve.dk/blog/2008/04/16/profiling-code-the-easy-way">CodeProfiler</a> class with 1000 iterations of the logging code:</p>

<pre lang="csharp" escaped="true">class Program
{
	static void Main(string[] args)
	{
		Logger.LoggingEnabled = true;
		var timeWithLoggingEnabled = profileCode();
		var lambdaTimeWithLoggingEnabled = profileLambdaCode();

		Logger.LoggingEnabled = false;
		var timeWithLoggingDisabled = profileCode();
		var lambdaTimeWithLoggingDisabled = profileLambdaCode();

		Console.WriteLine("Logging enabled: " + timeWithLoggingEnabled.TotalMilliseconds);
		Console.WriteLine("Lambda logging enabled: " + lambdaTimeWithLoggingEnabled.TotalMilliseconds);
		Console.WriteLine("Logging disabled: " + timeWithLoggingDisabled.TotalMilliseconds);
		Console.WriteLine("Lambda logging disabled: " + lambdaTimeWithLoggingDisabled.TotalMilliseconds);
		Console.Read();
	}

	static TimeSpan profileCode()
	{
		return CodeProfiler.ProfileAction(() =&gt;
		{
			Logger.Log("An error occured at " + DateTime.Now + " on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");
		}, 1000);
	}

	static TimeSpan profileLambdaCode()
	{
		return CodeProfiler.ProfileAction(() =&gt;
		{
			Logger.Log(() =&gt; "An error occured at " + DateTime.Now + " on computer " + Environment.MachineName + " in process" + Process.GetCurrentProcess().ProcessName + ".");
		}, 1000);
	}
}</pre>

<p>The results:</p>

<blockquote>
Logging enabled: 1440,2764
Lambda logging enabled: 1483,0738
Logging disabled: 763,1717
Lambda logging disabled: 0,6516
</blockquote>

<p>As we can see from the results, even with logging disabled it still costs us 763ms using the normal logging procedure. By deferring the execution of the log message we only incur an overhead of 0,65ms when logging is disabled. When logging is enabled the execution costs are ~identical.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1312</wp:post_id>
		<wp:post_date>2009-09-12 18:27:22</wp:post_date>
		<wp:post_date_gmt>2009-09-12 18:27:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-cost-of-latent-logging-code</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="logging"><![CDATA[Logging]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The Cost of Latent Logging Code]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>953</wp:comment_id>
			<wp:comment_author><![CDATA[Carel Lotz]]></wp:comment_author>
			<wp:comment_author_email>carel.lotz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dotnet.org.za/cjlotz</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-18 08:47:55</wp:comment_date>
			<wp:comment_date_gmt>2009-09-18 08:47:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Another downfall of this approach is that you cannot automatically log the place where the logging occured as the log statement is deferred via the lamda expression.  This quickly breaks up the flow of your log statements as it doesn't accurately reflect where the logging statement was made from.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>954</wp:comment_id>
			<wp:comment_author><![CDATA[nappisite]]></wp:comment_author>
			<wp:comment_author_email>jnappi@nappisite.com</wp:comment_author_email>
			<wp:comment_author_url>http://blog.nappisite.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-18 12:13:49</wp:comment_date>
			<wp:comment_date_gmt>2009-09-18 12:13:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting idea, worth further invesigation.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>955</wp:comment_id>
			<wp:comment_author><![CDATA[Damian Powell]]></wp:comment_author>
			<wp:comment_author_email>damian@shadow-angel.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-18 13:35:41</wp:comment_date>
			<wp:comment_date_gmt>2009-09-18 13:35:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[For a website, do we really care about spending 2 seconds logging for every 1000 requests served? My guess is no. Especially when we compare with the potential time required for tracking down a multi-threading bug caused by using an asynchronous logging implementation, or trying to understand why &quot;my application doesn't work but as soon as I turn on logging, the bug goes away&quot; which is caused by a side effect of conditionally executing logging logic. Anyone remember the Release-build-only bugs in C++?<br /><br />My default position is to do logging synchronously, leave it turned on all the time, and optimize *if* there is hard evidence of a performance problem. Even if you do hit a performance problem it's likely to be cheaper (in a web site) to scale out than to spend time investigating and fixing it.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>956</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-19 01:39:12</wp:comment_date>
			<wp:comment_date_gmt>2009-09-19 01:39:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Carel<br />Why can you no longer automatically log the stack at log time? As long as the actual logging lambda is being executed synchronously (as I recommend) you should be able to pull the current stack frame and get the calling method instead of the actual method.<br /><br />@Damian<br />I trust you realise that this code wasn't specific for websites, it's an issue in both desktop/website code.<br /><br />I actually think 2 seconds is a lot for 1000 requests. Note that this is for 1000 log calls - and there may be several log calls per request, especially if we log across multiple layers in our architecture.<br /><br />The logging infrastructure really isn't complex provided you execute the lambda in a synchronous way as I recommend - the actual persistance of log messages may be asynchronous, but that's straightforward to implement. A lot of logging frameworks today will give you various ways of persisting it - this method can you be a wrapper on top of an existing logging framework.<br /><br />Finally, the cost per log-call will of course vary on what you're doing in the log call. If you're just logging static strings then you won't gain anything by deferring the execution. If instead you're doing some complex logic, the gain will be bigger.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>957</wp:comment_id>
			<wp:comment_author><![CDATA[Damian Powell]]></wp:comment_author>
			<wp:comment_author_email>damian@shadow-angel.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-19 11:24:00</wp:comment_date>
			<wp:comment_date_gmt>2009-09-19 11:24:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Mark,<br /><br />Yes, I realise that your code wasn't specific to a website, but my reply was. That said, depending on how a a smart client app works, my comments might be applicable there too. Although, obviously 100 calls in a tight processing loop is quite possible in some sort of data processing app and would be a bad idea. However, a few tens or hundreds of calls during the creation of a page on a website isn't going to be so bad when considering the latency of the web and the database - unless you're Amazon!<br /><br />Don't get me wrong, I like the lambda syntax for conditional logging, it's very neat. My problem is with the idea of conditionally executing logging statments at all. Even 'if (logger.IsEnalbed) { ... }' is not a good idea if there's anything in the braces other than calls to logger and string concatenation. The reason I say that is becase I've seen too many problems in the past (in C++ code) where someone has used a macro to conditionally trace debug output which has then caused different behaviour in a release build. In C#, it's more likely to be something like a property getter that has a sneaky side effect that causes the problem.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>958</wp:comment_id>
			<wp:comment_author><![CDATA[Erich Eichinger]]></wp:comment_author>
			<wp:comment_author_email>eeichinger@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://netcommon.sourceforge.net/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-20 16:39:11</wp:comment_date>
			<wp:comment_date_gmt>2009-09-20 16:39:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are looking for a full, ready-to-use implementation of this strategy, I already implemented it a while ago in the Common.Logging library available at <a rel="nofollow external" href="http://netcommon.sourceforge.net/" title="http://netcommon.sourceforge.net/" rel="nofollow">http://netcommon.sourceforge.net/</a>, see also my blog post at <a rel="nofollow external" href="http://eeichinger.blogspot.com/2009/05/common-logging-20-for-net-released.html" title="http://eeichinger.blogspot.com/2009/05/common-logging-20-for-net-released.html" rel="nofollow">eeichinger.blogspot.com/...</a> to see how it works.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161757</wp:comment_id>
			<wp:comment_author><![CDATA[Tonja]]></wp:comment_author>
			<wp:comment_author_email>tonja-searle@yahoo.de</wp:comment_author_email>
			<wp:comment_author_url>http://www.ppttemplates.me/</wp:comment_author_url>
			<wp:comment_author_IP>124.160.35.2</wp:comment_author_IP>
			<wp:comment_date>2013-12-20 11:53:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-20 10:53:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Power - Point has become such a common business standard 
that a ordinary Power - Pint presentation is immediately mmarked as such.
To seee a larger preview of any template created by Microsoft (see the first image above), click on 
the thumbnail in the center panel of the window and the larger view will 
be shown in the right panel. Customized temples for particular purpose, businesses or organizations add personal touch to presentations.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387536780.5495789051055908203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143036</wp:comment_id>
			<wp:comment_author><![CDATA[mini warriors hack]]></wp:comment_author>
			<wp:comment_author_email>gregorysanger@gmx.de</wp:comment_author_email>
			<wp:comment_author_url>http://best-hacks.net/mini-warriors-hack-tool/</wp:comment_author_url>
			<wp:comment_author_IP>41.77.138.10</wp:comment_author_IP>
			<wp:comment_date>2013-11-10 14:59:05</wp:comment_date>
			<wp:comment_date_gmt>2013-11-10 13:59:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Howdy! Do you use Twitter? I'd like to follow 
you if that would be okay. I'm absolutely enjoying your blog and look forward to new updates.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384091945.9336249828338623046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Combining Paths With Multiple Parts</title>
		<link>http://improve.dk/combining-paths-with-multiple-parts/</link>
		<pubDate>Wed, 16 Sep 2009 13:57:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/09/16/combining-paths-with-multiple-parts.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Whenever you concatenate multiple strings into a path, you really ought to be using the <a href="http://msdn.microsoft.com/en-us/library/system.io.path.aspx">System.IO.Path</a> class's Combine method. At times you may be concatenating a number of smaller parts of a path instead of just the two that the <a href="http://msdn.microsoft.com/en-us/library/fyy7a5kt.aspx">Path.Combine()</a> method takes. Nested Path.Combine calls quickly become difficult to read and error prone:</p>

<pre lang="csharp" escaped="true">string partOne = @"C:";
string partTwo = "Windows";
string partThree = @"System32\drivers";
string partFour = @"etc\hosts";
string combinedPath;

combinedPath = Path.Combine(Path.Combine(Path.Combine(partOne, partTwo), partThree), partFour);</pre>

<p>Often we won't have all of our path parts in named variables, and even when we do, they'll rarely be named partOne, partTwo, partX etc. If we mix literal strings with variables and multiple levels of nested Path.Combine calls, mayhem will arise.</p>

<p>As an alternative I'm using a simple wrapper method above the Path.Combine method:</p>

<pre lang="csharp" escaped="true">public static class PathCombiner
{
	public static string Combine(string path1, string path2, params string[] pathn)
	{
		string path = Path.Combine(path1, path2);

		for (int i = 0; i &lt; pathn.Length; i++)
			path = Path.Combine(path, pathn[i]);

		return path;
	}
}</pre>

<p>The C# <a href="http://msdn.microsoft.com/en-us/library/w5zay9db(VS.71).aspx">params</a> keyword allows us to make a method take in any number of parameters of the same type - string in this case. Note that I've split the paths up into three parts - path1, path2 and pathn. If we were to only take the params string[] parameter, the user might send in no parameters at all - which wouldn't make sense. By forcing the user to send in at least two paths, we maintain the interface of Path.Combine and just add extra functionality on top of it - though the user may still just send in two paths as before.</p>

<pre lang="csharp" escaped="true">static void Main(string[] args)
{
	string partOne = @"C:";
	string partTwo = "Windows";
	string partThree = @"System32\drivers";
	string partFour = @"etc\hosts";
	string combinedPath;

	// Using System.IO.Path
	combinedPath = Path.Combine(Path.Combine(Path.Combine(partOne, partTwo), partThree), partFour);
	Console.WriteLine(combinedPath);
	
	// Using PathCombiner
	combinedPath = PathCombiner.Combine(partOne, partTwo, partThree, partFour);
	Console.WriteLine(combinedPath);

	Console.Read();
}</pre>

<p>An extension method you say? The logical place to put this function would be in the Path class itself, perhaps named CombineMultiple. Unfortunately the Path class is static so we're unable to extend it. Another option might be directly on string as a CombinePath method like this:</p>

<pre lang="csharp" escaped="true">public static class PathCombiner
{
	public static string Combine(string path1, string path2, params string[] pathn)
	{
		string path = Path.Combine(path1, path2);

		for (int i = 0; i &lt; pathn.Length; i++)
			path = Path.Combine(path, pathn[i]);

		return path;
	}

	public static string CombinePath(this string path1, string path2, params string[] pathn)
	{
		return Combine(path1, path2, pathn);
	}
}</pre>

<p>We'd call the extension method like so:</p>

<pre lang="csharp" escaped="true">combinedPath = partOne.CombinePath(partTwo).CombinePath(partThree).CombinePath(partFour);</pre>

<p>While this does work, I really don't recommend it. I'm against overly use of extension methods unless there's a good reason. I think it's much cleaner to contain this code in a separate class whose only purpose is path combining. Now devs are going to be confused when they sometimes see the CombinePath method in Intellisense and not at other times, depending on whether the namespace has been imported. Also, I think the PathCombiner.Combine syntax is the cleanest on top of that, but you be the judge:</p>

<pre lang="csharp" escaped="true">string partOne = @"C:";
string partTwo = "Windows";
string partThree = @"System32\drivers";
string partFour = @"etc\hosts";
string combinedPath;

// Using System.IO.Path
combinedPath = Path.Combine(Path.Combine(Path.Combine(partOne, partTwo), partThree), partFour);
Console.WriteLine(combinedPath);

// Using PathCombiner
combinedPath = PathCombiner.Combine(partOne, partTwo, partThree, partFour);
Console.WriteLine(combinedPath);

combinedPath = partOne.CombinePath(partTwo).CombinePath(partThree).CombinePath(partFour);
Console.WriteLine(combinedPath);

Console.Read();</pre>

<pre lang="csharp" escaped="true">C:\Windows\System32\drivers\etc\hosts
C:\Windows\System32\drivers\etc\hosts
C:\Windows\System32\drivers\etc\hosts</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1313</wp:post_id>
		<wp:post_date>2009-09-16 13:57:08</wp:post_date>
		<wp:post_date_gmt>2009-09-16 13:57:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>combining-paths-with-multiple-parts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="path"><![CDATA[Path]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Combining Paths With Multiple Parts]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>959</wp:comment_id>
			<wp:comment_author><![CDATA[Richard Moss]]></wp:comment_author>
			<wp:comment_author_email>richard.moss@cyotek.com</wp:comment_author_email>
			<wp:comment_author_url>http://cyotek.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-08 07:44:27</wp:comment_date>
			<wp:comment_date_gmt>2009-10-08 07:44:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you, nice function!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>960</wp:comment_id>
			<wp:comment_author><![CDATA[Graham]]></wp:comment_author>
			<wp:comment_author_email>info@industrial-computer-systems.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.industrial-computer-systems.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-09-12 20:35:02</wp:comment_date>
			<wp:comment_date_gmt>2011-09-12 20:35:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I had problems with Nested Path, but now I have a chance of understanding a solution.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>IIS Request Filtering Woes</title>
		<link>http://improve.dk/iis-request-filtering-woes/</link>
		<pubDate>Wed, 23 Sep 2009 10:00:28 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/09/23/iis-request-filtering-woes.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently put a number of load balanced websites in production by using the newly released <a href="http://www.iis.net/extensions/ApplicationRequestRouting">IIS7 Application Request Routing</a> v2 Beta extension. Everything seemed to run perfectly both performance and functionality wise. There was a slight problem however.</p>

<p>Some users were reporting mysterious errors when uploading files to the website, apparently seeming like a timeout. When I tried to reproduce, all smallish files when through, though larger files did fail. I checked out the responses in <a href="http://www.fiddler2.com/fiddler2/">Fiddler</a> and to my surprise the ones working returned 200 while the failing ones returned a 404 error after a while. To the trained eye, the problem might already be apparent - unfortunately it wasn't apparent to me at the time. I'd expect a status 200 for working uploads and a 500 for failed uploads. A 404 should only happen when the URL is wrong, which certainly shouldn't vary depending on file size.</p>

<p>Circumventing the ARR load balancing server fixed the issue, so I quickly pinpointed that the addition of the ARR load balancer was the root cause. Enabling IIS logging on the content servers revealed that the failing requests never reached the content servers, hinting that the actual problem occurred on the ARR machine before even being proxied on to the content servers.</p>

<p>Checking out the IIS log of the ARR server revealed the following crucial line (unimportant parts abbreviated):</p>

<pre class="plain">[DATETIME] [USER_IP] GET / - 80 - [USER_IP] [UserAgent] 404 13 0 1</pre>

<p>The HTTP status code is 404 as shown by Fiddler. The interesting part however is the HTTP substatus code of 13. Checking up on the HTTP substatus codes utilized by the <a href="http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering">IIS7 Request Filtering module</a> revals that 404.13 is caused by a too large content length. If the ARR IIS had spat out a detailed IIS error page instead of a generic 404, the problem would have been apparent much quicker since the substatus code would've been included. Unfortunately the detailed errors are disabled on the ARR ISS for security reasons.</p>

<p>The solution is simple. By opening the <a href="http://learn.iis.net/page.aspx/124/introduction-to-applicationhostconfig/">C:WindowsSystem32inetsrvconfigapplicationHost.config</a> (the main IIS configuration file) and setting the <a href="http://msdn.microsoft.com/en-us/library/ms689462.aspx">maxAllowedContentLength</a>
in system.webServer/security/requestFiltering/requestLimits to a higher value, we automatically allow larger bodies for incoming requests and thus avoiding the 404.13 error caused by the request filtering module. In the below example I've set the limit to 256 MB - the value is expressed in bytes.</p>

<pre lang="xml" escaped="true">&lt;system.webServer&gt;
	&lt;security&gt;
		&lt;requestFiltering&gt;
			&lt;requestLimits maxAllowedContentLength="268435456" /&gt;
		&lt;/requestFiltering&gt;
	&lt;/security&gt;
&lt;/system.webServer&gt;</pre>

<p>Tip: Instead of editing the applicationHost.config file manually you can also install the <a href="http://blogs.msdn.com/carlosag/archive/2008/05/13/IISAdminPackTechnicalPreview2Released.aspx">IIS Admin Pack Tech Preview 2</a> which will give you the option to edit request filtering settings directly from the IIS Manager, as well as a number of other management GUI improvements.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1314</wp:post_id>
		<wp:post_date>2009-09-23 10:00:28</wp:post_date>
		<wp:post_date_gmt>2009-09-23 10:00:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iis-request-filtering-woes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[IIS Request Filtering Woes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>961</wp:comment_id>
			<wp:comment_author><![CDATA[Luke]]></wp:comment_author>
			<wp:comment_author_email>lukepuplett@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.lukepuplett.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-23 11:29:03</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 11:29:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well done. I get very angry when I'm sent on a wild goose chase because of a 'feature'. Was there a more reasonably worded version in the event log?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>962</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-23 12:51:44</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 12:51:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Luke<br />The event log did not show any traces of the request filtering taking place. I'm not sure it should either as I guess it's normal behaviour as expected - just wasn't aware I'd receive a 404 as an error. I'd rather have some kind of 500 or even better just a 400/403.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>963</wp:comment_id>
			<wp:comment_author><![CDATA[Luke]]></wp:comment_author>
			<wp:comment_author_email>lukepuplett@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.lukepuplett.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-09-23 14:06:07</wp:comment_date>
			<wp:comment_date_gmt>2009-09-23 14:06:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm with you completely that a 403 would make much more sense, although to make the feature more discoverable, I'd have liked to see an information log. Maybe it would also be useful to monitor how often customers come up against the limit without full logging. If I was a MS developer, I'd be thinking, &quot;How do I allow people to find this arcane config setting and prevent wasting their time and their perception of my product?&quot;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>IIS 7 w3wp Process Hung on Shutdown</title>
		<link>http://improve.dk/iis7-w3wp-process-hung-on-shutdown/</link>
		<pubDate>Fri, 25 Sep 2009 13:42:04 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/09/25/iis7-w3wp-process-hung-on-shutdown.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A single server has started to sometime leave zombie w3wp.exe processes when trying to recycle. A new process is spawned properly and everything seems to work, except the old processes are still present and take up memory. Task manager reports there's only a single thread left, far from the active ones that have between 40 and 70 threads usually.</p>  <p>Using <a href="http://technet.microsoft.com/en-us/sysinternals/dd996900.aspx">ProcDump</a> I've taken a full memory dump to analyze further in <a href="http://www.microsoft.com/whdc/DevTools/Debugging/default.mspx">WinDbg</a>.</p>  <p>The machine is a Server 2008 R2 x64 8 core machine as stated by WinDbg:</p>

<pre class="plain">Windows 7 Version 7600 MP (8 procs) Free x64</pre>

<p>After loading sos a printout of the managed threads reveals the following:</p>

<pre class="plain">0:000&gt; !threads
ThreadCount: 19
UnstartedThread: 0
BackgroundThread: 19
PendingThread: 0
DeadThread: 0
Hosted Runtime: no
                                              PreEmptive                                                Lock
       ID OSID        ThreadOBJ     State   GC     GC Alloc Context                  Domain           Count APT Exception
XXXX    1  9d0 000000000209b4c0      8220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX    2  c60 00000000020c3130      b220 Enabled  000000013fbe5ed0:000000013fbe7da8 000000000208e770     0 MTA (Finalizer)
XXXX    3  a24 00000000020f0d60   880a220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 MTA (Threadpool Completion Port)
XXXX    4  97c 0000000002105180    80a220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 MTA (Threadpool Completion Port)
XXXX    5  c28 000000000210bfe0      1220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX    6  d40 00000000053f9080   180b220 Enabled  00000001bfe75d20:00000001bfe767c8 000000000208e770     0 MTA (Threadpool Worker)
XXXX    7  c18 00000000053f9b30   180b220 Enabled  00000000fff95880:00000000fff97210 000000000208e770     0 MTA (Threadpool Worker)
XXXX    8  f7c 00000000053fa5e0   180b220 Enabled  000000011fbea268:000000011fbea920 000000000208e770     0 MTA (Threadpool Worker)
XXXX    9  91c 00000000053fb090   180b220 Enabled  00000001dfc39138:00000001dfc39670 000000000208e770     0 MTA (Threadpool Worker)
XXXX    a  fb0 00000000053fbd20   180b220 Enabled  00000000fff922b0:00000000fff93210 000000000208e770     0 MTA (Threadpool Worker)
XXXX    b  fc8 00000000053fc9b0   180b220 Enabled  0000000160053ea0:0000000160054778 000000000208e770     0 MTA (Threadpool Worker)
XXXX    c  538 00000000053fd460   180b220 Enabled  000000017fd8fc98:000000017fd911f8 000000000208e770     0 MTA (Threadpool Worker)
XXXX    d  604 00000000053fdf10   180b220 Enabled  000000019fd7aa78:000000019fd7c648 000000000208e770     0 MTA (Threadpool Worker)
   0    f  2cc 0000000005514c60       220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX   10  9bc 00000000020a90c0       220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX   11  9c0 00000000056b7a00       220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX    e  9d4 00000000056b7fd0       220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX   12  9d8 00000000056b85a0       220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn
XXXX   13  cb8 00000000056b8b70       220 Enabled  0000000000000000:0000000000000000 000000000208e770     0 Ukn</pre>

<p>Of more interest however is probably the output of a stack backtrace for the single unmanaged thread remaining:</p>

<pre class="plain">0:000&gt; ~* kb 2000

.  0  Id: 85c.2cc Suspend: -1 Teb: 000007ff`fffd3000 Unfrozen
RetAddr           : Args to Child                                                           : Call Site
000007fe`fdcc1843 : 00000000`00fd6b60 00000000`00fd6b60 ffffffff`ffffffff 00000000`77bc04a0 : ntdll!ZwClose+0xa
00000000`77ab2c41 : 00000000`77bc1670 00000000`00000000 00000000`77bc04a0 7fffffff`ffffffff : KERNELBASE!CloseHandle+0x13
000007fe`f56537c6 : 00000000`00000000 00000000`00000000 00000000`012da080 000007fe`f5442eac : kernel32!CloseHandleImplementation+0x3d
000007fe`f54443d2 : 00000000`00000007 000007fe`f5443d3c 00000000`00000000 00000000`77bc9997 : httpapi!HttpCloseRequestQueue+0xa
000007fe`f54444c3 : 00000000`00000000 00000000`012e6900 00000000`00000000 00000000`77bd5afa : w3dt!UL_APP_POOL::Cleanup+0x62
000007fe`f549384a : 00000000`012da080 00000000`00c93a28 00000000`012e6900 00000000`00000000 : w3dt!WP_CONTEXT::CleanupOutstandingRequests+0x83
000007fe`f549417a : 00000000`00000000 00000000`0000ffff 00000000`00000000 00000000`77bcf9fd : iiscore!W3_SERVER::StopListen+0x4a
000007fe`f562b5bf : 00000000`012d2f30 00000000`00000000 00000000`00000000 00000000`0000ffff : iiscore!IISCORE_PROTOCOL_MANAGER::StopListenerChannel+0x5a
000007fe`f5626e8f : 00000000`012d2f30 00000000`00000000 00000000`00424380 00000000`00000000 : w3wphost!LISTENER_CHANNEL_STOP_WORKITEM::ExecuteWorkItem+0x7b
00000000`77bcf8eb : 00000000`021782b0 00000000`021782b0 00000000`00000000 00000000`00000001 : w3wphost!W3WP_HOST::ExecuteWorkItem+0xf
00000000`77bc9d9f : 00000000`00000000 00000000`012d2f30 00000000`00424380 00000000`010aa528 : ntdll!RtlpTpWorkCallback+0x16b
00000000`77aaf56d : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!TppWorkerThread+0x5ff
00000000`77be3281 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : kernel32!BaseThreadInitThunk+0xd
00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x1d</pre>

<p>From the stack trace it's obvious that the w3wp process is trying to shut down and perform its cleanup tasks, but for some reason ntdll!ZwClose is hanging up. It's been hung for several days without change - and without apparent side effects besides an increased amount of memory usage.</p>

<p>The w3wp processes do not hang up all the time, I have yet to find a reproducible pattern. In the meantime, any suggestions for further debugging?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1315</wp:post_id>
		<wp:post_date>2009-09-25 13:42:04</wp:post_date>
		<wp:post_date_gmt>2009-09-25 13:42:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>iis7-w3wp-process-hung-on-shutdown</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-7"><![CDATA[IIS 7]]></category>
		<category domain="post_tag" nicename="w3wp"><![CDATA[w3wp]]></category>
		<category domain="category" nicename="windbg"><![CDATA[Windbg]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[IIS 7 w3wp Process Hung on Shutdown]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>964</wp:comment_id>
			<wp:comment_author><![CDATA[Ozzik]]></wp:comment_author>
			<wp:comment_author_email>leon@one.co.il</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-09-05 11:41:50</wp:comment_date>
			<wp:comment_date_gmt>2010-09-05 11:41:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br />I was wondering how you finally managed to solve this problem.<br />It seems we have the same thing since we moved to win2008R2-IIS7.5+.NET4<br /><br />On win2003-IIS6+.NET2 everything was smooth.<br />And now we're stuck with this issue.<br /><br />Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>965</wp:comment_id>
			<wp:comment_author><![CDATA[Ozzik]]></wp:comment_author>
			<wp:comment_author_email>leon@one.co.il</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-09-17 07:30:40</wp:comment_date>
			<wp:comment_date_gmt>2010-09-17 07:30:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks.<br />Actually, it looks like we've already found the reason (some old asp pages that apparently don't play nice with IIS7.5).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>966</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>byurick@pixelmedia.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-01-24 18:23:21</wp:comment_date>
			<wp:comment_date_gmt>2012-01-24 18:23:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Did you ever find the cause of this? I have a webserver that's a 2003 sp2/IIS6 doing the exact same thing. Only way I can get rid of them is to do a full server reboot.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>967</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-01-24 18:29:13</wp:comment_date>
			<wp:comment_date_gmt>2012-01-24 18:29:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm afraid not. After suffering from this for about two years I ended up formatting the server during a routine upgrade. Since then we haven't seen the issue (same app, os, hardware).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>968</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email>byurick@pixelmedia.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-01-24 19:22:40</wp:comment_date>
			<wp:comment_date_gmt>2012-01-24 19:22:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Damn, I was afraid you were going to say that. Thanks anyway!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Writing a Calculator in C# Using SableCC</title>
		<link>http://improve.dk/writing-a-calculator-in-csharp-using-sablecc/</link>
		<pubDate>Wed, 30 Sep 2009 12:32:34 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/09/30/writing-a-calculator-in-c-using-sablecc.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Writing a calculator is a simple task - just add nine buttons labeled 1-9 and add a plus and minus button and we're almost good to go. In this entry I'm going to write a calculator called SimpleCalc that does not have a GUI, instead it'll take in an arbitrary expression and calculate the results of it. The input I'll use as my immediate goal is the following:</p>

<pre class="plain">25-37+2*(1.22+cos(5))*sin(5)*2+5%2*3*sqrt(5+2)</pre>

<p><a href="http://www.google.dk/search?rlz=1C1CHMG_daDK293DK303&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=25-37%2B2*(1.22%2Bcos(5))*sin(5)*2%2B5%252*3*sqrt(5%2B2)">According to Google</a> the result is -9.83033875. Some of the tricky subjects we'll have to handle is <a href="http://en.wikipedia.org/wiki/Order_of_operations">operator precedence</a> (multiplication before addition etc), nested expressions (2*1.22+cos(5) != 2*(1.22+cos(5))) and <a href="http://en.wikipedia.org/wiki/Associativity">associativity</a> (5+7 == 7+5 &amp; 7-5 != 5-7 etc).</p>

<h2>Parsing the input using SableCC</h2>

<p>Before doing any calculations, we need to parse the input expression so we have an in-memory representation of the input. We need to have the input represented in the form of an <a href="http://en.wikipedia.org/wiki/Abstract_syntax_tree">abstract syntax tree</a> that defines the order of operations and allows us to traverse the different parts of the expression individually. To perform this task, we'll be using <a href="http://sablecc.org/">SableCC</a>.</p>

<blockquote>SableCC is a parser generator which generates fully featured object-oriented frameworks for building compilers, interpreters and other text parsers. In particular, generated frameworks include intuitive strictly-typed abstract syntax trees and tree walkers. SableCC also keeps a clean separation between machine-generated code and user-written code which leads to a shorter development cycle.</blockquote>

<p>In short, SableCC can be used to automatically generate the parser code that's used in any compiler, as well as in a lot of other cases where input needs to be parsed - like in this case. SableCC itself is written in Java by <a href="http://www.labunix.uqam.ca/~gagnon_et/en/">Etienne M. Gagnon</a> and the <a href="http://sablecc.org/browser/src">source code</a> is freely available.</p>

<p>The standard output from SableCC is Java code. Thus, the parser we're about to generate will be made into a number of Java files that we can incorporate into our own source code and extend. As I'll be writing the calculator in C#, I'd much prefer to work with C# source files directly, rather than having to port the Java output or call it by other means. Luckily <a href="http://www.mare.ee/indrek/">Indrek Mandre</a> has made a SableCC variant that'll generate the parser in either Java, C#, C++, O'Caml, Python, C, Graphviz Dot or XML. All we need to do is to download the <a href="http://www.mare.ee/indrek/sablecc/">sablecc-3-beta.3.altgen.20041114</a> zip file from the frontpage of Indrek's SableCC page. Once it's downloaded and unpacked we're able to run it, as long as Java is installed. First create a bat file with the following contents:</p>

<pre class="plain">java -jar "C:Program FilesSableCCsablecc-3-beta.3.altgen.20041114libsablecc.jar" %1 %2 %3 %4 %5 %6 %7 %8 %9</pre>

<p>Make sure to replace my path with whatever path you've extracted the SableCC altgen package into. When we invoke SableCC from now on, we'll do it through this bat file that I've chosen to call <b>sablecc_altgen.bat</b>, just to make the syntax simpler.</p>

<h2>Defining the grammar</h2>

<p>For SableCC to be able to generate our parser, we first need to define the language it should support. The way we do this is to define the language in the <a href="http://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_Form">(E)BNF</a>format. I won't be writing a generic tutorial on how to write grammers in SableCC as there's already a number of good ones on the <a href="http://sablecc.org/wiki/DocumentationPage">SableCC Documentation</a> page, as well as <a href="http://nat.truemesh.com/archives/000531.html">one by Nat Pryce</a> that's not on the documentation page. Finally there's also a <a href="http://www.nabble.com/SableCC-f12279r0.html">mailing list</a>, though the activity is limited.</p>

<p>We'll start out by creating a new text file called <i>simplecalc.sablecc</i>, this is where we'll be defining our SimpleCalc grammar. Furthermore I've created a new bat file called simplecalc_sable.bat with the following contents:</p>

<pre class="plain">cls
sablecc_altgen -d generated -t csharp simplecalc.sablecc</pre>

<p>The above bat file will call the one we previously made. <b>-d generated</b> specifies the output directory name. <b>-t csharp</b> specifies the output source code type, C# in this case. The last argument is the name of the input sablecc file. From now on we can simply run <b>simplecalc_sable</b> to start the SableCC compilation process.</p>

<p>I'll post the full simplecalc.sablecc file contents first, and then go through the specific sections one by one afterwards.</p>

<pre class="plain">Package SimpleCalc;

Helpers
	digit	= ['0' .. '9'];

Tokens
	number	= (digit+ | digit+ '.' digit+);
	add	= '+';
	sub	= '-';
	mul	= '*';
	div	= '/';
	mod	= '%';
	sqrt	= 'sqrt';
	cos	= 'cos';
	sin	= 'sin';
	lparen	= '(';
	rparen	= ')';

Productions		
	exp {-&gt; exp}
		= {add}		[left]:exp add [right]:factor		{-&gt; New exp.add(left, right.exp)}
		| {sub}		[left]:exp sub [right]:factor		{-&gt; New exp.sub(left, right.exp)}
		| {factor}	factor					{-&gt; factor.exp}
		;
		
	factor {-&gt; exp}
		= {mul}		[left]:factor mul [right]:unary		{-&gt; New exp.mul(left.exp, right.exp)}
		| {div}		[left]:factor div [right]:unary		{-&gt; New exp.div(left.exp, right.exp)}
		| {mod}		[left]:factor mod [right]:unary		{-&gt; New exp.mod(left.exp, right.exp)}
		| {unary}	unary					{-&gt; unary.exp}
		;
		
	unary {-&gt; exp}
		= {number}	number					{-&gt; New exp.number(number)}
		| {sqrt}	sqrt lparen exp rparen			{-&gt; New exp.sqrt(exp)}
		| {cos}		cos lparen exp rparen			{-&gt; New exp.cos(exp)}
		| {sin}		sin lparen exp rparen			{-&gt; New exp.sin(exp)}
		| {paren}	lparen exp rparen			{-&gt; New exp.paren(exp)}
		;
		
	exp_list {-&gt; exp*}
		= {single}	exp					{-&gt; [exp.exp]}
		| {multi}	exp [tail]:exp_list			{-&gt; [exp.exp, tail.exp]}
		;
		
Abstract Syntax Tree
	exp
		= {add}			[left]:exp [right]:exp
		| {sub}			[left]:exp [right]:exp
		| {mul}			[left]:exp [right]:exp
		| {div}			[left]:exp [right]:exp
		| {mod}			[left]:exp [right]:exp
		| {paren}		exp
		| {sqrt}		exp
		| {cos}			exp
		| {sin}			exp
		| {number}		number
		;</pre>

<p>In the grammar we're using 5 different sections, Package, Helpers, Tokens, Productions and Abstract Syntax Tree.</p>

<pre class="plain">Package SimpleCalc;</pre>

<p>The Package declaration simply defines the name of the overall package. If this is excluded (which is valid according to SableCC) our namesapces int he generated C# code will be blank and thus invalid.</p>

<pre class="plain">Helpers
	digit	= ['0' .. '9'];</pre>

<p>Helpers are basically placeholders you can setup and use throughout the SableCC file. They have no deeper meaning or functionality, it's just a way to easily be able to express common code by its name. As we'll be referring to <i>digits</i> multiple times it helps to define it as a helper instead of replicating <b>['0' .. '9']</b> multiple times in the code. <b>['0' .. '9']</b> means all digits between 0 and 9.</p>

<pre class="plain">Tokens
	number		= (digit+ | digit+ '.' digit+);
	add		= '+';
	sub		= '-';
	mul		= '*';
	div		= '/';
	mod		= '%';
	sqrt		= 'sqrt';
	cos		= 'cos';
	sin		= 'sin';
	lparen		= '(';
	rparen		= ')';</pre>

<p>Note that I'm jumping ahead and ignoring <b>Productions</b> section for now, I'll come to that in just a bit. The <b>Abstract Syntax Tree</b> defines the nodes that will be present in our parsed AST. Each type of operation and function has a corresponding node in the AST. Thus, and add operation will consist of an Add node with two children - a left and a right expression. Those expressions may themselves be constant numbers or nested expressions - since they're defined as <b>exp</b> which is a recursive reference to the actual AST exp type.</p>

<p><b>Add</b>, <b>sub</b>, <b>mul</b>, <b>div</b> and <b>mod</b> are <b>binary</b> operators and thus have two child expressions. <b>Paren</b>, <b>sqrt</b>, <b>cos</b> and <b>sin</b> (and in some ways, number) are unary operators in that they only have a single child/parameter - an expression. Number is a leaf node that expresses an actual number constant.</p>

<p>The <b>Productions</b> section defines our mapping from the actual input to the AST that we've just defined.</p>

<pre class="plain">Productions
	exp {-&gt; exp}
		= {add}		[left]:exp add [right]:factor		{-&gt; New exp.add(left, right.exp)}
		| {sub}		[left]:exp sub [right]:factor 		{-&gt; New exp.sub(left, right.exp)}
		| {factor}	factor					{-&gt; factor.exp}
		;</pre>

<p>The first production we define is a generic one for expressing expressions. Note that the way we define operator precedence is by first expressing the least prioritized operator (<b>add</b> &amp; <b>sub</b>) and then referencing the factor operations (<b>mul</b>, <b>div</b>, <b>mod</b> &amp; <b>unary</b>) and thus forth. <b>exp {-&gt; exp}</b> signifies that the concrete syntax of an expression is mapped into the abstract syntax tree node called "exp" as well. <b>Productions</b> and <b>Abstract Syntax Tree</b> are two different namespaces and they may thus share the same names.</p>

<pre class="plain">= {add}		[left]:exp add [right]:factor		{-&gt; New exp.add(left, right.exp)}</pre>

<p>The <b>add</b> operation is defined by a left expression followed by the add token (defined as '+' previously) and then a factor expression on the right, hence defining the precedence relation between the add operation and factor operations. Finally we define that the add operation maps into a new instance of the exp AST node, having the left and right expressions as parameters (children in the AST). The sub operation is almost identical to the add operator.</p>

<pre class="plain">| {factor}	factor		{-&gt; factor.exp}</pre>

<p>Any factor expressions are simply mapped onto the factor production defined later on.</p>

<pre class="plain">factor {-&gt; exp}
	= {mul}		[left]:factor mul [right]:unary		{-&gt; New exp.mul(left.exp, right.exp)}
	| {div}		[left]:factor div [right]:unary		{-&gt; New exp.div(left.exp, right.exp)}
	| {mod}		[left]:factor mod [right]:unary		{-&gt; New exp.mod(left.exp, right.exp)}
	| {unary}	unary					{-&gt; unary.exp}
	;</pre>

<p>The <b>mul</b>, <b>div</b> and <b>mod</b> expressions are basically identical to the add and sub expressions, except defining unary as the next production in the operator precedence chain.</p>

<pre class="plain">unary {-&gt; exp}
	= {number}	number					{-&gt; New exp.number(number)}
	| {sqrt}	sqrt lparen exp rparen			{-&gt; New exp.sqrt(exp)}
	| {cos}		cos lparen exp rparen			{-&gt; New exp.cos(exp)}
	| {sin}		sin lparen exp rparen			{-&gt; New exp.sin(exp)}
	| {paren}	lparen exp rparen			{-&gt; New exp.paren(exp)}
	;</pre>

<p>The simplest of all expressions is the unary <b>number</b> expression that defines a numeric constant. The number expression is mapped into a new AST node of the type exp.number, having the actual number as a parameter. The <b>sqrt</b>, <b>cos</b> and <b>sin</b> functions all define the input as the function name and the parameter expression enclosed in parentheses. Finally we define the <b>{paren}</b> unary function which is an arbitrary expression enclosed in parentheses. This gets mapped into the exp.paren AST type, taking the arbitrary expression as a parameter. The {paren} function allows us to differentiate between expressions like "5*2-7" and "5*(2-7)".</p>

<pre class="plain">exp_list {-&gt; exp*}
	= {single}	exp					{-&gt; [exp.exp]}
	| {multi}	exp [tail]:exp_list			{-&gt; [exp.exp, tail.exp]}
	;</pre>

<p>The final production is what allows us to chain expressions. Without the <b>exp_list</b> production only single operations would be allowed (5+2, 3*7 etc), not chains of expressions (5+2+3, 5*2+3 etc). <b>exp_list {-&gt; exp*}</b> defines that the exp_list production maps into a list of exp's in the AST.</p>

<p>Anyone having done functional programming will recognize the <a href="http://en.wikipedia.org/wiki/Tail_recursion">tail recursion</a> going on here. If there's only a single expression, we map it into a list of expressions containing just that one expression. If there's a single expression and a list of expressions following it (which may be one or more expressions), we map it into a list of expressions containing the first expression as well as the rest of the expressions represented by the tail parameter.</p>

<h2>Generating the parser</h2>

<p>Once we've defined the grammar, we're ready to run the <b>simplecalc_sable</b> bat file, hopefully resulting in the following output:</p>

<pre class="plain">D:Webmentor ProjekterEclipse ProjectsSableCC&gt;simplecalc_sable -d generated -t c
sharp simplecalc.sablecc

D:Webmentor ProjekterEclipse ProjectsSableCC&gt;java -jar "C:Program FilesSabl
eCCsablecc-3-beta.3.altgen.20041114libsablecc.jar" -d generated -t csharp sim
plecalc.sablecc

SableCC version 3-beta.3.altgen.20040327
Copyright (C) 1997-2003 Etienne M. Gagnon &lt;etienne.gagnon@uqam.ca&gt; and
others.  All rights reserved.

This software comes with ABSOLUTELY NO WARRANTY.  This is free software,
and you are welcome to redistribute it under certain conditions.

Type 'sablecc -license' to view
the complete copyright notice and license.


 -- Generating parser for simplecalc.sablecc in D:Webmentor ProjekterEclipse P
rojectsSableCCgenerated
Verifying identifiers.
Verifying ast identifiers.
Adding empty productions and empty alternative transformation if necessary.
Adding productions and alternative transformation if necessary.
computing alternative symbol table identifiers.
Verifying production transform identifiers.
Verifying ast alternatives transform identifiers.
Generating token classes.
Generating production classes.
Generating alternative classes.
Generating analysis classes.
Generating utility classes.
Generating the lexer.
 State: INITIAL
 - Constructing NFA.
..............................
 - Constructing DFA.
...................................................
....................
 - resolving ACCEPT states.
Generating the parser.
..............................
..............................
..............................
..
..............................</pre>

<p>Now if we look in the generated directory, there should be six files: <b>analysis.cs</b>, <b>lexer.cs</b>, <b>nodes.cs</b>, <b>parser.cs</b>, <b>prods.cs</b> and <b>tokens.cs</b>. The files should contain classes in the <b>SimpleCalc</b> namespace.</p>

<h2>Printing the abstract syntax tree</h2>

<p>To help ourselves, the first task we'll do is to simply print out the AST so we can verify what gets parsed is correct. Create a solution called <b>SimpleCalc</b> and either copy the genrated files or create a solution link to the folder. Add a new file called <b>AstPrinter.cs</b> and paste the following contents:</p>

<pre lang="csharp" escaped="true">using System;
using SimpleCalc.analysis;
using SimpleCalc.node;

namespace SimpleCalc
{
	class AstPrinter : DepthFirstAdapter
	{
		int indent;

		private void printIndent()
		{
			Console.Write("".PadLeft(indent, 't'));
		}

		private void printNode(Node node)
		{
			printIndent();

			Console.ForegroundColor = ConsoleColor.White;
			Console.Write(node.GetType().ToString().Replace("SimpleCalc.node.", ""));

			if (node is ANumberExp)
			{
				Console.ForegroundColor = ConsoleColor.DarkGray;
				Console.WriteLine("  " + node.ToString());
			}
			else
				Console.WriteLine();
		}

		public override void DefaultIn(Node node)
		{
			printNode(node);
			indent++;
		}

		public override void DefaultOut(Node node)
		{
			indent--;
		}
	}
}</pre>

<p>The <b>DepthFirstAdapter</b> is a class auto generated by SableCC. It allows us to easily traverse the generated AST depth first, while giving us various hook points along the way. Each node in the tree has an In and Out method that we can override. In is called before the children are traversed while Out is called after the children have been traversed. Note that we may change the tree during the traversal - though we're not going to do so.</p>

<p>In the AstPrinter class I've overriden the <b>DefaultIn</b> and <b>DefaultOut</b> methods that gets called for each node unless we've overriden their specific default methods. In the In method we increase the indent, and likewise we decrease it in the Out method. Furthermore, in the In method we also print the actual node contents to the console. If it's a ANumberExp node (the name of the node corresponding to the number type in the AST) then we print the actual number, otherwise we just print the name of the node itself.</p>

<p>In the main program file, paste the following:</p>

<pre lang="csharp" escaped="true">using System;
using System.IO;
using SimpleCalc.lexer;
using SimpleCalc.node;
using SimpleCalc.parser;

namespace SimpleCalc
{
	class Program
	{
		private static void Main(string[] args)
		{
			if (args.Length != 1)
				exit("Usage: Simplecalc.exe filename");

			using (StreamReader sr = new StreamReader(File.Open(args[0], FileMode.Open)))
			{
				// Read source
				Lexer lexer = new Lexer(sr);

				// Parse source
				Parser parser = new Parser(lexer);
				Start ast = null;

				try
				{
					ast = parser.Parse();
				}
				catch (Exception ex)
				{
					exit(ex.ToString());
				}

				// Print tree
				AstPrinter printer = new AstPrinter();
				ast.Apply(printer);
			}

			exit("Done");
		}

		private static void exit(string msg)
		{
			if (msg != null)
				Console.WriteLine(msg);
			else
				Console.WriteLine();
			
			Console.WriteLine("Press any key to exit...");
			Console.Read();
			Environment.Exit(0);
		}
	}
}</pre>

<p>I've made it so the program takes in a single argument, a filename where our calculation expression is written. By taking a file as a parameter, it's easier for me to change the expression directly in Visual Studio without having to setup launch parameters. The only launch parameter that needs to be set is the file argument.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/09/simplecalc_properties_2.jpg"><img src="http://improve.dk/wp-content/uploads/2009/09/simplecalc_properties_2.jpg" alt="simplecalc_properties_2" width="710" height="517" class="alignnone size-full wp-image-2137" /></a></div></div>

<p>The program tries to open the file and then instantiates the SableCC auto generated <a href="http://en.wikipedia.org/wiki/Lexical_analysis">lexer</a> and <a href="http://en.wikipedia.org/wiki/Parsing">parser</a>.</p>

<p>Now let's make a new file called <b>test.ss</b> and paste the following expression into it: <b>25-37+2*(1.22+cos(5))*sin(5)*2+5%2*3*sqrt(5+2)</b>. If you run the application at this point, you should see an output like the following:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/09/simplecalc_ast_2.jpg"><img src="http://improve.dk/wp-content/uploads/2009/09/simplecalc_ast_2.jpg" alt="simplecalc_ast_2" width="756" height="398" class="alignnone size-full wp-image-2138" /></a></div></div>

<p>By comparing the printed AST with the input expression, we'll see that they match both in contents and in regards to operator precedence. Now all that's left is to perform the actual calculation of the expression.</p>

<h2>Calculating the expression based on the abstract syntax tree</h2>

<p>Add a new file called <b>AstCalculator.cs</b> and paste the following contents:</p>

<pre lang="csharp" escaped="true">using System;
using System.Collections.Generic;
using System.Globalization;
using SimpleCalc.analysis;
using SimpleCalc.node;

namespace SimpleCalc
{
	class AstCalculator : DepthFirstAdapter
	{
		private double? result;
		private Stack&lt;double&gt; stack = new Stack&lt;double&gt;();

		public double CalculatedResult
		{
			get
			{
				if (result == null)
					throw new InvalidOperationException("Must apply AstCalculator to the AST first.");

				return result.Value;
			}
		}

		public override void OutStart(Start node)
		{
			if (stack.Count != 1)
				throw new Exception("Stack should contain only one element at end.");

			result = stack.Pop();
		}
		
		// Associative operators
		public override void OutAMulExp(AMulExp node)
		{
			stack.Push(stack.Pop() * stack.Pop());
		}

		public override void OutAAddExp(AAddExp node)
		{
			stack.Push(stack.Pop() + stack.Pop());
		}

		// Non associative operators
		public override void OutASubExp(ASubExp node)
		{
			double numB = stack.Pop();

			stack.Push(stack.Pop() - numB);
		}

		public override void OutAModExp(AModExp node)
		{
			double numB = stack.Pop();

			stack.Push(stack.Pop() % numB);
		}

		public override void OutADivExp(ADivExp node)
		{
			double numB = stack.Pop();

			stack.Push(stack.Pop() / numB);
		}

		// Unary
		public override void OutASqrtExp(ASqrtExp node)
		{
			stack.Push(Math.Sqrt(stack.Pop()));
		}

		public override void OutACosExp(ACosExp node)
		{
			stack.Push(Math.Cos(stack.Pop()));
		}

		public override void OutASinExp(ASinExp node)
		{
			stack.Push(Math.Sin(stack.Pop()));
		}

		public override void InANumberExp(ANumberExp node)
		{
			stack.Push(Convert.ToDouble(node.GetNumber().Text.Trim(), new CultureInfo("en-us")));
		}
	}
}</pre>

<p>I will not go through all parts of the calculator as many functions are very similar. I'll outline the important ones below.</p>

<pre lang="csharp" escaped="true">private double? result;
private Stack&lt;double&gt; stack = new Stack&lt;double&gt;();

public double CalculatedResult
{
	get
	{
		if (result == null)
			throw new InvalidOperationException("Must apply AstCalculator to the AST first.");

		return result.Value;
	}
}</pre>

<p>As all numbers are treated as doubles, the result will be a double as well. The result can be retrieved through the <b>CalculatedResult</b> property, but only once the calculation has been performed - thus we check whether the result is null or not.</p>

<p>While traversing the AST to perform the calculations we maintain state through the use of a generic stack of doubles.</p>

<pre lang="csharp" escaped="true">public override void OutStart(Start node)
{
	if (stack.Count != 1)
		throw new Exception("Stack should contain only one element at end.");

	result = stack.Pop();
}</pre>

<p>When starting out the stack will be empty. Once we've traversed the tree the stack should only contain a single element - the result. To ensure there's no errors we make sure the stack only contains a single element, after which we return it by popping it from the stack.</p>

<pre lang="csharp" escaped="true">public override void InANumberExp(ANumberExp node)
{
	stack.Push(Convert.ToDouble(node.GetNumber().Text.Trim(), new CultureInfo("en-us")));
}</pre>

<p>Probably the most important unary operator is the constant number. Whenever we're in a <b>ANumberExp</b> node we read in the number and push it onto the stack.</p>

<pre lang="csharp" escaped="true">public override void OutASqrtExp(ASqrtExp node)
{
	stack.Push(Math.Sqrt(stack.Pop()));
}</pre>

<p>The other unary operators follow the same pattern. We pop the stack and perform a math operation on the popped value, after which we push the result back onto the stack.</p>

<pre lang="csharp" escaped="true">public override void OutAMulExp(AMulExp node)
{
	stack.Push(stack.Pop() * stack.Pop());
}</pre>

<p>The associative operators are simple in that they have no requirements as to which order the input parameters are in. As such, a multiplication simple pops two numbers from the stack and push the multiplied result back onto the stack.</p>

<pre lang="csharp" escaped="true">public override void OutASubExp(ASubExp node)
{
	double numB = stack.Pop();

	stack.Push(stack.Pop() - numB);
}</pre>

<p>The non associative opreators need to first pop one number and store it in a temporary variable. The reason we need to do this is that we're working with a <a href="http://en.wikipedia.org/wiki/FIFO_(computing)">FIFO</a>stack, meaning the second number will not be the topmost on the stack and thus we can't perform the calculation in a single expression.</p>

<p>Now that we've made the AstCalculator class we just need to modify the main method so it runs the calculator.</p>

<pre lang="csharp" escaped="true">// Print tree
AstPrinter printer = new AstPrinter();
ast.Apply(printer);

// Calculate expression
AstCalculator calculator = new AstCalculator();
ast.Apply(calculator);

Console.WriteLine("Calculation result: " + calculator.CalculatedResult);</pre>

<p>Simply instantiate a new <b>AstCalculator</b> after printing the AST, and then apply it to the AST. If you make the above modification and run the program, you should see an output similar to this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/09/simplecalc_calculation_2.jpg"><img src="http://improve.dk/wp-content/uploads/2009/09/simplecalc_calculation_2.jpg" alt="simplecalc_calculation_2" width="760" height="421" class="alignnone size-full wp-image-2139" /></a></div></div>

<p>Lo and behold, the result is identical to the one provided by Google originally!</p>

<h2>Wrapping up</h2>

<p>I've now shown how we can define a language grammar in SableCC and have it auto generate a parser for us. Using the SableCC parser we can read an input string and transform it into an abstract syntax tree. Once we have the abstract syntax tree, we can easily traverse it and modify it.</p>

<p>While SableCC originally was only able to generate Java output, we now have multiple options for the output language. Unfortunately the generated C# classes are not partial - a feature that would've been very useful once we start doing more advanced stuff with the AST. It's rather easy to modify the six source files manually, as well as setting up an automated script to do it for us.</p>

<p>Once we read the input and transformed it into an AST we used stack based approach to traverse it and calculate sub results in a very simple way, emulating how most higher level languages work internally.</p>

<p>I'll be following up on this post later on by extending the grammar and interpreter functionality.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1316</wp:post_id>
		<wp:post_date>2009-09-30 12:32:34</wp:post_date>
		<wp:post_date_gmt>2009-09-30 12:32:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>writing-a-calculator-in-csharp-using-sablecc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="ast"><![CDATA[AST]]></category>
		<category domain="post_tag" nicename="parsing"><![CDATA[Parsing]]></category>
		<category domain="post_tag" nicename="sablecc"><![CDATA[SableCC]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[writing-a-calculator-in-c-using-sablecc]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Writing a Calculator in C# Using SableCC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>970</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Cavanagh]]></wp:comment_author>
			<wp:comment_author_email>blog@chriscavanagh.com</wp:comment_author_email>
			<wp:comment_author_url>http://chriscavanagh.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-02 03:15:00</wp:comment_date>
			<wp:comment_date_gmt>2009-10-02 03:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark - Couple related things you might find useful (maybe already seen):<br /><br />LINQ Dynamic Expressions (parses string into LINQ expression tree) - <a rel="nofollow external" href="http://weblogs.asp.net/rajbk/archive/2007/09/18/dynamic-string-based-queries-in-linq.aspx" title="http://weblogs.asp.net/rajbk/archive/2007/09/18/dynamic-string-based-queries-in-linq.aspx" rel="nofollow">weblogs.asp.net/...</a> <br />TinyPG parser generator (creates C#; pretty easy to use too): <a rel="nofollow external" href="http://www.codeproject.com/KB/recipes/TinyPG.aspx" title="http://www.codeproject.com/KB/recipes/TinyPG.aspx" rel="nofollow">http://www.codeproject.com/KB/recipes/TinyPG.aspx</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>971</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-02 07:00:11</wp:comment_date>
			<wp:comment_date_gmt>2009-10-02 07:00:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Chris<br />Thanks for the links. The dynamic LINQ queries are interesting but I don't think they allow for defining your own grammars and parsing of the tree. That is, it may be hackable to do so but it's definitely no parser generator :)<br /><br />I didn't know of TinyPG, I'll definitely have a look at it. I'm hoping to find the time for writing a comparison between different parsing solutions like SableCC, TinyPG, Irony, Coco/R - preferably using the same language grammar so a valid comparison can be made.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>972</wp:comment_id>
			<wp:comment_author><![CDATA[Jakob Andersen]]></wp:comment_author>
			<wp:comment_author_email>jta@miracleas.dk</wp:comment_author_email>
			<wp:comment_author_url>http://intellect.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-07 12:54:37</wp:comment_date>
			<wp:comment_date_gmt>2009-10-07 12:54:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have made a response on how to accomplish the same thing using Irony:<br /><a rel="nofollow external" href="http://intellect.dk/post/Writing-a-calculator-in-C-using-Irony.aspx" title="http://intellect.dk/post/Writing-a-calculator-in-C-using-Irony.aspx" rel="nofollow">intellect.dk/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>973</wp:comment_id>
			<wp:comment_author><![CDATA[Etienne M. Gagnon]]></wp:comment_author>
			<wp:comment_author_email>egagnon@j-meg.com</wp:comment_author_email>
			<wp:comment_author_url>http://sablecc.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-19 13:59:35</wp:comment_date>
			<wp:comment_date_gmt>2009-10-19 13:59:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br /><br />Neat example!<br /><br />Your AstCalculator class could be greatly simplified. You don't need to manage a stack, for results: you could simply use the implicit execution stack.<br /><br />You could write:<br /><br />class AstCalculator : DepthFirstAdapter {<br />  private double? lastResult;<br /><br />  public double CalculatedResult {<br />    get {<br />      if (result == null)<br />        throw new InvalidOperationException(&quot;Must apply AstCalculator to the AST first.&quot;);<br />      return result.Value;<br />    }<br />  }<br /><br />  public void Visit(Node node) {<br />    node.Apply(this);<br />  }<br /><br />  private double EvaluateExp(PExp node) {<br />    Visit(node);<br />    double result = lastResult;<br />    lastResult = null;<br />    return result;<br />  }<br />  <br />  // Associative operators<br />  public override void OutAMulExp(AMulExp node) {<br />    lastResult = EvaluateExp(node.GetLeft()) * EvaluateExp(node.GetRight());<br />  }<br />...<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>974</wp:comment_id>
			<wp:comment_author><![CDATA[Etienne M. Gagnon]]></wp:comment_author>
			<wp:comment_author_email>egagnon@j-meg.com</wp:comment_author_email>
			<wp:comment_author_url>http://sablecc.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-19 14:07:56</wp:comment_date>
			<wp:comment_date_gmt>2009-10-19 14:07:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A few corrections to my code above:<br /><br />1- &quot;result&quot; should have been &quot;lastResult&quot; in:<br /><br />public double CalculatedResult {<br />get {<br />if (lastResult == null)<br />throw new InvalidOperationException(&quot;Must apply AstCalculator to the AST first.&quot;);<br />return lastResult.Value;<br />}<br />}<br /><br />2- CaseXXX methods should be used, instead of OutXXX, when using EvaluateExp:<br /><br />// Associative operators<br />public override void CaseAMulExp(AMulExp node) {<br />lastResult = EvaluateExp(node.GetLeft()) * EvaluateExp(node.GetRight());<br />}<br /><br />3- You can now call your calculator with:<br /><br />// Calculate expression<br />AstCalculator calculator = new AstCalculator();<br />calculator.Visit(ast);<br />Console.WriteLine(&quot;Calculation result: &quot; + calculator.CalculatedResult);<br /><br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70707</wp:comment_id>
			<wp:comment_author><![CDATA[aftab]]></wp:comment_author>
			<wp:comment_author_email>aftabsikander@outlook.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>42.201.177.56</wp:comment_author_IP>
			<wp:comment_date>2013-07-17 00:50:25</wp:comment_date>
			<wp:comment_date_gmt>2013-07-16 22:50:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Can you provide me the download link for this sample project]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374015025.3651349544525146484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70866</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>216.241.205.151</wp:comment_author_IP>
			<wp:comment_date>2013-07-17 07:44:43</wp:comment_date>
			<wp:comment_date_gmt>2013-07-17 05:44:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@aftab

I'm afraid I do not have a sample project to download. However, the complete code is listed in the post so it should be possible to recreate with relative ease.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1374039883.326962947845458984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Simple File Synchronization Using Robocopy</title>
		<link>http://improve.dk/simple-file-synchronization-using-robocopy/</link>
		<pubDate>Wed, 07 Oct 2009 13:35:27 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/10/07/simple-file-synchronization-using-robocopy.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On numerous occations I've had a need for synchronizing directories of files &amp; subdirectories. I've used it for synchronizing work files from my stationary PC to my laptop in the pre-always-on era (today I use SVN for almost all files that needs to be in synch). Recently I needed to implement a very KISS backup solution that simply synchronized two directories once a week for offsite storing of the backup data.</p>

<p>While seemingly simple the only hitch was that there would be several thousands of files in binary format, so compression was out of the question. All changes would be additions and deletions - that is, no incremental updates. Finally I'd only have access to the files through a share so it wouldn't be possible to deploy a local backup solution that monitored for changes and only sent diffs.</p>

<p>I started out using <a href="http://www.tgrmn.com/web/file_synchronization.htm">ViceVersa PRO</a> with the <a href="http://www.tgrmn.com/web/vvengine/vvengine.htm">VVEngine</a> addon for scheduling. It worked great for some time although it wasn't the most speedy solution given my scenario. Some time later ViceVersa stopped working. Apparently it was simply unable to handle more than a million files (give or take a bit). Their forums are filled with people asking for solutions, though the only suggestion they have is to split the backup job into several smaller jobs. Hence I started taking backups of MyShare/A*, MyShare/B*, etc. This quickly grew out of hand as the number of files increased.</p>

<p>Sometime later I was introduced to <a href="http://technet.microsoft.com/en-us/library/cc733145(WS.10).aspx">Robocopy</a>. Robocopy ships with Vista, Win7 and Server 2008. For server 2003 and XP it can be downloaded as part of the<a href="http://www.microsoft.com/Downloads/details.aspx?FamilyID=9d467a69-57ff-4ae7-96ee-b18c4790cffd&amp;displaylang=en">Windows Server 2003 Resource Kit Tools</a>.</p>

<p>Robocopy (Robust File Copy) does one job extremely well - it copies files. It's run from the command line, though there has been made a <a href="http://technet.microsoft.com/en-us/magazine/2006.11.utilityspotlight.aspx">wrapper GUI</a> for it. The basic syntax for calling robocopy is:</p>

<pre class="plain">robocopy &lt;Source&gt; &lt;Destination&gt; [&lt;File&gt;[ ...]] [&lt;Options&gt;]</pre>

<p>You give it a source and a destination address and it'll make sure all files &amp; directories from the source are copied to the destination. If an error occurs it'll wait for 30 seconds (configurable) before retrying, and it'll continue doing this a million times (configurable). That means robocopy will survive a network error and just resume the copying process once the network is back up again.</p>

<p>What makes robocopy really shine is not it's ability to copy files, but it's ability to mirror one directory into another. That means it'll not just copy files, it'll also delete any extra files in the destination directory. In comparison to ViceVersa, robocopy goes through the directory structure in a linear fashion and in doing so doesn't have any major requirements of memory. ViceVersa would initially scan the source and destination and then perform the comparison. As source and destination became larger and larger, more memory was required to perform the initial comparison - until a certain point where it'd just give up.</p>

<p>I ended up with the following command for mirroring the directories using robocopy:</p>

<pre class="plain">robocopy \\SourceServer\Share \\DestinationServer\Share /MIR /FFT /Z /XA:H /W:5</pre>

<ul>
  <li>/MIR specifies that robocopy should mirror the source directory and the destination directory. Beware that this may delete files at the destination.</li>
  <li>/FFT uses fat file timing instead of NTFS. This means the granularity is a bit less precise. For across-network share operations this seems to be much more reliable - just don't rely on the file timings to be completely precise to the second.</li>
  <li>/Z ensures robocopy can resume the transfer of a large file in mid-file instead of restarting.</li>
  <li>/XA:H makes robocopy ignore hidden files, usually these will be system files that we're not interested in.</li>
  <li>/W:5 reduces the wait time between failures to 5 seconds instead of the 30 second default.</li>
</ul>

<p>The robocopy script can be setup as a simply Scheduled Task that runs daily, hourly, weekly etc. Note that robocopy also contains a switch that'll make robocopy monitor the source for changes and invoke the synchronization script each time a configurable number of changes has been made. This may work in your scenario, but be aware that robocopy will not just copy the changes, it will scan the complete directory structure just like a normal mirroring procedure. If there's a lot of files &amp; directories, this may hamper performance.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1317</wp:post_id>
		<wp:post_date>2009-10-07 13:35:27</wp:post_date>
		<wp:post_date_gmt>2009-10-07 13:35:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simple-file-synchronization-using-robocopy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="robocopy"><![CDATA[Robocopy]]></category>
		<category domain="post_tag" nicename="synchronization"><![CDATA[Synchronization]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Simple File Synchronization Using Robocopy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1188</wp:comment_id>
			<wp:comment_author><![CDATA[ermal]]></wp:comment_author>
			<wp:comment_author_email>ermal.halimaj@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.167.72.33</wp:comment_author_IP>
			<wp:comment_date>2013-02-18 22:00:40</wp:comment_date>
			<wp:comment_date_gmt>2013-02-18 21:00:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361221240.617610931396484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>975</wp:comment_id>
			<wp:comment_author><![CDATA[Luke Mason]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-13 18:40:32</wp:comment_date>
			<wp:comment_date_gmt>2012-02-13 18:40:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this, I used to use AllwaySync to back up the contents of the folders holding everything related to work but it balked at the number and insisted I pay for it on grounds of going over &quot;personal use&quot;.<br /><br />I tried SyncToy but that wasn't very nice to use. <br /><br />This is working like a charm. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>976</wp:comment_id>
			<wp:comment_author><![CDATA[Scott]]></wp:comment_author>
			<wp:comment_author_email>scott@scott.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-18 21:27:25</wp:comment_date>
			<wp:comment_date_gmt>2011-10-18 21:27:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is cool, but it's not synchronization specifically. You're just makeing dir A always look like dir B. Synchronization implies that changes in both places will be synced with each other.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>977</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-19 20:32:17</wp:comment_date>
			<wp:comment_date_gmt>2011-10-19 20:32:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Technically the term synchronization comes in two flavors - one-way and two-way. One-way synchronization is often referred to as mirroring, which is what I'm demonstrating here. However, though it may be called mirroring, it's still a one-way synchronization :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>978</wp:comment_id>
			<wp:comment_author><![CDATA[machinori]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-12-28 00:10:47</wp:comment_date>
			<wp:comment_date_gmt>2012-12-28 00:10:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just to share one thing I read on a Microsoft TechNet:<br />Although useful in some scenarios, using /Z switch makes copying much slower.<br />&quot;Copying files in restartable mode is about 6x slower over a network than in normal or backup mode due to the necessary management overhead.&quot;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60360</wp:comment_id>
			<wp:comment_author><![CDATA[Robbert-Jan]]></wp:comment_author>
			<wp:comment_author_email>91062300@mydavinci.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.85.155.209</wp:comment_author_IP>
			<wp:comment_date>2013-06-24 20:35:06</wp:comment_date>
			<wp:comment_date_gmt>2013-06-24 18:35:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,

Is it possible to make a two-way sync with Robocopy?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372098906.8923900127410888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60375</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-06-24 21:18:55</wp:comment_date>
			<wp:comment_date_gmt>2013-06-24 19:18:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Robbert-Jan

Unfortunately not, AFAIK. I've previously used Vice Versa for that.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1372101535.0618579387664794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>How To Do URL Rewriting on IIS 7 Properly</title>
		<link>http://improve.dk/how-to-do-url-rewriting-on-iis-7-properly/</link>
		<pubDate>Wed, 14 Oct 2009 12:14:41 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/10/14/how-to-do-url-rewriting-on-iis-7-properly.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of my earlier blog posts, and the all time most popular one, was about <a href="http://improve.dk/blog/2006/12/11/making-url-rewriting-on-iis7-work-like-iis6">how to make URL rewriting on IIS 7 work like IIS 6</a>. While my method did provide a means to the goal, it's humiliatingly far from what I should've done. Since the old post is still the most visited post on my blog I feel obligated to write a followup on how to do proper url rewriting in IIS 7.</p>

<h2>The scenario</h2>

<p>I'll assume a completely vanilla IIS 7 setup, contrary to the old post, there's no IIS tampering required.</p>

<p>I've setup a simple web application solution structure like so:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/iis7urlrewritingdoneproperly_1_2.jpg"><img class="alignnone size-full wp-image-2117" alt="iis7urlrewritingdoneproperly_1_2" src="http://improve.dk/wp-content/uploads/2009/10/iis7urlrewritingdoneproperly_1_2.jpg" width="274" height="168" /></a></div></div>

<p>As in the original post my goal is to accept a URL like http://localhost/blog/2006/12/08/missing-windows-mobile-device-center and map it to the BlogPost.aspx file in the root of my application. During the rewrite process I want to make the year, month, day and title available for the BlogPost.aspx file in an easily accessible way.</p>

<h2>Rewriting using Global.asax</h2>

<p>The easiest way of rewriting URL's is to add a new Global.asax file to the root of your solution. Now paste in the following code:</p>

<pre lang="csharp" escaped="true">using System;
using System.Text.RegularExpressions;
using System.Web;

namespace IIS7UrlRewritingDoneProperly
{
	public class Global : HttpApplication
	{
		// Runs at the beginning of each request to the server
		protected void Application_BeginRequest(object sender, EventArgs e)
		{
			// Match the specific blog post URL path as well as pull out variables in regex groups
			Match m = Regex.Match(Request.Url.LocalPath, @"^/blog/(?&lt;year&gt;d{4})/(?&lt;month&gt;d{2})/(?&lt;day&gt;d{2})/(?&lt;title&gt;.*)/?$");

			// If we match a blog posts URL, save the URL variables in Context.Items and rewrite to /BlogPost.aspx
			if (m.Success)
			{
				Context.Items["Title"] = m.Groups["title"].Value;
				Context.Items["Year"] = m.Groups["year"].Value;
				Context.Items["Month"] = m.Groups["month"].Value;
				Context.Items["Day"] = m.Groups["day"].Value;

				HttpContext.Current.RewritePath("/BlogPost.aspx");
			}
		}
	}
}</pre>

<p>Now all you need is a single change in your web.config file:</p>

<pre lang="xml" escaped="true">&lt;configuration&gt;
	&lt;system.webServer&gt;
		&lt;modules runAllManagedModulesForAllRequests="true"&gt;
	&lt;/system.webServer&gt;
&lt;/configuration&gt;</pre>

<p>The web.config change basically does the same as adding the wildcard map in IIS6. It ensures ASP.NET will run our Application_BeginRequest function for all requests - both those that match .aspx files as well as those for static files.</p>

<h2>Rewriting using an HttpModule</h2>

<p>As an alternative to putting the rewriting logic into Global.asax, you might want to write it into a distributable HttpModule. If your URL rewriting functionality is common for multiple sites, generic or for any other reason may be usable on multiple sites, we don't want to replicate the functionality in Global.asax.</p>

<p>If you added the Global.asax file from before, make sure you remove it again so it doesn't conflict with the HttpModule we're about to write. Add a new class project to the solution - I've called mine MyUrlRewriter. Add a reference to System.Web and add a single new class file to the project called UrlRewriter. Your solution should look like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/iis7urlrewritingdoneproperly_2_2.jpg"><img class="alignnone size-full wp-image-2118" alt="iis7urlrewritingdoneproperly_2_2" src="http://improve.dk/wp-content/uploads/2009/10/iis7urlrewritingdoneproperly_2_2.jpg" width="283" height="245" /></a></div></div>

<p>Now paste the following code into the UrlRewriter.cs class file:</p>

<pre lang="csharp" escaped="true">using System;
using System.Text.RegularExpressions;
using System.Web;

namespace MyUrlRewriter
{
	public class UrlRewriter : IHttpModule
	{
		// We've got nothing to dispose in this module
		public void Dispose()
		{ }

		// In here we can hook up to any of the ASP.NET events we use in Global.asax
		public void Init(HttpApplication context)
		{
			context.BeginRequest += new EventHandler(context_BeginRequest);
		}

		// This method does exactly the same as in Global.asax
		private void context_BeginRequest(object sender, EventArgs e)
		{
			// Match the specific blog post URL path as well as pull out variables in regex groups
			Match m = Regex.Match(HttpContext.Current.Request.Url.LocalPath, @"^/blog/(?&lt;year&gt;d{4})/(?&lt;month&gt;d{2})/(?&lt;day&gt;d{2})/(?&lt;title&gt;.*)/?$");

			// If we match a blog posts URL, save the URL variables in Context.Items and rewrite to /BlogPost.aspx
			if (m.Success)
			{
				HttpContext.Current.Items["Title"] = m.Groups["title"].Value;
				HttpContext.Current.Items["Year"] = m.Groups["year"].Value;
				HttpContext.Current.Items["Month"] = m.Groups["month"].Value;
				HttpContext.Current.Items["Day"] = m.Groups["day"].Value;

				HttpContext.Current.RewritePath("/BlogPost.aspx");
			}
		}
	}
}</pre>

<p>Notice that the context_BeginRequest function is identical to the one we had in Global.asax, except we have to reference HttpContext.Current explicitly since it's not implicitly available as in Global.asax.</p>

<p>Now add a reference from the original web application project to the MyUrlRewriter class project. Once this is done we just need to ensure our HttpModule is included in our web application by modifying the web.config:</p>

<pre lang="xml" escaped="true">&lt;configuration&gt;
    &lt;system.webServer&gt;
        &lt;modules runAllManagedModulesForAllRequests="true"&gt;
            &lt;add name="UrlRewriter" type="MyUrlRewriter.UrlRewriter, MyUrlRewriter"/&gt;
        &lt;/modules&gt;
    &lt;/system.webServer&gt;
&lt;/configuration&gt;</pre>

<p>At this point you should be able to run the website with the exact same URL rewriting functionality as we had before - though this time in a redistributable assembly called MyUrlRewriter.dll which can easily be included into any website by adding a single line to the section of the web.config file.</p>

<h2>Not Invented Here Syndrome</h2>

<p>If you have basic requirements to your URL rewriting solution you may often be able to settle with one of the many readymade HttpModules that you can simply plug into your application. IIS 7 also has a <a href="http://learn.iis.net/page.aspx/461/creating-rewrite-rules-for-the-url-rewrite-module/">URL Rewrite Module</a> that you can install and easily configure through the IIS manager.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1318</wp:post_id>
		<wp:post_date>2009-10-14 12:14:41</wp:post_date>
		<wp:post_date_gmt>2009-10-14 12:14:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-do-url-rewriting-on-iis-7-properly</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-7"><![CDATA[IIS 7]]></category>
		<category domain="post_tag" nicename="url-rewriting"><![CDATA[URL Rewriting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[How To Do URL Rewriting on IIS 7 Properly]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>980</wp:comment_id>
			<wp:comment_author><![CDATA[Dwight]]></wp:comment_author>
			<wp:comment_author_email>dwight@realtime-7.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-08 21:07:46</wp:comment_date>
			<wp:comment_date_gmt>2012-06-08 21:07:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,<br /><br />I hope you can help me. I am using IIS 6.0.<br /><br />In your example, you have created a DLL for the IHttpModule.<br /><br />I added the class directly to the App_Code directory. I also tried using the dll.<br /><br />In Visual Studio it's working when I go through Visual Studio's web server.<br /><br />However, if I configure it in IIS, it won't work. It returns a 404 error.<br /><br />I also confirmed that it's not an exception because I have a logger that is logging every request. Through IIS it doesn't log at all.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>992</wp:comment_id>
			<wp:comment_author><![CDATA[Jones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-19 08:39:14</wp:comment_date>
			<wp:comment_date_gmt>2011-11-19 08:39:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thnak you, thank you. thank you!!!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>993</wp:comment_id>
			<wp:comment_author><![CDATA[Jiss]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-15 04:49:56</wp:comment_date>
			<wp:comment_date_gmt>2012-02-15 04:49:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, <br />Nice article.<br />But when I use 'Rewriting using Global.asax', then we need to specify '.aspx' extension also with virtual urls. I could not run virtual paths without .aspx on an iis7 hosted server. But could run if extension specified like '<a rel="nofollow external" href="http://192.168.0.9:8044/310/view/sample-title-of-artcle.aspx" title="http://192.168.0.9:8044/310/view/sample-title-of-artcle.aspx" rel="nofollow">192.168.0.9:8044/.../sample-title-of-artcle.aspx</a>'.<br /><br />Else we have to use httpmodule based rewriting.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>994</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-15 09:36:16</wp:comment_date>
			<wp:comment_date_gmt>2012-02-15 09:36:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jiss,<br />If you follow the instructions on mapping all requests through the aspnet_isapi.dll file as described here: <a rel="nofollow external" href="http://improve.dk/archive/2006/12/11/making-url-rewriting-on-iis7-work-like-iis6.aspx" title="http://improve.dk/archive/2006/12/11/making-url-rewriting-on-iis7-work-like-iis6.aspx" rel="nofollow">improve.dk/...</a>, you'll be able to map non-.aspx virtual URLs too.<br /><br />I do however recommend that you use an HttpModule as it's the cleanest solution by far.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>995</wp:comment_id>
			<wp:comment_author><![CDATA[Brian Holmg&#229;rd Kristensen]]></wp:comment_author>
			<wp:comment_author_email>bhk@yourhost.dk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-19 13:50:00</wp:comment_date>
			<wp:comment_date_gmt>2009-10-19 13:50:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark, you ROCK!<br /><br />Setting runAllManagedModulesForAllRequests=&quot;true&quot; solved all my issues with NHibernate and Unit Of Work :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>996</wp:comment_id>
			<wp:comment_author><![CDATA[Chris]]></wp:comment_author>
			<wp:comment_author_email>christopher@teamvision.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-18 23:58:14</wp:comment_date>
			<wp:comment_date_gmt>2009-12-18 23:58:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[IS there any IIS 7.0 setup required here? I've tried both methods you mentioned and can't get either working. I have URL Rewriting working in IIS 6.0 but our production server just switched to 7.0.<br /><br />Thanks,<br />Chris]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>997</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-12-21 08:20:22</wp:comment_date>
			<wp:comment_date_gmt>2009-12-21 08:20:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Chris<br /><br />There shouldn't be any IIS7 setup required as all is configured through the web.config file. Has there been any IIS7 configurations on the machine level that might affect your particular site?<br /><br />Is the BeginRequest method being fired in either method?<br /><br />/ Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>998</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>akhilawan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-01-14 22:23:13</wp:comment_date>
			<wp:comment_date_gmt>2010-01-14 22:23:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent follow up article. Great info.<br /><br />Thanks,<br />Andrew]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>999</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
			<wp:comment_author_email>akhilawan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-01-14 22:37:07</wp:comment_date>
			<wp:comment_date_gmt>2010-01-14 22:37:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This method available in IIS7 is easy to implement. But I don't believe it is as efficient as the &quot;hack&quot; method you outlined in:<br /><a rel="nofollow external" href="http://www.improve.dk/blog/2006/12/11/making-url-rewriting-on-iis7-work-like-iis6" title="http://www.improve.dk/blog/2006/12/11/making-url-rewriting-on-iis7-work-like-iis6" rel="nofollow">www.improve.dk/...</a><br />The reason is, I noticed that global.asax is called for every request on the page - i.e. .net code is run for request for .css, .js, .gif, .png files etc which is not as good as having the final &quot;catch all&quot; method you outlined in the previous article.<br /><br />Using the old method, you can set up the wildcard to use a Managed Handler: System.Web.UI.PageHandlerFactory which allows us to keep IIS7 in Integrated mode. The only catch, which I am trying to find a simple solution for, is the default pages for folders will have to be managed by the handler instead of relying on the Default Pages specified in IIS7, which gets overridden by System.Web.UI.PageHandlerFactory.<br /><br />Thanks,<br />Andrew ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1000</wp:comment_id>
			<wp:comment_author><![CDATA[Mark]]></wp:comment_author>
			<wp:comment_author_email>mrawlingson@dotcomyourevent.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-19 21:51:48</wp:comment_date>
			<wp:comment_date_gmt>2010-03-19 21:51:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are my new god Mark. You totally just saved my ass - My URL rewriting was set up fine and working on my localhost, but porting to IIS 7 presented an issue. The URL rewriting can also get screwed up if you have your application pool in integrated mode rather than classic - but that was not the case for me this time around - setting runAllManagedModulesForAllRequests=&quot;true&quot; worked beautifully.<br /><br />Interestingly enough actually, my problems with my URL rewriting module came up today after I implemented a custom 404 error page. It worked fine before hand. Not sure why that made a difference though??]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1001</wp:comment_id>
			<wp:comment_author><![CDATA[Ophedian]]></wp:comment_author>
			<wp:comment_author_email>ophedian@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-03-31 18:23:46</wp:comment_date>
			<wp:comment_date_gmt>2010-03-31 18:23:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dude, after 6 hours trying to figure out what the heck is going on, finding this answer was like finding a chilled Deer Park water bottle after wondering in the Sahara desert. You Rock!!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1002</wp:comment_id>
			<wp:comment_author><![CDATA[Kvarc]]></wp:comment_author>
			<wp:comment_author_email>cehajicm@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-05-09 17:34:24</wp:comment_date>
			<wp:comment_date_gmt>2010-05-09 17:34:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the info, this enabled my UrlRewriter to work in Windows 7. <br /><br />Only two changes were necessary:<br />&lt;modules&gt; -&gt; &lt;modules runAllManagedModulesForAllRequests=&quot;true&quot;&gt;<br />and adding:<br />&lt;add name=&quot;UrlRewriter&quot; type=&quot;Intelligencia.UrlRewriter.RewriterHttpModule, Intelligencia.UrlRewriter&quot; <br /><br />Regards!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Solving Access Denied Errors Using Process Monitor</title>
		<link>http://improve.dk/solving-access-denied-errors-using-process-monitor/</link>
		<pubDate>Wed, 21 Oct 2009 10:56:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/10/21/solving-access-denied-errors-using-process-monitor.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://stackoverflow.com/questions/809144/could-not-load-file-or-assembly-someproject-or-one-of-its-dependencies-access">Access</a> <a href="http://stackoverflow.com/questions/574411/system-error-5-access-is-denied-when-starting-a-net-service">denied</a> <a href="http://stackoverflow.com/questions/951259/could-not-load-file-or-assembly-or-one-of-its-dependencies-access-is-denied">errors</a> are not <a href="http://stackoverflow.com/questions/1166490/could-not-load-file-or-assembly-applicenses-or-one-of-its-dependencies-access">uncommon</a> when deploying new websites / features that interact with the filesystem. While it might work in local testing, it suddenly doesn't anymore when deployed. Using <a href="http://technet.microsoft.com/en-us/sysinternals/bb896645.aspx">Process Monitor</a> I'll show how to easily debug these issues.</p>

<p>I've made a very simple web application project with a Default.aspx file that has the following codebehind code:</p>

<pre lang="csharp" escaped="true">using System;
using System.IO;
using System.Web.UI;

namespace FileWritingWebsite
{
	public partial class _Default : Page
	{
		protected void Page_Load(object sender, EventArgs e)
		{
			File.WriteAllText(@"C:\Test.txt", "Hello world!");

			Response.Write("Done!");
		}
	}
}</pre>

<p>After deploying this to my webserver we receive the archetypical access denied error:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon1_2.jpg"><img class="alignnone size-full wp-image-2121" alt="procmon1_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon1_2.jpg" width="714" height="484" /></a></div></div>

<p>In this case it's rather obvious where the error stems from, but the cause isn't as obvious. We're running under IIS, but we may be impersonating a user profile, running under a non-standard user account for the application pool (that is, not NETWORK SERVICE) or explicitly writing the file on a thread that's running on a different user account (which we are not in this case, however).</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon2_2.jpg"><img class="alignnone size-full wp-image-2122" alt="procmon2_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon2_2.jpg" width="377" height="454" /></a></div></div>

<p>Looking at the user permissions for C: it's clear that no special permissions have been granted for the web user. Thus our task is first and foremost to identify the user that's trying to write the file.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon3_2.jpg"><img class="alignnone size-full wp-image-2123" alt="procmon3_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon3_2.jpg" width="896" height="355" /></a></div></div>

<p>Once you startup Process Monitor you'll quickly be swamped with input data that's irrelevant to the task at hand. The first filter we'll apply is the overall event type filter. There's five standard types, of which the first four are enabled by default: Registry, File, Network, Process &amp; Threads and Profiling. As we're having an access denied issue with the file system, disable all but the File System events.</p>

<p>At this point the number of events should already be filtered down a lot - down to 32% in my case. Now click the cyan funnel icon to open up the filter editor window.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon4_2.jpg"><img class="alignnone size-full wp-image-2124" alt="procmon4_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon4_2.jpg" width="519" height="322" /></a></div></div>

<p>Since we know IIS is running under the w3wp.exe process, we can add a filter that includes all events with a process name of w3wp.exe. As soon as we add an Include filter, all event that do not match an include filter are excluded.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon5_2.jpg"><img class="alignnone size-full wp-image-2125" alt="procmon5_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon5_2.jpg" width="1024" height="299" /></a></div></div>

<p>At this point th event list is somewhat more manageable. The important event is clearly the one with a result of "ACCESS DENIED". That event shows we're trying to write (CreateFile) the C:Test.txt file and we're receving an ACCESS DENIED error from the file system.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon6_2.jpg"><img class="alignnone size-full wp-image-2126" alt="procmon6_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon6_2.jpg" width="504" height="577" /></a></div></div>

<p>Now right click the ACCESS DENIED event and go to Properties. Once you've opened the properties window, switch to the Process tab. At this point you'll be ableto see the exact user account that tried to perform the denied action. As can be seen from the screenshot, it was the NETWORK SERVICE user in this case - the default IIS user.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon7_2.jpg"><img class="alignnone size-full wp-image-2127" alt="procmon7_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon7_2.jpg" width="377" height="503" /></a></div></div>

<p>Once we've identified the necessary user account, it's a simple matter of granting it NTFS write rights to the C: directory.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/10/procmon8_2.jpg"><img class="alignnone size-full wp-image-2129" alt="procmon8_2" src="http://improve.dk/wp-content/uploads/2009/10/procmon8_2.jpg" width="1024" height="353" /></a></div></div>

<p>And finally we can run the website again and verify that we've now got proper permissions for writing the Test.txt file to the C: directory.</p>

<h2>Not just for web applications</h2>

<p>While I gave an example of a web application security issue, Process Monitor can be used to solve any kind of permission issues. You can use it for debugging why Windows Services won't start properly, why Outlook is suddenly complaining about access denied issues etc. Note that Process Monitor will also allow you to monitor the registry and can thus be used to solve security issues just as simple as with the file system.</p>

<p>Process Monitor is also a great tool for monitoring 3rd party applications to discover their exact usage of the file system and registry.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1319</wp:post_id>
		<wp:post_date>2009-10-21 10:56:45</wp:post_date>
		<wp:post_date_gmt>2009-10-21 10:56:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>solving-access-denied-errors-using-process-monitor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="process-monitor"><![CDATA[Process Monitor]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Solving Access Denied Errors Using Process Monitor]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1003</wp:comment_id>
			<wp:comment_author><![CDATA[Luke]]></wp:comment_author>
			<wp:comment_author_email>lukepuplett@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://lukepuplett.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-21 10:19:56</wp:comment_date>
			<wp:comment_date_gmt>2009-10-21 10:19:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A great article, Mark. I came from a Windows and infrastructure background and frequently use these tools (and your Robocopy over the page).<br /><br />I've found that web developers sometimes don't know about this stuff, the knowledge tends to pool within teams that don't talk. Or sometimes, while frustrated and being 'close to the problem' we just forget that these tools exist.<br /><br />Mark Russinovich (sp?) produces a lot of useful applets.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1004</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2009-10-21 11:36:57</wp:comment_date>
			<wp:comment_date_gmt>2009-10-21 11:36:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Luke,<br /><br />I agree completely, there's lots of people out there who do not know about the free tools available to you. It's just a matter of getting the word out and documenting the tools existence for one's own sake as well :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1006</wp:comment_id>
			<wp:comment_author><![CDATA[Anoop]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-27 17:57:21</wp:comment_date>
			<wp:comment_date_gmt>2012-04-27 17:57:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Mark. This really saved our day.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>162527</wp:comment_id>
			<wp:comment_author><![CDATA[norske spilleautomater gratis]]></wp:comment_author>
			<wp:comment_author_email>leandra-horgan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>https://aspainc.zendesk.com/entries/36567378-Best-Video-Clip-Converter</wp:comment_author_url>
			<wp:comment_author_IP>172.245.14.187</wp:comment_author_IP>
			<wp:comment_date>2013-12-28 22:20:21</wp:comment_date>
			<wp:comment_date_gmt>2013-12-28 21:20:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If some one desires expert view about blogging after that i propose him/her to go to see this website, Keep 
up the pleasant job.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1388265622.0119540691375732421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163571</wp:comment_id>
			<wp:comment_author><![CDATA[reklama]]></wp:comment_author>
			<wp:comment_author_email>wiley-broughton@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pbnation.com/member.php?u=652955</wp:comment_author_url>
			<wp:comment_author_IP>81.4.120.74</wp:comment_author_IP>
			<wp:comment_date>2014-01-08 16:22:33</wp:comment_date>
			<wp:comment_date_gmt>2014-01-08 15:22:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You actually make it seem really easy with your presentation however 
I to find this topic to be actually one thing that I 
think I might never understand. It kind of feels too complex and extremely wide for me.
I'm having a look forward in your next post, I will attempt to get the hold of it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389194553.131597042083740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Working With Identity Column Seed &amp; Increment Values</title>
		<link>http://improve.dk/working-with-identity-column-seed-and-increment-values/</link>
		<pubDate>Wed, 28 Oct 2009 11:46:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/10/28/working-with-identity-column-seed-increment-values.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>All of the following samples are based on the following table:</p>

<pre lang="tsql" escaped="true">CREATE TABLE [dbo].[tblCars]
(
	[CarID] [int] IDENTITY(2,5) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
)</pre>

<h2>Find identity column seed and increment values</h2>

<p>We can use the <a href="http://msdn.microsoft.com/en-us/library/ms189834.aspx">IDENT_SEED</a>, <a href="http://msdn.microsoft.com/en-us/library/ms189795.aspx">IDENT_INCR</a> and <a href="http://msdn.microsoft.com/en-us/library/ms175098.aspx">IDENT_CURRENT</a> functions to retrieve the identity seed and increment values, as well as the current value. Note that the next row will have IDENT_CURRENT() + IDENT_INCR() as its identity value.</p>

<pre lang="tsql" escaped="true">SELECT
	IDENT_SEED('tblCars') AS Seed,
	IDENT_INCR('tblCars') AS Increment,
	IDENT_CURRENT('tblCars') AS CurrentIdentity</pre>

<p>Result:</p>

<pre lang="tsql" escaped="true">Seed	Increment	CurrentIdentity
2		5			17</pre>

<p>An alternative way is to query the <a href="http://technet.microsoft.com/en-us/library/ms187334.aspx">sys.identity_columns</a> system view for the same values. Note that the sys.columns view (of which sys.identity_columns inherit) has an object_id column specifying the object ID of the table to which the column belongs. Thus we'll have to apply a predicate filtering away any columns not belonging to the desired table, tblCars in this example.</p>

<pre lang="tsql" escaped="true">SELECT
	seed_value AS Seed,
	increment_value AS Increment,
	last_value AS CurrentIdentity
FROM
	sys.identity_columns
WHERE
	object_id = OBJECT_ID('tblCars')</pre>

<p>Result:</p>

<pre lang="tsql" escaped="true">Seed	Increment	CurrentIdentity
2		5			17</pre>

<p>A third way of finding the current identity value is to use the <a href="http://technet.microsoft.com/en-us/library/ms176057.aspx">DBCC CHECKIDENT</a> function:</p>

<pre lang="tsql" escaped="true">DBCC CHECKIDENT(tblCars, NORESEED)</pre>

<p>Result:</p>

<pre lang="tsql" escaped="true">Checking identity information: current identity value '22', current column value '22'.
DBCC execution completed. If DBCC printed error messages, contact your system administrator.</pre>

<h2>Changing the seed value</h2>

<p>Using the DBCC CHECKIDENT command we can manually apply a new seed value to our table. Note that this will enable you to set an identity value that'll cause the identity column to have duplicates unless you have a unique index on the column, in which case you'll get an error instead. Thus, if you manually reseed the table, make sure you won't run into duplicate values.</p>

<pre lang="tsql" escaped="true">DBCC CHECKIDENT(tblCars, RESEED, 500)</pre>

<p>Result:</p>

<pre lang="tsql" escaped="true">Checking identity information: current identity value '22', current column value '500'.
DBCC execution completed. If DBCC printed error messages, contact your system administrator.</pre>

<p>If for some reason the identity value has become out of synch with the values in the table, we can automatically reseed the table to a valid identity value. In the following case I've manually set the seed to 10 while the highest identity value in the table is 27. After running RESEED with no explicit value, the seed is automatically set to 27, thus the next inserted row will have an identity value of 32, provided the increment is 5.</p>

<pre lang="tsql" escaped="true">DBCC CHECKIDENT(tblCars, RESEED)</pre>

<p>Result:</p>

<pre lang="tsql" escaped="true">Checking identity information: current identity value '10', current column value '27'.
DBCC execution completed. If DBCC printed error messages, contact your system administrator.</pre>

<h2>Getting the maximum and minimum identity values</h2>

<p>Using the IDENTITYCOL alias for any identity column in a table (of which there can be at most one), we can easily select the maximum and minimum identity values:</p>

<pre lang="tsql" escaped="true">SELECT
	MAX(IDENTITYCOL) AS MaximumIdentity,
	MIN(IDENTITYCOL) AS MinimumIdentity
FROM
	tblCars</pre>

<p>Result:</p>

<pre lang="tsql" escaped="true">MaximumIdentity	MinimumIdentity
27				22</pre>

<h2>Changing the identity increment value</h2>

<p>Unfortunately there's no easy way to change the increment value of an identity column. The only way to do so is to drop the identity column and add a new column with the new increment value. The following code will create a new temporary table, copy the data into it, recreate the original table with the correct increment value and then finally copy the data back using <a href="http://msdn.microsoft.com/en-us/library/aa259221(SQL.80).aspx">SET IDENTITY_INSERT ON</a> to insert explicit values into the identity column.</p>

<pre lang="tsql" escaped="true">BEGIN TRAN

-- Create new temporary table to hold data while restructuring tblCars
CREATE TABLE tblCars_TMP
(
	CarID int NOT NULL,
	Name nvarchar(50) NOT NULL
)

-- Insert tblCars data into tblCars_TMP
INSERT INTO tblCars_TMP SELECT * FROM tblCars

-- Drop original table
DROP TABLE tblCars

-- Create new tblCars table with correct identity values (1,1) in this case
CREATE TABLE [dbo].[tblCars]
(
	[CarID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](50) NOT NULL,
)

-- Reinsert data into tblCars table
SET IDENTITY_INSERT tblCars ON
INSERT INTO tblCars (CarID, Name) SELECT CarID, Name FROM tblCars_TMP
SET IDENTITY_INSERT tblCars OFF

COMMIT</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1320</wp:post_id>
		<wp:post_date>2009-10-28 11:46:21</wp:post_date>
		<wp:post_date_gmt>2009-10-28 11:46:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>working-with-identity-column-seed-and-increment-values</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-checkident"><![CDATA[DBCC CHECKIDENT]]></category>
		<category domain="category" nicename="tricks"><![CDATA[Tricks]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[working-with-identity-column-seed-increment-values]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Working With Identity Column Seed & Increment Values]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>37458</wp:comment_id>
			<wp:comment_author><![CDATA[kata mutiara]]></wp:comment_author>
			<wp:comment_author_email>fghjyfdsan@ymail.com</wp:comment_author_email>
			<wp:comment_author_url>http://goo.gl/OonC1</wp:comment_author_url>
			<wp:comment_author_IP>114.79.0.251</wp:comment_author_IP>
			<wp:comment_date>2013-05-12 00:31:00</wp:comment_date>
			<wp:comment_date_gmt>2013-05-11 22:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[read read permission]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368311460.958714008331298828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Defending Against the Improbable</title>
		<link>http://improve.dk/defending-against-the-improbable/</link>
		<pubDate>Thu, 05 Nov 2009 14:05:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/11/05/defending-against-the-improbable.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As little children we've all been taught that it's better to program defensively than relying on exceptions being thrown. However, sometimes it's preferably to just hope for the best and catch exceptions if they happen.</p>

<h2>Defending against the improbable</h2>

<p>Say we have a web application that receives and ID through the query string and serves a file accordingly, usually we'd write that like:</p>

<pre lang="csharp" escaped="true">if(File.Exists(path))
    serveFile(path);
else
    serve404();</pre>

<p>This is what I've been doing in a large image serving website I run. However, it recently struck me that on average about 99.9% of all requests map to existing files, only those few .01% of all requests actually resulted in 404 errors being thrown.</p>

<p>Given the above ratio, if we dropped the File.Exists() check, out of 10,000 requests only 10 of those would result in a FileNotFoundException being thrown while the rest would just be served as usual. That means in 99.9% of all requests we waste resources on performing a trivial File.Exists() request that we know will most likely come back true anyways. What's worse is that this will hit the harddrive and actually cost us an IO operation!</p>

<h2>A local test</h2>

<p>Observe the following two methods. serveFileUnsafely will serve a file under the assumption that it probably exists and will rely on a FileNotFoundException being throw if it doesn't exist. serveFileSafely will ensure the file exists before actually serving it (trusting nothing happens between File.Exists() and File.ReadAllText()).</p>

<pre lang="csharp" escaped="true">private static void serveFileUnsafely(string path)
{
    try
    {
        File.ReadAllText(path);
    }
    catch (FileNotFoundException)
    {
        Console.WriteLine("File does not exist!");
    }
}

private static void serveFileSafely(string path)
{
    if (File.Exists(path))
        File.ReadAllText(path);
    else

        Console.WriteLine("File does not exist!");
}</pre>

<p>The following two methods will be used to measure the time taken to serve 100 requests. I have created 100 identical files named [1-100].txt, each containing just the text "Hello world!". I have then deleted a random file so there's only 99 left. Thus in this example we assume that only 99% of all requests map to existing files even though the actual app has a success rate in excess of 99.9%. Note that the two methods each hit a separate folder - Test and Test2. This is to avoid any advantage of prewarming the cache before running the second test.</p>

<pre lang="csharp" escaped="true">private static void testLocalUnsafely()
{
    for (int file = 1; file &lt;= 100; file++)
        serveFileUnsafely(@"E:\Test" + file + ".txt");
}

private static void testLocalSafely()
{
    for (int file = 1; file &lt;= 100; file++)
        serveFileSafely(@"E:\Test2" + file + ".txt");
}</pre>

<p>The actual profiling goes like this. I'll be using my <a href="http://www.improve.dk/blog/2008/04/16/profiling-code-the-easy-way">CodeProfiler</a> class to make the measurements, running a total of 500 iterations using a single thread - as well as running an automatic warmup iteration.</p>

<pre lang="csharp" escaped="true">TimeSpan safeLocalTime = CodeProfiler.ProfileAction(() =&gt; testLocalSafely(), 500, 1);
TimeSpan unsafeLocalTime = CodeProfiler.ProfileAction(() =&gt; testLocalUnsafely(), 500, 1);

Console.WriteLine("Safe: " + safeLocalTime.TotalSeconds);
Console.WriteLine("Unsafe: " + unsafeLocalTime.TotalSeconds);</pre>

<p>And the results?</p>

<blockquote>
Safe: 4,211061<br />
Unsafe: 4,9368481<br />
<br />
Conclusion: Unsafe is 17% slower than safe.
</blockquote>

<p>Interestingly the defensive method actual performs the best! It's easy to conclude that throwing the exception is somewhat more expensive than hitting the IO layer to check for the files existance.</p>

<p>It's no coincidence that I mention the IO layer and not the disk in the above statement. As this is run locally on a machine with 8GBs of memory all 200 files are easily cached in memory - making it a pure in-memory operation to both check for the files existance as well as reading the file contents. This can be verified as well by the CPU taking up 100% resources while the test is running.</p>

<h2>A remote test</h2>

<p>Back to the real scenario. The web servers are not serving files off of local disks, they're serving the files from a backend SAN exposed as CIFS shares.</p>

<p>I've copied the two test file directories onto two directories on a remote share.</p>

<p>Two new methods have been added. They're identical to the last ones except that they access a remote share mapped to the local drive Z.</p>

<pre lang="csharp" escaped="true">private static void testShareUnsafely()
{
    for (int file = 1; file &lt;= 100; file++)
        serveFileUnsafely(@"Z:\Test" + file + ".txt");
}

private static void testShareSafely()
{
    for (int file = 1; file &lt;= 100; file++)
        serveFileSafely(@"Z:\Test2" + file + ".txt");
}</pre>

<p>The testing is performed like this. Note that I'm only running 10 iterations + warmup here as it'd otherwise take far too long time.</p>

<pre lang="csharp" escaped="true">TimeSpan safeShareTime = CodeProfiler.ProfileAction(() =&gt; testShareSafely(), 10, 1);
TimeSpan unsafeShareTime = CodeProfiler.ProfileAction(() =&gt; testShareUnsafely(), 10, 1);

Console.WriteLine("Safe: " + safeShareTime.TotalSeconds);
Console.WriteLine("Unsafe: " + unsafeShareTime.TotalSeconds);</pre>

<p>The results?</p>

<blockquote>
Safe: 4,1287161<br />
Unsafe: 3,1327967<br />
<br />
Conclusion: Unsafe is 25% faster than safe.
</blockquote>

<h2>As usual - it depends!</h2>

<p>As can be seen, sometimes it's best to defend against exceptions and sometimes it's better to just hope for the best and catch the exception if it occurs. In my scenario throwing an exception was... Well. The exception. Make sure you always consider the cost of avoiding exceptions before you do so blindly.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1321</wp:post_id>
		<wp:post_date>2009-11-05 14:05:32</wp:post_date>
		<wp:post_date_gmt>2009-11-05 14:05:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>defending-against-the-improbable</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Defending Against the Improbable]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1007</wp:comment_id>
			<wp:comment_author><![CDATA[Not him.]]></wp:comment_author>
			<wp:comment_author_email>penguat@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-04-25 08:49:29</wp:comment_date>
			<wp:comment_date_gmt>2010-04-25 08:49:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not that it's necessarily relevant in this case, but as I've seen on the internet, the file.exists() check leaves room for problems if the file can then move before you read it. Highly unlikely, but in many cases possible.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Reading Width &amp; Height of Flash File</title>
		<link>http://improve.dk/reading-width-height-of-flash-file/</link>
		<pubDate>Wed, 11 Nov 2009 18:33:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/11/11/reading-width-height-of-flash-file.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Obtaining the movie height &amp; weidth of a Flash file is an easy task using the <a href="http://www.swftools.org/swfdump.html">swfdump</a> tool that comes as part of the <a href="http://www.swftools.org/">swftools</a> package. Here's an example of how to invoke swfdump from C# and read out the height &amp; width of a given Flash file.</p>

<p>Start out by downloading on of the <a href="http://www.swftools.org/download.html">swftools releases</a>. I'm using the latest development snapshot. I'll be using one of the Flash files I made in <a href="http://www.improve.dk/blog/2008/06/11/as3-numbers-get-real">a previous blog post</a> as a test file, but you can use any .swf file you want. The test Flash file is called <i>test.swf</i>.</p>

<p>Once you've extracted the swftools package and copied both the test file and the swfdump.exe file into your solution directory, we can now test it out manually:</p>

<pre class="plain">D:\Webmentor Projekter\Blog\RetrievingSwfProperties&gt;swfdump -X -Y test.swf
-X 500 -Y 375</pre>

<p>By providing the -X and -Y switches swfdump only prints out the movie height &amp; width. You can see all the switches on the <a href="http://www.swftools.org/swfdump.html">swfdump man page</a>. At this point it's a simple matter of spinning up a swfdump process and parsing the output:</p>

<pre lang="csharp">static void Main(string[] args)
{
    // Set process properties
    Process p = new Process();
    p.StartInfo = new ProcessStartInfo("swfdump.exe", "-X -Y test.swf");
    p.StartInfo.CreateNoWindow = true;
    p.StartInfo.RedirectStandardOutput = true;
    p.StartInfo.UseShellExecute = false;
    p.Start();

    // Read all output, waiting for process to end
    string output = p.StandardOutput.ReadToEnd();

    // Regex that'll match both the width and height output - has to take care of potential decimals
    Match m = Regex.Match(output, @"-X (?d+(.d+)?) -Y (?d+(.d+)?)");

    // Convert width &amp; height to doubles forcing en-US culture
    double width = Convert.ToDouble(m.Groups["width"].Value, new CultureInfo("en-US"));
    double height = Convert.ToDouble(m.Groups["height"].Value, new CultureInfo("en-US"));

    Console.WriteLine("Width: " + width);
    Console.WriteLine("Height: " + height);
    Console.Read();
}</pre>

<p>Result:</p>

<blockquote>Width: 500<br />
Height: 375</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1322</wp:post_id>
		<wp:post_date>2009-11-11 18:33:32</wp:post_date>
		<wp:post_date_gmt>2009-11-11 18:33:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reading-width-height-of-flash-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="asflexflash"><![CDATA[AS/Flex/Flash]]></category>
		<category domain="post_tag" nicename="swf"><![CDATA[Swf]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Reading Width & Height of Flash File]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fixing Flash Bugs and Intercepting IIS Application Request Routing Cookies</title>
		<link>http://improve.dk/fixing-flash-bugs-by-intercepting-iis-application-request-routing-cookies/</link>
		<pubDate>Wed, 09 Dec 2009 13:50:18 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/12/09/fixing-flash-bugs-and-intercepting-iis-application-request-routing-cookies.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>What does Flash, upload, cookies, IIS load balancing and cookies have to do with each others? More than I'd like :(</p>

<p>When users need to upload files I often use the Flash based <a href="http://swfupload.org/">SWFUpload</a> component. It allows for multiple file selection and progress display during upload. Handling the uploaded files on the .NET side is rather easy:</p>

<pre lang="csharp" escaped="true">for (int i = 0; i &lt; Request.Files.Count; i++)
{
    HttpPostedFile hpf = Request.Files[i];

    // ... Save / process the HttpPostedFile
}</pre>

<p>One of the arguments for using Flash for web designs is that it'll look the same in all browsers. While that is literally true, there are a number of functionality differences when it comes to Flash and cross browser support.</p>

<p>There's a bug in all current Flash players that causes the Flash player to send persistent cookies from Internet Explorer, no matter what browser you're currently using. That is, if you've visited a given website in IE previously and you're nor visiting it in Chrome/Firefox - yup, your IE cookies will be sent to the website instead of the Firefox/Chrome cookies! There's a good <a href="http://swfupload.org/forum/generaldiscussion/383">description and discussion</a> at the SWFUpload site.</p>

<p>This bug poses a number of problems if you're using SWFUpload on a password protected site that relies on <a href="http://support.microsoft.com/kb/910443">cookie based forms authentication</a>. Whenever the file is uploaded, the users will appear to not be logged in. This is because the forms authentication ticket is stored in a cookie (which is correctly stored by Firefox/Chrome), but whenever the request is made IE's cookies are sent and those do not contain a valid forms authentication ticket cookie.</p>

<p>Luckily there's a workaround for this. Basically we'll need to tell our upload SWF the current SessionID as well as the contents of the forms authentication ticket cookie:</p>

<pre lang="csharp" escaped="true">var flashVars = {
    ASPSESSID: "&lt;%= Session.SessionID %&gt;",
    AUTHID: "&lt;%= Request.Cookies[FormsAuthentication.FormsCookieName] == null ? "" : Request.Cookies[FormsAuthentication.FormsCookieName].Value %&gt;"
}</pre>

<p>Now we need to modify our SWFUpload code so it sends the SessionID and ticket values in the query string to the upload file, so instead of calling:</p>

<pre lang="csharp" escaped="true">UploadFile_Upload.aspx</pre>

<p>We'll call:</p>

<pre lang="csharp" escaped="true">UploadFile_Upload.aspx?ASPSESSID=e2u35jfs0pvevfugkfnmm045&amp;AUTHID=E7BA5BDD2D6E9FBBC7CF613352EF10E01E0E8B0AD9920F62A465BC0CA20FB9CC2BA67F95D5A82F5D30B3162D6DFB3EA7FD505456E5EA5407094D03C1D48E6EE0B80F85F1B6AFD5F52FDC14C2ED6D77A8</pre>

<p>Now that we have the SessionID and ticket value we can manually restore those cookies in Global.asax (or an HttpModule, doesn't matter). We'll be doing the fix in Application_BeginRequest as this allows us to fix the cookies before ASP.NET will perform its validation and thereby notice the missing session and forms authentication cookies.</p>

<pre lang="csharp" escaped="true">public class Global : HttpApplication
{
    protected void Application_BeginRequest(object sender, EventArgs e)
    {
        fixCookie("ASP.NET_SessionId", "ASPSESSID");
        fixCookie(FormsAuthentication.FormsCookieName, "AUTHID");
    }

    private void fixCookie(string cookieName, string queryStringKey)
    {
        // Did we get a querystring value to override the cookie value?
        if (HttpContext.Current.Request.QueryString[queryStringKey] != null)
        {
            // Try to get the current cookie value
            HttpCookie cookie = HttpContext.Current.Request.Cookies.Get(cookieName);

            if (cookie == null)
            {
                /* If there's no cookie, add a new one and add it to the Response.Cookies collection.
                   Note that it HAS to be put in the Response.Cookies collection even though Request.Cookies
                   makes more sense.
                */ 
                cookie = new HttpCookie(cookieName, HttpContext.Current.Request.QueryString[queryStringKey]);
                Response.Cookies.Add(cookie);
            }
            else
            {
                /* If there's already a cookie (one from IE perhaps), overwrite its value with the querystring
                   provided value.
                */
                cookie.Value = HttpContext.Current.Request.QueryString[queryStringKey];
                HttpContext.Current.Request.Cookies.Set(cookie);
            }
        }
    }
}</pre>

<p>Note that there is a security implication in doing this as it allows for session hijacking if you're able to fake another users SessionID and forms authentication ticket! Thus, make sure you handle this or at least know the risks in not doing so.</p>

<p>OK, so that fixes the SWFUpload issue. This ran perfectly for some time. However, once i placed an <a href="http://forums.iis.net/1154.aspx">IIS7 Application Request Routing based load balancer</a> in front of the machine serving the upload applications, the issue from before reappeared, even though my original cookie handling code was still in place.</p>

<p>The reason for the resurrection of the cookie bug was to be found in the way ARR maintains client affinity:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2009/12/arrswfupload_1_2.jpg"><img class="alignnone size-full wp-image-1994" alt="arrswfupload_1_2" src="http://improve.dk/wp-content/uploads/2009/12/arrswfupload_1_2.jpg" width="408" height="250" /></a></div></div>

<p>IIS ARR will set a cookie on the client that basically contains a hash of the content server to which the client is bound. This is a very simple and neat client affinity solution as there's no shared state on the IIS ARR machine itself. Thus, it's easy to combine a number of IIS ARR servers using NLB and let IIS ARR handle client affinity and thus simplify the NLB setup.</p>

<p>However, since the client affinity is handled by a cookie - that cookie was now suffering from the same bug as before. Basicaly the IIS ARR load balancer thought it received a completely new client request and thus assigned the request to a random content server, giving a 1/[num_machines] chance of succeeding in case it randomly hit the correct content server.</p>

<p>The solution is similar, though there is one major difference. The previous problem occurred on the actual content machines because those were missing a cookie value, in this case it's the load balancer itself. Thus, deploying a fix on the content servers won't do any good.</p>

<p>We'll create a new HttpModule that performs the fix in Application_BeginRequest - which occurs before IIS ARR assigns the request to a content server. To ensure this fix does not in any way affect normal requests in case something goes wrong, exceptions are being silently ignored. This is generally a bad practice, but in this case I really do not want to affect the load balancer as that'll put down the website for all users if an error occurs. Note that while the handling is very similar to the previous bit of code, this time we're modifying the actual Cookie header directly. If we don't do this, IIS ARR won't pick up the overwritten cookie values and thus still send the user to a random content server.</p>

<pre lang="csharp" escaped="true">using System;
using System.Text.RegularExpressions;
using System.Web;

namespace iPaper.Web.ArrCookieRestorer
{
    public class ArrCookieRestorer : IHttpModule
    {
        public void Dispose()
        { }

        public void Init(HttpApplication context)
        {
            context.BeginRequest += context_BeginRequest;
        }

        private void context_BeginRequest(object sender, EventArgs e)
        {
            try
            {
                HttpContext context = HttpContext.Current;
                string serverHash = context.Request.QueryString["ARRIPARRAffinity"];

                if (serverHash != null)
                {
                    string cookieHeader = context.Request.Headers["Cookie"];

                    if (cookieHeader != null)
                    {
                        if (cookieHeader.Contains("IPARRAffinity="))
                            cookieHeader = Regex.Replace(cookieHeader, "IPARRAffinity=[0-9a-f]+;?", "IPARRAffinity=" + serverHash + ";");
                        else
                            cookieHeader += "; IPARRAffinity=" + serverHash;

                        context.Request.Headers["Cookie"] = cookieHeader;
                    }
                    else
                        context.Request.Headers.Add("Cookie", "IPARRAffinity=" + serverHash);
                }
            }
            catch
            {}
        }
    }
}</pre>

<p>Once you've compiled the HttpModule we need to install it on the IIS ARR machine. On a default installation of IIS ARR you'll have your rewrite rules as global rules at the IIS-level. However, if you install the HttpModule at the IIS level you'll get the following exception on all requests:</p>

<blockquote>The virtual path 'null' maps to another application, which is not allowed root</blockquote>

<p>Apparently <a href="http://forums.iis.net/t/1162754.aspx">it's a bug</a> in IIS 7.0 on Windows Server 2008 which has been fixed in IIS 7.5 on Windows Server 2008 R2. As I'm still running a vanilla 2008 and IIS 7.0, I had to get around it by moving the rewrite rules into the default website - which code runs for all requests.</p>

<p>Make sure there's a bin folder in the default website root and place your HttpModule in there. Then setup your web.config like so:</p>

<pre lang="xml" escaped="true">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</pre>

<p>This adds our HttpModule so it'll run for all requests - fixing any missing ARR client affinity cookies. Note that your rewrite rules will likely differ from mine.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1323</wp:post_id>
		<wp:post_date>2009-12-09 13:50:18</wp:post_date>
		<wp:post_date_gmt>2009-12-09 13:50:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fixing-flash-bugs-by-intercepting-iis-application-request-routing-cookies</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="application-request-routing"><![CDATA[Application Request Routing]]></category>
		<category domain="category" nicename="asflexflash"><![CDATA[AS/Flex/Flash]]></category>
		<category domain="post_tag" nicename="cookies"><![CDATA[Cookies]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Fixing Flash Bugs and Intercepting IIS Application Request Routing Cookies]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[fixing-flash-bugs-and-intercepting-iis-application-request-routing-cookies]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TechTalk on Scalability &amp; Availability Using NLB and IIS ARR</title>
		<link>http://improve.dk/techtalk-on-scalability-and-availability-using-nlb-and-iis-arr/</link>
		<pubDate>Wed, 16 Dec 2009 13:28:48 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2009/12/16/techtalk-on-scalability-availability-using-nlb-and-iis-arr.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As promised during my TechTalk today at Microsoft Denmark, here are the links to all slides and demo code. Unfortunately you'll not be able to download the VPC's as those total around 30GB.</p>

<p>Download <a href="http://improve.dk/wp-content/uploads/2009/12/Speech_NLB_MSDK_TechTalk.rar">Speech_NLB_MSDK_TechTalk.zip</a> - Slides &amp; code</p>

<p>I sincerely hope you enjoyed the presentation as much as I did. Either way, I'd appreciate your comments on <a href="http://speakerrate.com/talks/1900-using-network-load-balancing-for-availability-scalability-microsoft-dk-techtalk">SpeakerRate</a> - Thanks :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1324</wp:post_id>
		<wp:post_date>2009-12-16 14:28:48</wp:post_date>
		<wp:post_date_gmt>2009-12-16 13:28:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>techtalk-on-scalability-and-availability-using-nlb-and-iis-arr</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="application-request-routing"><![CDATA[Application Request Routing]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[techtalk-on-scalability-availability-using-nlb-and-iis-arr]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Speaking at Odense .NET User Group</title>
		<link>http://improve.dk/speaking-at-onug/</link>
		<pubDate>Fri, 19 Feb 2010 17:53:10 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/02/19/speaking-at-odense-net-user-group.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On March 10th I'll be giving a presentation at <a href="http://www.onug.dk/">Odense .NET User Group</a> on Scalability &amp; Availability on the Microsoft platform.</p>

<p>As the session will be in Danish, I'll be posting a danish abstract:</p>

<p>I denne session kommer vi ind på hvordan man sørger for høj tilgængelighed og skalerbarhed af ASP.NET web applikationer ved brug af flere maskiner opsat som cluster. Hvordan sørger vi for konsistent deling af sessions på tværs af maskiner indenfor et cluster? NLB vil blive demonstreret som clustering teknologi med dets styrker og svagheder. Ligeledes vil den nye IIS7 Application Request Routing extension blive demonstreret og hvordan den kan bruges i samspil med NLB.</p>

<p>If you want to join, please <a href="http://www.linkedin.com/osview/canvas?_ch_page_id=1&amp;_ch_panel_id=1&amp;_ch_app_id=7083120&amp;_applicationId=2000&amp;_ownerId=0&amp;appParams={%22go_to%22:%22events/233429%22,%22referrer%22:%22public%22}">sign up at LinkedIn</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1325</wp:post_id>
		<wp:post_date>2010-02-19 18:53:10</wp:post_date>
		<wp:post_date_gmt>2010-02-19 17:53:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-onug</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[speaking-at-odense-net-user-group]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Speaking at Miracle OpenWorld 2010</title>
		<link>http://improve.dk/speaking-at-miracle-openworld-2010/</link>
		<pubDate>Wed, 17 Mar 2010 09:29:37 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/03/17/speaking-at-miracle-openworld-2010.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I will be giving two presentations at <a href="http://mow2010.dk/">Miracle OpenWorld 2010</a> in April.</p>

<h2>Working with PDF documents</h2>

<p>In this session he will sharing his experiences with dissecting PDF documents for the iPaper system. We'll look at various commercial as well as open source tools for reading, editing and rasterizing PDF documents. What are some of the common pitfalls you'll run into when working with PDF documents and what does a PDF really consist of internally? While some of the tools and libraries can also be used to create PDFs, this session will concentrate on working with existing PDF files.</p>

<h2>SQL Azure for DBA's</h2>

<p>Will be presenting together with Martin Schmidt from Miracle. Abstract is still in the works. It's safe to say though that this will be no typical sales pitch - we'll be looking at what limitations you'll run into, what happens when you reach the limits of SQL Azure and generally what the sales pitch happily ignores.</p>

<p>I highly recommend going to MOW as this is one of the best DBA &amp; developer conferences with networking and fun being in the high seat! There's a beach party - what more do you need?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1326</wp:post_id>
		<wp:post_date>2010-03-17 10:29:37</wp:post_date>
		<wp:post_date_gmt>2010-03-17 09:29:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-miracle-openworld-2010</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="miracle-open-world"><![CDATA[Miracle Open World]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Miracle OpenWorld 2010 Slides</title>
		<link>http://improve.dk/miracle-openworld-2010-slides/</link>
		<pubDate>Sat, 17 Apr 2010 14:04:28 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/04/17/miracle-openworld-2010-slides.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After getting some well needed sleep following Miracle OpenWorld 2010 and adhering to the we-do-not-use-sleep rule, I'm finally starting to get on top again, though my body still aches all over.</p>

<p>As promised, you can download the slides from my presentations below.</p>

<p><a href="http://improve.dk/wp-content/uploads/2010/04/Dissecting_PDF_Documents_1.pdf">Dissecting_PDF_Documents_1.pdf - Slides</a><br />
<a href="http://improve.dk/wp-content/uploads/2010/04/SQL_Azure_for_DBAs.pdf">SQL_Azure_for_DBAs.pdf - Slides</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1327</wp:post_id>
		<wp:post_date>2010-04-17 16:04:28</wp:post_date>
		<wp:post_date_gmt>2010-04-17 14:04:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>miracle-openworld-2010-slides</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="miracle-open-world"><![CDATA[Miracle Open World]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Simple AS3 Stack Implementation</title>
		<link>http://improve.dk/simple-as3-stack-implementation/</link>
		<pubDate>Wed, 21 Apr 2010 21:23:20 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/04/20/simple-as3-stack-implementation.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently I was doing some experimental AS3 development. Much to my surprise, simple collection classes like Stack/Queue are not available in the framework - guess I'm spoiled being used to the .NET Framework.</p>

<p>I ended up implementing a simple <a href="http://en.wikipedia.org/wiki/Stack_(data_structure)">stack</a> using an internal <a href="http://en.wikipedia.org/wiki/Linked_list">linked list</a>. There's nothing exciting about the implementation but I thought others might be able to use it, so here it is :)</p>

<h3>StackNode.as</h3>

<pre lang="actionscript">package dk.improve.collections
{
    internal final class StackNode
    {
        public var value:Object;
        public var next:StackNode;

        public function StackNode(value:Object):void
        {
            this.value = value;
        }
    }
}</pre>

<h3>Stack.as</h3>

<pre lang="actionscript">package dk.improve.collections
{
    public class Stack
    {
        private var head:StackNode;

        public function push(obj:Object):void
        {
            var newNode:StackNode = new StackNode(obj);

            if(head == null)
                head = newNode;
            else
            {
                newNode.next = head;
                head = newNode;
            }
        }

        public function pop():Object
        {
            if(head != null)
            {
                var result:Object = head.value;
                head = head.next;

                return result;
            }
            else
                return null;
        }

        public function peek():Object
        {
            if(head != null)
                return head.value;
            else
                return null;
        }
    }
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1328</wp:post_id>
		<wp:post_date>2010-04-21 23:23:20</wp:post_date>
		<wp:post_date_gmt>2010-04-21 21:23:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>simple-as3-stack-implementation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="asflexflash"><![CDATA[AS/Flex/Flash]]></category>
		<category domain="post_tag" nicename="stack"><![CDATA[Stack]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[44]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Simple AS3 Stack Implementation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1347</wp:comment_id>
			<wp:comment_author><![CDATA["Dorian"]]></wp:comment_author>
			<wp:comment_author_email>that.guy@darkglass.net</wp:comment_author_email>
			<wp:comment_author_url>http://hecate.darkglass.net</wp:comment_author_url>
			<wp:comment_author_IP>184.13.143.103</wp:comment_author_IP>
			<wp:comment_date>2013-02-20 08:12:45</wp:comment_date>
			<wp:comment_date_gmt>2013-02-20 07:12:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[AS3 arrays have push and pop.

push takes an object and returns the new length of the array. (adding it to the end)

pop removes the last object from the array and returns its value (removing from the end)

Naturally, operations for arrays can be used to peek, etc

If nothing else, a wrapper that simplifies this down to becoming just the same as a stack implementation (the one provided here seems trivial enough) as opposed to reinventing the wheel makes more sense.

I may write one myself in due course of time. I was searching for one due to having my own need - to track various timers on a kludged profiler, which should resolve in the opposite order they're started in.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1348</wp:comment_id>
			<wp:comment_author><![CDATA["Dorian"]]></wp:comment_author>
			<wp:comment_author_email>that.guy@darkglass.net</wp:comment_author_email>
			<wp:comment_author_url>http://hecate.darkglass.net</wp:comment_author_url>
			<wp:comment_author_IP>184.13.143.103</wp:comment_author_IP>
			<wp:comment_date>2013-02-20 08:19:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-20 07:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just to extend this as a reference with ideas:
http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/Array.html

To directly copy a select few that should grab attention of those who seek out this post incidentally, and should allow the implementation of many basic types including stacks, queues, and deques:

---
Public Properties
---
length : uint
A non-negative integer specifying the number of elements in the array.

---
Public Methods
---	
pop():*
Removes the last element from an array and returns the value of that element.

push(... args):uint
Adds one or more elements to the end of an array and returns the new length of the array.

shift():*
Removes the first element from an array and returns that element.

unshift(... args):uint
Adds one or more elements to the beginning of an array and returns the new length of the array.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1009</wp:comment_id>
			<wp:comment_author><![CDATA[Umopepisdn]]></wp:comment_author>
			<wp:comment_author_email>umo@umopepisdn.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-05-15 08:51:49</wp:comment_date>
			<wp:comment_date_gmt>2010-05-15 08:51:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks, this saved me a couple hours!  It's frustrating and surprising to me what AS3 doesn't have. -_- ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1010</wp:comment_id>
			<wp:comment_author><![CDATA[Francisco Colmenares]]></wp:comment_author>
			<wp:comment_author_email>fcolmenarez@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-03 16:25:09</wp:comment_date>
			<wp:comment_date_gmt>2012-02-03 16:25:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br /><br />I'm confused by your implementation, it looks like a Queue instead of a stack. Stacks are LIFO right? But here, it appears that in your structure they are FIFO, that's the definition of a Queue, not a stack.<br /><br />Still that looks like a very good queue.<br />Regards,<br /><br />Francisco.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1011</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-03 16:58:45</wp:comment_date>
			<wp:comment_date_gmt>2012-02-03 16:58:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Francisco,<br /><br />You're absolutely right, I have no idea how I messed those two up. I've updated the code so it reflects what I meant to write.<br /><br />Unfortunately I don't have an AS3 compiler with me, so I haven't tested the code. It should work though, I hope :)<br /><br />- Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1012</wp:comment_id>
			<wp:comment_author><![CDATA[Sergio Tello]]></wp:comment_author>
			<wp:comment_author_email>sergio_tello45@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-04-18 20:13:09</wp:comment_date>
			<wp:comment_date_gmt>2011-04-18 20:13:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Gracias, realmente es muy buen codigo, y me ayudo muchisimo, saludos.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1360</wp:comment_id>
			<wp:comment_author><![CDATA[AS3: Stack, Queue, Deque: All documentation and gripes needed to roll your own | Hecate Asteroth]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://hecate.darkglass.net/?p=1626</wp:comment_author_url>
			<wp:comment_author_IP>184.13.143.103</wp:comment_author_IP>
			<wp:comment_date>2013-02-20 10:12:05</wp:comment_date>
			<wp:comment_date_gmt>2013-02-20 09:12:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] the  AS3 array class documentation  , and  my comment elsewhere  when I went to look for an implementation that sparked the questions we never ask, [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361351525.934154033660888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1353</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>217.195.185.18</wp:comment_author_IP>
			<wp:comment_date>2013-02-20 09:32:54</wp:comment_date>
			<wp:comment_date_gmt>2013-02-20 08:32:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Dorian,

Great points! Using push, pop and unshift, you'd be able to make a simpler wrapper over the Array class, or just use the Array class natively, though with slightly jumbled semantics compared to a "true" stack or queue.

I'd venture a guess that there's a performance penalty, in case you're pushing large numbers, as the array is most likely reallocated each time a new element is pushed onto it. So in case you've got a really hot array, and you're not looping it sequentially, a linked-list implementation may still make sense. But to be fair, that's a very rare case.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361349175.00197505950927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Speaking at Aarhus .NET User Group</title>
		<link>http://improve.dk/speaking-at-aarhus-dotnet-user-group/</link>
		<pubDate>Fri, 23 Apr 2010 20:12:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/04/22/speaking-at-aarhus-net-user-group.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On April 28th I'll be giving a presentation at <a href="http://www.anug.dk/">Aarhus .NET User Group</a> on SharedCache. The presentation will be part of a combined event where Morten Jokumsen will be presenting Velocity and Jakob Tikjøb Andersen will be presenting Cassandra.</p>

<p>I'll give a quick run through of what SharedCache is and what it's not, how to use it and what you can expect from it. If all goes well, I'll have my EC2 SharedCache cluster up and running for demo purposes :)</p>

<p>If you want to join, please <a href="http://www.facebook.com/event.php?eid=109698295736298">sign up at Facebook</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1329</wp:post_id>
		<wp:post_date>2010-04-23 22:12:40</wp:post_date>
		<wp:post_date_gmt>2010-04-23 20:12:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-aarhus-dotnet-user-group</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="anug"><![CDATA[ANUG]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[speaking-at-aarhus-net-user-group]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Bundling Image Requests for Increased Performance</title>
		<link>http://improve.dk/bundling-image-requests-for-increased-performance/</link>
		<pubDate>Mon, 07 Jun 2010 11:13:09 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/06/07/bundling-image-requests-for-increased-performance.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A common scenario in RIA's is to show a large amount of small pictures on a single page. Let's say we want to show 100 images in a grid. While the simplest approach is to just put in 100 image objects and load in the images one by one, I believe it can be done smarter...</p>

<h2>The cost of a request</h2>

<p>Each and every request will have a header overhead of about ~400 bytes outgoing and ~200 bytes ingoing - both varying depending on the host, cookies, headers etc. Multiply that by 100 requests and we've got about 60KB of data overhead, just for the headers. Even worse is the actual roundtrip time of sending the packets to the server and getting a reply back; Even with reuse of the connections, there's a large cost involved.</p>

<h2>Bundling requests</h2>

<p>Imagine if we could just make a single request to the server - "Hey, please send me these 100 images, ty" - and then we'll get back a single response containing all the images. One way of doing this would be to zip the images on the server and then unzip them on the client - there's open zip libraries for both Silverlight and Flash. However, this has a large CPU cost on not only the server, but also on the client. Furthermore, images usually don't compress much so it's basically just a waste. In this post I'll present a C# class for bundling images as well as an AS3 class for reading the bundled image stream. While the RIA sample is in Actionscript, it's easily applicable to Silverlight as well - should anyone feel like implementing the client side in Silverlight, please let me know so I can link you.</p>

<h2>Generating sample images</h2>

<p>Our first task is to generate some sample images. The following code will create 100 images named 1-100.jpg containing the greytones from #000000 (well, almost) to #FFFFFF.</p>

<pre lang="csharp" escaped="true">for(int i=1; i&lt;=100; i++)
{
    int rgb = Convert.ToInt32(i / 100d * 255);

    using(Bitmap bmp = new Bitmap(100, 100))
    using(Graphics g = Graphics.FromImage(bmp))
    {
        g.FillRectangle(new SolidBrush(Color.FromArgb(rgb, rgb, rgb)), 0, 0, 100, 100);
        bmp.Save(i + ".jpg");
    }
}</pre>

<h2>On the server side: ImageStream.cs</h2>

<p>The ImageStream class contains a dictionary that'll hold references to the files untill we're ready to write them out. Each added file consists of a key as well as a filepath. To keep things simple, I'm limiting the key names to ASCII codes between 32 and 126 to avoid unprintable characters.</p>

<p>The class has a Write method that'll write all the added images to the provided stream. Each image consists of four parts:</p>

<ul>
	<li>4 bytes (int) that contains the combined length of the key and payload plus two extra bytes for specifying the key length.</li>
	<li>2 bytes (short) that contains the key length.</li>
	<li>X bytes containing the key using UTF8Encoding. I'll explain later why I'm using UTF8Encoding and not ASCIIEncoding.</li>
	<li>X bytes containing the actual file contents.</li>
</ul>

<h3>ImageStream.cs</h3>

<pre lang="csharp" escaped="true">public class ImageStream
{
    IDictionary files = new Dictionary();

    public void AddFile(string key, string filePath)
    {
        files.Add(key, new FileInfo(filePath));

        if (key.ToCharArray().Any(x =&gt; x &lt; 32 || x &gt; 126))
            throw new ArgumentException("Invalid character used in key.");
    }

    public void Write(Stream stream)
    {
        // For each file, write the contents
        foreach (var file in files)
        {
            // Write payload length
            stream.Write(BitConverter.GetBytes((int)file.Value.Length + file.Key.Length), 0, 4);

            // Write key length
            stream.Write(BitConverter.GetBytes((ushort)file.Key.Length), 0, 2);

            // Write key
            stream.Write(Encoding.UTF8.GetBytes(file.Key), 0, file.Key.Length);

            // Write file
            stream.Write(File.ReadAllBytes(file.Value.FullName), 0, (int)file.Value.Length);
        }
    }
}</pre>

<h2>On the server side: Image.ashx</h2>

<p>All we need now is a file to serve the ImageStream. I'm using an HttpHandler called Image.ashx to loop through all the files (located in "/Imgs/") and add them to the ImageStream before writing them out to the output stream.</p>

<h3>Image.ashx</h3>

<pre lang="csharp" escaped="true">public class Image : IHttpHandler
{
    public void ProcessRequest(HttpContext context)
    {
        context.Response.ContentType = "application/octet-stream";
        context.Response.Buffer = false;

        var imgc = new ImageStream();

        for(int i=1; i&lt;=100; i++)
            imgc.AddFile("img" + i, context.Server.MapPath("Imgs/" + i + ".jpg"));

        imgc.Write(context.Response.OutputStream);
    }

    public bool IsReusable
    {
        get { return true; }
    }
}</pre>

<h2>On the client side: CombinedFileReader.as</h2>

<p>The CombinedFileReader class takes a url in the constructor, pointing to the stream we want to retrieve. Once we call load() we spawn a URLStream and listen for the PROGRESS and COMPLETE events. The core of the class is the onProgress method, being invoked on both PROGRESS and COMPLETE events. We don't really care which event it is as both means there's new data for us to consume.</p>

<p>The onProgress method works as a simple state machine. This could be done much cleaner by abstracting away the state functionality, but it's simple enough to be easily understood. There are just two states we can be in:</p>

<h3>header</h3>

<p>In this state we're currently waiting for there to be 4 bytes available, meaning we can read the first integer containing the number of bytes required to load the current file. Once this has been loaded into the currentFileLength variable, we change the state to "payload".</p>

<h3>payload</h3>

<p>In this state we're waiting for the remaining bytes to be available. As soon as they become available, we read the key using the readUTF() method on the URLStream class. readUTF automatically reads a short first and expects these two bytes to contain the length of the string to be read in UTF format - thus the use of UTF8Encoding over ASCIIEncoding. As both encodings take up the same amount of bytes, it's purely a matter of convenience. After this we read in the payload - the image. It's important to explicitly set the ByteArray endianness to avoid problems since the ByteArray by default uses little endian while our ImageStream uses big endian. Note that the header bytes contains the combined length of the key + payload, thus we should only read in currentFileLength - currentKey.length bytes. Finally we dispatch a custom FileReadEvent (see code further down) taking in the key and payload bytes as parameters.</p>

<h3>CombinedFileReader.as</h3>

<pre lang="actionscript" escaped="true">package dk.improve.net
{
    import flash.events.*;
    import flash.net.*;
    import flash.utils.*;

    import mx.events.FlexEvent;

    public class CombinedFileReader extends EventDispatcher
    {
        private var url:String;
        private var urlStream:URLStream;
        private var currentState:String = "header";
        private var currentFileLength:int;
        private var currentKey:String;

        public function CombinedFileReader(url:String)
        {
            this.url = url;
        }

        public function load():void
        {
            urlStream = new URLStream();
            urlStream.endian = Endian.LITTLE_ENDIAN;
            urlStream.addEventListener(ProgressEvent.PROGRESS, onProgress);
            urlStream.addEventListener(Event.COMPLETE, onProgress);
            urlStream.load(new URLRequest(url));
        }

        private function onProgress(evt:Event):void
        {
            switch(currentState)
            {
                case "header":
                    if(urlStream.bytesAvailable &gt;= 4)
                    {
                        currentFileLength = urlStream.readInt();
                        currentState = "payload";

                        onProgress(evt);
                    }
                    break;

                case "payload":
                    if(urlStream.bytesAvailable &gt;= currentFileLength)
                    {
                        currentKey = urlStream.readUTF();
                        var payloadLength = currentFileLength - currentKey.length;

                        var bytes:ByteArray = new ByteArray();
                        bytes.endian = Endian.BIG_ENDIAN;
                        urlStream.readBytes(bytes, 0, payloadLength);

                        dispatchEvent(new FileReadEvent(FileReadEvent.ON_LOADED, currentKey, bytes));

                        currentState = "header";

                        onProgress(evt);
                    }
                    break;
            }
        }
    }
}</pre>

<h3>FileReadEvent.as</h3>

<pre lang="actionscript" escaped="true">package dk.improve.net
{
    import flash.events.Event;
    import flash.utils.ByteArray;

    public class FileReadEvent extends Event
    {
        public static const ON_LOADED:String = "onLoaded";
        public var file:ByteArray;
        public var key:String;

        public function FileReadEvent(type:String, key:String, file:ByteArray):void
        {
            this.file = file;
            this.key = key;

            super(type);
        }
    }
}</pre>

<h2>On the client side: Thumbnails.mxml</h2>

<p>The final part of demoing the bundled image stream is to actually consume the stream by using the CombinedFileReader AS3 class. Once the application loads we instantiate a new CombinedFileReader, passing in the url to the Image.ashx HttpHandler I mentioned earlier. Before calling the load() method we subscribe to the ON_LOADED event that's dispatched by the CombinedFileReader.</p>

<p>Once we've read in a file and onFileLoaded() is called, we first need to create a new Loader object and pass the bytes into it using loadBytes(). Before loading the bytes we store a position object in a dictionary. The position object will contain the x &amp; y coordinates for the image once it's loaded. We can count on the onFileLoaded function to be called in the same order as the images are streamed. Due to the asynchronous nature of loadBytes() the onLoadComplete() function will be called at random times and will thus not be sequential. Once the bytes are loaded in and onLoadComplete is called, we create a new Image, set the source to the loaded content, set the size and coordinate. Finally we add the image to the current application as an element. Note that the images are 100x100px but to conserve space I'm resizing the client side to 50x50px.</p>

<h3>Thumbnails.mxml</h3>

<pre lang="xml" escaped="true">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;?xml:namespace prefix = s /&gt;
    &lt;?xml:namespace prefix = fx /&gt;</pre>

<h2>The result</h2>

<p>If all goes well, the result should look like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/combinedimagereader_1_2.jpg"><img class="alignnone size-full wp-image-2001" alt="combinedimagereader_1_2" src="http://improve.dk/wp-content/uploads/2010/06/combinedimagereader_1_2.jpg" width="541" height="633" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/combinedimagereader_2_2.jpg"><img class="alignnone size-full wp-image-2002" alt="combinedimagereader_2_2" src="http://improve.dk/wp-content/uploads/2010/06/combinedimagereader_2_2.jpg" width="1010" height="541" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1330</wp:post_id>
		<wp:post_date>2010-06-07 11:13:09</wp:post_date>
		<wp:post_date_gmt>2010-06-07 11:13:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bundling-image-requests-for-increased-performance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="asflexflash"><![CDATA[AS/Flex/Flash]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Bundling Image Requests for Increased Performance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up Multiple IIS Application Request Routing Farms on the Same Server</title>
		<link>http://improve.dk/setting-up-multiple-iis-application-request-routing-farms-on-the-same-server/</link>
		<pubDate>Wed, 16 Jun 2010 00:28:29 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/06/16/setting-up-multiple-iis-application-request-routing-farms-on-the-same-server.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Inspired by a <a href="http://forums.iis.net/t/1168684.aspx">post on the ARR forums</a>, let me walk you through how to setup multiple <a href="http://www.iis.net/download/applicationrequestrouting">IIS Application Request Routing</a> server farms on a single machine.</p>

<h2>The scenario</h2>

<p>I own a bunch of search engines, <a href="http://bing.com/">bing.com</a>, <a href="http://google.com/">google.com</a> and <a href="http://yahoo.com/">yahoo.com</a>. Likewise, I own a bunch of news sites <a href="http://cnn.com/">cnn.com</a>, <a href="http://english.aljazeera.net/">english.aljazeera.net</a> and <a href="http://foxnews.com/">foxnews.com</a>(alright, bear with me on that last one, just using it as an example). Luckily, my users don't really care which search engine or news site they go to, as long as they end up at "a" search engine or "a" news site. To help me distribute the load we'll setup two IIS ARR web farms that'll load balance between the news sites and search engines.</p>

<h2>Setting up the farms</h2>

<p>Start by <a href="http://learn.iis.net/page.aspx/482/install-application-request-routing/">installing the Application Request Routing module</a> if you haven't done so already. Now create two sever farms called "News" and "Search". Add the search &amp; news websites to each of their server farms like so:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_1_2.jpg"><img class="alignnone size-full wp-image-2096" alt="sumiarrfarms_1_2" src="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_1_2.jpg" width="882" height="755" /></a></div></div>

<p>You may also setup the farms directly in applicationHost.config:</p>

<pre lang="xml"><webfarms>
    <webfarm enabled="true" name="News">
        <server enabled="true" address="cnn.com">
        <server enabled="true" address="foxnews.com">
        <server enabled="true" address="english.aljazeera.net">
    </server></server></server></webfarm>
    <webfarm enabled="true" name="Search">
        <server enabled="true" address="google.com">
        <server enabled="true" address="bing.com">
        <server enabled="true" address="yahoo.com">
    </server></server></server></webfarm>
    <applicationrequestrouting>
        <hostaffinityproviderlist>
            <add name="Microsoft.Web.Arr.HostNameRoundRobin">
            <add name="Microsoft.Web.Arr.HostNameMemory">
        </add></add></hostaffinityproviderlist>
    </applicationrequestrouting>
</webfarms></pre>

<h2>Setting up the rules</h2>

<p>Go to the IIS level "URL Rewrite" settings page. If any default rules were created in the installation of IIS ARR, delete them now. Create a new rule from the blank template and call it "search.local". Set the Match URL to use Wildcards and enter a pattern of "*". This ensures that the rule matches and URL that we send to the server - no matter the hostname.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_2_2.jpg"><img class="alignnone size-full wp-image-2097" alt="sumiarrfarms_2_2" src="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_2_2.jpg" width="693" height="340" /></a></div></div>

<p>Expand the Conditions pane and add a new condition. Set the input to "{HTTP_HOST}" and type the pattern "search.local". The {HTTP_HOST} condition ensures that this rule only matches requests to the search.local hostname.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_3_2.jpg"><img class="alignnone size-full wp-image-2098" alt="sumiarrfarms_3_2" src="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_3_2.jpg" width="688" height="336" /></a></div></div>

<p>Finally set the action type to "Route to Server Farm" and choose the Search server farm. Tick the "Stop processing of subsequent rules" as the request should be routed onto the server farm as soon as this rule matches.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_4_2.jpg"><img class="alignnone size-full wp-image-2099" alt="sumiarrfarms_4_2" src="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_4_2.jpg" width="685" height="245" /></a></div></div>

<p>As the last step, create a second identical rule except it should be named news.local and have an {HTTP_POST} condition matching the news.local hostname. Setting up the rewrite rules can also be done in applicaitonHOst.config directly:</p>

<pre lang="xml"><rewrite>
    <globalrules>
        <rule name="search.local" stopprocessing="true" patternsyntax="Wildcard">
            <match url="*">
            <action url="http://Search/{R:0}" type="Rewrite">
            <conditions>
                <add pattern="search.local" input="{HTTP_HOST}">
            </add></conditions>
        </action></match></rule>
        <rule name="news.local" stopprocessing="true" patternsyntax="Wildcard">
            <match url="*">
            <action url="http://News/{R:0}" type="Rewrite">
            <conditions>
                <add pattern="news.local" input="{HTTP_HOST}">
            </add></conditions>
        </action></match></rule>
    </globalrules>
</rewrite></pre>

<p>Once done, your rules should look like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_5_2.jpg"><img class="alignnone size-full wp-image-2100" alt="sumiarrfarms_5_2" src="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_5_2.jpg" width="1024" height="513" /></a></div></div>

<h2>Testing the farms</h2>

<p>Create two host entries in your %windir%System32Driversetchosts file that makes news.local and search.local point to 127.0.0.1. Now when you open a browser and enter news.local or search.local, you should hit the search engines and news sites we setup earlier. By default IIS ARR will distribute the requests to the server with the least current requests - and since we're the only ones hitting them we'll basically always just hit the first server. To alleviate this you can change the load distribution mode to a weighted round robin with even distribution, that'll ensure you hit the sites one by one in turn.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_6_2.jpg"><img class="alignnone size-full wp-image-2101" alt="sumiarrfarms_6_2" src="http://improve.dk/wp-content/uploads/2010/06/sumiarrfarms_6_2.jpg" width="1024" height="759" /></a></div></div>

<p>Note that this'll only load CNN and Bing correctly as several of the other domains only listen to their configured domains (IIS ARR will proxy the reuqest onto the origin servers with a hostname request of search &amp; news.local respectfully). I'll follow up on how to fix that later on.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1331</wp:post_id>
		<wp:post_date>2010-06-16 00:28:29</wp:post_date>
		<wp:post_date_gmt>2010-06-16 00:28:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-multiple-iis-application-request-routing-farms-on-the-same-server</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="application-request-routing"><![CDATA[Application Request Routing]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="load-balancing"><![CDATA[Load Balancing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Setting up Multiple IIS Application Request Routing Farms on the Same Server]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1013</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Jin]]></wp:comment_author>
			<wp:comment_author_email>robertjin@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-03 23:15:16</wp:comment_date>
			<wp:comment_date_gmt>2011-11-03 23:15:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice tutorial! I guess one question: when I enter the URL <a rel="nofollow external" href="http://news.local/" title="http://news.local/" rel="nofollow">http://news.local/</a> and <a rel="nofollow external" href="http://search.local" title="http://search.local" rel="nofollow">http://search.local</a>, how come I am getting a 404 instead of the redirected page?<br /><br />I enabled both hostname to the host file as 127.0.0.1 and added it to the local intranet. When I did a health test, it looks like it all passed. Just the URL is returning a 404 =(<br /><br />Any suggestion?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1014</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-03 23:24:30</wp:comment_date>
			<wp:comment_date_gmt>2011-11-03 23:24:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I assume the 404's aren't from Bing/Google/Yahoo but from your local machine? In that case somehow the request is ending up at one of your websites - either because you're not hitting the server farm at all (check your routing rules), or because they're being routed to your local machine instead of to Bing/Google/Yahoo - in which case you'll need to double check your &lt;webfarm&gt; setup.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1015</wp:comment_id>
			<wp:comment_author><![CDATA[Joe Nguyen]]></wp:comment_author>
			<wp:comment_author_email>jn1214@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-10-26 20:48:59</wp:comment_date>
			<wp:comment_date_gmt>2012-10-26 20:48:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I got the same problem as Robert Jin stated above.  The health test is ok but I still got 404 not found.  Any idea?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36474</wp:comment_id>
			<wp:comment_author><![CDATA[http://casinoonlinecasinos.dk]]></wp:comment_author>
			<wp:comment_author_email>orvillekohn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.tofascetesi.com/member.php?action=profile&amp;uid=2552</wp:comment_author_url>
			<wp:comment_author_IP>194.103.2.143</wp:comment_author_IP>
			<wp:comment_date>2013-05-10 11:33:42</wp:comment_date>
			<wp:comment_date_gmt>2013-05-10 09:33:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Valuable information. Lucky me I discovered your site unintentionally, and I am surprised why this coincidence did not happened 
in advance! I bookmarked it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368178422.9162828922271728515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Routing Requests for a Subdirectory to Another Server Using IIS Application Request Routing</title>
		<link>http://improve.dk/routing-requests-for-a-subdirectory-to-another-server-using-iis-application-request-routing/</link>
		<pubDate>Mon, 21 Jun 2010 00:40:27 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/06/21/routing-requests-for-a-subdirectory-to-another-server-using-iis-application-request-routing.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this post I'll walk you through how to setup <a href="http://www.iis.net/download/applicationrequestrouting">IIS Application Request Routing</a> so that any requests for a /wiki/ subdirectory are routed onto a separate server, while all other requests are handled by the server itself.</p>

<p>Let's imagine a fictional scenario where I want to add a wiki to my website. Thus, all requests to improve.dk/wiki/* are mapped to a dedicated LAMP based server that runs some kind of wiki software. All other requests should be served by the normal improve.dk webserver.</p>

<p>The first task is to setup a new server farm, called Wiki in my case. Add the server to the list of servers, using its hostname, MyWikiServer in this case. If you setup (temporarily, for testing) improve.dk so it maps to the wiki server, requesting http://improve.dk/Wiki/ should return back the expected result from the wiki server, if requested from the normal webserver.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/rrsa1_2.jpg"><img class="alignnone size-full wp-image-2109" alt="rrsa1_2" src="http://improve.dk/wp-content/uploads/2010/06/rrsa1_2.jpg" width="788" height="480" /></a></div></div>

<pre lang="xml">
<webfarms>
    <webfarm enabled="true" name="Wiki">
        <server enabled="true" address="MyWikiServer">
    </server></webfarm>
    <applicationrequestrouting>
        <hostaffinityproviderlist>
            <add name="Microsoft.Web.Arr.HostNameRoundRobin">
            <add name="Microsoft.Web.Arr.HostNameMemory">
        </add></add></hostaffinityproviderlist>
    </applicationrequestrouting>
</webfarms>
</pre>

<p>Next, setup a URL Rewrite rule at the global level like the following:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/06/rrsa2_2.jpg"><img class="alignnone size-full wp-image-2110" alt="rrsa2_2" src="http://improve.dk/wp-content/uploads/2010/06/rrsa2_2.jpg" width="759" height="768" /></a></div></div>

<p>The rule matches all requests for the /wiki/ directory, whether there's a trailing slash or further subdirectories. It ensures not to match a request like /wikipedia/. The request is routed onto the Wiki webfarm which sends the request onto the MyWikiServer server. Note that there's a condition ensuring this rule will only match requests for the improve.dk domain so other websites aren't affected. There are no changes to the actual improve.dk website setup.</p>

<p><b>Correction:</b> As noted by Rob Hudson, the regular expression should actually be:</p>

<pre lang="xml">^wiki$|^wiki/(.*)</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1332</wp:post_id>
		<wp:post_date>2010-06-21 00:40:27</wp:post_date>
		<wp:post_date_gmt>2010-06-21 00:40:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>routing-requests-for-a-subdirectory-to-another-server-using-iis-application-request-routing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="application-request-routing"><![CDATA[Application Request Routing]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Routing Requests for a Subdirectory to Another Server Using IIS Application Request Routing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1016</wp:comment_id>
			<wp:comment_author><![CDATA[Suhaib]]></wp:comment_author>
			<wp:comment_author_email>suhaib@uok.edu.in</wp:comment_author_email>
			<wp:comment_author_url>http://www.uok.edu.in/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-06 11:46:34</wp:comment_date>
			<wp:comment_date_gmt>2011-06-06 11:46:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dear Mark<br /><br />Firstly thank you so much for the helpul blogpost. I even read your replies in the dicussion at iis forums and got the link to this page.<br /><br />I wish to accomplish something very similar except:<br /><br />1. I want to route requests for a particular sub-domain to Apache rather than a sub-directory.<br />2. I want to install Apache on the same box (Wind 2003) as IIS. <br /><br />So, how do I create a server farm for Apache which is present on the same machine?<br /><br />And how do I construct my rewrite rule to forward all requests for a particualr sub-domain to Apache?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1017</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-09 12:00:40</wp:comment_date>
			<wp:comment_date_gmt>2011-06-09 12:00:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Suhaib<br /><br />Filtering on the hostname is similar to what I'm doing. Just make sure your &lt;match&gt; element matches all urls. Then add appropriate &lt;condition&gt;'s for matching the hostnames by pattern. If you add two rules - one for each hostname, then you can rewrite each one to each server.<br /><br />If you want Apache on the same machine, you need to make sure it's not running on port 80. Then you can rewrite the requests for the Apache server, hitting ARR on port 80, to the internal Apache port.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1018</wp:comment_id>
			<wp:comment_author><![CDATA[Luke Puplett]]></wp:comment_author>
			<wp:comment_author_email>lukepuplett@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.vuplan.tv/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-06-22 09:32:27</wp:comment_date>
			<wp:comment_date_gmt>2010-06-22 09:32:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This definitely sounds like the sort of thing I'll be scouring the internet for in the future: bookmarked. A great blog - always useful info.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97819</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Hudson]]></wp:comment_author>
			<wp:comment_author_email>rhudson@mydistrict.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.252.154.125</wp:comment_author_IP>
			<wp:comment_date>2013-08-27 02:43:26</wp:comment_date>
			<wp:comment_date_gmt>2013-08-27 00:43:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Terrific sample.  It does mostly what I need, except that the match rule is throwing false positives.

In my testing, /myapp/wiki.aspx will erroneously be forwarded to the wiki server farm.

In my environment, I have a /home/ subfolder, which I am trying to forward to a specific farm.  In another application, I have /myapp/home.aspx.  The rule is forwarding this specific page to the /home/ server farm.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377564206.8276081085205078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97853</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Hudson]]></wp:comment_author>
			<wp:comment_author_email>rhudson@mydistrict.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.252.154.125</wp:comment_author_IP>
			<wp:comment_date>2013-08-27 03:40:55</wp:comment_date>
			<wp:comment_date_gmt>2013-08-27 01:40:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found it also throws a false positive if you have a page in your root folder named something like http://improve.dk/wiki.aspx.

I found another site with an example, and this format appears to work, without having the false positives:

^wiki$|^wiki/(.*)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377567655.668015956878662109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37308</wp:comment_id>
			<wp:comment_author><![CDATA[Joe Wescott]]></wp:comment_author>
			<wp:comment_author_email>joe@valleynetworks.biz</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.110.212.42</wp:comment_author_IP>
			<wp:comment_date>2013-05-11 19:19:50</wp:comment_date>
			<wp:comment_date_gmt>2013-05-11 17:19:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Will this cause any problems with SSL Certificate? If my SSL cert is for remote.domain.com where one website is and I redirect the remote.domain.com/subfolder to another server?
Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368292790.480884075164794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37769</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>194.25.246.32</wp:comment_author_IP>
			<wp:comment_date>2013-05-12 12:44:40</wp:comment_date>
			<wp:comment_date_gmt>2013-05-12 10:44:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Steve Warshaw
Yes, ARR can transparently rewrite this to another domain internally. You just need to setup a farm for each and setup rewrite rules so /main goes to the "Main" farm and "/main/blog" goes to the Blog farm.

@Joe Wescott
If you rewrite to an internal farm and thus use ARR as a proxy, you can setup the ARR machine to handle the SSL certificate. This means your application servers won't need to run SSL as the Proxy<->App traffic is unencrypted, but the User<->Proxy traffic is encrypted.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368355480.6840069293975830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16598</wp:comment_id>
			<wp:comment_author><![CDATA[steve warshaw]]></wp:comment_author>
			<wp:comment_author_email>steve.warshaw@trupanion.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>204.13.166.162</wp:comment_author_IP>
			<wp:comment_date>2013-04-12 20:24:30</wp:comment_date>
			<wp:comment_date_gmt>2013-04-12 18:24:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hell Mar,

I am trying to do this same thing, except, when I do the rewrite, I wish domain name to stay the same in the browser. IE, in my dev environment, I have 2 iis machines

1) main
2) blog

I want to type in http://main/blog, have it redirect to the blog iss machine, and have the url in the browser stay as http://main/blog

doable?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365791070.7331180572509765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365798422.6593658924102783203125;s:7:"message";s:43:"orca changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98064</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>5.179.93.132</wp:comment_author_IP>
			<wp:comment_date>2013-08-27 09:28:16</wp:comment_date>
			<wp:comment_date_gmt>2013-08-27 07:28:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Rob
Thanks! I've updated the post with your regex fix :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1377588496.0430939197540283203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Papercut vs smtp4dev - Testing Mail Sending Locally</title>
		<link>http://improve.dk/papercut-vs-smtp4dev-testing-mail-sending-locally/</link>
		<pubDate>Thu, 01 Jul 2010 09:52:01 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2010/07/01/papercut-vs-smtp4dev-testing-mail-sending-locally.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Testing mail functionality in code using external mail servers has always been a hassle. If the mail manages to dodge antispam and various other mischievous services, it'll probably take several minutes to receive. On our Exchange servers it'll typically take 10-15 minutes before a locally sent mail actually arrives back in my inbox. We can do better!</p>

<p><a href="http://papercut.codeplex.com">Papercut</a> and <a href="http://smtp4dev.codeplex.com">smtp4dev</a> are both applications that'll emulate a remote SMTP server on your local machine. Instead of actually sending the mail onwards like a normal SMTP server, they'll simply catch the mail and notify you. This means you'll receive the mail instantly without any risks of being caught in spam filters or dying of old age before receiving the mail. I've tried out both Papercut and smtp4dev and here are some thoughts on both.</p>

<p>For the testing I'm using this rather simple piece of code:</p>

<h3><strong>Program.cs </strong></h3>

<pre lang="csharp">using System.Net.Mail;

namespace MailTest
{
    class Program
    {
        static void Main()
        {
            var sc = new SmtpClient();
            sc.Host = "127.0.0.1";

            var mail = new MailMessage("mark+from@improve.dk", "mark+to@improve.dk")
                        {
                            Subject = "My subject",
                            Body = "My body"
                        };

            sc.Send(mail);
        }
    }
}</pre>

<h2>Papercut</h2>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/07/papercut1_2.jpg"><img class="alignnone size-full wp-image-1922" alt="papercut1_2" src="http://improve.dk/wp-content/uploads/2010/07/papercut1_2.jpg" width="620" height="324" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/07/papercut2_2.jpg"><img class="alignnone size-full wp-image-1923" alt="papercut2_2" src="http://improve.dk/wp-content/uploads/2010/07/papercut2_2.jpg" width="306" height="83" /></a></div></div>

<h3>+ Xcopy deployment</h3>

<p>I love the fact that I can just unzip the download and run the .exe right away, no installation, no configuration.</p>

<h3>+ Dead simple</h3>

<p>It lacks some features, but when all you need is to quickly check the contents of a sent email, the simplicity of Papercut makes it extremely fast to use.</p>

<h3>+ HTML view directly in interface</h3>

<p>Unlike smtp4dev, Papercut will display HTML email contents directly in the interface without having to open the mail in Outlook (which I don't even have on my machine).</p>

<h3>+ Forwarding option</h3>

<p>If you need to forward the mail to a colleague you can do it right in the interface. It'll prompt you for an SMTP server to use - unfortunately it's not possible to provide authentication credentials.</p>

<h3>- HTML view should open links in new window</h3>

<p>When checking out HTML emails I often want to verify that links are correct. Papercut will open them directly in the Papercut interface, making it hard to verify the address.</p>

<h3>- Lacks simple connection status in interface</h3>

<p>There's no green bar/indicator for whether Papercut is actively listening of if it's been obstructed or failed to bind to the port on startup.</p>

<h3>- Lacks simple way to open .eml files</h3>

<p>Both Papercut and smtp4dev save the emails as .eml files that can easily be opened by Outlook or antoher compatible mail client. In Papercut you have to find the executable folder and open the files directly though. A simple double-click function would be nice.</p>

<h3>- No way to quickly delete all mails</h3>

<p>You have to delete all incoming mails one by one.</p>

<h2>smtp4dev</h2>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/07/smtp4dev4_2.jpg"><img class="alignnone size-full wp-image-1924" alt="smtp4dev4_2" src="http://improve.dk/wp-content/uploads/2010/07/smtp4dev4_2.jpg" width="575" height="437" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/07/smtp4dev3_2.jpg"><img class="alignnone size-full wp-image-1925" alt="smtp4dev3_2" src="http://improve.dk/wp-content/uploads/2010/07/smtp4dev3_2.jpg" width="328" height="151" /></a></div></div>

<h3>+ Inspection shows formatted headers</h3>

<p>The inspection view lists headers in a table for easier reading.</p>

<h3>+ Inspection shows mime parts</h3>

<p>If your mail contains multiple mime parts, they can easily be seen separately in the inspection interface.</p>

<h3>+ More UI options</h3>

<p>smtp4dev enables you to delete all mails easily, has context menu options when right clicking the notification icon as well as generally more UI options than Papercut.</p>

<h3>+ Lots more options</h3>

<p>smtp4dev has vastly more options than Papercut. smtp4dev supports authentication, SSL and various other options, while Papercut only supports defining the listening port.</p>

<h3>+ List of SMTP sessions</h3>

<p>Using the sessions tab you can easily see how many SMTP sessions have occurred, as well as how many mails were sent as part of that session.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/07/smtp4dev5_2.jpg"><img class="alignnone size-full wp-image-1927" alt="smtp4dev5_2" src="http://improve.dk/wp-content/uploads/2010/07/smtp4dev5_2.jpg" width="575" height="437" /></a></div></div>

<h3>+ More activity on Codeplex</h3>

<p>smtp4dev has somewhat more discussion activity as well as recent commit activity, whereas Papercut seems somewhat more abandoned.</p>

<h3>- Cumbersome message viewing</h3>

<p>Viewing the actual email messages requires either opening the .eml files in a mail viewer application or opening up the inspection interface. Papercut is much faster since you can view the body directly in the list interface. A reading pane option would be nice.</p>

<h3>- Requires installation</h3>

<p>An application like this is meant to be lightweight and easily fired up when required. smtp4dev requires installation and even offers you to let it start on bootup. It might be a matter of preferences, but I really like Papercuts xcopy deployment.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2010/07/smtp4dev1_2.jpg"><img class="alignnone size-full wp-image-1928" alt="smtp4dev1_2" src="http://improve.dk/wp-content/uploads/2010/07/smtp4dev1_2.jpg" width="499" height="388" /></a></div></div>

<h3>- Autoupdate</h3>

<p>Expanding on the point above; a tool like this is not a tool that I really need to have checking for updates automatically. I know, I can't really make this a minus, but still, KISS.</p>

<h3>- Crashes</h3>

<p>While I haven't been able to make a reproduction case, smtp4dev crashed on me a couple of times, seemingly while running in the background without SMTP activity.</p>

<h2>Conclusion</h2>

<p>So which is best? It depends! I use both... If all I need is to quickly check a single mails contents then I'll fire up Papercut. If I need to catch multiple emails and perhaps inspect the contents more thoroughly, I'll use smtp4dev. Generally I prefer to use Papercut if I don't need any further features.</p>

<p>Both projects' source code seems decent, though I've just skimmed quickly. smtp4dev generally seems more robust and also includes a limited amount of unit tests.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1333</wp:post_id>
		<wp:post_date>2010-07-01 09:52:01</wp:post_date>
		<wp:post_date_gmt>2010-07-01 09:52:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>papercut-vs-smtp4dev-testing-mail-sending-locally</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="email"><![CDATA[Email]]></category>
		<category domain="post_tag" nicename="papercut"><![CDATA[Papercut]]></category>
		<category domain="post_tag" nicename="smtp4dev"><![CDATA[smtp4dev]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Papercut vs smtp4dev - Testing Mail Sending Locally]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1019</wp:comment_id>
			<wp:comment_author><![CDATA[Krzysiek Drozdz]]></wp:comment_author>
			<wp:comment_author_email>doodge.wp@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://webtoproste.pl/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2010-08-18 08:40:41</wp:comment_date>
			<wp:comment_date_gmt>2010-08-18 08:40:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I really like smtp4dev. It's much better software than PaperCut. The only problem is I'm not able to use it, because it crashes all the time. It would be great, if author fixed it...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42118</wp:comment_id>
			<wp:comment_author><![CDATA[David]]></wp:comment_author>
			<wp:comment_author_email>vu.david26@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.150.60.58</wp:comment_author_IP>
			<wp:comment_date>2013-05-19 13:36:25</wp:comment_date>
			<wp:comment_date_gmt>2013-05-19 11:36:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great post very insightful! I was using smtp4dev and loved it but was wondering an alternative for other things like html viewing etc. and found you mentioned it here, awesome!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368963385.4081249237060546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165845</wp:comment_id>
			<wp:comment_author><![CDATA[Papercut: The Simple Desktop Email Receiver | Java Blog | blog.teamextension.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://blog.teamextension.com/papercut-the-simple-desktop-email-receiver-1453</wp:comment_author_url>
			<wp:comment_author_IP>142.54.184.162</wp:comment_author_IP>
			<wp:comment_date>2014-02-23 18:06:21</wp:comment_date>
			<wp:comment_date_gmt>2014-02-23 17:06:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] are some of the advantages and disadvantage of Papercut from a review made by Mark S. Rasmussen (this was in comparison with smtpdev4, another SMTP server from [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393175181.343463897705078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:49:{s:15:"comment_post_ID";i:1333;s:14:"comment_author";s:80:"Papercut: The Simple Desktop Email Receiver | Java Blog | blog.teamextension.com";s:18:"comment_author_url";s:77:"http://blog.teamextension.com/papercut-the-simple-desktop-email-receiver-1453";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:173:"[...] are some of the advantages and disadvantage of Papercut from a review made by Mark S. Rasmussen (this was in comparison with smtpdev4, another SMTP server from [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:14:"142.54.184.162";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.8.1";s:8:"referrer";N;s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:68:"http://improve.dk/papercut-vs-smtp4dev-testing-mail-sending-locally/";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.8.1";s:9:"HTTP_HOST";s:10:"improve.dk";s:11:"HTTP_ACCEPT";s:3:"*/*";s:12:"CONTENT_TYPE";s:8:"text/xml";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:14:"CONTENT_LENGTH";s:3:"346";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"142.54.184.162";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:31:"/home/www/improve.dk/xmlrpc.php";s:11:"REMOTE_PORT";s:5:"34476";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1393175178";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-28 22:20:18";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109772</wp:comment_id>
			<wp:comment_author><![CDATA[Jeff Madsen]]></wp:comment_author>
			<wp:comment_author_email>jrmadsen67@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://codebyjeff.com</wp:comment_author_url>
			<wp:comment_author_IP>211.124.75.219</wp:comment_author_IP>
			<wp:comment_date>2013-09-09 03:05:44</wp:comment_date>
			<wp:comment_date_gmt>2013-09-09 01:05:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this rundown - most helpful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1378688744.697978973388671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>42 Weeks Later</title>
		<link>http://improve.dk/42-weeks-later/</link>
		<pubDate>Sun, 17 Apr 2011 12:05:33 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/04/17/42-weeks-later.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/film_28_weeks_later_2.png"><img class="size-full wp-image-2171 alignleft" alt="film_28_weeks_later_2" src="http://improve.dk/wp-content/uploads/2011/04/film_28_weeks_later_2.png" width="360" height="260" /></a></div></div>

<p>It’s now been roughly 42 weeks since I last wrote a blog entry, phew, time flies! I’ve been busy, one week became two weeks, a month, half a year and before long the tumbleweeds start drifting by.</p>

<p>I originally setup the blog back in ‘06 to blog about my ventures in the <a href="http://improve.dk/archive/2006/07/30/mainevent2006.aspx" target="_blank">World Series of Poker</a>. In a moment of temporary insanity, I decided to write my own blog engine as a fun project – reviving my previous homemade blog engine written in in VB, the horror. While it was a fun project initially, keeping it up to date, doing proper code formatting, file attachments, administration, etc., quickly became a major hassle. Writing blog posts was a tedious job, basically written as plaintext in Visual Studio and then copy/pasted into a textbox in an admin system. I’ve concluded that if I want to keep up blogging, I’d need a better system.</p>

<p>As a result, I’ve migrated my blog to <a href="http://subtextproject.com/default.aspx?AspxAutoDetectCookieSupport=1" target="_blank">SubText</a>, including going through the formatting of all previous entries to ensure they keep the same format. I apologize for any RSS feed inconsistencies during the migration, it should be back to normal shortly. Running on SubText I could finally try out <a href="http://explore.live.com/windows-live-writer?os=other" target="_blank">Windows Live Writer</a>; Boy, do I regret not having tried that out earlier – after creating a couple of custom plugins for entering code and attaching files, writing posts is an absolute dream compared to before.</p>

<p>To the blogmobile!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1335</wp:post_id>
		<wp:post_date>2011-04-17 14:05:33</wp:post_date>
		<wp:post_date_gmt>2011-04-17 12:05:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>42-weeks-later</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Miracle Open World 2011 Followup</title>
		<link>http://improve.dk/miracle-open-world-2011-follow-up/</link>
		<pubDate>Sun, 17 Apr 2011 18:24:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/04/17/miracle-open-world-2011-follow-up.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last week I attended the <a href="http://mow2011.dk/" target="_blank">Miracle Open World 2011 conference</a>. As in the previous years the 80% content, 80% social moniker held true to its reputation. My legs and arms are still sore from carrying four-man rubber rings to the top of the four-story waterslide – not the typical aftermath of a conference. I met a lot of new awesome people and managed to pull of a couple of presentations with decent success as well, judging from the responses I’ve had so far. I’ve included the slides &amp; demo code for the presentations below.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/mow2011Black_2.png"><img class="alignnone size-full wp-image-2164" alt="mow2011Black_2" src="http://improve.dk/wp-content/uploads/2011/04/mow2011Black_2.png" width="267" height="126" /></a></div></div>

<h2>Anatomy of an MDF File</h2>

<p><em>Ever felt like SQL Server slowed you down, and you'd rather just get the data yourself using a HEX editor? In this deep dive session I'll give a run through of the MDF file format, what kind of page types exists? How are records stored on pages? How can we use this knowledge for optimizing performance and (catastrophic) disaster recovery? This session is not for the faint of heart. There will be bytes!</em></p>

<p><a href="http://improve.dk/wp-content/uploads/2011/04/Anatomy-of-an-MDF-File.pdf">Slides</a><br />
<a href="http://improve.dk/wp-content/uploads/2011/04/DBCC-Page.zip">Code</a></p>

<h2>How GUIDs Will Ruin Your Life</h2>

<p><em>GUIDs make our lives simpler in lots of ways - reducing rountrips, decentralized ID generation, pseudo-security, etc. However, they come with a hefty price that may be overlooked untill it's too late.</em></p>

<p><em>In this session I will give a thorough review of the hidden costs of using GUIDs in your systems. As they may be required, I will look at ways to alleviate the cost of GUIDs while still maintaining the semantic functionality</em></p>

<p><a href="http://improve.dk/wp-content/uploads/2011/04/How-GUIDs-Will-Ruin-Your-Life.pdf">Slides</a><br />
<a href="http://improve.dk/wp-content/uploads/2011/04/Demo_code.zip">Code</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1336</wp:post_id>
		<wp:post_date>2011-04-17 20:24:07</wp:post_date>
		<wp:post_date_gmt>2011-04-17 18:24:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>miracle-open-world-2011-follow-up</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="miracle-open-world"><![CDATA[Miracle Open World]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Converting Page Pointers Into a Humanly Readable Format</title>
		<link>http://improve.dk/converting-page-pointers-into-a-human-readable-format/</link>
		<pubDate>Thu, 28 Apr 2011 15:04:23 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/04/24/converting-page-pointers-into-a-human-readable-format.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I often like to spend my weekends perusing the sys.system_internals_allocation_units table, looking for the remnants of Frodo and his crew. In the sys.system_internals_allocation_units there are several references to relevant pages:</p>

<pre lang="tsql" escaped="true">select
	first_page,
	root_page,
	first_iam_page
from
	sys.system_internals_allocation_units</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/image_2.png"><img class="alignnone size-full wp-image-2154" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/04/image_2.png" width="340" height="216" /></a></div></div>

<p>Once you get used to reading these pointers, it becomes rather trivial – byte swap the last two pointers to get the file ID (0 or 1 in all of the above rows), and byte swap the first four bytes to get the page ID. To make it a bit more easier for myself and for those who do not read HEX natively, I’ve made a simple function to convert the pointers into a more easily read format.</p>

<pre lang="tsql" escaped="true">create function getPageLocationFromPointer
(
	@Pointer binary(6)
)
returns varchar(17)
begin

	return 
		'(' + 
		cast(
			cast(
				substring(@Pointer, 6, 1) +
				substring(@Pointer, 5, 1)
				as smallint
			) as varchar
		) +
		':' +
		cast(
			cast(
				substring(@Pointer, 4, 1) +
				substring(@Pointer, 3, 1) +
				substring(@Pointer, 2, 1) +
				substring(@Pointer, 1, 1)
				as int
			) as varchar
		) +
		')'

end</pre>

<p>While not beautiful, it is rather simple. The result:</p>

<pre lang="tsql" escaped="true">select
	first_page,
	dbo.getPageLocationFromPointer(first_page) as first_page_location,
	root_page,
	dbo.getPageLocationFromPointer(root_page) as root_page_location,
	first_iam_page,
	dbo.getPageLocationFromPointer(first_iam_page) as first_iam_page_location
from
	sys.system_internals_allocation_units</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/image_4.png"><img class="alignnone size-full wp-image-2156" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/04/image_4.png" width="683" height="213" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1337</wp:post_id>
		<wp:post_date>2011-04-28 17:04:23</wp:post_date>
		<wp:post_date_gmt>2011-04-28 15:04:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>converting-page-pointers-into-a-human-readable-format</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="page"><![CDATA[Page]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Converting Page Pointers Into a Humanly Readable Format]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1023</wp:comment_id>
			<wp:comment_author><![CDATA[Martin Cairns]]></wp:comment_author>
			<wp:comment_author_email>Martin.Cairns@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-11 09:19:07</wp:comment_date>
			<wp:comment_date_gmt>2011-08-11 09:19:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is an undocumented builtin function called sys.fn_PhysLocFormatter which does a similar job, it also included the slot number.  This goes with the %%phyloc%% virtual column which gives the row location.<br /><br /><a rel="nofollow external" href="http://www.sqlskills.com/blogs/paul/post/SQL-Server-2008-New-" title="http://www.sqlskills.com/blogs/paul/post/SQL-Server-2008-New-" rel="nofollow">www.sqlskills.com/.../SQL-Server-2008-New-</a>(undocumented)-physical-row-locator-function.aspx<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1024</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-14 22:27:24</wp:comment_date>
			<wp:comment_date_gmt>2011-08-14 22:27:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Martin Cairns<br />Indeed the fn_PhysLocFormatter function can be very useful at times. However, in this case I'm really not interested in the slot number as it doesn't make sense in this case.<br /><br />In this example I'm solely looking for the root/first page pointers in the system_internals_allocation_units table for the purposes of parsing those pages. As such, there's no &quot;first&quot; slot per se, just a first page. On that page however, there is a first slot. Problem is, without a reference to that first page, we won't know what data is on there, and we won't be able to query it.<br /><br />We could query a clustered index and sort by the clustered key, in which case we'd get a reference to the first page, from the first row. Won't work for a heap though - in that case we really do need a pointer to the first IAM page :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Watch Out For Implicit Uniqueidentifier Conversions</title>
		<link>http://improve.dk/watch-out-for-implicit-uniqueidentifier-conversions/</link>
		<pubDate>Tue, 26 Apr 2011 19:01:17 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/04/24/watch-out-for-implicit-uniqueidentifier-conversions.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently gave a presentations on the topic of <a href="http://improve.dk/archive/2011/04/17/miracle-open-world-2011-follow-up.aspx" target="_blank">GUID usage</a> at <a href="http://mow2011.dk/" target="_blank">Miracle Open World</a>. After finishing off my last slide and opening to questions, one of the attendees told a story of how an implicit GUID conversion had resulted in index scans instead of index seeks.</p>

<p>It’s commonly known that to use indexes effectively, we need to seek. Furthermore, to ensure we don’t scan, we should avoid using functions, casts, etc. as predicates as that will cause the optimizer to not utilize the indexes properly. However, in this case the situation was presented as query having a simple “where SomeCol = ‘74e03ed0-6d51-413a-bffb-76b5e409afc1’”. As far as I knew, that should just convert automatically into a uniqueidentifier and still use an index seek. A simple test shows that to be the case as well:</p>

<pre lang="tsql" escaped="true">create table #Test
(
	ID int identity(1,1) constraint pk_Test_ID primary key clustered,
	Guid uniqueidentifier default(newid()),
	Padding char(100) null
)
create nonclustered index idx_Guid on #Test (Guid)

declare @cnt int = 0
while @cnt &lt; 10000 begin
	insert into #Test default values
	set @cnt += 1
end

select * from #Test where Guid = '74e03ed0-6d51-413a-bffb-76b5e409afc1'</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/image_21.png"><img class="alignnone size-full wp-image-2159" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/04/image_21.png" width="598" height="233" /></a></div></div>

<p>An index seek with a bookmark lookup, perfect. I had no answer to his question so I asked if he could send me the query they were running, so I could take a look at it. I got the queries sent as well as the execution plan, and sure enough, an index scan was performed with a CONVERT_IMPLICIT predicate:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/image_8.png"><img class="alignnone size-full wp-image-2160" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/04/image_8.png" width="473" height="675" /></a></div></div>

<p>As the system is internal, I promised to keep it anonymous, thus most of it is blurred out. I also do not have access to the actual schema, I was however able to deduce the relevant parts from the execution plans and column/table names used. Here’s an abstract version of the query being run:</p>

<pre lang="tsql" escaped="true">-- Schema
create table #GuidTest
(
	ID int identity(1,1) constraint pk_GuidTest_ID primary key clustered,
	GuidA uniqueidentifier default(newid()),
	GuidB uniqueidentifier default(newid()),
	GuidC uniqueidentifier default(newid()),
	GuidD uniqueidentifier default(newid()),
	GuidE uniqueidentifier default(newid()) null,
	GuidF uniqueidentifier default(newid()),
	Cost float default(rand()) null,
	Padding char(20)
)
create nonclustered index idx_Guid on #GuidTest (GuidA, GuidB, GuidC, GuidD, GuidE) include (Cost, GuidF)
with (	pad_index = off,
	statistics_norecompute = off,
	sort_in_tempdb = off,
	ignore_dup_key = off,
	drop_existing = off,
	online = off,
	allow_row_locks = on,
	allow_page_locks = on,
	fillfactor = 90)

create table #GuidJoin
(
	JoinGuid uniqueidentifier default(newid()),
	JoinValue char(3) null
)
create nonclustered index idx_JoinGuid on #GuidJoin (JoinGuid)

-- Query
select
	sum(isnull(Cost, 0)),
	GuidA,
	GuidB,
	GuidC,
	GuidD
from
	#GuidTest
left join
	#GuidJoin on GuidF = JoinGuid
where
	(JoinValue = 'XYZ' or JoinValue is null) AND
	(
		(GuidA = '0B0220E8-053E-43CA-A268-AD78DF4F7DC0' AND GuidB = 'F268830A-5C13-4E6E-AE63-DAA1353A6306' AND GuidC = '5565A230-E919-4229-BA65-49AE1D4FFAE3' AND GuidD = 'C4BAAA53-9447-419F-A7FA-76C43B8F1049') OR
		(GuidA = 'D32EE121-FB05-44E8-BD36-86833E4BE3B6' AND GuidB = '9DE3B8FF-95B1-4519-9F92-9DE7758D9DE6' AND GuidC = '8ADF6C5E-E3B6-49C7-BEF7-E26074D8874C' AND GuidD = 'D2BBB20C-991D-44FD-848C-124B33CFC9F6') OR
		-- Snipped about 250 lines --
		(GuidA = '54E75EB0-83FE-40A0-B2E0-6A2A71B393AA' AND GuidB = 'CC3D2107-6C1B-4ED6-B708-6503BFAD8965' AND GuidC = 'B62EBEA3-193A-422A-846D-978000E1AB9C' AND GuidD = 'ECC25117-B903-49EE-8B66-8E31F07170A5')
	) AND
	(GuidE = '08F62323-0707-430E-B5F8-5FFF040D2AF6' OR GuidE is null)
group by
	GuidA, GuidB, GuidC, GuidD</pre>

<p>Obviously this is not the optimal way of doing this, passing in a large amount of variables in ad-hoc fashion. This was not an in-house system however, so they had to live with the code. Using my code as a test, filled with a large number of dummy test data, I’m not able to reproduce the issue. However, the most interesting part is how they managed to solve the problem. Instead of doing a usual uniqueidentifier predicate like:</p>

<pre lang="tsql" escaped="true">select * from #Test where Guid = '74e03ed0-6d51-413a-bffb-76b5e409afc1'</pre>

<p>They were able to modify the predicates to look like this:</p>

<pre lang="tsql" escaped="true">select * from #Test where Guid = {GUID'74e03ed0-6d51-413a-bffb-76b5e409afc1'}</pre>

<p>And if you look closely at the execution plan of the first query, this is what’s happening internally as well:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/04/image_10.png"><img class="alignnone size-full wp-image-2161" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/04/image_10.png" width="737" height="638" /></a></div></div>

<p>Since I was unable to reproduce the issue, and I can find no documentation on the {GUID’xyz’} (neither online nor in BOL) syntax, I am unable to explain exactly what’s going on. EDIT: <a href="http://weblogs.sqlteam.com/mladenp/" target="_blank">Mladen Prajdić</a> found a page describing <a href="http://msdn.microsoft.com/en-us/library/ms712494(VS.85).aspx" target="_blank">GUID Escape Sequences</a>. My guess is that the input query, while simple in structure, became too complex due to the large number of predicates, and thus the optimizer was unable to convert the input string to a GUID at compile time and thus had to resort to an IMPLICIT_CONVERT, causing an index scan. Using parameters, a TVF or another form of temporary table to hold those ~1000 predicate GUIDs in would obviously have been a lot more optimal as well, and would have avoided the implicit convert too. Being as it was a third party system, that was a modification that could not be made. If you have any further information on the {GUID’xyz’} constant syntax, please do get in touch.</p>

<p>While I have no final explanation, the conclusion must be – watch out for those implicit conversions, even when you absolutely do not expect them to occur.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1338</wp:post_id>
		<wp:post_date>2011-04-26 21:01:17</wp:post_date>
		<wp:post_date_gmt>2011-04-26 19:01:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>watch-out-for-implicit-uniqueidentifier-conversions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="guid"><![CDATA[GUID]]></category>
		<category domain="post_tag" nicename="implicit-conversion"><![CDATA[Implicit Conversion]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Watch Out For Implicit Uniqueidentifier Conversions]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1025</wp:comment_id>
			<wp:comment_author><![CDATA[Brett]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-16 00:37:00</wp:comment_date>
			<wp:comment_date_gmt>2011-06-16 00:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Would force parameterization stop this from happening?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1026</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-16 08:07:39</wp:comment_date>
			<wp:comment_date_gmt>2011-06-16 08:07:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Brett<br />Unfortunately no. Barring the repercussions of turning on forced parameterization at the DB level, a quick test shows the guids are parameterized as varchar(8000), thus causing the same CONVERT_IMPLICIT:<br /><br />(@1 varchar(8000))SELECT * FROM [test] WHERE [GUID]=@1]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1027</wp:comment_id>
			<wp:comment_author><![CDATA[Brett]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-20 23:12:49</wp:comment_date>
			<wp:comment_date_gmt>2011-06-20 23:12:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My contact at Microsoft advises that this issue does not appear in SQL 2008 R2. Were you trying to repro on R2? (I know the client that raised this issue with you, and they are not on the latest SQL version).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1028</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-21 11:36:27</wp:comment_date>
			<wp:comment_date_gmt>2011-06-21 11:36:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting, that might explain why I weren't able to reproduce the issue as I were indeed trying to reproduce it in 2008 R2. Could be interesting to compare some older releases and see how the behavior changes.<br /><br />Thanks for the info!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1029</wp:comment_id>
			<wp:comment_author><![CDATA[Peso]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-04-26 23:27:39</wp:comment_date>
			<wp:comment_date_gmt>2011-04-26 23:27:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why is the difference between Estimated Number of Rows (1) so different from Actual Number of Rows (1463092) ?<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1030</wp:comment_id>
			<wp:comment_author><![CDATA[orca]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/default.aspx</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-04-27 06:51:56</wp:comment_date>
			<wp:comment_date_gmt>2011-04-27 06:51:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That is a good question. I'll forward the query and have them check up on their statistic creation &amp; maintenance, as well as a check of the current statistics.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1031</wp:comment_id>
			<wp:comment_author><![CDATA[Robert]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-16 16:20:55</wp:comment_date>
			<wp:comment_date_gmt>2012-02-16 16:20:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I met this problem too. My problem was that I used &quot;like&quot; instead of &quot;=&quot;. I spent 8 hours by tuning database until I realized this difference.<br /><br />select * from Test where Guid like '74e03ed0-6d51-413a-bffb-76b5e409afc1'<br />... will result in (painfully slow) index scan.<br /><br />select * from Test where Guid = '74e03ed0-6d51-413a-bffb-76b5e409afc1'<br />... will result in (fast) index seek.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Introducing OrcaMDF</title>
		<link>http://improve.dk/introducing-orcamdf/</link>
		<pubDate>Tue, 03 May 2011 16:49:34 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/02/introducing-orcamdf.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[I’ve been spamming Twitter the last couple of days with progress on my pet project, OrcaMDF. But what is OrcaMDF really?
<h2>Miracle Open World 2011</h2>
I was invited to speak at <a href="http://mow2011.dk/" target="_blank">MOW2011</a> for the SQL Server track. Last year I got good reviews for my presentation on <a href="http://improve.dk/images/improve_dk/Windows-Live-Writer/Miracle-OpenWorld-2010-Slides_B653/Dissecting_PDF_Documents_1.pdf" target="_blank">Dissecting PDF Documents</a>, a deep dive into the file format of PDF files. Wanting to stay in the same grove, I decided to take a look at the MDF format as it’s somewhat closer to SQL Server DBA’s than PDF files. Having almost worn my <a href="http://www.amazon.com/Microsoft%C2%AE-SQL-Server%C2%AE-2008-Internals/dp/0735626243" target="_blank">SQL Server 2008 Internals</a> book down from reading, I’ve always been interested in the internals, though I still felt like I was lacking a lot of knowledge.
<h2>A parser is born</h2>
For my demos at MOW I wanted to at least read the records from a data page, just like the output from DBCC Page. The basic page format is well documented, and it’s not the first time I’ve taken a <a href="http://improve.dk/archive/2009/03/26/deciphering-a-sql-server-data-page.aspx" target="_blank">deeper look</a> at pages. Surprisingly quickly, I had record parsing from data pages functioning using a hardcoded schema. Parsing a single page is fun, but really, I’d like to get all the data from a table. Restricting myself to just consider clustered tables made it simpler as it’d just be a matter of following the linked list of pages from start to end. However, that meant I’d have to parse the header as well. There’s some good information out there on the <a href="http://sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-page.aspx" target="_blank">anatomy of pages</a>, but everything I could find had a distinct lack of information on the actual header structure and field types.

While resorting to <a href="http://search.twitter.com/search?q=%23sqlhelp" target="_blank">#sqlhelp</a> didn’t directly help me, <a href="http://www.sqlskills.com/blogs/Kimberly/" target="_blank">Kimberly Tripp</a> was kind enough to point out that I’d probably not have any luck in finding deeper documentation out there.

<a href="http://improve.dk/wp-content/uploads/2011/05/image_29.png"><img class="alignnone size-full wp-image-2215" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/05/image_29.png" width="562" height="281" /></a>

Fast forward a <em>bit</em> of patience, some help from <a href="http://search.twitter.com/search?q=%23sqlhelp" target="_blank">#sqlhelp</a> and <a href="http://twitter.com/#!/PaulRandal" target="_blank">@PaulRandal</a> in particular, I managed to reverse engineer the header format, as well as a bit more than I initially set out to do for MOW.
<h2>Feature outtakes</h2>
With a lot of preconditions (2008 R2 format especially), these are some of the abilities OrcaMDF currently possesses:
<ul>
	<li><span style="font-family: 'Lucida Sans Unicode';">Parsing data, GAM, SGAM, IAM, PFS, TextMix, clustered index and and the boot page (preliminary).</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Scanning linked pages.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Scanning clustered indexes, either by depth-first into linked-page scan or by forced use of the b-tree structure.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Scanning heaps using IAM chains.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Scanning tables (clustered or heaps) using just the table name as input – root IAM/index page is found through metadata lookup.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Able to parse the following column types: bigint, binary, bit, char, datetime, int, nchar, nvarchar, smallint, tinyint, varbinary &amp; varchar. Adding remaining types is straightforward.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Parsing of four crucial system tables: sysallocunits, sysschobjs, sysrowsets, sysrowsetcolumns.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Parsing of key metadata like table names, types and columns.</span></li>
</ul>
There’s probably some errors here and there, and I’ve liberally ignored some complexity here and there thus far, so don’t expect this to work on everything yet. I’m continuing development of OrcaMDF. My hope is to have it support 95+% of typically used features, allowing most MDF files to be parsed. If you have a specific use case or scenario you’d like covered, please get in touch and let me know.
<h2>Why oh why are you doing this?</h2>
I thought I understood most of what I  read about internals. I can now tell you, I did not. Actually parsing this stuff has taught me so much more, as well as given me a really good hands-on understanding of the internals. I’ve still never touched SSIS, SSAS, SSRS and all of that other fancy BI stuff, but I believe having a solid understanding of the internals will make the later stuff so much easier to comprehend.

Furthermore, I think there’s a big opportunity for a number of community supported SQL Server tools to arise. Some possibilities that come to mind (just thinking aloud here, don’t take it too concretely):
<ul>
	<li><span style="font-family: 'Lucida Sans Unicode';">Easily distributable read-only access to MDF files to desktops, mobile &amp; embedded clients.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Disaster recovery – forgot to backup and can’t restore your corrupt DB? You might just be able to extract important bits using OrcaMDF.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Need to probe the contents of a DB without attaching it to an instance?</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Reading .BAK files – should be possible, will allow single-table restores and object level probing of backup files.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">DBCC CHECKDB of non-attached MDF files – this is probably not going to happen, but theoretically possible.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Learning opportunities.</span></li>
</ul>
By opening up the code to everybody, this should provide some solid teaching and learning opportunities by looking at samples of how to actually parse the contents and not just read &amp; talk about it.
<h2>Alright, alright, show me the codez!</h2>
All source code is <a href="https://github.com/improvedk/OrcaMDF" target="_blank">available on GitHub</a> under the GPLv3 license. Feel free to fork, watch or comment. The only thing I ask for is that you respect the license. If you end up trying out the code or actually using it, please let me know – I’d love to hear about it. Want to follow the latest developments – why don’t you <a href="http://twitter.com/#!/improvedk" target="_blank">come over and say hi</a>?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1339</wp:post_id>
		<wp:post_date>2011-05-03 18:49:34</wp:post_date>
		<wp:post_date_gmt>2011-05-03 16:49:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introducing-orcamdf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1032</wp:comment_id>
			<wp:comment_author><![CDATA[David Baffaleuf]]></wp:comment_author>
			<wp:comment_author_email>dbaffaleuf@capdata.fr</wp:comment_author_email>
			<wp:comment_author_url>http://blog.capdata.fr/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-22 14:35:42</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 14:35:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,<br /><br />Did you ever try to compile ORCA as a COM object, and then use ole automation to call it from the SQL command line ? (that would be a sort of dbcc page with tableresult though...)<br /><br />The opportunity to read BAK files is very interesting, it already exists in other RDBMS (Sybase ASE on top of my mind), and some vendors already implement it(redgate virtual backup at least) but I'd really like to see that supported by the SQL community. <br /><br />Keep going !<br /><br />David B.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1033</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-22 20:52:59</wp:comment_date>
			<wp:comment_date_gmt>2011-08-22 20:52:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@David<br />Thanks for the comment!<br /><br />I haven't tried compiling it into a COM object, but it should definitely be possible to create a COM interface on top of it and and call it through COM.<br /><br />I'm definitely planning to look at reading the BAK format (uncompressed to begin with) and AFAIK it shouldn't require too much refactoring. For now I'm concentrating on adding more feature support to the base OrcaMDF code though.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1034</wp:comment_id>
			<wp:comment_author><![CDATA[xin]]></wp:comment_author>
			<wp:comment_author_email>254897536@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-12-22 17:06:08</wp:comment_date>
			<wp:comment_date_gmt>2012-12-22 17:06:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sir, thank you for your orcamdf source code, but I don't know how to put the code into EXE executable program, could you please get the software? I want to study MDF file format, thank you for your help,. Where can I download orcamdf. Exe]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1035</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-12-23 16:25:26</wp:comment_date>
			<wp:comment_date_gmt>2012-12-23 16:25:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@xin<br /><br />Judging by your other comment, I assume you found the link to compiled OrcaMDF Studio. For others in the same boat, you can test drive OrcaMDF using the binary Studio version:<br /><a rel="nofollow external" href="http://improve.dk/archive/2011/11/25/orcamdf-studio-release-feature-recap.aspx#3364" title="http://improve.dk/archive/2011/11/25/orcamdf-studio-release-feature-recap.aspx#3364" rel="nofollow">improve.dk/...</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51580</wp:comment_id>
			<wp:comment_author><![CDATA[taher]]></wp:comment_author>
			<wp:comment_author_email>taherchhabra@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>106.51.119.154</wp:comment_author_IP>
			<wp:comment_date>2013-06-05 21:17:04</wp:comment_date>
			<wp:comment_date_gmt>2013-06-05 19:17:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,
We are using your tool to recover corrupted mdf file. We have schemaName.tablename kind of structure. The tool does not pick up schema name. Is there any way i can change the code to incorporate the schemaName]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370459824.55978107452392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51654</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-06-05 23:52:50</wp:comment_date>
			<wp:comment_date_gmt>2013-06-05 21:52:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@taher,

Right new OrcaMDF doesn't "care" about schemas at all so it won't show them. You certainly can change the code to incorporate schema names, but it'd require changes to many parts so I can't give you any directions. If you do make it work with schema names, I'd love to see what you came up with.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370469170.759666919708251953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140408</wp:comment_id>
			<wp:comment_author><![CDATA[OrcaMDF RawDatabase - A Swiss Army Knife for MDF Files]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/orcamdf-rawdatabase-a-swiss-army-knife-for-mdf-files/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2013-11-04 13:08:10</wp:comment_date>
			<wp:comment_date_gmt>2013-11-04 12:08:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I initially started working on OrcaMDF I had just one goal, to gain a deeper knowledge of MDF file internals than I could through most [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383566890.9060170650482177734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143035</wp:comment_id>
			<wp:comment_author><![CDATA[My links of the week &#8211; November 10, 2013 | R4]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ruirib.net/blog/index.php/2013/11/my-links-of-the-week-november-10-2013/</wp:comment_author_url>
			<wp:comment_author_IP>67.18.207.212</wp:comment_author_IP>
			<wp:comment_date>2013-11-10 14:53:09</wp:comment_date>
			<wp:comment_date_gmt>2013-11-10 13:53:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] – When All Else Fails&nbsp;presents some corruption recovery techniques, based on his own&nbsp;OrcaMDF, a C# MDF parser, available on GitHub. These techniques have the possibility to minimize data loss, [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163084</wp:comment_id>
			<wp:comment_author><![CDATA[Crash Compilation]]></wp:comment_author>
			<wp:comment_author_email>delilah_mayon@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>http://carcrashmadness.com</wp:comment_author_url>
			<wp:comment_author_IP>80.79.121.93</wp:comment_author_IP>
			<wp:comment_date>2014-01-02 19:05:17</wp:comment_date>
			<wp:comment_date_gmt>2014-01-02 18:05:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks designed for sharing such a good thinking, piece of writing is fastidious, thats why i have read it 
completely]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1388685917.62932491302490234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My PASS Summit 2011 Abstracts</title>
		<link>http://improve.dk/my-pass-summit-2011-abstracts/</link>
		<pubDate>Tue, 03 May 2011 17:53:34 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/02/my-pass-summit-2011-abstracts.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last year I went on a marathon conference trip, starting out in LA at <a href="http://2010.max.adobe.com/" target="_blank">Adobe Max</a>, continuing on to <a href="http://qconsf.com/sf2010/" target="_blank">QCon</a> in San Francisco before finally ending up in lovely Seattle for the <a href="http://www.sqlpass.org/summit/na2010/" target="_blank">PASS Summit</a>.</p>

<a href="http://improve.dk/wp-content/uploads/2011/05/71624_444201957306_724027306_5893683_5375463_n_2.jpg"><img class=" wp-image-2213 alignright" alt="71624_444201957306_724027306_5893683_5375463_n_2" src="http://improve.dk/wp-content/uploads/2011/05/71624_444201957306_724027306_5893683_5375463_n_2.jpg" width="194" height="259" /></a>

<p>Of the three, the one I’ll definitely be returning to this year is the PASS Summit. Last year I had the honor of getting a nice neon green “FIRST-TIMER” snippet on my badge, a snippet I wore with honor. This year however, I’m aiming for the Alumni snippet, and perhaps even the speaker snippet by submitting a couple of abstracts.</p>

<p>As I’ve been somewhat busy with <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">OrcaMDF</a> in my spare time recently, both of my abstracts use OrcaMDF as the origin for going into the internals. I really hope I get a chance to present about this as I’m super psyched about it :)</p>

<h2>Knowing the Internals – Who Needs SQL Server Anyway?</h2>

<p>You're stuck on a remote island with just a laptop and your main database .MDF file. The boss calls and asks you to retrieve some data, but alas, you forgot to install SQL Server on your laptop. Luckily you have a HEX editor by your side!</p>

<p>In this level 500 deep dive session we will go into the intimate details of the MDF file format. Think using DBCC Page is pushing it? Think again! As a learning experiment, I've created an open source parser for MDF files, called OrcaMDF. Using the OrcaMDF parser I'll go through the primary storage mechanisms, how to parse page headers, boot pages, internal system tables, data &amp; index records, b-tree structures as well as the supporting IAM, GAM, SGAM &amp; PFS pages.</p>

<p>Has your database suffered an unrecoverable disk corruption? This session might just be your way out! Using a corrupt &amp; unattachable MDF file, I'll demo how to recover as much data as possible. This session is not for the faint of heart, there will be bytes!</p>

<h3>Why &amp; What?</h3>

<p>I originally gave this presentation at <a href="http://mow2011.dk/mow2011.aspx" target="_blank">Miracle Open World 2011</a> and got some great feedback. Fueled by positive feedback I continued the development and am now at the point where I have so much content I considered doing a 3½ hour session instead. By attending this session you will not only see diagrams of internal structures on slides, you’ll actually see C# code demonstrated that parses &amp; utilizes them!</p>

<h2>Demystifying Database Metadata</h2>

<p>You know how to query sys.tables, sys.columns and perhaps even sys.system_internals_allocation_units to discover the metadata contents of a database. But where are these views getting their data from, and how do the core system tables relate?</p>

<p>Based on my work with OrcaMDF, an open source C# parser for MDF files, I will demonstrate how to parse the internal system tables. Using just the boot page as origin, we'll discover how to traverse the chain of references that ultimately end up in references to the actual system table data, from where we can parse the data records.</p>

<p>Once we’ve got the system table data, I’ll demonstrate how to correlate the different tables to end up with the data we see in common system views.</p>

<h3>Why &amp; What?</h3>

<p>As I continued the development of OrcaMDF I used the various system views extensively – sys.objects, tables, columns, indexes, internals_allocation_units etc. However, as development moved forward and I needed to parse that metadata myself, I had to look into the underlying tables – sysallocunits, sysschobjs, sysrowsets, sysrowsetcolumns. Join this session and let’s enter the realm of the hidden metadata and let’s explore it together!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1340</wp:post_id>
		<wp:post_date>2011-05-03 19:53:34</wp:post_date>
		<wp:post_date_gmt>2011-05-03 17:53:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-pass-summit-2011-abstracts</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="pass-summit"><![CDATA[PASS Summit]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Implementing Data Types in OrcaMDF</title>
		<link>http://improve.dk/implementing-data-types-in-orcamdf/</link>
		<pubDate>Thu, 05 May 2011 18:36:06 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/04/implementing-data-types-in-orcamdf.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Implementing parsing support for SQL Server data types in <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">OrcaMDF</a> is a simple matter of implementing the ISqlType interface:</p>

<pre lang="csharp" escaped="true">public interface ISqlType
{
	bool IsVariableLength { get; }
	short? FixedLength { get; }
	object GetValue(byte[] value);
}</pre>

<p><em>IsVariableLength</em> returns whether this data type has a fixed length size or is variable. <em>FixedLength</em> returns the fixed length of the data type, provided that it is fixed length, otherwise it returns null. The data type parser itself does not care about the length of variable length fields, the size of the input bytes will determine that. Finally <em>GetValue</em> parses the input bytes into and converts them into a .NET object of relevant type.</p>

<h2>SqlInt implementation</h2>

<p>int is very simple as it’s fixed length and is very straight forward to convert using BitConverter:</p>

<pre lang="csharp" escaped="true">public class SqlInt : ISqlType
{
	public bool IsVariableLength
	{
		get { return false; }
	}

	public short? FixedLength
	{
		get { return 4; }
	}

	public object GetValue(byte[] value)
	{
		if (value.Length != 4)
			throw new ArgumentException("Invalid value length: " + value.Length);

		return BitConverter.ToInt32(value, 0);
	}
}</pre>

<p>And the related tests:</p>

<pre lang="csharp" escaped="true">[TestFixture]
public class SqlIntTests
{
	[Test]
	public void GetValue()
	{
		var type = new SqlInt();
		byte[] input;

		input = new byte[] { 0x5e, 0x3b, 0x27, 0x2a };
		Assert.AreEqual(707214174, Convert.ToInt32(type.GetValue(input)));

		input = new byte[] { 0x8d, 0xf9, 0xaa, 0x30 };
		Assert.AreEqual(816511373, Convert.ToInt32(type.GetValue(input)));

		input = new byte[] { 0x7a, 0x4a, 0x72, 0xe2 };
		Assert.AreEqual(-495826310, Convert.ToInt32(type.GetValue(input)));
	}

	[Test]
	public void Length()
	{
		var type = new SqlInt();

		Assert.Throws&lt;ArgumentException&gt;(() =&gt; type.GetValue(new byte[3]));
		Assert.Throws&lt;ArgumentException&gt;(() =&gt; type.GetValue(new byte[5]));
	}
}</pre>

<h2>SqlNVarchar implementation</h2>

<p>nvarchar is very simple as well – note that we return null for the length as the length varies and the ISqlType implementation must be stateless. GetValue simply converts whatever amount of input bytes it gets into the relevant .NET data type, string in this case.</p>

<pre lang="csharp" escaped="true">public class SqlNVarchar : ISqlType
{
	public bool IsVariableLength
	{
		get { return true; }
	}

	public short? FixedLength
	{
		get { return null; }
	}

	public object GetValue(byte[] value)
	{
		return Encoding.Unicode.GetString(value);
	}
}</pre>

<p>And the relevant test in this case:</p>

<pre lang="csharp" escaped="true">[TestFixture]
public class SqlNvarcharTests
{
	[Test]
	public void GetValue()
	{
		var type = new SqlNVarchar();
		byte[] input = new byte[] { 0x47, 0x04, 0x2f, 0x04, 0xe6, 0x00 };

		Assert.AreEqual("u0447u042fu00e6", (string)type.GetValue(input));
	}
}</pre>

<h2>Other implementations</h2>

<p>OrcaMDF currently <a href="https://github.com/improvedk/OrcaMDF/tree/2b2403c4422cc47b309857d42fb182970bbe11d8/src/OrcaMDF.Core/Engine/SqlTypes" target="_blank">supports 12 data types</a> out of the box. I’ll be covering datetime and bit later as those are a tad special compared to the rest of the current types. As the remaining types are implemented, I will be covering those too.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1341</wp:post_id>
		<wp:post_date>2011-05-05 20:36:06</wp:post_date>
		<wp:post_date_gmt>2011-05-05 18:36:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>implementing-data-types-in-orcamdf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Implementing Data Types in OrcaMDF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Parsing Dates in OrcaMDF</title>
		<link>http://improve.dk/parsing-dates-in-orcamdf/</link>
		<pubDate>Tue, 10 May 2011 19:02:38 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/05/parsing-dates-in-orcamdf.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There are several different date related data types in SQL Server. Currently <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">OrcaMDF</a> supports the three most common types: <a href="http://msdn.microsoft.com/en-us/library/bb630352.aspx" target="_blank">date</a>, <a href="http://msdn.microsoft.com/en-us/library/ms187819.aspx" target="_blank">datetime</a> &amp; <a href="http://msdn.microsoft.com/en-us/library/ms182418.aspx" target="_blank">smalldatetime</a>.</p>

<h2>Implementing SqlDate</h2>

<p>The simplest of the three is date – it’s a 3 byte fixed length type that stores the number of days passed since the default value of 1900-01-01. The only tricky part is that .NET does not have any standard representation of three byte integer values, only shorts &amp; ints which are either too large or too small. Thus, to read the number of days correctly, we’ll have to perform some shift magic to get the correct number into a .NET four byte integer. Once we’ve got the date, we can just create a new default DateTime and add the number of days.</p>

<pre lang="csharp" escaped="true">public class SqlDate : ISqlType
{
	public bool IsVariableLength
	{
		get { return false; }
	}

	public short? FixedLength
	{
		get { return 3; }
	}

	public object GetValue(byte[] value)
	{
		if (value.Length != 3)
			throw new ArgumentException("Invalid value length: " + value.Length);

		// Magic needed to read a 3 byte integer into .NET's 4 byte representation.
		// Reading backwards due to assumed little endianness.
		int date = (value[2] &lt;&lt; 16) + (value[1] &lt;&lt; 8) + value[0];

		return new DateTime(1, 1, 1).AddDays(date);
	}
}</pre>

<p>You can see the <a href="https://github.com/improvedk/OrcaMDF/blob/58250bef24265900b6d94ec90be41b0647508b35/src/OrcaMDF.Core.Tests/Engine/SqlTypes/SqlDateTests.cs" target="_blank">relevant tests here</a>.</p>

<h2>Adding time – implementing SqlDateTime</h2>

<p>Whereas date only stores the date, datetime also stores a time factor. Datetime is stored as a fixed length 8 byte value, the first being the time part while the second is the date part. Calculating the date is done more or less the same way as in the date example, except this time it’s stored as a normal four byte integer, so it’s much easier to handle. The time part is stored as the number of clock ticks since midnight, with one tick being 1/300th of a second. To represent the tick value, we first define a constant with the value 10d/3d.</p>

<p>All time values are actually stored in the same integer time value, so to access the individual values, we’ll need to perform some division &amp; modulus.</p>

<table border="0" cellspacing="0" cellpadding="2" width="400">
	<tbody>
		<tr>
			<td valign="top" width="200"><strong>Part</strong></td>
			<td valign="top" width="200"><strong>Calculation</strong></td>
		</tr>
		<tr>
			<td valign="top" width="200">Hours</td>
			<td valign="top" width="200">X / 300 / 60 / 60</td>
		</tr>
		<tr>
			<td valign="top" width="200">Minutes</td>
			<td valign="top" width="200">X / 300 / 60 % 60</td>
		</tr>
		<tr>
			<td valign="top" width="200">Seconds</td>
			<td valign="top" width="200">X / 300 % 60</td>
		</tr>
		<tr>
			<td valign="top" width="200">Milliseconds</td>
			<td valign="top" width="200">X % 300 * 10d / 3d</td>
		</tr>
	</tbody>
</table>

<pre lang="csharp" escaped="true">public class SqlDateTime : ISqlType
{
	private const double CLOCK_TICK_MS = 10d/3d;

	public bool IsVariableLength
	{
		get { return false; }
	}

	public short? FixedLength
	{
		get { return 8; }
	}

	public object GetValue(byte[] value)
	{
		if (value.Length != 8)
			throw new ArgumentException("Invalid value length: " + value.Length);

		int time = BitConverter.ToInt32(value, 0);
		int date = BitConverter.ToInt32(value, 4);

		return new DateTime(1900, 1, 1, time/300/60/60, time/300/60%60, time/300%60, (int)Math.Round(time%300*CLOCK_TICK_MS)).AddDays(date);
	}
}</pre>

<p>You can see the <a href="https://github.com/improvedk/OrcaMDF/blob/58250bef24265900b6d94ec90be41b0647508b35/src/OrcaMDF.Core.Tests/Engine/SqlTypes/SqlDateTimeTests.cs" target="_blank">relevant tests here</a>.</p>

<h2>Last but not least, SqlSmallDateTime</h2>

<p>Smalldatetime is brilliant when you need to store a date with limited range (~1900 - ~2079) and a precision down to one second. For most purposes, a time precision of one second is plenty, and we save a lot of space by limiting the precision and date range. A smalldatetime value takes up just 4 bytes, the first two being the number of minutes since midnight, and the last two being the number of days since the default values of 1900-1-1. The math processing done is the same as with datetime, though at a smaller scale.</p>

<table border="0" cellspacing="0" cellpadding="2" width="400">
	<tbody>
		<tr>
			<td valign="top" width="200"><strong>Part</strong></td>
			<td valign="top" width="200"><strong>Calculation</strong></td>
		</tr>
		<tr>
			<td valign="top" width="200">Hours</td>
			<td valign="top" width="200">X / 60</td>
		</tr>
		<tr>
			<td valign="top" width="200">Minutes</td>
			<td valign="top" width="200">X % 60</td>
		</tr>
	</tbody>
</table>

<pre lang="csharp" escaped="true">public class SqlSmallDateTime : ISqlType
{
	public bool IsVariableLength
	{
		get { return false; }
	}

	public short? FixedLength
	{
		get { return 4; }
	}

	public object GetValue(byte[] value)
	{
		if (value.Length != 4)
			throw new ArgumentException("Invalid value length: " + value.Length);

		ushort time = BitConverter.ToUInt16(value, 0);
		ushort date = BitConverter.ToUInt16(value, 2);

		return new DateTime(1900, 1, 1, time / 60, time % 60, 0).AddDays(date);
	}
}</pre>

<p>You can see the <a href="https://github.com/improvedk/OrcaMDF/blob/58250bef24265900b6d94ec90be41b0647508b35/src/OrcaMDF.Core.Tests/Engine/SqlTypes/SqlSmallDateTimeTests.cs" target="_blank">relevant tests here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1342</wp:post_id>
		<wp:post_date>2011-05-10 21:02:38</wp:post_date>
		<wp:post_date_gmt>2011-05-10 19:02:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>parsing-dates-in-orcamdf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Parsing Dates in OrcaMDF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reading Bits in OrcaMDF</title>
		<link>http://improve.dk/reading-bits-in-orcamdf/</link>
		<pubDate>Thu, 12 May 2011 19:40:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/05/reading-bits-in-orcamdf.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Bits are stored very differently from other fixed length data types in SQL Server. Usually all fixed length columns will be present, one after the other, in the fixed data part of a record. As the smallest unit of data we can write to disk is a byte, the naïve approach to storing bits would be to use a whole bit for each bit. It would be very simple to parse as it would follow the usual scheme, but it would also waste quite some space.</p>

<h2>How are bits stored internally on records?</h2>

<p>Instead, several bit columns values are stored in a single byte, up to a total of 8 max, naturally. Say we had a table definition like this:</p>

<pre lang="tsql" escaped="true">CREATE TABLE BitTest
(
	A bit
	B bit
	C bit
	D int
)</pre>

<p>The fixed length data part of our record would be 5 bytes, 4 for the integer column and a single byte, of which only three bits are used, for the bit columns.</p>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_27.png"><img class="alignnone size-full wp-image-2206" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/05/image_27.png" width="363" height="179" /></a>

<p>Let’s add some more columns:</p>

<pre lang="tsql" escaped="true">CREATE TABLE BitTest
(
	A bit
	B bit
	C bit
	D int
	E bit
	F bit
	G bit
	H smallint
	I bit
	J bit
	K bit
)</pre>

<p>The bit columns E-G’s ordinal position is after D, but they’ll continue to use the first “bit byte” until it’s full. The following diagram shows that the H smallint column is stored directly after the int column, and not until we add the 9th bit is a new bit byte added:</p>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_43.png"><img class="alignnone size-full wp-image-2207" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/05/image_43.png" width="486" height="234" /></a>

<h2>The need for state while reading bits from records</h2>

<p>Obviously we can’t just read one field at a time, incrementing the fixed length data offset pointer for each read, as we usually do for normal fixed length data types. We need some kind of state that will tell us which byte we’re currently reading bits from, and when to read a new bit byte. Allow me to introduce RecordReadState:</p>

<pre lang="csharp" escaped="true">public class RecordReadState
{
	// We start out having consumed all bits as none have been read
	private int currentBitIndex = 8;
	private byte bits;

	public void LoadBitByte(byte bits)
	{
		this.bits = bits;
		currentBitIndex = 0;
	}

	public bool AllBitsConsumed
	{
		get { return currentBitIndex == 8; }
	}

	public bool GetNextBit()
	{
		return (bits &amp; (1 &lt;&lt; currentBitIndex++)) != 0;
	}
}</pre>

<p>RecordReadState is currently only used for handling bits, but I’ve decided on not creating a BitReadState as we may need to save further read state further along. RecordReadState holds a single byte as well as a pointer that points to the next available bit in that byte. If the byte is exhausted (currentBixIndex = 8 (0-7 being the available bits)), AllBitsConsumed will return true, indicating we need to read in a new bit byte. GetNextBit simply reads the current bit from the bit byte, after which it increases the current bit index. <a href="https://github.com/improvedk/OrcaMDF/blob/58250bef24265900b6d94ec90be41b0647508b35/src/OrcaMDF.Core.Tests/Engine/Records/RecordReadStateTests.cs" target="_blank">See the tests</a> for demonstration.</p>

<h2>Implementing SqlBit</h2>

<p>Once we have the read state implemented, we can implement the SqlBit type:</p>

<pre lang="csharp" escaped="true">public class SqlBit : ISqlType
{
	private readonly RecordReadState readState;

	public SqlBit(RecordReadState readState)
	{
		this.readState = readState;
	}

	public bool IsVariableLength
	{
		get { return false; }
	}

	public short? FixedLength
	{
		get
		{
			if (readState.AllBitsConsumed)
				return 1;

			return 0;
		}
	}

	public object GetValue(byte[] value)
	{
		if(readState.AllBitsConsumed &amp;&amp; value.Length != 1)
			throw new ArgumentException("All bits consumed, invalid value length: " + value.Length);

		if (value.Length == 1)
			readState.LoadBitByte(value[0]);

		return readState.GetNextBit();
	}
}</pre>

<p>SqlBit requires a read state in the constructor, which is scoped for the current record read operation. It’s important to note that the FixedLength depends on the current AllBitsConsumed value of the read state. Once all bits have been consumed, the current bit field will technically have a length of one – causing a byte to be read. If it’s zero, no bytes will be read, but GetValue will still be invoked. GetValue asserts that there are bits available in case a byte wasn’t read (value.Length == 0). If a value was read, we ask the read state to load a new bit byte, after which we can call GetNextBit to return the current bit from the read state. <a href="https://github.com/improvedk/OrcaMDF/blob/58250bef24265900b6d94ec90be41b0647508b35/src/OrcaMDF.Core.Tests/Engine/SqlTypes/SqlBitTests.cs" target="_blank">See tests of SqlBit</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1343</wp:post_id>
		<wp:post_date>2011-05-12 21:40:55</wp:post_date>
		<wp:post_date_gmt>2011-05-12 19:40:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reading-bits-in-orcamdf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Reading Bits in OrcaMDF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wasted Bytes Add Up, Consider Your Data Types Carefully</title>
		<link>http://improve.dk/wasted-bytes-add-up-consider-your-data-types-carefully/</link>
		<pubDate>Mon, 16 May 2011 23:57:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/15/wasted-bytes-add-up-consider-your-data-types-carefully.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently had a look at the statistics storage of a system I designed some time ago. As is usually the case, back when I made it, I neither expected nor planned for a large amount data, and yet somehow that table currently has about 750m rows in it.</p>

<p>The basic schema for the table references a given entity and a page number, both represented by ints. Furthermore we register the users Flash version, their IP and the date of the hit.</p>

<pre lang="tsql" escaped="true">CREATE TABLE #HitsV1
(
	EntityID int NOT NULL,
	PageNumber int NOT NULL,
	Created datetime NOT NULL,
	FlashVersion int NULL,
	IP varchar(15) NULL
)</pre>

<p>Taking a look at the schema, we can calculate the size of the data in the record (synonymous to a row, indicating the structure on disk) to be 4 + 4 + 8 + 4 + 15 = 35 bytes. However, there’s overhead to a record as well, and the narrower the row, the more overhead, relatively.</p>

<p>In this case, the overhead consists of:</p>

<table width="400" border="0" cellspacing="0" cellpadding="2">
	<tbody>
		<tr>
			<td valign="top" width="71"><strong>2 bytes</strong></td>
			<td valign="top" width="329"><em>Status bits A &amp; B</em></td>
		</tr>
		<tr>
			<td valign="top" width="71"><strong>2 bytes</strong></td>
			<td valign="top" width="329"><em>Length of fixed-length data</em></td>
		</tr>
		<tr>
			<td valign="top" width="71"><strong>2 bytes</strong></td>
			<td valign="top" width="329"><em>Number of columns</em></td>
		</tr>
		<tr>
			<td valign="top" width="71"><strong>1 byte</strong></td>
			<td valign="top" width="329"><em>NULL bitmap</em></td>
		</tr>
		<tr>
			<td valign="top" width="71"><strong>2 bytes</strong></td>
			<td valign="top" width="329"><em>Number of variable length columns</em></td>
		</tr>
		<tr>
			<td valign="top" width="71"><strong>2 bytes</strong></td>
			<td valign="top" width="329"><em>Variable length column offset array</em></td>
		</tr>
	</tbody>
</table>

<p>Finally, each record has an accompanying two byte pointer in the row offset array, meaning the total overhead per record amounts to 13 bytes. Thus we’ve got 48 bytes in total per record, and with 8096 bytes of available data space per page, that amounts to a max of about 168 rows per page.</p>

<p>To test things out, we’ll insert 100k rows into the table:</p>

<pre lang="tsql" escaped="true">BEGIN TRAN
DECLARE @Cnt int = 0
WHILE @Cnt &lt; 100000 BEGIN

	INSERT INTO #HitsV1 VALUES (1, 1, getdate(), 1, '255.255.255.255')

	SET @Cnt = @Cnt + 1
END
COMMIT</pre>

<p>Note that the actual values doesn’t matter as we’re only looking at the storage effects. Given 168 rows per page, 100.000 rows should fit in about 100.000 / 168 ~= 596 pages. Taking a look at the currently used page count, it’s a pretty close estimate:</p>

<pre lang="tsql" escaped="true">SELECT
	AU.*
FROM
	sys.allocation_units AU
INNER JOIN
	sys.partitions P ON AU.container_id = P.partition_id
INNER JOIN
	sys.objects O ON O.object_id = P.object_id
WHERE
	O.name LIKE '#HitsV1%'</pre>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_25.png"><img class="alignnone size-full wp-image-2202" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/05/image_25.png" width="727" height="67" /></a>

<h2>Reconsidering data types by looking at reality and business specs?</h2>

<p>If we start out by looking at the overhead, we’ve got a total of four bytes spent on managing the single variable-length IP field. We could change it into a char(15), but then we’d waste space for IP’s like 127.0.0.1 and there’s the whole spaces-at-the-end issue. If we instead convert the IP into an 8-byte bigint on the application side, we save 7 bytes on the column itself, plus 4 for the overhead!</p>

<p>Looking at the FlashVersion field, why do we need a 4-byte integer capable of storing values between –2.147.483.468 and 2.147.483.647 when the actual Flash version range between 1 and 11? Changing that field into a tinyint just saved us 3 bytes more per record!</p>

<p>Reading through our product specs I realize we’ll never need to support more than 1000 pages per entity, and we don’t need to store statistics more precisely than to-the-hour. Converting PageNumber to a smallint just saved 2 extra bytes per record!</p>

<p>As for the Created field, it currently takes up 8 bytes per record and has the ability to store the time with a precision down to one thee-hundredth of a second – obviously way more precise than what we need. Smalldatetime would be much more fitting, storing the precision down to the minute and taking up only 4 bytes – saving a final 4 bytes per record. I we wanted to push it to the extreme we could split Created into two fields – a 3 byte date field and a 1 byte tinyint field for the hour. Though it’d take up the same space, we just gained the ability to store dates all the way up to year 9999 instead of <em>only </em>2079. As the rapture is coming up shortly, we’ll skip that for now.</p>

<p>So to sum it up, we just saved:</p>

<table width="400" border="0" cellspacing="0" cellpadding="2">
	<tbody>
		<tr>
			<td valign="top" width="79"><strong>11 bytes</strong></td>
			<td valign="top" width="321"><em>Converting IP to bigint</em></td>
		</tr>
		<tr>
			<td valign="top" width="79"><strong>3 bytes</strong></td>
			<td valign="top" width="321"><em>Converting FlashVersion to tinyint</em></td>
		</tr>
		<tr>
			<td valign="top" width="79"><strong>2 bytes</strong></td>
			<td valign="top" width="321"><em>Converting PageNumber to smallint</em></td>
		</tr>
		<tr>
			<td valign="top" width="79"><strong>4 bytes</strong></td>
			<td valign="top" width="321"><em>Converting Created to smalldatetime</em></td>
		</tr>
	</tbody>
</table>

<p>In total, 20 bytes per record, resulting in a new total record size of 26 – 28 including the slot offset array pointer. This means we can now fit in 289 rows per page instead of the previous 168.</p>

<p>Testing the new format reveals we’re down to just 364 pages now:</p>

<pre lang="tsql" escaped="true">CREATE TABLE #HitsV2
(
	EntityID int NOT NULL,
	CategoryID smallint NOT NULL,
	Created smalldatetime NOT NULL,
	FlashVersion tinyint NULL,
	IP bigint NULL
)

BEGIN TRAN
DECLARE @Cnt int = 0
WHILE @Cnt &lt; 100000 BEGIN

	INSERT INTO #HitsV2 VALUES (1, 1, getdate(), 1, 1)

	SET @Cnt = @Cnt + 1
END
COMMIT

SELECT
	AU.*
FROM
	sys.allocation_units AU
INNER JOIN
	sys.partitions P ON AU.container_id = P.partition_id
INNER JOIN
	sys.objects O ON O.object_id = P.object_id
WHERE
	O.name LIKE '#HitsV2%'</pre>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_42.png"><img class="alignnone size-full wp-image-2203" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/05/image_42.png" width="731" height="69" /></a>

<h2>The more rows, the more waste</h2>

<p>Looking back at the 750m table, the original format would (assuming an utopian zero fragmentation) take up just about:</p>

<blockquote>750.000.000 / 168 * 8 / 1024 / 1024 ~= 34 gigabytes.</blockquote>

<p>Whereas the new format takes up a somewhat lower:</p>

<blockquote>750.000.000 / 289 * 8 / 1024 / 1024 ~= 20 gigabytes.</blockquote>

<p>And there we have it – spending just a short while longer considering the actual business &amp; data needs when designing your tables can save you some considerable space, resulting in better performance and lower IO subsystem requirements.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1344</wp:post_id>
		<wp:post_date>2011-05-17 01:57:21</wp:post_date>
		<wp:post_date_gmt>2011-05-16 23:57:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wasted-bytes-add-up-consider-your-data-types-carefully</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Wasted Bytes Add Up, Consider Your Data Types Carefully]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1036</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Volk]]></wp:comment_author>
			<wp:comment_author_email>robvolk@sqlteam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-15 21:34:10</wp:comment_date>
			<wp:comment_date_gmt>2011-07-15 21:34:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article Mark.  By the way, you can store IPv4 addresses as int or binary(4) if you want to do some math or conversion.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1037</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-15 21:40:41</wp:comment_date>
			<wp:comment_date_gmt>2011-07-15 21:40:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Of course, good suggestion! That's another 4 bytes saved :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Avoiding Page Splits By Splitting Pages</title>
		<link>http://improve.dk/avoiding-page-splits-byhellip-splitting-pages/</link>
		<pubDate>Tue, 24 May 2011 18:29:56 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/16/avoiding-page-splits-by-splitting-pages.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Continuing my review of my old database designs, I stumbled upon yet another mind numbing design decision. Back then, I’d just recently learned about the whole page split problem and how you should always use sequentially valued clustered keys.</p>  

<p>This specific table needed to track a number of views for a given entity, storing a reference to the entity and the time of the view. As I knew page splits where bad, I added a clustered index key like so:</p>

<pre lang="tsql" escaped="true">CREATE TABLE EntityViews
(
	ViewID int identity PRIMARY KEY CLUSTERED,
	EntityID int NOT NULL,
	Created datetime NOT NULL,
	OtherData char(20)
)</pre>

<p>With a schema like this, insertions won’t cause fragmentation as they’ll follow the nice &amp; sequential ViewID identity value. However, I did realize that all of my queries would be using EntityID and Created as a predicate, reading most, if not all, of the columns. By clustering on ViewID, I’d have to scan the entire table for all queries. As that obviously wouldn’t be efficient, I added a nonclustered index:</p>

<pre lang="tsql" escaped="true">CREATE NONCLUSTERED INDEX IDX_EntityID_Created ON EntityViews (EntityID, Created) INCLUDE (OtherData)</pre>

<p>If you’re shaking your head by now, good. This index solved my querying issue as I could now properly seek my data using (WHERE EntityID = x AND Created BETWEEN y AND z) predicates. However, the nonclustered index contains all of my columns, including ViewID as that’s the referenced clustered key. And thus I’m storing all my data twice! My clustered index is neatly avoiding fragmentation, but my nonclustered index (that contains all the same data!) is experiencing the exact fragmentation issues that I originally wanted to avoid!</p>

<p>Realizing this fact, the correct schema would’ve been:</p>

<pre lang="tsql" escaped="true">CREATE TABLE EntityViews
(
	EntityID int NOT NULL,
	Created datetime NOT NULL,
	OtherData char(20)
)
CREATE CLUSTERED INDEX CX_EntityID_Created ON EntityViews (EntityID, Created)</pre>

<p>We save the surrogate key value bytes for each row and all the data is stored only once. There’s no need for secondary indexes as all the data is stored in the natural querying order. However, page splitting will occur as EntityID won’t be sequential. This is easily avoided by scheduling REINDEX &amp; REUBILD as appropriate.</p>

<p>Furthermore, as the clustered key is sorted on Created secondarily, older non-fragmented data won’t be affected – it’ll only affect the most recently added pages, which are probably in memory anyways and thus won’t cause problems for querying.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1345</wp:post_id>
		<wp:post_date>2011-05-24 20:29:56</wp:post_date>
		<wp:post_date_gmt>2011-05-24 18:29:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>avoiding-page-splits-byhellip-splitting-pages</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="indexing"><![CDATA[Indexing]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[avoiding-page-splits-by-splitting-pages]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Avoiding Page Splits By Splitting Pages]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1038</wp:comment_id>
			<wp:comment_author><![CDATA[Sjang]]></wp:comment_author>
			<wp:comment_author_email>hsd@geniiius.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-24 15:46:12</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 15:46:12</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I know you know, but to clarify, then it's perhaps worth mentioning, that to avoid those page splits by doing rebuilds, you would need to rebuild the indexes with a fill factor of less than 100, to leave room for the new rows. How much lower than 100 depends on the volume of inserts happening between the rebuild schedules.<br />If the fill factor is left to the default of 100, then you would still experience page splits :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1039</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-24 16:04:52</wp:comment_date>
			<wp:comment_date_gmt>2011-05-24 16:04:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually I would still use a fill factor of 0/100. Given that my clustered key is (EntityID, Created), I'm not touching any of my archival data, I'm only adding to the end of the page chain.<br /><br />If I were to rebuild with a fill factor of less than 100, I'd waste a lot of space on my archival data pages, while only the last page (partitioned by EntityID) would actually gain something from the extra space.<br /><br />Given that, it's much cheaper just to throw a REORGANIZE at the index regularly as only a small portion of the table will be fragmented.<br /><br />Had we not had a sequential column as the second part of the CX, then yes, I'd definitely go for a lower fill factor :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53060</wp:comment_id>
			<wp:comment_author><![CDATA[Bryan Minarsky]]></wp:comment_author>
			<wp:comment_author_email>bryan@loovax.com</wp:comment_author_email>
			<wp:comment_author_url>http://loovax.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>65.96.203.52</wp:comment_author_IP>
			<wp:comment_date>2013-06-09 02:18:40</wp:comment_date>
			<wp:comment_date_gmt>2013-06-09 00:18:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Regarding the fill factor this has come up MANY times at multiple jobs and it has almost always been SharePoint back-end related. One of my colleagues insisted that a fill factor of 80 was the optimum for SP2010. Then I showed him some stats from using ANY multiple of 15 higher than 30.

There are a lot of outside factors from load balancing to content type but at the end of the day a fill factor of 30 I find to be optimum for all new farm build-outs.

There are so many ways to slice this issue I could write a book but I am sure someone already has .... 

Thanks,
Bryan]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1370737120.5430490970611572265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Saving Space by Storing Decimal Values in Integer Data Types</title>
		<link>http://improve.dk/saving-space-by-storing-real-values-in-smallints/</link>
		<pubDate>Tue, 31 May 2011 19:06:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/16/saving-space-by-storing-decimal-values-in-integer-data-types.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I recently stumbled upon a <a href="http://stackoverflow.com/questions/6015605/design-question-on-storing-meteorological-data-on-sql-server-2008/6016237#6016237" target="_blank">question on Stack Overflow</a> on how best to reduce their data size as it’s growing out of hand. As the original author hasn’t replied back yet (as of writing this post, I’m making some assumptions on the scenario – so take it as an abstract scenario). The basic scenario is that they have a number of measuring stations, each one of those containing a lot of equipment reporting back to a SQL Server in a schema like the following abstract:</p>

<pre lang="tsql" escaped="true">CREATE TABLE Measurements
(
	DataID bigint IDENTITY,
	StationID int,
	MeasurementA real,
	MeasurementB real,
	MeasurementC real
	... 100 more columns
)</pre>

<p>They’re willing to loose some precision of the data, for the purpose of saving space. As some of the data is measuring wind speed in meters/sec and air pressure, I’m making the assumptions that most of the data will be in the 0-200 and 500-2000 ranges, depending on the scale used.</p>

<p>If the wind speed does not need accuracy further than two decimals, storing it in a 4 byte real column is a lot of waste. Instead we might store it in a smallint column, saving 2 bytes per column. The data would be converted like so:</p>

<pre lang="tsql" escaped="true">35.7   =&gt; 35.7   * 100 = 3,570
1.38   =&gt; 1.38   * 100 = 138
155.29 =&gt; 155.29 * 100 = 15,529
84.439 =&gt; 84.439 * 100 = 8,443 (with the .9 being rounded off due to integer math)</pre>

<p>So by multiplying all the values by 100, we achieve a precision of two decimal points, with all further decimal points being cropped. As the smallint max value is 32,767, the maximum value we could store in this format would be:</p>

<pre lang="tsql" escaped="true">327.67 =&gt; 327.67 * 100 = 32,767</pre>

<p>Which is probably enough for most wind measurements. Hopefully.</p>

<p>For the larger values in the 500-2000 ranges, we can employ the same technique by multiplying by 10. This only gives us a single digit of precision, but allows for values in the –3,276.8 to 3,276.7 range, stored using just 2 bytes per column. Employing the same technique we could also store values between 0 and 2.55 in a single byte tinyint column, with a precision of two digits.</p>

<p>Unless you really need to save those bytes, I wouldn’t recommend you do this as it’s usually better to store the full precision. However, this does show that we can store decimals in integer data types with a bit of math involved.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1346</wp:post_id>
		<wp:post_date>2011-05-31 21:06:40</wp:post_date>
		<wp:post_date_gmt>2011-05-31 19:06:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>saving-space-by-storing-real-values-in-smallints</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[saving-space-by-storing-decimal-values-in-integer-data-types]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Saving Space by Storing Decimal Values in Integer Data Types]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1040</wp:comment_id>
			<wp:comment_author><![CDATA[Christian Horsdal]]></wp:comment_author>
			<wp:comment_author_email>c.horsdal@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://horsdal.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-31 11:08:18</wp:comment_date>
			<wp:comment_date_gmt>2011-05-31 11:08:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Seems fixed point values would also do the trick in some cases.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1041</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-05-31 11:15:02</wp:comment_date>
			<wp:comment_date_gmt>2011-05-31 11:15:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Indeed they can. However, the samllest fixed point value in SQL Server takes up 4 bytes on disk so it'd only make sense, in regards of saving space, if you're currently underutilizing a 5+ byte data type for the same data.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1042</wp:comment_id>
			<wp:comment_author><![CDATA[Henrik Staun Poulsen]]></wp:comment_author>
			<wp:comment_author_email>hsp@stovi.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-26 10:45:21</wp:comment_date>
			<wp:comment_date_gmt>2011-08-26 10:45:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've also been involved in an experiment with user defined types.<br /><br />This does indeed save space, as a Decimal(5,2) can be stored in 2 bytes, if your range is between -327 and +327<br /><br />But at a higher CPU cost, so we ended up buying more disks instead.<br /><br />Best regards,<br />Henrik<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1043</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-26 16:39:15</wp:comment_date>
			<wp:comment_date_gmt>2011-08-26 16:39:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To my knowledge, the smallest decimal/numeric value you can store is 5 bytes. One byte to store the sign bit/byte, and 4 bytes to store the value from precision 1-9 (decimal(x,y) with x &lt; 5 will internally be stored just as a decimal (9, y)).<br /><br />I'm not sure whether the actual data part of a vardecimal might be smaller, but either way, vardecimal itself will take up two extra bytes for the variable length offset array, so it'd end up more or less the same.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Bridging the Gap Between Smallint and Int</title>
		<link>http://improve.dk/bridging-the-gap-between-smallint-and-int/</link>
		<pubDate>Thu, 19 May 2011 19:33:06 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/17/bridging-the-gap-between-smallint-and-int.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Being a proponent of <a href="http://improve.dk/archive/2011/05/17/wasted-bytes-add-up-consider-your-data-types-carefully.aspx" target="_blank">carefully choosing your data types</a>, I’ve often longed for the <a href="http://dev.mysql.com/doc/refman/5.0/en/numeric-types.html" target="_blank">mediumint data type</a> that MySQL has. Both smallint and int are signed data types, meaning their ranges are –32,768 to 32,767 for smallint and –2,147,483,648 to 2,147,483,647 for int. For most relational db schemas, positive identity values are used, meaning we’re looking at a possible 32,767 vs 2,147,483,647 values for smallint vs int. That’s a humongous difference, and it comes at a storage cost as well – 2 vs 4 bytes per column. If only there was something in between...</p>

<h2>You say mediumint, I say binary(3)</h2>

<p>While there’s no native mediumint data type in SQL Server, there is a binary data type. Internally it’s basically just a byte array, just as any other data type. An int is just a binary(4) with some custom processing on top of it, smallint being a binary(2) and nvarchar being a binary(length * 2). What that means is there’s no stopping us from saving whatever bytes we want into a binary(3) column, including numbers. Using the following sample table:</p>

<pre lang="tsql" escaped="true">CREATE TABLE ThreeByteInt
(
	MediumInt binary(3),
	Filler char(20) NULL
)

CREATE CLUSTERED INDEX CX_ThreeByteInt ON ThreeByteInt (MediumInt)</pre>

<p>We can insert values through SQL either using byte constants or using numbers as normal:</p>

<pre lang="tsql" escaped="true">INSERT INTO ThreeByteInt (MediumInt) VALUES (0xC9DF48)
INSERT INTO ThreeByteInt (MediumInt) VALUES (0x000000)
INSERT INTO ThreeByteInt (MediumInt) VALUES (0xFFFFFF)
INSERT INTO ThreeByteInt (MediumInt) VALUES (13229896)
INSERT INTO ThreeByteInt (MediumInt) VALUES (1500)
INSERT INTO ThreeByteInt (MediumInt) VALUES (0)
INSERT INTO ThreeByteInt (MediumInt) VALUES (16777215)</pre>

<p>And querying works like normal as well:</p>

<pre lang="tsql" escaped="true">SELECT * FROM ThreeByteInt</pre>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_23.png"><img class="alignnone size-full wp-image-2195" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/05/image_23.png" width="170" height="165" /></a>

<h2>Scans ahoy!</h2>

<p>However, take a look at the plans for these two queries:</p>

<pre lang="tsql" escaped="true">SELECT * FROM ThreeByteInt WHERE MediumInt = 1500
SELECT * FROM ThreeByteInt WHERE MediumInt = 0x0005DC</pre>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_41.png"><img class="alignnone size-full wp-image-2196" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/05/image_41.png" width="428" height="299" /></a>

<p>They both contain a predicate looking for a value of 1500, one written as an integer constant, the other as a hex constant. One is causing a scan, the other is using a seek. Taking a closer look at the scan reveals an IMPLICIT_CONVERT which renders are index useless and thus causing the scan:</p>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_61.png"><img class="alignnone size-full wp-image-2197" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/05/image_61.png" width="340" height="485" /></a>

<p>The easiest way of avoiding this is just to replace the implicit conversion with an explicit cast in the query:</p>

<pre lang="tsql" escaped="true">SELECT * FROM ThreeByteInt WHERE MediumInt = CAST(1500 as binary(3))</pre>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_81.png"><img class="alignnone size-full wp-image-2198" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/05/image_81.png" width="610" height="152" /></a>

<h2>Unsigned integers &amp; overflow</h2>

<p>Whereas smallint, int and bigint are all signed integer types (the ability to have negative values), tinyint is not. Tinyint is able to store values in the 0-255 range. Had it been a signed type, it would be able to handle values in the –128 to 127 range. Just like tinyint, binary(3)/mediumint is an unsigned type, giving us a range of 0 to 16,777,215.</p>

<p>Most developers &amp; DBAs have experienced <a href="http://en.wikipedia.org/wiki/Integer_overflow" target="_blank">integer overflow</a> at some point, usually causing havoc in the application. In short, an overflow occurs when you assign a value larger or smaller than what the data type can handle. In our case, that might be –1 or 16,777,216. We can easily demonstrate what’s happening by casting an integer to binary(3) and back to int again like so:</p>

<pre lang="tsql" escaped="true">SELECT
	CAST(CAST(16777214 AS binary(3)) AS int),
	CAST(CAST(16777215 AS binary(3)) AS int),
	CAST(CAST(16777216 AS binary(3)) AS int)

UNION ALL

SELECT
	CAST(CAST(-1 AS binary(3)) AS int),
	CAST(CAST(0 AS binary(3)) AS int),
	CAST(CAST(1 AS binary(3)) AS int)

UNION ALL

SELECT
	CAST(CAST(33554430 AS binary(3)) AS int),
	CAST(CAST(33554431 AS binary(3)) AS int),
	CAST(CAST(33554432 AS binary(3)) AS int)</pre>

<a href="http://improve.dk/wp-content/uploads/2011/05/image_101.png"><img class="alignnone size-full wp-image-2200" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/05/image_101.png" width="362" height="111" /></a>

<h2>Working with binary(3) on the client side</h2>

<p>Now that we’ve got our mediumint data type, all we need is to be able to insert &amp; query data from the client.</p>

<p>Inserting is easy – just send values is as integers and it’ll be converted as appropriate – just make sure to check for over/underflows as necessary:</p>

<pre lang="csharp" escaped="true">using(var conn = new SqlConnection("Data Source=.;Initial Catalog=MediumIntTest;Integrated Security=SSPI;"))
{
	var insert = new SqlCommand("INSERT INTO ThreeByteInt (MediumInt) VALUES (@MediumInt)");
	insert.Parameters.Add("@MediumInt", SqlDbType.Int).Value = 439848;
	insert.Connection = conn;

	conn.Open();
	insert.ExecuteNonQuery();
	conn.Close();
}</pre>

<p>Querying requires slightly more effort. We’ll still pass in the value as an integer, but we’ll have to perform a CAST in the query to avoid scans. We could also pass the value in as a three byte array, but provided we have access to the query text, it’s easier to perform the conversion there. Furthermore there’s no standard three byte integer type in C#, so we’ll have do perform some ugly magic to convert the three bytes into a normal .NET integer:</p>

<pre lang="csharp" escaped="true">using(var conn = new SqlConnection("Data Source=.;Initial Catalog=MediumIntTest;Integrated Security=SSPI;"))
{
	var select = new SqlCommand("SELECT MediumInt FROM ThreeByteInt WHERE MediumInt = CAST(@MediumInt AS binary(3))");
	select.Parameters.Add("@MediumInt", SqlDbType.Int).Value = 439848;
	select.Connection = conn;

	conn.Open();
	byte[] bytes = (byte[])select.ExecuteScalar();
	int result = BitConverter.ToInt32(new byte[] { bytes[2], bytes[1], bytes[0], 0 }, 0);
	conn.Close();

	Console.WriteLine(result);
}</pre>

<h2>Summing it up</h2>

<p>As I’ve shown, we can easily create our own mediumint data type, just as we can create a 5 byte integer, 6 byte… Well, you get it. However, there are obviously some trade offs in that you’ll have to manage this data type yourself. While you can query it more or less like a normal data type, you have to be wary of scans. Finally, retrieving values will require some extra work, though that could easily be abstracted away in a custom type.</p>

<p>So should you do it? Probably not. Saving a single byte per column will gain you very little, unless you have a humongous table, especially so if you have a lot of columns that fit in between the smallint and int value range. For those humongous archival tables, this might just be a way to shave an extra byte off per <em>mediumint</em> column.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1347</wp:post_id>
		<wp:post_date>2011-05-19 21:33:06</wp:post_date>
		<wp:post_date_gmt>2011-05-19 19:33:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bridging-the-gap-between-smallint-and-int</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="optimization"><![CDATA[Optimization]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Bridging the Gap Between Smallint and Int]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Checking Which Database is Stored in a Detached MDF File</title>
		<link>http://improve.dk/checking-which-database-is-stored-in-a-deattached-mdf-file/</link>
		<pubDate>Thu, 19 May 2011 16:57:02 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/19/checking-which-database-is-stored-in-a-detached-mdf-file.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Inspired by <a href="http://stackoverflow.com/questions/6061510/any-way-to-quickly-tell-which-database-if-any-is-attached-to-a-mdf-file" target="_blank">this</a> question on StackOverflow, I’ve made a quick script to demonstrate how this might be done using <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>.</p>

<p>In this example I’m looping all .mdf files in my local SQL Server data directory. Each one is loaded using OrcaMDF, the boot page is fetched and finally the database name is printed:</p>

<pre lang="csharp" escaped="true">using System;
using System.IO;
using OrcaMDF.Core.Engine;

namespace OrcaMDF.Adhoc
{
    class Program
    {
        static void Main()
        {
			foreach (string mdfPath in Directory.GetFiles(@"C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA"))
			{
				if (!mdfPath.ToLower().EndsWith(".mdf"))
					continue;

				using (var file = new MdfFile(mdfPath))
				{
					var bootPage = file.GetBootPage();
					Console.WriteLine(bootPage.DatabaseName);
				}
			}
        }
    }
}</pre>

<p>And the following is the output we get:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_21.png"><img src="http://improve.dk/wp-content/uploads/2011/05/image_21.png" alt="image_2" width="514" height="188" class="alignnone size-full wp-image-2189" /></a></div></div>

<p>Which, coincidentally, matches up to the databases I’ve got attached to my local SQL Server. At this point we could match this list up to the one we’d get from sys.databases and see which files didn’t have a matching database, and thus weed out the non-attached mdf files from our data directory.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1348</wp:post_id>
		<wp:post_date>2011-05-19 16:57:02</wp:post_date>
		<wp:post_date_gmt>2011-05-19 16:57:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>checking-which-database-is-stored-in-a-deattached-mdf-file</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Checking Which Database is Stored in a Detached MDF File]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[checking-which-database-is-stored-in-a-detached-mdf-file]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reverse Engineering SQL Server Page Headers</title>
		<link>http://improve.dk/reverse-engineering-sql-server-page-headers/</link>
		<pubDate>Thu, 19 May 2011 20:37:33 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/19/reverse-engineering-sql-server-page-headers.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the first challenges I faced when starting out the development of <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> was parsing page headers. We all know that <a href="http://improve.dk/archive/2009/03/26/deciphering-a-sql-server-data-page.aspx" target="_blank">pages are basically split in two parts</a>, the 96 byte header and the 8096 byte body of remaining bytes. Much has been written about headers and Paul Randal (<a href="http://www.sqlskills.com/BLOGS/PAUL/" target="_blank">b</a>|<a href="http://twitter.com/#!/paulrandal" target="_blank">t</a>) has a great post describing the <a href="http://www.sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-page.aspx" target="_blank">contents of the header</a> as well. However, though the contents have been described, I’ve been completely unable to find any kind of details on the storage format. What data types are the individual fields, and what’s the order? Oh well, we’ve always got DBCC PAGE.</p>

<p>Firing up DBCC PAGE, I scoured for a random data page whose header I could dump, in this case page (1:101):</p>

<pre lang="tsql" escaped="true">DBCC TRACEON (3604)
DBCC PAGE (TextTest, 1, 101, 2)</pre>

<p>The result comes in two parts, first we’ve got the header contents as DBCC PAGE kindly parses for us, while the second part is a dump of the 96 bytes that make up the header data:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_2.png"><img class="alignnone size-full wp-image-2175" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/05/image_2.png" width="804" height="245" /></a></div></div>

<p>Armed with this, the hunt begins! What we’re looking for is a match between the parsed values and the bytes in the header. To make it easy, we need to spot some unique values so we don’t get a lot of ambiguity in where the value might be stored. Starting out with m_freeCnt, we see it has a value of 4066. The body size is 8060 bytes so it’s clear that the number can’t be a tinyint. It wouldn’t make sense to make it an int as that supporst way larger values than we need. An educated guess would be that m_freeCnt is probably stored as a smallint, leaving plenty of space for the 0-8060 range we need.</p>

<p>Now, 4066 represented in hex is 0x0FE2. Byte swapped, that becomes 0xE20F, and what do you know, we have a match!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_4.png"><img class="alignnone size-full wp-image-2176" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/05/image_4.png" width="529" height="102" /></a></div></div>

<p>And thus we have identified the first field of our header:</p>

<pre lang="csharp" escaped="true">/*
	Bytes	Content
	-----	-------
	00-27	?
	28-29	FreeCnt (smallint)
	30-95	?
*/</pre>

<p>Continuing the search we see that m_freeData = 3895. In hex that’s 0x0F37 and 0x370F when swapped. And voilá, that’s stored right next to m_freeCnt:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_6.png"><img class="alignnone size-full wp-image-2177" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/05/image_6.png" width="529" height="102" /></a></div></div>

<p>Continuing on with this technique, we can map all the distinct header values where there’s no ambiguity as to where they’re stored. But what about a field like m_level? It has the same value as m_xactReserved, m_reservedCnt, m_ghostRecCnt, etc. How do we know which one of those zero values is really m_level? And how do we find out what the data type is? It could be anything from a tinyint to bigint!</p>

<p>Time to bring out the big guns! We’ll start out by shutting down MSSQL / SQL Server:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_8.png"><img class="alignnone size-full wp-image-2179" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/05/image_8.png" width="483" height="400" /></a></div></div>

<p>Then we’ll open up the .mdf file in Visual Studio:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_10.png"><img class="alignnone size-full wp-image-2180" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/05/image_10.png" width="625" height="434" /></a></div></div>

<p>This’ll open up the file in hex editor mode, allowing direct access to all the yummy data! As we know the page id was 101, we need to jump to byte offset 101 * 8192 = 827,392 to get to the first byte of page 101:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_12.png"><img class="alignnone size-full wp-image-2181" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/05/image_12.png" width="691" height="648" /></a></div></div>

<p>Looking at these bytes we see that they’re identical to our header contents, thus confirming we’ve jumped to the correct offset:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_16.png"><img class="alignnone size-full wp-image-2182" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/05/image_16.png" width="555" height="589" /></a></div></div>

<p>Now I’m going to ask you to do something that will make sheep loving people cry – write some gibberish in there and save the file! Please <strong>do not</strong> do this to a database with any kind of important data in it. Before:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_18.png"><img class="alignnone size-full wp-image-2183" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/05/image_18.png" width="395" height="30" /></a></div></div>

<p>After:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_22.png"><img class="alignnone size-full wp-image-2184" alt="image_22" src="http://improve.dk/wp-content/uploads/2011/05/image_22.png" width="397" height="29" /></a></div></div>

<p>Oh the horrors! Now restart MSSQL / SQL Server and rerun the DBCC PAGE query from before:</p>

<pre lang="tsql" escaped="true">DBCC TRACEON (3604)
DBCC PAGE (TextTest, 1, 101, 2)</pre>

<p>And notice the header we get as a result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_24.png"><img class="alignnone size-full wp-image-2185" alt="image_24" src="http://improve.dk/wp-content/uploads/2011/05/image_24.png" width="803" height="249" /></a></div></div>

<p>Several values have changed! m_xactReserved had an ambiguous value of 0 before, now it’s at 30,806. Converting that to byte swapped hex we get a value of 0x5678. Looking at the header, we’ve now pinpointed yet another field and datatype (smallint):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_26.png"><img class="alignnone size-full wp-image-2186" alt="image_26" src="http://improve.dk/wp-content/uploads/2011/05/image_26.png" width="531" height="102" /></a></div></div>

<p>And thus we can update our header reference table:</p>

<pre lang="csharp" escaped="true">/*
	Bytes	Content
	-----	-------
	00-27	?
	28-29	FreeCnt (smallint)
	30-49	?
	50-51	XactReserved (smallint)
	30-95	?
*/</pre>

<p>Continuing down this path, messing up the header, correlating messed up values with values parsed by DBCC PAGE, it’s possible to locate all the fields and their corresponding data types. If you see the following message, you know you’ve messed it up properly:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_28.png"><img class="alignnone size-full wp-image-2187" alt="image_28" src="http://improve.dk/wp-content/uploads/2011/05/image_28.png" width="565" height="37" /></a></div></div>

<p>You should be proud of yourself. No go clean up the mess you’ve made!</p>

<p>Jumping forward, I’ve compiled a reference to the page header structure:</p>

<pre lang="csharp" escaped="true">/*
	Bytes	Content
	-----	-------
	00	HeaderVersion (tinyint)
	01	Type (tinyint)
	02	TypeFlagBits (tinyint)
	03	Level (tinyint)
	04-05	FlagBits (smallint)
	06-07	IndexID (smallint)
	08-11	PreviousPageID (int)
	12-13	PreviousFileID (smallint)
	14-15	Pminlen (smallint)
	16-19	NextPageID (int)
	20-21	NextPageFileID (smallint)
	22-23	SlotCnt (smallint)
	24-27	ObjectID (int)
	28-29	FreeCnt (smallint)
	30-31	FreeData (smallint)
	32-35	PageID (int)
	36-37	FileID (smallint)
	38-39	ReservedCnt (smallint)
	40-43	Lsn1 (int)
	44-47	Lsn2 (int)
	48-49	Lsn3 (smallint)
	50-51	XactReserved (smallint)
	52-55	XdesIDPart2 (int)
	56-57	XdesIDPart1 (smallint)
	58-59	GhostRecCnt (smallint)
	60-95	?
*/</pre>

<p>I’m not sure what lies in the remaining bytes of the header as DBCC PAGE doesn’t seem to parse stuff there, and it seems to be zeroed out for all pages I’ve tested. I’m assuming it’s reserved bytes for future usage. Once we’ve got the format, parsing becomes a simple task of reading each field, field by field:</p>

<pre lang="csharp" escaped="true">HeaderVersion = header[0];
Type = (PageType)header[1];
TypeFlagBits = header[2];
Level = header[3];
FlagBits = BitConverter.ToInt16(header, 4);
IndexID = BitConverter.ToInt16(header, 6);
PreviousPage = new PagePointer(BitConverter.ToInt16(header, 12), BitConverter.ToInt32(header, 8));
Pminlen = BitConverter.ToInt16(header, 14);
NextPage = new PagePointer(BitConverter.ToInt16(header, 20), BitConverter.ToInt32(header, 16));
SlotCnt = BitConverter.ToInt16(header, 22);
ObjectID = BitConverter.ToInt32(header, 24);
FreeCnt = BitConverter.ToInt16(header, 28);
FreeData = BitConverter.ToInt16(header, 30);
Pointer = new PagePointer(BitConverter.ToInt16(header, 36), BitConverter.ToInt32(header, 32));
ReservedCnt = BitConverter.ToInt16(header, 38);
Lsn = "(" + BitConverter.ToInt32(header, 40) + ":" + BitConverter.ToInt32(header, 44) + ":" + BitConverter.ToInt16(header, 48) + ")";
XactReserved = BitConverter.ToInt16(header, 50);
XdesID = "(" + BitConverter.ToInt16(header, 56) + ":" + BitConverter.ToInt32(header, 52) + ")";
GhostRecCnt = BitConverter.ToInt16(header, 58);</pre>

<p>You can also see the <a href="https://github.com/improvedk/OrcaMDF/blob/master/src/OrcaMDF.Core/Engine/Pages/PageHeader.cs" target="_blank">full source of the header parsing at GitHub</a>.</p>

<h2>Wan’t more?</h2>

<p>If this isn’t enough for you, you should go and <a href="http://www.sqlpass.org/summit/2011/Speakers/SessionPreferencing.aspx?spid=245&amp;p=1&amp;preferred=False" target="_blank">vote for one or more of my OrcaMDF related sessions</a> at the PASS Summit.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1349</wp:post_id>
		<wp:post_date>2011-05-19 20:37:33</wp:post_date>
		<wp:post_date_gmt>2011-05-19 20:37:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reverse-engineering-sql-server-page-headers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="dbcc-ind"><![CDATA[DBCC IND]]></category>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="reverse-engineering"><![CDATA[Reverse engineering]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Reverse Engineering SQL Server Page Headers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[checking-which-database-is-stored-in-a-deattached-mdf-file]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1044</wp:comment_id>
			<wp:comment_author><![CDATA[pitoach]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ariely.info/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-18 15:36:51</wp:comment_date>
			<wp:comment_date_gmt>2012-06-18 15:36:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[very... very... very... nice :-)<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Using Fiddler to Automatically Download Streamed MP3s</title>
		<link>http://improve.dk/using-fiddler-to-automatically-download-streamed-mp3s/</link>
		<pubDate>Wed, 01 Jun 2011 20:42:44 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/27/using-fiddler-to-automatically-download-streamed-mp3s.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Eric Lawrence’s <a href="http://www.fiddler2.com/fiddler2/version.asp" target="_blank">Fiddler</a> has many uses. I use it every day for debugging our client/server interaction, caching behavior, etc. What many don’t realize is that Fiddler is also an excellent platform for scripting, enabling you to modify requests and responses as they go out and come back. I made a quick script to automatically download streamed MP3 files as they were played, naming them automatically from the ID3 information contained in them.</p>

<p>Before we get started, head on over and download the <a href="http://www.fiddler2.com/fiddler/fse.asp" target="_blank">FiddlerScript Editor</a>.</p>

<h2>Parsing ID3 tags</h2>

<p>As I’m lazy, and most likely you are too, we’ll use the excellent TagLib Sharp library for parsing the ID3 information in the downloaded MP3 files. You can get the latest version (2.0.4.0 as of this writing) <a href="http://download.banshee.fm/taglib-sharp/" target="_blank">from here</a>.</p>

<p>To gain access to the TagLib Sharp library from Fiddler, add a reference to it in the Fiddler Options dialog:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_210.png"><img class="alignnone size-full wp-image-2233" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/05/image_210.png" width="779" height="371" /></a></div></div>

<h2>Setting up the script</h2>

<p>Now go to to Rules menu and click “Customize Rules…” to open the CustomRules.js file in the FiddlerScript Editor that we installed before.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/05/image_44.png"><img class="alignnone size-full wp-image-2234" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/05/image_44.png" width="432" height="375" /></a></div></div>

<p>Go to the OnBeforeResponse function and add the following bit of code to the end:</p>

<pre lang="csharp" escaped="true">if(oSession.url.Contains("SomeStream.aspx")) {
	var directory: String = "D:\Files\MP3";
	var path: String = System.IO.Path.Combine(directory, Guid.NewGuid() + ".mp3");

	oSession.SaveResponseBody(path);
	var file: TagLib.File = TagLib.File.Create(path);

	if(file.Tag.Title.Length &gt; 0)
	{
		var target: String = System.IO.Path.Combine(directory, file.Tag.AlbumArtists + " - " + file.Tag.Title + ".mp3");

		if(!System.IO.File.Exists(target))
			System.IO.File.Move(path, target);
		else
			System.IO.File.Delete(path);
	}
}</pre>

<p>The first line identifies the requests that are for MP3 files. Depending on where you’re streaming from, you’ll obviously need to change this line to match your specific requirements.</p>

<p>Once an MP3 response has been detected, we save the file using a GUID as the name. If TagLib Sharp detects a song title, the file is renamed in the “AlbumArtists – Title.mp3” form. If no title is present, we just let the file stay with the GUID name for manual renaming later on.</p>

<p>Save the CustomRules.js file and Fiddler will automatically pick up on the changes and start saving those precious MP3s!</p>

<h2>Disclaimer</h2>

<p>Obviously the above code should only be used to save MP3 files from streams to which you own the rights.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1350</wp:post_id>
		<wp:post_date>2011-06-01 22:42:44</wp:post_date>
		<wp:post_date_gmt>2011-06-01 20:42:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>using-fiddler-to-automatically-download-streamed-mp3s</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="fiddler"><![CDATA[Fiddler]]></category>
		<category domain="post_tag" nicename="mp3"><![CDATA[MP3]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Using Fiddler to Automatically Download Streamed MP3s]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1048</wp:comment_id>
			<wp:comment_author><![CDATA[gs]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-05-23 05:40:06</wp:comment_date>
			<wp:comment_date_gmt>2012-05-23 05:40:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good stuff. I had the idea of automating this through fiddler the other day and thought &quot;someone must have done this already&quot;. Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Copying a SQL Server Database File That&#039;s in Use Using Volume Shadow Copy</title>
		<link>http://improve.dk/copying-a-sql-server-database-file-thatrsquos-in-use-using/</link>
		<pubDate>Tue, 21 Jun 2011 16:11:12 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/05/28/copying-a-sql-server-database-file-thats-in-use-using-volume-shadow-copy.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When working on <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> I usually setup a test database, force a checkpoint and then perform my tests on the MDF file. Problem is, you can’t open the MDF file for reading, nor copy it, as long as the database is online in SQL Server. I could shut down SQL Server temporarily while copying the file, but that quickly becomes quite a hassle.</p>

<h2>Leveraging Volume Shadow Copy (VSS) through AlphaVSS</h2>

<p><a href="http://www.alphaleonis.com/2008/08/alphavss-bringing-windows-shadow-copy-service-vss-to-net/" target="_blank">AlphaVSS</a> is an excellent library for invoking VSS through .NET. While it can do much more, I’m using it to create a snapshot of a single active file, copy it and then dispose of the snapshot afterwards.</p>

<p>The following class presents a single static method that’ll copy any file (locked or not) and copy it to the desired destination. It would be easy to adapt upon this sample to copy multiple files, directories, etc. Note that while a copy file progress clalback is supported, I don’t really care about the progress and am there sending a null reference when calling <a href="http://msdn.microsoft.com/en-us/library/aa363852(v=vs.85).aspx" target="_blank">CopyFileEx</a>.</p>

<pre lang="csharp" escaped="true">class VssHelper
{
	[DllImport("kernel32.dll", SetLastError = true, CharSet = CharSet.Auto)]
	private static extern bool CopyFileEx(string lpExistingFileName, string lpNewFileName, CopyProgressRoutine lpProgressRoutine, int lpData, ref int pbCancel, uint dwCopyFlags);
	private delegate uint CopyProgressRoutine(long TotalFileSize, long TotalBytesTransferred, long StreamSize, long StreamBytesTransferred, uint dwStreamNumber, uint dwCallbackReason, IntPtr hSourceFile, IntPtr hDestinationFile, IntPtr lpData);

	public static void CopyFile(string source, string destination)
	{
		var oVSSImpl = VssUtils.LoadImplementation();

		using (var vss = oVSSImpl.CreateVssBackupComponents())
		{
			vss.InitializeForBackup(null);

			vss.SetBackupState(false, true, VssBackupType.Full, false);

			using (var async = vss.GatherWriterMetadata())
				async.Wait();

			vss.StartSnapshotSet();
			string volume = new FileInfo(source).Directory.Root.Name;
			var snapshot = vss.AddToSnapshotSet(volume, Guid.Empty);

			using (var async = vss.PrepareForBackup())
				async.Wait();

			using (var async = vss.DoSnapshotSet())
				async.Wait();

			var props = vss.GetSnapshotProperties(snapshot);
			string vssFile = source.Replace(volume, props.SnapshotDeviceObject + @"");

			int cancel = 0;
			CopyFileEx(vssFile, destination, null, 0, ref cancel, 0);
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1351</wp:post_id>
		<wp:post_date>2011-06-21 18:11:12</wp:post_date>
		<wp:post_date_gmt>2011-06-21 16:11:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>copying-a-sql-server-database-file-thatrsquos-in-use-using</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="alphavss"><![CDATA[AlphaVSS]]></category>
		<category domain="post_tag" nicename="pinvoke"><![CDATA[PInvoke]]></category>
		<category domain="post_tag" nicename="volume-shadow-copy"><![CDATA[Volume Shadow Copy]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[55]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[copying-a-sql-server-database-file-thats-in-use-using-volume-shadow-copy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Copying a SQL Server Database File That's in Use Using Volume Shadow Copy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Anatomy of a Forwarded Record &amp; the Forwarding Stub</title>
		<link>http://improve.dk/anatomy-of-a-forwarded-record-ndash-the-forwarding-stub/</link>
		<pubDate>Mon, 06 Jun 2011 22:25:42 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/06/04/anatomy-of-a-forwarded-record-the-forwarding-stub.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A forwarded record occurs whenever a record in a <a href="http://msdn.microsoft.com/en-us/library/ms188270.aspx" target="_blank">heap</a> increases in size and it no longer fits on the page. Instead of causing a page split, as would happen had the table not been a heap, the record is moved onto another with enough free space, or onto a newly allocated page. Forwarded records can wreak havoc to your performance due to fragmentation, but I’ll leave not cover that here as many other more skilled people <a href="http://sqlblog.com/blogs/kalen_delaney/archive/2009/11/11/fragmentation-and-forwarded-records-in-a-heap.aspx" target="_blank">have</a> <a href="http://blogs.msdn.com/b/mssqlisv/archive/2006/12/01/knowing-about-forwarded-records-can-help-diagnose-hard-to-find-performance-issues.aspx" target="_blank">already</a> <a href="http://www.sqlskills.com/BLOGS/PAUL/post/Forwarding-and-forwarded-records-and-the-back-pointer-size.aspx" target="_blank">done</a> <a href="http://blogs.msdn.com/b/sqlserverstorageengine/archive/2006/09/19/761437.aspx" target="_blank">so</a>.</p>

<h2>Test setup</h2>

<p>As a test table we’ll use a simple table with three wide records, taking up almost a full page of data.</p>

<pre lang="tsql" escaped="true">-- Create test table
CREATE TABLE ForwardedRecordTest
(
	ID int identity,
	Data varchar(8000)
)

-- Insert dummy data
INSERT INTO
	ForwardedRecordTest (Data)
VALUES 
	(REPLICATE('a', 2000)),
	(REPLICATE('b', 2000)),
	(REPLICATE('c', 2000))</pre>

<p>Firing up DBCC IND shows us a single IAM page tracking a single data page:</p>

<pre lang="tsql" escaped="true">DBCC IND (Test, ForwardedRecordTest, -1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/06/image_21.png"><img class="alignnone size-full wp-image-2229" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/06/image_21.png" width="339" height="87" /></a></div></div>

<p>Now, to force a forwarded record, we’ll update one of the columns so it’ll no longer fit on the page with the other records:</p>

<pre lang="tsql" escaped="true">UPDATE
	ForwardedRecordTest
SET
	Data = REPLICATE('b', 5000)
WHERE
	Data = REPLICATE('b', 2000)</pre>

<p>Invoking DBCC IND again confirms that a new page has been allocated to our table:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/06/image_41.png"><img class="alignnone size-full wp-image-2230" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/06/image_41.png" width="343" height="114" /></a></div></div>

<h2>The FORWARDING_STUB</h2>

<p>By using DBCC PAGE we can take a look at the forwarded recorded, or at least what’s left of it on the original page 114:</p>

<pre lang="tsql" escaped="true">DBCC TRACEON (3604)
DBCC PAGE (Test, 1, 114, 3)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/06/image_6.png"><img class="alignnone size-full wp-image-2231" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/06/image_6.png" width="643" height="132" /></a></div></div>

<p>Identifying a forwarding stub is done by looking at the first status byte of the record. Specifically, bits 1-3 will tell us the record type:</p>

<pre lang="tsql" escaped="true">Type = (RecordType)((Convert.ToByte(bits[1]) &lt;&lt; 2) + (Convert.ToByte(bits[2]) &lt;&lt; 1) + Convert.ToByte(bits[3]));</pre>

<p>With Type being one of the valid SQL Server record types:</p>

<pre lang="tsql" escaped="true">public enum RecordType : byte
{
	Primary = 0,
	Forwarded = 1,
	ForwardingStub = 2,
	Index = 3,
	BlobFragment = 4,
	GhostIndex = 5,
	GhostData = 6,
	GhostVersion = 7
}</pre>

<p>While other record types will have two status bytes, a forwarding stub only has a single status byte. Thus, if we identify the record to be a forwarding stub, we know that the next 8 bytes will be a page pointer.</p>

<h2>Parsing the forwarding stub</h2>

<p>Once we know the format, parsing a forwarding stub record is straight forward.</p>

<p>The first byte has a value of 0x04, or 0b100 in binary. Looking at bits 1-3 we get 0b10 or decimal 2 – which matches RecordType.ForwardingStub.</p>

<p>Looking at the next 8 bytes we have <span style="color: #ff0000;">76000000</span> <span style="color: #0000ff;">0001</span> <span style="color: #9b00d3;">0000</span>. I’ve divided them into three groups – in order they contain the page ID, the file ID and finally the slot number.</p>

<p><span style="color: #ff0000;">76000000</span> byte swapped = 0x76 = 118 in decimal.</p>

<p><span style="color: #0000ff;">0001</span> byte swapped = 0x01 = 1 in decimal.</p>

<p><span style="color: #9b00d3;">0000</span> byte swapped = 0x00 = 0 in decimal.</p>

<p>Thus we have the position of the forwarded record: (<span style="color: #0000ff;">1</span>:<span style="color: #ff0000;">118</span>:<span style="color: #9b00d3;">0</span>).</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1352</wp:post_id>
		<wp:post_date>2011-06-07 00:25:42</wp:post_date>
		<wp:post_date_gmt>2011-06-06 22:25:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>anatomy-of-a-forwarded-record-ndash-the-forwarding-stub</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="post_tag" nicename="forwarded-records-2"><![CDATA[Forwarded records]]></category>
		<category domain="post_tag" nicename="forwarding-stub"><![CDATA[Forwarding stub]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[anatomy-of-a-forwarded-record-the-forwarding-stub]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Anatomy of a Forwarded Record & the Forwarding Stub]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Anatomy of a Forwarded Record &amp; the Back Pointer</title>
		<link>http://improve.dk/anatomy-of-a-forwarded-record-ndash-the-back-pointer/</link>
		<pubDate>Thu, 09 Jun 2011 20:09:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/06/08/anatomy-of-a-forwarded-record-the-back-pointer.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Earlier this week I provided some details on the <a href="http://improve.dk/archive/2011/06/07/anatomy-of-a-forwarded-record-ndash-the-forwarding-stub.aspx" target="_blank">forwarding stub that’s left behind</a> when a heap record is forwarded. In this post I’ll look at the second part of a forwarded record – the actual record to which the forwarding stub points.</p>

<h2>What’s in a forwarded record?</h2>

<p>A forwarded record is just like a normal record, only with a couple of minor differences.</p>

<p>For one, the record type (read from bits 1-3 of the first record status byte, see <a href="http://improve.dk/archive/2011/06/07/anatomy-of-a-forwarded-record-ndash-the-forwarding-stub.aspx" target="_blank">the earlier post</a>
for details) is changed to BlobFragment, decimal value 4. This is important to note when scanning data – as all blob fragment records should be ignored. Instead, blob fragments will automatically be read whenever we scan the forwarding stub which points to the blob fragment. Scanning both directly would result in the records being read twice.</p>

<p>The second part being that there’s an extra variable length column stored in the record. This last variable length column is not part of the table schema, it’s actually a special pointer called the back pointer. The back pointer points back to the <font color="#444444">forwarding stub that points to this record. This makes it easy to find the original record location, given the blob fragment location. When a blob fragment shrinks in size, we can easily check whether it might fit on the original page again. It’s also used if the blob fragment size increases and we therefore might need to allocate it on a new page. In that case, we’ll have to go back to the</font>forwarding stub and change it so it points to the new location.</p>

<p>The naïve implementation would be to just replace the blob fragment with another forwarding stub, thus creating a chain of forwarding stubs, eventually pointing to the forwarded record itself. However, this is not the case - SQL Server will never chain forwarding stubs.</p>

<h2>Parsing the forwarded record</h2>

<p>To check out the back pointer storage format, I’ve reused the table sample from the <a href="http://improve.dk/archive/2011/06/07/anatomy-of-a-forwarded-record-ndash-the-forwarding-stub.aspx" target="_blank">last post</a>. Thus we’ve got a forwarding stub on page (1:114) pointing to the forwarded record on page (1:118). Let’s try and parse the forwarded record at (1:118:0):</p>

<p><strong><font color="#ff0000">3200</font><font color="#0000ff">0800</font><font color="#9b00d3">02000000</font><font color="#008000">0200</font></strong><font color="#a5a5a5"><strong>0002 009913a3 93 &lt;snip 5.000 x 0x62&gt; 00047200 00000100 0100</strong></font></p>

<ul>
	<li><font face="Lucida Sans Unicode"><font color="#ff0000"><strong>3200<br /></strong></font>The first two bytes are the two status bytes, indicating that this is a blob fragment record, it’s got a null bitmap and it’s got variable length columns.         <br /><br /></font></li>
	<li><font face="Lucida Sans Unicode"><font color="#0000ff"><strong>0800<br /></strong></font><font color="#000000">The next two bytes indicates the total length of the fixed length portion of this record.<br /><br /></font></font></li>
	<li><font face="Lucida Sans Unicode"><font color="#9b00d3"><strong>02000000<br /></strong></font><font color="#000000">Next up is the first and only fixed length column, an integer field with a decimal value of 2.<br /><br /></font></font></li>
	<li><font face="Lucida Sans Unicode"><font color="#804000"><font color="#008000"><strong>0200<br /></strong></font></font><font color="#000000">Indicates the total number of columns in this record – decimal value 2.</font></font><br /></li>
</ul>

<p><font color="#a5a5a5" /></p>

<p><strong><font color="#a5a5a5">32000800 02000000 0200</font><font color="#ff0000">00</font><font color="#0000ff">02 00</font><font color="#9b00d3">9913a3</font><font color="#9b00d3">93</font><font color="#008000">&lt;snip 5.000 x 0x62&gt;</font></strong><font color="#a5a5a5"><strong>00047200 00000100 0100</strong></font></p>

<ul>
	<li><font face="Lucida Sans Unicode"><font color="#ff0000"><strong>00<br /></strong></font><font color="#000000">The next byte is the null bitmap. As there are no nullable columns in this table, no columns have a null bit set, thus the value of 0.</font><br /><br /></font></li>
	<li><font face="Lucida Sans Unicode"><font color="#0000ff"><strong>0200<br /></strong></font><font color="#000000">The next two bytes specify the number of variable length columns contained in the record. Hold up - this doesn’t add up! The total number of columns was two, and we’ve got a single fixed length column. So how can there be two variable length columns, adding up to a total of three columns? This extra variable length column is the special back pointer field, as we’ll look at in just a bit.</font><br /><br /></font></li>
	<li><font face="Lucida Sans Unicode"><font color="#9b00d3"><strong>9913a393<br /></strong></font><font color="#000000">The next four bytes, in pairs of two, is the variable length column offset array. They hold the offsets (and thus the length) of each variable length field. The first offset is 0x1399 = 5.017. The second offset is a bit more tricky. 0x93a3 has a decimal value of 37.795, clearly above the valid threshold. If we convert that value to binary, we get a value of 0b1001001110100011. No variable column length offset will ever need the high order bit and it’s thus used as an indicator for a pointer column – just like it’s used to indicate a row-overflow pointer. If we flip the high order bit, we get a value of 0b0001001110100011 = 5.027. Subtracting 5.017 from 5.027 gives us a column size of 10 bytes – the size of the back pointer.</font><br /><br /></font></li>
	<li><font face="Lucida Sans Unicode"><font color="#008000"><strong>5.000 x 0x62<br /></strong></font><font color="#000000">I’ve snipped the next 5.000 bytes as those are just 5.000 ‘b’s repeated – the data in the Data column.</font></font></li>
</ul>

<h2>The back pointer format</h2>

<p><font color="#000000">The remaining 10 bytes make up the back pointer:</font></p>

<p><font color="#a5a5a5"><strong>32000800 02000000 02000002 009913a3 93 &lt;snip 5.000 x 0x62&gt; </strong><strong><font color="#ff0000">0004</font><font color="#0000ff">7200 0000</font><font color="#9b00d3">0100</font> <font color="#008000">0100</font></strong></font></p>

<ul>
	<li><font color="#000000"><font face="Lucida Sans Unicode"><font color="#ff0000"><strong>0004<br /></strong></font>The first two bytes indicates the special column ID with a decimal value of 1.024, indicating that it’s a back pointer.<br /><br /></font></font></li>
	<li><font color="#000000"><font face="Lucida Sans Unicode"><font color="#0000ff"><strong>72000000<br /></strong></font>Is the beginning of the back pointer page location. 0x72 = 114 in decimal, which is the page ID of the referencing forwarding stub.<br /><br /></font></font></li>
	<li><font color="#000000"><font face="Lucida Sans Unicode"><font color="#9b00d3"><strong>0100<br /></strong></font>Indicates the file ID with a decimal value of 1.<br /><br /></font></font></li>
	<li><font color="#000000"><font face="Lucida Sans Unicode"><font color="#008000"><strong>0100<br /></strong></font>Finally the last two bytes indicates the slot number with a decimal value of 1.</font></font></li>
</ul>

<p><font color="#000000" /></p>

<p><font color="#000000">And so, with the above, we’ve now parsed the complete forwarded record. We can conclude that the back pointer takes up a total of 10 bytes, in this case pointing to the slot (<font color="#9b00d3"><strong>1</strong></font>:<font color="#0000ff"><strong>114</strong></font>:<font color="#008000"><strong>1</strong></font>)</font></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1353</wp:post_id>
		<wp:post_date>2011-06-09 22:09:45</wp:post_date>
		<wp:post_date_gmt>2011-06-09 20:09:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>anatomy-of-a-forwarded-record-ndash-the-back-pointer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="back-pointer"><![CDATA[Back pointer]]></category>
		<category domain="post_tag" nicename="forwarded-records-2"><![CDATA[Forwarded records]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Anatomy of a Forwarded Record & the Back Pointer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[anatomy-of-a-forwarded-record-the-back-pointer]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Avoiding Regressions in OrcaMDF by System Testing</title>
		<link>http://improve.dk/avoiding-regressions-in-orcamdf-by-system-testing/</link>
		<pubDate>Tue, 14 Jun 2011 19:16:15 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/06/13/avoiding-regressions-in-orcamdf-by-system-testing.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I continue to add new features &amp; support for new data structures in <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">OrcaMDF</a>, the risk of <a href="http://en.wikipedia.org/wiki/Software_regression" target="_blank">regressions</a> increase. Especially so as I’m developing in a largely unknown field, given that I can’t plan for structures and relations that I do not yet know about. To reduce the risk of regressions, testing is an obvious need.</p>

<h2>Unit testing</h2>

<p><a href="http://en.wikipedia.org/wiki/Unit_testing" target="_blank">Unit testing</a> is the process of testing the smallest parts of the code, which would be functions in object oriented programming. A sample test for the <a href="https://github.com/improvedk/OrcaMDF/blob/694dd0cff213dc48b5153b040a41fdc707914680/src/OrcaMDF.Core/Engine/SqlTypes/SqlBigInt.cs" target="_blank">SqlBigInt</a> data type parsing class could look like this:</p>

<pre lang="csharp" escaped="true">using System;
using NUnit.Framework;
using OrcaMDF.Core.Engine.SqlTypes;

namespace OrcaMDF.Core.Tests.Engine.SqlTypes
{
	[TestFixture]
	public class SqlBigIntTests
	{
		[Test]
		public void GetValue()
		{
			var type = new SqlBigInt();
			byte[] input;

			input = new byte[] { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F };
			Assert.AreEqual(9223372036854775807, Convert.ToInt64(type.GetValue(input)));

			input = new byte[] { 0x82, 0x5A, 0x03, 0x1B, 0xD5, 0x3E, 0xCD, 0x71 };
			Assert.AreEqual(8200279581513702018, Convert.ToInt64(type.GetValue(input)));

			input = new byte[] { 0x7F, 0xA5, 0xFC, 0xE4, 0x2A, 0xC1, 0x32, 0x8E };
			Assert.AreEqual(-8200279581513702017, Convert.ToInt64(type.GetValue(input)));
		}

		[Test]
		public void Length()
		{
			var type = new SqlBigInt();

			Assert.Throws&lt;ArgumentException&gt;(() =&gt; type.GetValue(new byte[9]));
			Assert.Throws&lt;ArgumentException&gt;(() =&gt; type.GetValue(new byte[7]));
		}
	}
}</pre>

<p>This tests the main entrypoints for the SqlBigInt class, testing for over/underflow of the long bigint data type, as well as checking the length. This works great for simple classes like SqlBigInt. Unit testing more complex interrelated classes requires infrastructure support for mocking out called methods, related classes, etc. While this is a working strategy, it arguably requires some effort, especially at the early stage of a project where the architecture is dynamic.</p>

<h2>System testing</h2>

<p>On the other end of the spectrum, we have <a href="http://en.wikipedia.org/wiki/System_testing" target="_blank">system testing</a>. System testing seeks to test the system as a whole, largely ignoring the inner workings of either system, which merits a categorization as <a href="http://en.wikipedia.org/wiki/Black_box_testing" target="_blank">black-box testing</a>. In the case of OrcaMDF I’ve estimated that I can catch 90% of all regressions using just 10% of the time, compared to unit testing which would have the reverse properties. As such, it’s a great way to test during development, while allowing for the introduction of key unit &amp; integration tests as necessary.</p>

<p>Say I wanted to test the parsing of user table names in the <a href="https://github.com/improvedk/OrcaMDF/blob/694dd0cff213dc48b5153b040a41fdc707914680/src/OrcaMDF.Core/MetaData/DatabaseMetaData.cs" target="_blank">DatabaseMetaData</a> class, I could mock the values of the SysObjects list, while also mocking <a href="https://github.com/improvedk/OrcaMDF/blob/694dd0cff213dc48b5153b040a41fdc707914680/src/OrcaMDF.Core/Engine/MdfFile.cs" target="_blank">MdfFile</a> as that’s a require parameter for the constructor. To do that, I’d have to extract MdfFile into an interface and use a mocking framework on top of that.</p>

<p>Taking the system testing approach, I’m instead performing the following workflow:</p>

<ul>
	<li><span style="font-family: 'Lucida Sans Unicode';">Connect to a running SQL Server.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Create test schema in the fixture setup.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Detach the database.</span></li>
	<li><span style="font-family: 'Lucida Sans Unicode';">Run OrcaMDF on the detached .mdf file and validate the results.</span></li>
</ul>

<p>A sample test, creating two user tables and validating the output from the DatabaseMetaData, looks like this:</p>

<pre lang="csharp" escaped="true">using System.Data.SqlClient;
using NUnit.Framework;
using OrcaMDF.Core.Engine;

namespace OrcaMDF.Core.Tests.Integration
{
	public class ParseUserTableNames : SqlServerSystemTest
	{
		[Test]
		public void ParseTableNames()
		{
			using(var mdf = new MdfFile(MdfPath))
			{
				var metaData = mdf.GetMetaData();

				Assert.AreEqual(2, metaData.UserTableNames.Length);
				Assert.AreEqual("MyTable", metaData.UserTableNames[0]);
				Assert.AreEqual("XYZ", metaData.UserTableNames[1]);
			}
		}

		protected override void RunSetupQueries(SqlConnection conn)
		{
			var cmd = new SqlCommand(@"
				CREATE TABLE MyTable (ID int);
				CREATE TABLE XYZ (ID int);", conn);
			cmd.ExecuteNonQuery();
		}
	}
}</pre>

<p>This allows for extremely quick testing of actual real life scenarios. Want to test the parsing of forwarded records? Simply create a new test, write the T-SQL code to generate the desired database state and then validate the scanned table data.</p>

<h2>The downside to system testing</h2>

<p>Unfortunately system testing is no panacea; it has its downsides. The most obvious one is performance. A unit test is usually required to run extremely fast, allowing you to basically run them in the background on each file save. Each of these system tests takes about half a second to run, being CPU bound. Fortunately, they can be run in parallel without problems. On a quad core machine that’ll allow me to run 480 tests per minute. This’ll allow a manageable test time for a complete test set, while still keeping a subset test very quick. Usually a code change won’t impact more than handful of tests.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1354</wp:post_id>
		<wp:post_date>2011-06-14 21:16:15</wp:post_date>
		<wp:post_date_gmt>2011-06-14 19:16:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>avoiding-regressions-in-orcamdf-by-system-testing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="nunit"><![CDATA[NUnit]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="system-testing"><![CDATA[System testing]]></category>
		<category domain="category" nicename="testing"><![CDATA[Testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Avoiding Regressions in OrcaMDF by System Testing]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting Bit by Datetime Rounding or Why 23:59:59.999 &lt; &#039;23:59:59.999&#039;</title>
		<link>http://improve.dk/getting-bit-by-datetime-rounding-or-why-235959-999-ltgt/</link>
		<pubDate>Thu, 16 Jun 2011 18:45:51 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/06/15/getting-bit-by-datetime-rounding-or-why-235959-999-235959-999.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Earlier today I was doing some ad-hoc querying to retrieve some numbers for the month of May. Not giving it deeper thought, I made a simple query like this:</p>

<pre lang="tsql" escaped="true">SELECT
	SUM(SomeColumn)
FROM
	SomeTable
WHERE
	SomeDatetime BETWEEN '2011-05-01' AND '2011-05-31 23:59:59.999'</pre>

<p>Much to my surprise, the last rows looked like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/06/image_2.png"><img class="alignnone size-full wp-image-2219" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/06/image_2.png" width="135" height="132" /></a></div></div>

<p>Why in the world are results from June included when I had an explicit predicate limiting the results to May? The answer can be found in one of my <a href="http://improve.dk/archive/2011/05/10/parsing-dates-in-orcamdf.aspx" target="_blank">earlier posts on parsing dates</a>. As SQL Server stores the millisecond part of a datetime with a precision of 1/300th of a second, with .997 being the highest possible stored value. .998 will be rounded down to .997 while .999 will be rounded up – causing a rollover of the day part.</p>

<p>Let’s setup a simple sample data set:</p>

<pre lang="tsql" escaped="true">CREATE TABLE DateTest
(
	ID int,
	Created datetime
)

INSERT INTO
	DateTest (ID, Created)
VALUES 
	(1, '2011-05-31 23:59:59.996'),
	(2, '2011-05-31 23:59:59.997'),
	(3, '2011-05-31 23:59:59.998'),
	(4, '2011-05-31 23:59:59.999')</pre>

<p>Performing my simple query reveals the same problem as earlier today:</p>

<pre lang="tsql" escaped="true">SELECT
	*
FROM
	DateTest
WHERE
	Created BETWEEN '2011-05-01' AND '2011-05-31 23:59:59.999'</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/06/image_4.png"><img class="alignnone size-full wp-image-2220" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/06/image_4.png" width="196" height="125" /></a></div></div>

<p>Row number 4 is inserted with a date of 2011-06-01 00:00:00.000 since the .999 millisecond part causes a day rollover. Equally, the .999 value causes the last predicate part to be interpreted as 2011-06-01 00:00:00.000 during the CONVERT_IMPLICIT conversion.</p>

<p>A simple rewrite of the query guarantees to return just the results we want:</p>

<pre lang="tsql" escaped="true">SELECT
	*
FROM
	DateTest
WHERE
	Created &gt;= '2011-05-01' AND Created &lt; '2011-06-01'</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/06/image_10.png"><img class="alignnone size-full wp-image-2221" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/06/image_10.png" width="204" height="111" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1355</wp:post_id>
		<wp:post_date>2011-06-16 20:45:51</wp:post_date>
		<wp:post_date_gmt>2011-06-16 18:45:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-bit-by-datetime-rounding-or-why-235959-999-ltgt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[getting-bit-by-datetime-rounding-or-why-235959-999-235959-999]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Getting Bit by Datetime Rounding or Why 23:59:59.999 &lt; &#039;23:59:59.999&#039;]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presenting a Precon at SQLBits</title>
		<link>http://improve.dk/presenting-a-precon-at-sqlbits/</link>
		<pubDate>Thu, 30 Jun 2011 21:12:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/06/29/presenting-a-precon-at-sqlbits.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm honored to announce that I’ll be presenting my <em><a href="http://sqlbits.com/information/Event9/SQL_Server_Storage_Engine_and_MDF_File_Internals/TrainingDetails.aspx" target="_blank">SQL Server Storage Engine and MDF File Internals</a></em> precon at <a href="http://sqlbits.com/" target="_blank">SQLBits</a> on September 29th. It’s an amazing bunch of <a href="http://sqlbits.com/information/TrainingDay.aspx" target="_blank">precon sessions and presenters</a>, I didn’t think I’d be speaking at SQLBits, much less presenting a precon – given the lineup of speakers.</p>

<img style="margin: 15px; display: inline; float: right; box-shadow: none" alt="SQLBits" src="http://sqlbits.com/images/SQLBits/ImGoingToSqlBits200.png" align="right" />

<h2>So what will I be presenting?</h2>

<p>Let me start out with the official abstract:</p>

<blockquote>Join me for a journey into the depths of the SQL Server storage engine. Through a series of lectures and demonstrations we'll look at the internals of pages, data types, indexes, heaps, extent &amp; page allocation, allocation units, system views, base tables and nightmarish ways of data recovery. We'll look at several storage structures that are either completely undocumented or very scarcely so.  By the end of the day, not only will you know about the most important data structures in SQL Server, you'll also be able to parse every bit of a SQL Server data file yourself, using just a hex editor! There will be lots of hands on demos, a few of them performed in C# to demonstrate the parsing of data files outside of SQL Server.</blockquote>

<p>It all stems from some experimental coding I did back in March, trying to parse SQL Server data pages using C#. What started out as a learning experiment resulted in me presenting on the <em><a href="http://mow2011.dk/speakers/mark-s-rasmussen.aspx" target="_blank">Anatomy of an MDF File</a></em> at the <a href="http://mow2011.dk/mow2011.aspx" target="_blank">Miracle Open World 2011</a> conference in April. Since then I’ve continued my experiment and officially christened it <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> while opening up the source.</p>

<p>During my research for OrcaMDF I’ve reverse engineered data structures, matched up various undocumented base tables and generally achieved a really great understanding of the storage engine and MDF file format. It’s my goal that attendees of my session will have a complete (well, almost) understanding of the on disk structures we’ll see in typical databases. Not just by looking at them through DBCC PAGE, but by taking it a couple of steps further by attempting to parse the contents by hand. You’ll get an understanding of the importance of the sys.sysallocunits base table and how that fuels all metadata in SQL Server.</p>

<p>For the full agenda, please check the official <a href="http://sqlbits.com/information/Event9/SQL_Server_Storage_Engine_and_MDF_File_Internals/TrainingDetails.aspx" target="_blank">precon description</a>. If you have any questions about the content that you’d like to clear up before signing up for either mine or one of the other precons available, I encourage you to leave a comment here or grab a hold of <a href="http://twitter.com/#!/improvedk" target="_blank">me on Twitter</a>.</p>

<h2>Prerequisites</h2>

<p>While I will give brief introductions to the main concepts, I will assume a solid knowledge of what SQL Server does. I won’t spend a long time explaining why you should use clustered tables over heaps, instead I’ll give you the toolset to hopefully make that decision yourself. I’m not exaggerating when I classified the precon as level 500 – there will be 300 content too but we’ll be peaking at 500 several times during the day. We will be looking at hex codes, converting between decimal, hex and binary as needed – so make sure you don’t throw up when you see binary numbers :)</p>

<h2>Registration</h2>

<p>Registration hasn’t opened yet, but <a href="http://www.sqlbits.com/information/Pricing.aspx">sign up and you’ll be notified</a> as soon as it opens. A three day conference, including a precon day for just £375 really is a steal so make sure to get the early bind discount! I still can’t fathom that Saturday is free, as in £0, no charge – that’s too good an offer to pass up!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1356</wp:post_id>
		<wp:post_date>2011-06-30 23:12:40</wp:post_date>
		<wp:post_date_gmt>2011-06-30 21:12:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-a-precon-at-sqlbits</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Presenting a Precon at SQLBits]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1058</wp:comment_id>
			<wp:comment_author><![CDATA[Mogens Heller Grabe]]></wp:comment_author>
			<wp:comment_author_email>mookid8000@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mookid.dk/oncode</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-06-30 11:49:01</wp:comment_date>
			<wp:comment_date_gmt>2011-06-30 11:49:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Contrats! - that is awesome news!<br /><br />I'm sorry, but I throw up when I see binary numbers, so I'll most likely not attend your session. Also, I'm not going to SQLBits ;)<br /><br />But I wish you luck!<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1059</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-03 20:31:47</wp:comment_date>
			<wp:comment_date_gmt>2011-07-03 20:31:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I so hope I'll be able to make it. If not, I'm still grateful to SQLBits, because it's only through them that I've discovered your blog. Yummy internals!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1060</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-04 14:34:06</wp:comment_date>
			<wp:comment_date_gmt>2011-07-04 14:34:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to hear that, and I certainly hope to see you too at SQLBits - nothing better than discussing internals :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1061</wp:comment_id>
			<wp:comment_author><![CDATA[mazzz in Leeds]]></wp:comment_author>
			<wp:comment_author_email>mazzz.in.Leeds@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mazzz-in-leeds.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-05 11:25:37</wp:comment_date>
			<wp:comment_date_gmt>2011-07-05 11:25:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm extrememly rusty on the hex side - would reading up on conversion suffice? Or would you recommend any other aspect to read up on?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1062</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-05 11:33:08</wp:comment_date>
			<wp:comment_date_gmt>2011-07-05 11:33:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I wouldn't worry too much - I'll be introducing the concept of converting between decimal, hex and binary numbers briefly. Through the day, most conversions will be done using a calculator and any actual use will mostly be for pattern matching :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Determining the Uniquifier Column Ordinal for Clustered and Nonclustered Indexes</title>
		<link>http://improve.dk/determining-the-uniquifier-column-ordinal-for-clustered-and-nonclustered-indexes/</link>
		<pubDate>Wed, 06 Jul 2011 21:05:34 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/06/determining-the-uniquifier-column-ordinal-for-clustered-and-nonclustered-indexes.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Lately I’ve been working on nonclustered index parsing. One of my test cases proved to be somewhat more tricky than I’d anticipated, namely the parsing of nonclustered indexes for non-unique clustered tables. Working with non-unique clustered indexes, we’ll have to take care of <a href="http://www.mssqltips.com/tip.asp?tip=2082" target="_blank">uniquifiers</a> when necessary.</p>

<h2>The setup</h2>

<p>Using an empty database I create the following schema and insert two rows. Note that the clustered index is created on the (ID, Name) columns and will thus have uniquifiers inserted since my rows aren’t unique. Also note that I’m intentionally creating a schema that will cause all three allocation unit types to be created – IN_ROW_DATA by default, LOB_DATA for the text column and finally ROW_OVERFLOW_DATA due to the overflowing varchar filler columns. This won’t serve any practical purpose besides being eye candy when looking at the data :)</p>

<pre escaped="true" lang="tsql">-- Create schema
CREATE TABLE Test
(
	ID int,
	Name varchar(10),
	FillerA varchar(8000) DEFAULT(REPLICATE('x', 5000)),
	FillerB varchar(8000) DEFAULT(REPLICATE('y', 5000)),
	Data text DEFAULT ('')
)
CREATE CLUSTERED INDEX CX_ID_Name ON Test (ID, Name)
CREATE NONCLUSTERED INDEX IX_ID ON Test (ID)

-- Insert dummy data
INSERT INTO
	Test (ID, Name)
VALUES
	(1, 'Mark'),
	(1, 'Mark')</pre>

<h2>Verifying the presence of uniquifiers in the clustered index</h2>

<p>Running a quick DBCC IND on the Test table’s clustered index in the database (I’ve named mine ‘Y’ – I’m lazy), demonstrates the allocation of three allocation unit types as well as their tracking IAM pages.</p>

<pre escaped="true" lang="tsql">DBCC IND (Y, 'Test', 1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_23.png"><img class="alignnone size-full wp-image-2486" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_23.png" width="766" height="218" /></a></div></div>

<p>What we’re interested in are the two data pages of the clustered index – pages (1:89) and (1:114) in my case. Dumping the contents using dump style 3 shows that both have uniquifiers – one with a NULL value (interpreted as zero) and the other with a value of 1.</p>

<pre escaped="true" lang="tsql">DBCC TRACEON (3604)
DBCC PAGE (Y, 1, 89, 3)
DBCC PAGE (Y, 1, 114, 3)</pre>

<pre escaped="true" lang="tsql">-- Page (1:89)

Slot 0 Column 0 Offset 0x0 Length 4 Length (physical) 0
UNIQUIFIER = 0                       

Slot 0 Column 1 Offset 0x4 Length 4 Length (physical) 4
ID = 1                               

Slot 0 Column 2 Offset 0x17 Length 4 Length (physical) 4
Name = Mark

&lt;snip&gt;     

-- Page (1:114)

Slot 0 Column 0 Offset 0x17 Length 4 Length (physical) 4
UNIQUIFIER = 1                       

Slot 0 Column 1 Offset 0x4 Length 4 Length (physical) 4
ID = 1                               

Slot 0 Column 2 Offset 0x1b Length 4 Length (physical) 4
Name = Mark                          

&lt;snip&gt;</pre>

<p>Notice how both are represented as slot 0 – this is because they stem from different pages, I’ve just cut out everything but the uniquifier column interpretation of the DBCC PAGE results. Also note how the first record doesn’t have any physical uniquifier value, while the second one uses 4 bytes. Finally make note that the uniquifier columns both reside at column ordinal 0.</p>

<h2>Comparing the uniquifiers in the nonclustered index</h2>

<p>Now we’ll run DBCC IND to find the single index page for the nonclustered index – page (1:93) in my case (the uniquifier will only be present in the leaf level index pages – which is all we’ve got in this case).</p>

<pre escaped="true" lang="tsql">DBCC IND (Y, 'Test', 2)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_82.png"><img class="alignnone size-full wp-image-2487" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/07/image_82.png" width="750" height="90" /></a></div></div>

<p>Dumping the contents of an index page using style 3 works differently for index pages – it returns a table resultset. It does confirm the presence of the uniquifier as well as our clustered index key columns (ID, Name) though:</p>

<pre escaped="true" lang="tsql">DBCC PAGE (Y, 1, 93, 1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_62.png"><img class="alignnone size-full wp-image-2488" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/07/image_62.png" width="521" height="86" /></a></div></div>

<p>Dumping in style 1 reveals the byte contents of the two rows, which is exactly what we need to locate the uniquifier:</p>

<pre escaped="true" lang="tsql">DBCC PAGE (Y, 1, 93, 1)</pre>

<pre escaped="true" lang="tsql">Slot 0, Offset 0x60, Length 16, DumpStyle BYTE

Record Type = INDEX_RECORD           Record Attributes =  NULL_BITMAP VARIABLE_COLUMNS
Record Size = 16                     
Memory Dump @0x0000000009DEC060

0000000000000000:   36010000 00030000 01001000 4d61726b †6...........Mark 

Slot 1, Offset 0x70, Length 22, DumpStyle BYTE

Record Type = INDEX_RECORD           Record Attributes =  NULL_BITMAP VARIABLE_COLUMNS
Record Size = 22                     
Memory Dump @0x0000000009DEC070

0000000000000000:   36010000 00030000 02001200 16004d61 †6.............Ma 
0000000000000010:   726b0100 0000††††††††††††††††††††††††rk....</pre>

<p>Notice how the second record is 6 bytes larger than the first. This is caused by the presence of the uniquifier on the second record. Since the uniquifier is stored as a 4 byte integer in the variable length section, we also need 2 extra bytes for storing the length of the uniquifier in the variable length column offset array – thus causing a total overhead of 6. The primary difference however, lies in the fact that the uniquifier is stored as the last variable length column in the nonclustered index (the 0100 0000 part of the second record), while in the clustered index data page it was stored as the first variable length column. This discrepancy is what caused me headaches when trying to parse both page types – I needed a way of determining what column ordinal the uniquifiers had for both the clustered and the nonclustered index.</p>

<h2>Locating the uniquifier in a clustered index</h2>

<p>Thankfully there’s a plethora of DMVs to look in, it’s just a matter of finding the right ones. Let’s start out by querying sys.objects to get the object id of our table:</p>

<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.objects
WHERE
	Name = 'Test'</pre>
<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_102.png"><img class="alignnone size-full wp-image-2490" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/07/image_102.png" width="414" height="70" /></a></div></div>

Armed with the object id, we can find the default partitions for our clustered and nonclustered indexes:
<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.partitions
WHERE
	object_id = 293576084</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_122.png"><img class="alignnone size-full wp-image-2491" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/07/image_122.png" width="527" height="86" /></a></div></div>

<p>Armed with the partition id, we can find the partition columns for our clustered index (index_id = 1):</p>

<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.system_internals_partition_columns
WHERE
	partition_id = 72057594040483840</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_161.png"><img class="alignnone size-full wp-image-2492" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/07/image_161.png" width="1024" height="165" /></a></div></div>

<p>Now would you take a look at that marvelous is_uniquifier column (we’ll ignore the alternative spelling for now). Using this output we can see that the first row is the uniquifier – being the third part of our clustered key (key_ordinal = 3). The leaf_offset column specifies the physical order in the record, fixed length columns being positive and variable length columns being negative. This confirms what we saw earlier, that the uniquifier is the first variable length column stored, with the remaining columns coming in at leaf offset –2, –3, –4 and –5.</p>

<h2>Locating the uniquifier in a nonclustered index</h2>

<p>Well that was easy, let’s just repeat that using the partition id of our nonclustered index (index_id = 2):</p>

<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.system_internals_partition_columns
WHERE
	partition_id = 72057594040549376</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_181.png"><img class="alignnone size-full wp-image-2493" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/07/image_181.png" width="1024" height="105" /></a></div></div>

<p>But what’s this, curses! For nonclustered indexes, the is_uniquifier column is not set, even though we can see there are three columns in our nonclustered index (the explicitly included ID, the implicitly included Name column that’s part of the clustered index key as well as the uniquifier which is also part of the clustered index key). So now we know that the uniquifier is shown in the result set, we just can’t trust the is_uniquifier column. However – to the best of my knowledge no other integer columns are stored as a variable length column, besides the uniquifier. Thus, we can add a predicate to the query returning just integers (system_type_id = 56) with negative leaf_offsets:</p>

<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.system_internals_partition_columns
WHERE
	partition_id = 72057594040549376 AND
	system_type_id = 56 AND
	leaf_offset &lt; 0</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_141.png"><img class="alignnone size-full wp-image-2494" alt="image_14" src="http://improve.dk/wp-content/uploads/2011/07/image_141.png" width="1024" height="65" /></a></div></div>

<p>And that’s it, we now have the uniquifier column offset in the variable length part of our nonclustered index record!</p>

<h2>The pessimistic approach</h2>

<p>As I can’t find any info guaranteeing that the uniquifier is the only integer stored in the variable length part of a record, I came up with a secondary way of finding the uniquifier column offset. This method is way more cumbersome though and I won’t go into complete details. We’ll start out by retrieving all columns in the nonclustered index that are not explicitly part of the nonclustered index itself (by removing all rows present in sys.index_columns for the index):</p>

<pre escaped="true" lang="tsql">DECLARE @TableName sysname = 'Test'
DECLARE @NonclusteredIndexName sysname = 'IX_ID'

SELECT
	i.index_id,
	pc.*
FROM
	sys.objects o
INNER JOIN
	sys.indexes i ON i.object_id = o.object_id
INNER JOIN
	sys.partitions p ON p.object_id = o.object_id AND p.index_id = i.index_id
INNER JOIN
	sys.system_internals_partition_columns pc on pc.partition_id = p.partition_id
WHERE
	o.name = @TableName AND
	i.name = @NonclusteredIndexName AND
	NOT EXISTS (SELECT * FROM sys.index_columns WHERE object_id = o.object_id AND index_id = i.index_id AND key_ordinal = pc.key_ordinal)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_201.png"><img class="alignnone size-full wp-image-2495" alt="image_20" src="http://improve.dk/wp-content/uploads/2011/07/image_201.png" width="988" height="88" /></a></div></div>

<p>These are the remaining columns that are stored as the physical part of the index record. Given that they’re not part of the index definition itself, these are the columns that make up the remainder of the clustered key – the <em>Name</em> and <em>Unuiquifier</em> columns in this example.</p>

<p>Now we can perform the same query for the clustered index, though this time only filtering away those that are not part of the key itself (that is, key_ordinal &gt; 0):</p>

<pre escaped="true" lang="tsql">DECLARE @TableName sysname = 'Test'
DECLARE @NonclusteredIndexName sysname = 'CX_ID_Name'

SELECT
	i.index_id,
	pc.*
FROM
	sys.objects o
INNER JOIN
	sys.indexes i ON i.object_id = o.object_id
INNER JOIN
	sys.partitions p ON p.object_id = o.object_id AND p.index_id = i.index_id
INNER JOIN
	sys.system_internals_partition_columns pc on pc.partition_id = p.partition_id
WHERE
	o.name = @TableName AND
	i.name = @NonclusteredIndexName AND
	key_ordinal &gt; 0
ORDER BY
	key_ordinal</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_221.png"><img class="alignnone size-full wp-image-2496" alt="image_22" src="http://improve.dk/wp-content/uploads/2011/07/image_221.png" width="984" height="109" /></a></div></div>

<p>At this point we can compare these two result sets from the highest key_ordinal and downwards. Basically we just need to find the first match between the uniquifier column in the clustered index output and the assumed uniquifier column in the nonclustered index output. Until my assumption of the uniquifier being the only variable length integer, I wouldn’t recommend using this method though.</p>

<h2>The hardcore approach – using base tables</h2>

<p>All those DMV’s certainly are nifty, but I just can’t help but feel I’m cheating. Let’s try and redo the optimistic (uniquifier being the only variable length integer) approach without using DMVs. Start out by connecting to your database using the <a href="http://msdn.microsoft.com/en-us/library/ms178068.aspx" target="_blank">dedicated administrator connection</a>, this will allow you to query the base tables:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_241.png"><img class="alignnone size-full wp-image-2497" alt="image_24" src="http://improve.dk/wp-content/uploads/2011/07/image_241.png" width="416" height="311" /></a></div></div>

<p>We'll start out by querying sys.sysschobjs, which is basically the underlying table for sys.objects:</p>

<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.sysschobjs
WHERE
	name = 'Test'</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_26.png"><img class="alignnone size-full wp-image-2498" alt="image_26" src="http://improve.dk/wp-content/uploads/2011/07/image_26.png" width="711" height="68" /></a></div></div>

<p>Now we’ll query sys.sysrowsets, which is basically the underlying table for sys.partitions. In the base tables, idmajor is the column name we commonly know as object_id and idminor is what we’d usually know as index_id:</p>

<pre escaped="true" lang="tsql">SELECT
	*
FROM
	sys.sysrowsets
WHERE
	idmajor = 293576084</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_281.png"><img class="alignnone size-full wp-image-2499" alt="image_28" src="http://improve.dk/wp-content/uploads/2011/07/image_281.png" width="1020" height="89" /></a></div></div>

<p>Checking out the row with idminor = 2, we’ve now got the rowsetid (partition id) of our nonclustered index. Now we just need to find the columns for the index – and that’s just what sys.sysrscols is for, the base table behind sys.system_internals_partition_columns:</p>

<pre escaped="true" lang="tsql">SELECT
	*,
	CAST(CAST(offset &amp; 0xFFFF AS binary(2)) AS smallint) AS leaf_offset
FROM
	sys.sysrscols
WHERE
	rsid = 72057594040549376</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_30.png"><img class="alignnone size-full wp-image-2500" alt="image_30" src="http://improve.dk/wp-content/uploads/2011/07/image_30.png" width="880" height="111" /></a></div></div>

<p>Note that the leaf_offset column isn’t persisted as an easily read value – it’s actually stored as an integer in the offset column. The offset column stores not only the value for the leaf_offset column but also for the internal_offset column – we just have to do some masking and conversion to get it out.</p>

<p>The following query helps to show exactly what we’re doing to extract the leaf_offset value from the offset column value:</p>

<pre escaped="true" lang="tsql">SELECT
	offset,
	CAST(CAST(offset &amp; 0xFFFF AS binary(2)) AS smallint) AS leaf_offset,
	CAST(offset AS binary(4)) AS HexValue,
	CAST(offset &amp; 0xFFFF AS binary(4)) AS MaskedHexValue,
	CAST(offset &amp; 0xFFFF AS binary(2)) AS ShortenedMaskedHexValue
FROM
	sys.sysrscols
WHERE
	rsid = 72057594040549376</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_36.png"><img class="alignnone size-full wp-image-2501" alt="image_36" src="http://improve.dk/wp-content/uploads/2011/07/image_36.png" width="482" height="104" /></a></div></div>

<p>The HexValue shows the offset column value represented in hex – no magic yet. After applying the 0xFFFF bitmask (0b1111111111111111 in binary), only the first 16 bits / 2 (starting from the right since we’re little endian) bytes will keep their value. Converting to binary(2) simply discards the last two bytes (the 0x0000 part).</p>

<p>0x0001 is easily converted to the decimal value 1. 0xFFFF and 0xFFFE correspond to the decimal values 65.535 and 65.534 respectively. The way storing smallints work, 0 is stored as 0x0, 32.767 is stored as 0x7FFF and from there on the decimal value rolls over into –32.768 with a hex value of 0x8000 – continuing all the way up the –1 = 0xFFFF. And that’s why we can convert the binary(2) representations of the offset columns into the –1 and –2 decimal values.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1357</wp:post_id>
		<wp:post_date>2011-07-06 21:05:34</wp:post_date>
		<wp:post_date_gmt>2011-07-06 21:05:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>determining-the-uniquifier-column-ordinal-for-clustered-and-nonclustered-indexes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="post_tag" nicename="dynamic-management-views"><![CDATA[Dynamic management views]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="uniquifier"><![CDATA[Uniquifier]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Determining the Uniquifier Column Ordinal for Clustered and Nonclustered Indexes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Converting Between Base 2, 10 and 16 in T-SQL</title>
		<link>http://improve.dk/converting-between-base-2-10-and-16-in-t-sql/</link>
		<pubDate>Mon, 11 Jul 2011 20:08:10 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/10/converting-between-base-2-10-and-16-in-t-sql.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>There are many <a href="http://en.wikipedia.org/wiki/List_of_numeral_systems" target="_blank">numeral systems</a>, the most common ones in computer science being <a href="http://en.wikipedia.org/wiki/Binary_numeral_system" target="_blank">binary</a> (base 2), <a href="http://en.wikipedia.org/wiki/Decimal" target="_blank">decimal</a> (base 10) and <a href="http://en.wikipedia.org/wiki/Hexadecimal" target="_blank">hexadecimal</a> (base 16). All numbers can be expressed in either system and you may now and then need to convert between them.</p>

<p>Take the number 493.202.384 as an example, it can be be expressed as either 0n493202384 in decimal, 0x1D65ABD0 in hexadecimal or 0b11101011001011010101111010000 in binary. Note how the 0n prefix declares a decimal value, 0x a hexadecimal and 0b a binary value.</p>

<h2>Converting using Google</h2>

<p>If you’ve got an internet connection, the quickest and simplest way is often to just use Google. We can convert the above number using “in X” queries:</p>

<p><a href="http://www.google.dk/search?sourceid=chrome&amp;ie=UTF-8&amp;q=493202384+in+hex" target="_blank">493202384 in hex</a><br />
<a href="http://www.google.dk/search?sourceid=chrome&amp;ie=UTF-8&amp;q=493202384+in+binary" target="_blank">493202384 in binary</a></p>

<h2>Converting using Windows Calculator</h2>

<p>You can also open Windows Calculator, switch to the programmer mode and type in the decimal value (or the hex/binary value):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_25.png"><img class="alignnone size-full wp-image-2503" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_25.png" width="423" height="388" /></a></div></div>

<p>And from then on we can just switch the numerical system selector to the left:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_43.png"><img class="alignnone size-full wp-image-2504" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/07/image_43.png" width="423" height="388" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_63.png"><img class="alignnone size-full wp-image-2505" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/07/image_63.png" width="423" height="388" /></a></div></div>

<h2>Converting between decimal &amp; hex in T-SQL</h2>

<p>Sometimes however, it’s just a tad easier if we could do it directly from a T-SQL query. Converting between decimal and hexadecimal is straightforward and can be done using just built in functions:</p>

<pre lang="tsql" escaped="true">-- Decimal to hex
SELECT CAST(493202384 AS varbinary)

-- Hex to decimal
SELECT CAST(0x1D65ABD0 AS int)

-- Decimal to hex to decimal
SELECT CAST(CAST(493202384 AS varbinary) AS int)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_84.png"><img class="alignnone size-full wp-image-2506" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/07/image_84.png" width="181" height="176" /></a></div></div>

<h2>Converting binary to decimal using T-SQL</h2>

<p>Converting to/from binary is a bit more tricky though, as there are no built in functions for formatting a decimal number as a binary string, nor converting the latter to the first.</p>

<p>The following function takes in a binary string and returns a bigint with the decimal value:</p>

<pre lang="tsql" escaped="true">CREATE FUNCTION [dbo].[BinaryToDecimal]
(
	@Input varchar(255)
)
RETURNS bigint
AS
BEGIN

	DECLARE @Cnt tinyint = 1
	DECLARE @Len tinyint = LEN(@Input)
	DECLARE @Output bigint = CAST(SUBSTRING(@Input, @Len, 1) AS bigint)

	WHILE(@Cnt &lt; @Len) BEGIN
		SET @Output = @Output + POWER(CAST(SUBSTRING(@Input, @Len - @Cnt, 1) * 2 AS bigint), @Cnt)

		SET @Cnt = @Cnt + 1
	END

	RETURN @Output	

END</pre>

<p>The function looks at each char in the input string (starting from behind), adding POWER(2, @Cnt) to the result if the bit is set – with special handling of the first (that is, from behind) character since POWER(2, 0) is 1 while we need it to be 0.</p>

<p>Usage is straight forward:</p>

<pre lang="tsql" escaped="true">SELECT dbo.BinaryToDecimal('11101011001011010101111010000')</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_182.png"><img class="alignnone size-full wp-image-2507" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/07/image_182.png" width="159" height="74" /></a></div></div>

<h2>Converting decimal to binary using T-SQL</h2>

<p>The following function takes a bigint as input and returns a varchar with the binary representation, using the <a href="http://www.wikihow.com/Convert-from-Decimal-to-Binary" target="_blank">short division by two with remainder</a> algorithm:</p>

<pre lang="tsql" escaped="true">CREATE FUNCTION [dbo].[DecimalToBinary]
(
	@Input bigint
)
RETURNS varchar(255)
AS
BEGIN

	DECLARE @Output varchar(255) = ''

	WHILE @Input &gt; 0 BEGIN

		SET @Output = @Output + CAST((@Input % 2) AS varchar)
		SET @Input = @Input / 2

	END

	RETURN REVERSE(@Output)

END</pre>

<p>Again usage is straight forward:</p>

<pre lang="tsql" escaped="true">SELECT dbo.DecimalToBinary(493202384)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_123.png"><img class="alignnone size-full wp-image-2509" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/07/image_123.png" width="241" height="84" /></a></div></div>

<h2>Ensuring correctness</h2>

<p>A simple test to ensure correct conversions would be to convert from A to B and back to A again, using both of the above functions. Thus whatever we give as input should be the output as well:</p>

<pre lang="tsql" escaped="true">SELECT dbo.DecimalToBinary(dbo.BinaryToDecimal('11101011001011010101111010000'))
SELECT dbo.BinaryToDecimal(dbo.DecimalToBinary(493202384))</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_202.png"><img class="alignnone size-full wp-image-2510" alt="image_20" src="http://improve.dk/wp-content/uploads/2011/07/image_202.png" width="239" height="141" /></a></div></div>

<p>Et voilá! Once we have the functions, they can easily be used in a normal query:</p>

<pre lang="tsql" escaped="true">SELECT
	object_id,
	CAST(object_id AS varbinary) AS object_id_hex,
	dbo.DecimalToBinary(object_id) AS object_id_binary
FROM
	sys.objects</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_162.png"><img class="alignnone size-full wp-image-2511" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/07/image_162.png" width="462" height="319" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1358</wp:post_id>
		<wp:post_date>2011-07-11 22:08:10</wp:post_date>
		<wp:post_date_gmt>2011-07-11 20:08:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>converting-between-base-2-10-and-16-in-t-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="binary"><![CDATA[Binary]]></category>
		<category domain="post_tag" nicename="conversion"><![CDATA[Conversion]]></category>
		<category domain="post_tag" nicename="decimal"><![CDATA[Decimal]]></category>
		<category domain="post_tag" nicename="hexadecimal"><![CDATA[Hexadecimal]]></category>
		<category domain="category" nicename="tricks"><![CDATA[Tricks]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Converting Between Base 2, 10 and 16 in T-SQL]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1063</wp:comment_id>
			<wp:comment_author><![CDATA[robert matthew cook]]></wp:comment_author>
			<wp:comment_author_email>sqlmashup@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sqlmashup.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-13 20:59:42</wp:comment_date>
			<wp:comment_date_gmt>2011-07-13 20:59:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mark thank you for the functions.<br /><br />while working with sql 2000 i had to do some binary conversion.  the encapsulation into a function is a nice touch.<br /><br />played with cte for fun to get something working without the explicit while loop but performance may be worse...<br /><br />;with table_64_bit as<br />	(<br />		select CONVERT(varchar(64), '0') as bit_check, CONVERT(bigint, 0) as decimal_value<br />		union all<br />		select CONVERT(varchar(64), '1%'), CONVERT(bigint, 1)<br />		union all<br />		select CONVERT(varchar(64), REPLACE(SPACE(LEN(bit_check)-1), ' ', '_') + '1%'), CONVERT(bigint, POWER(CONVERT(bigint, 2), LEN(bit_check)-1)) from table_64_bit where LEN(bit_check) between 2 and 63<br />	)<br /><br />select<br />	from_binary, sum(decimal_value) as to_decimal<br />from<br />	table_64_bit<br />join<br />	(select '11101011001011010101111010000' as from_binary) as fake_table on reverse(from_binary) like bit_check<br />group by<br />	from_binary;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1064</wp:comment_id>
			<wp:comment_author><![CDATA[mdlueck]]></wp:comment_author>
			<wp:comment_author_email>wurlitzer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-16 17:16:21</wp:comment_date>
			<wp:comment_date_gmt>2012-02-16 17:16:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In a SQL Server 2008 R2 context...<br /><br />Is it possible to SQL SELECT WHERE value is &quot;Binary AND a particular Binary number&quot;?<br /><br />I am storing various bit mask data as a Base 10 number in a table column.<br /><br />With said value, I run a VBA Binary AND upon the stored number to determine if a particular bit is 1/0, thus I know the state of that attribute value.<br /><br />Is there some way to have SQL Server select based on that same scenario... only select records where the stored value is true of &quot;AND 8&quot; as example? I would need returned all records where the 8 bit is true of the Base 10 number. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1065</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-16 23:11:15</wp:comment_date>
			<wp:comment_date_gmt>2012-02-16 23:11:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[mdlueck,<br /><br />Sure, you can use bitmasking directly in your where query. If you want to select all records with the second bit set, you can do:<br /><br />SELECT * FROM sys.databases WHERE database_id &amp; 2 = 2<br /><br />And if you need the second and fifth bits set, you just need to convert the binary into decimal like so:<br />10010 = 18<br /><br />And then query like this:<br /><br />SELECT * FROM sys.databases WHERE database_id &amp; 18 = 18<br /><br />Just note that this'll render any indexes useless so it'll always result in a scan of the binary column, and whatever other indexes are needed to retrieve the desired columns.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1066</wp:comment_id>
			<wp:comment_author><![CDATA[mdlueck]]></wp:comment_author>
			<wp:comment_author_email>wurlitzer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-17 14:48:27</wp:comment_date>
			<wp:comment_date_gmt>2012-02-17 14:48:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&quot;&amp; 2 = 2&quot; hhhmmm... Looks a bit odd. It will take my mind some time to get around that syntax. (The need to double provide the decimal representation of the binary mask.) Thanks for the quick reply.<br /><br />Ack that such will force a table scan. I would have expected that. Neat to hear that such is possible. Thanks! :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1067</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-17 15:12:14</wp:comment_date>
			<wp:comment_date_gmt>2012-02-17 15:12:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Optimally you'd store the bitmask contents as normal bit fields - it'd take up the same, and possibly even less, space. That'd mean you could index the bit columns and avoid the scans. If you've got legacy though, this should allow you to work with it :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1068</wp:comment_id>
			<wp:comment_author><![CDATA[mdlueck]]></wp:comment_author>
			<wp:comment_author_email>wurlitzer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-17 17:49:33</wp:comment_date>
			<wp:comment_date_gmt>2012-02-17 17:49:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Re: &quot;as normal bit fields&quot;<br /><br />Rather than unnecessarily widen a table, and have to add cols when ever I need to keep track of &quot;one more permission&quot; I simply pack all of the perm mask into a single Base 10 integer number. I have plenty of extra space for the foreseeable future... &quot;not that many additional perms that would need to be tracked&quot;.<br /><br />The unique twist came that &quot;find me all records with XYZ perm set&quot;... which means that the database would need to be able to do the same Binary And function that is able to be done via standard programming languages.<br /><br />So, I opt towards leaving the DB schema alone longer (until the first perm mask col runes out of space).]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1069</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-17 17:56:01</wp:comment_date>
			<wp:comment_date_gmt>2012-02-17 17:56:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The thing is, assuming you're storing your value in an integer - that takes up a fixed 4 bytes, no matter if you're storing 0 or 32 bit flags.<br /><br />A bit column will take up 1, rounded up to nearest multiple of 8. One bit column = 1 byte. Seven bit columns = 1 byte. Nine bit columns = 2 bytes, etc.<br /><br />If you use a tinyint to avoid the overhead of an int, make sure you plan for it when you have to convert that to a smallint so support 9+ flags.<br /><br />What happens when flag 2 is suddenly deprecated - will you reuse that bit in your bitmask? If you want to reuse it, you'll have to update all records to clear that bit. Make sure to plan for it.<br /><br />By using bit columns, you can add now bit values for free as it's a metadata operation. You can clear old ones for free as it's a metadata operation. You can reference the flags by name instead of bit index - and avoid the whole scan issue.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1070</wp:comment_id>
			<wp:comment_author><![CDATA[mdlueck]]></wp:comment_author>
			<wp:comment_author_email>wurlitzer@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-17 20:22:01</wp:comment_date>
			<wp:comment_date_gmt>2012-02-17 20:22:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Agreed. I am erring on the side of packing all of the perms into one column rather than needing to reorg the table each time a new perm is thought of.<br /><br />And I am using int, currently using 6 slots. This is a userid permission table, for an application which at the most will have 100 people using. I think this company can handle 400 bytes in their SQL Server! ;-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SQLBits 9 Voting &amp; Registration Open</title>
		<link>http://improve.dk/sqlbits-9-voting-amp-registration-open/</link>
		<pubDate>Tue, 12 Jul 2011 13:39:48 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/12/sqlbits-9-voting-registration-open.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The <a href="http://sqlbits.com/information/Pricing.aspx" target="_blank">registration for SQLBits 9 is now open</a>.Equally important, the voting for sessions is has also opened. Simply login and take a look at the <a href="http://sqlbits.com/information/PublicSessions.aspx" target="_blank">list of sessions</a> to vote for your preferred sessions.</p>

<h2>My sessions</h2>

<p><img style="margin: 15px; display: inline; float: right;" alt="Training Day" src="http://sqlbits.com/images/SQLBits/SQLBitsTrainingDay.png" align="right" />Besides doing a full day training on the <a href="http://sqlbits.com/information/Event9/SQL_Server_Storage_Engine_and_MDF_File_Internals/TrainingDetails.aspx" target="_blank">SQL Server Storage Engine and MDF File Internals</a>, I’ve also submitted two related sessions that present a subset of the training day material, in a much more dense format. Both sessions are very technical deep dives on the storage internals. If you think they sound interesting, I’d appreciate a vote :)</p>

<h3>Knowing The Internals, Who Needs SQL Server Anyway?</h3>

<p>You're stuck on a remote island with just a laptop and your main database .MDF file. The boss calls and asks you to retrieve some data, but alas, you forgot to install SQL Server on your laptop. Luckily you have a HEX editor by your side!</p>

<p>In this level 500 deep dive session we will go into the intimate details of the MDF file format. Think using DBCC Page is pushing it? Think again! As a learning experiment, I've created an open source parser for MDF files, called OrcaMDF. Using the OrcaMDF parser I'll go through the primary storage structures, how to parse page headers, boot pages, internal system tables, data &amp; index records, b-tree structures as well as the supporting IAM, GAM, SGAM &amp; PFS pages.</p>

<p>Has your database suffered an unrecoverable disk corruption? This session might just be your way out! Using a corrupt &amp; unattachable MDF file, I'll demo how to recover as much data as possible. This session is not for the faint of heart, there will be bits &amp; bytes.</p>

<h3>Demystifying Database Metadata</h3>

<p>You know how to query sys.tables, sys.columns and perhaps even sys.system_internals_allocation_units to discover the metadata contents of a database. But where are these views getting their data from, and how do the core system tables relate?</p>

<p>Based on my work with OrcaMDF, an open source C# parser for MDF files, I will demonstrate how to parse the internal system tables. Using just the boot page as origin, we'll discover how to traverse the chain of references that ultimately end up in references to the actual system table data, from where we can parse the data records.</p>

<p>Once we’ve got the system table data, I’ll demonstrate how to correlate the different tables to end up with the data we see in common system views.</p>

<h2>My picks</h2>

<p><img style="margin: 15px; display: inline; float: right;" alt="Sessions Title" src="http://sqlbits.com/images/headings/Sessions.png" width="286" height="98" align="right" />Having only 10 votes, it’s tough to pick out the top 10 sessions from a list of almost ~150 sessions. Though it was a struggle, I ended up with the following votes:</p>

<p><a href="http://sqlbits.com/Sessions/Event9/Performance_tuning_from_the_field" target="_blank">Performance tuning from the field</a> by Simon Sabin<br />
<a href="http://sqlbits.com/Sessions/Event9/Transaction_Log_Performance_and_Troubleshooting-Deep_Dive" target="_blank">Transaction Log Performance and Troubleshooting – Deep Dive</a> by Chirag Roy<br />
<a href="http://sqlbits.com/Sessions/Event9/SQL_Server_Denali-Always_On_Deep_Dive" target="_blank">SQL Server Denali – Always On Deep Dive</a> by Bob Duffy<br />
<a href="http://sqlbits.com/Sessions/Event9/HA_DR-Focus_on_Options_Comparisons_and_Interoperability" target="_blank">HA/DR – Focus on Options, Comparisons and Interoperability</a> by Chirag Roy<br />
<a href="http://sqlbits.com/Sessions/Event9/READPAST__Furious_Transactions_Locking_and_Isolation" target="_blank">READPAST &amp; Furious: Transactions, Locking and Isolation</a> by Mark Broadbent<br />
<a href="http://sqlbits.com/Sessions/Event9/Preparation_for_Disaster" target="_blank">Preparation for Disaster</a> by Steve Jones<br />
<a href="http://sqlbits.com/Sessions/Event9/Busted_A_journey_into_the_most_common_TSQL__Tuning_myths" target="_blank">Busted! A journey into the most common TSQL &amp; Tuning myths</a> by David Morrison<br />
<a href="http://sqlbits.com/Sessions/Event9/Turbocharge_Database_Recoverability_Performance" target="_blank">Turbocharge Database Recoverability Performance</a> by Chirag Roy<br />
<a href="http://sqlbits.com/Sessions/Event9/Implementing_Real-Time_Data_Warehouse" target="_blank">Implementing Real-Time Data Warehouse</a> by Sutha Thiru<br />
<a href="http://sqlbits.com/Sessions/Event9/Replication-Best_Practices_Troubleshooting__Performance" target="_blank">Replication – Best Practices, Troubleshooting &amp; Performance</a> by Neil Hambly<br /></p>

<p>Not until now did I notice that three of my sessions are by <a href="http://sqlking.wordpress.com/" target="_blank">Chirag Roy</a>, I’ll use this as an opportunity to congratulate him on becoming the latest <a href="http://www.microsoft.com/learning/en/us/certification/master-sql.aspx" target="_blank">Microsoft Certified Master</a>!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1359</wp:post_id>
		<wp:post_date>2011-07-12 15:39:48</wp:post_date>
		<wp:post_date_gmt>2011-07-12 13:39:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlbits-9-voting-amp-registration-open</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sqlbits-9-voting-registration-open]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SQLBits 9 Voting & Registration Open]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1078</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 18:40:59</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 18:40:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Some great sessions on the menu again. Yours and Chirag's were the top of my list! I just hope that the scheduling doesn't pit any of the wonderfully geeky ones against each other.<br /><br />By the way, I'm loving your recent spate of blog posts. Just starting to work my way upwards through them.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1079</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 19:21:41</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 19:21:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool, so you're coming after all? :)<br /><br />I think my recent activity kinda gives away the fact that I'm on vacation :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1080</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 20:47:46</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 20:47:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Definitely Saturday, probably Friday and hopefully Thursday. Just need to get final confirmation around work and domestic arrangements!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Exploring the sys.system_internals_partition_columns.ti Field</title>
		<link>http://improve.dk/exploring-the-sys-system_internals_partition_columns-ti-field/</link>
		<pubDate>Wed, 13 Jul 2011 20:23:39 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/12/exploring-the-sys-system_internals_partition_columns-ti-field.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Running a sp_helptext on the sys.system_internals_partition_columns system view reveals the following internal query:</p>

<pre lang="tsql" escaped="true">SELECT
	c.rsid AS partition_id,  
	c.rscolid AS partition_column_id,  
	c.rcmodified AS modified_count,  
	CASE c.maxinrowlen
		WHEN 0 THEN p.length  
		ELSE c.maxinrowlen
	END AS max_inrow_length,
	CONVERT(BIT, c.status &amp; 1) AS is_replicated,    --RSC_REPLICATED  
	CONVERT(BIT, c.status &amp; 4) AS is_logged_for_replication, --RSC_LOG_FOR_REPL  
	CONVERT(BIT, c.status &amp; 2) AS is_dropped,    --RSC_DROPPED  
	p.xtype AS system_type_id,  
	p.length AS max_length,  
	p.prec AS PRECISION,  
	p.scale AS scale,  
	CONVERT(sysname, CollationPropertyFromId(c.cid, 'name')) AS collation_name,  
	CONVERT(BIT, c.status &amp; 32) AS is_filestream,   --RSC_FILESTREAM  
	c.ordkey AS key_ordinal,  
	CONVERT(BIT, 1 - (c.status &amp; 128)/128) AS is_nullable,  -- RSC_NOTNULL    
	CONVERT(BIT, c.status &amp; 8) AS is_descending_key,  --RSC_DESC_KEY  
	CONVERT(BIT, c.status &amp; 16) AS is_uniqueifier,   --RSC_UNIQUIFIER  
	CONVERT(SMALLINT, CONVERT(BINARY(2), c.offset &amp; 0xffff)) AS leaf_offset,  
	CONVERT(SMALLINT, SUBSTRING(CONVERT(BINARY(4), c.offset), 1, 2)) AS internal_offset,  
	CONVERT(TINYINT, c.bitpos &amp; 0xff) AS leaf_bit_position,  
	CONVERT(TINYINT, c.bitpos/0x100) AS internal_bit_position,  
	CONVERT(SMALLINT, CONVERT(BINARY(2), c.nullbit &amp; 0xffff)) AS leaf_null_bit,  
	CONVERT(SMALLINT, SUBSTRING(CONVERT(BINARY(4), c.nullbit), 1, 2)) AS internal_null_bit,  
	CONVERT(BIT, c.status &amp; 64) AS is_anti_matter,   --RSC_ANTIMATTER  
	CONVERT(UNIQUEIDENTIFIER, c.colguid) AS partition_column_guid,  
	sysconv(BIT, c.status &amp; 0x00000100) AS is_sparse --RSC_SPARSE  
FROM
	sys.sysrscols c
OUTER APPLY
	OPENROWSET(TABLE RSCPROP, c.ti) p</pre>

<p>Nothing too out of the ordinary if you’ve looked at other internal queries. There’s a lot of bitmasking / shifting going on to extract multiple values from the same internal base table fields. One thing that is somewhat convoluted is the OPENROWSET(TABLE RSCPROP, c.ti) p OUTER APPLY being made.</p>

<p>A Google query for “sql server +rscprop” yields absolutely zilch results:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_27.png"><img class="alignnone size-full wp-image-2515" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_27.png" width="783" height="224" /></a></div></div>

<p>Simplifying the query to only show the fields using the fields referring the OPENROWSET (p) results, shows that the scale, precision, max_length, system_type_id and max_inrow_length are either extracted from the ti field value directly or indirectly:</p>

<pre lang="tsql" escaped="true">SELECT
	CASE c.maxinrowlen
		WHEN 0 THEN p.length  
		ELSE c.maxinrowlen
	END AS max_inrow_length,
	p.xtype AS system_type_id,  
	p.length AS max_length,  
	p.prec AS PRECISION,  
	p.scale AS scale,
FROM
	sys.sysrscols c
OUTER APPLY
	OPENROWSET(TABLE RSCPROP, c.ti) p</pre>

<p>To help me identifying the ti field structure, I’ve made a test table using a number of different column types:</p>

<pre lang="tsql" escaped="true">CREATE TABLE TITest
(
	A binary(50),
	B char(10),
	C datetime2(5),
	D decimal(12, 5),
	E float,
	F int,
	G numeric(11, 4),
	H nvarchar(50),
	I nvarchar(max),
	J time(3),
	K tinyint,
	L varbinary(max),
	M varchar(75),
	N text
)</pre>

<p>I’m not going to insert any data as that’s irrelevant for this purpose. For this next part, make sure you’re connected to the SQL Server using the <a href="http://msdn.microsoft.com/en-us/library/ms178068.aspx" target="_blank">Dedicated Administrator Connection</a>. Now let’s query the sysrscols base table to see what values are stored in the ti field for the sample fields we’ve just created:</p>

<pre lang="tsql" escaped="true">-- Get object id of TITest table
SELECT * FROM sys.sysschobjs WHERE name = 'TITest'

-- Get rowset id for TITest
SELECT * FROM sys.sysrowsets WHERE idmajor = 213575799

-- Get all columns for rowset
SELECT * FROM sys.sysrscols WHERE rsid = 72057594040614912</pre>

<p>Besides the fact I’ve cut away some irrelevant columns, this is the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_64.png"><img class="alignnone size-full wp-image-2516" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/07/image_64.png" width="538" height="429" /></a></div></div>

<p>Note how we first get the object ID by querying sysschobjs, then the partition ID by querying sysrowsets and finally the partition columns by querying sysrscols. The marked ti column are the values from which we shall extract the scale, precision, max_length, system_type_id and max_inrow_length values.</p>

<p>The following query will give a better row-by-row comparison between the ti value and the expected end result field values:</p>

<pre lang="tsql" escaped="true">SELECT
	t.name,
	r.ti,
	p.scale,
	p.precision,
	p.max_length,
	p.system_type_id,
	p.max_inrow_length
FROM
	sys.system_internals_partition_columns p
INNER JOIN
	sys.sysrscols r ON
		r.rscolid = p.partition_column_id AND
		r.rsid = p.partition_id
INNER JOIN
	sys.types t ON
		t.system_type_id = p.system_type_id AND
		t.user_type_id = p.system_type_id
WHERE
	partition_id = 72057594040614912</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_103.png"><img class="alignnone size-full wp-image-2517" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/07/image_103.png" width="510" height="314" /></a></div></div>

<h3>binary</h3>

<p>Converting the first system_type_id into hex yields 0n173 = 0xAD. Converting the ti value yields 0n12973 = 0x32AD. An empirical test for all columns shows this to be true for them all. Thus we can conclude that the first byte (printed as the rightmost due to <a href="http://en.wikipedia.org/wiki/Endianness" target="_blank">little endianness</a>) stores the type. Extracting the value requires a simple bitmask operation:</p>

<pre lang="csharp" escaped="true">12973 &amp; 0x000000FF == 173</pre>

<p>As for the length, the second byte stores the value 0x32 = 0n50. As the length is a smallint (we know it can be up to 8000, thus requiring at least a smallint), we can assume the next two bytes cover that. To extract that value, we’ll need a bitmask, as well as a shift operation to shift the two middlemost bytes one step to the right:</p>

<pre lang="csharp" escaped="true">(12973 &amp; 0x00FFFF00) &gt;&gt; 8 == 50</pre>

<h3>datetime2</h3>

<p>This is the same for the char field. The datetime2 field is different as it stores the scale and precision values. 0n1322 in hex yields a value of 0x52A. 0x2A being the type (42). All that remains is the 0x5/0n5 which can only be the scale. A quick with a datetime(7) field yields the same result, though the precision is then 27. Thus I’ll conclude that for the datetime2 type, precision = 20 + scale. Extracting the scale from the second byte requires almost the same operation as before, just with a different bitmask:</p>

<pre lang="csharp" escaped="true">(1322 &amp; 0x0000FF00) &gt;&gt; 8 == 5</pre>

<h3>decimal</h3>

<p>Moving onto decimal, we now have both a scale and a precision to take care of. Converting 0n330858 to hex yields a value of 0x50C6A. 0x6A being the type (106). 0x0C being the precision and finally 0x5 being the scale. Note that this is different from datetime2 – now the scale is stored as the third byte and not the second!</p>

<p>Extracting the third byte as the scale requires a similar bitmask &amp; shift operation as previously:</p>

<pre lang="csharp" escaped="true">(330858 &amp; 0x00FF0000) &gt;&gt; 16 == 5</pre>

<h3>float</h3>

<p>0n62 = 0x3E =&gt; the system_type_id value of 62. Thus the only value stored for the float is the type ID, the rest are a given. The same goes for the int, tinyint and similar fixed length field types.</p>

<h3>numeric</h3>

<p>0n265068 = 0x40B6C. 0x6C = the type ID of 108. 0xB = the precision value of 11. 0x4 = the scale value of 4.</p>

<h3>nvarchar &amp; nvarchar(max)</h3>

<p>These are a bit special too. Looking at the first nvarchar(100) field we can convert 0n25832 to 0x64E7. 0xE7 being the type ID of 231. 0x64 being the length of 100, stored as a two byte smallint. This shows that the parsing of non-max (n)varchar fields is pretty much in line with the rest so far.</p>

<p>The nvarchar(max) differs in that it only stores the type ID, there’s no length. Given the lack of a length (technically the invalid length of 0 is stored), we read it as being –1, telling us that it’s a LOB/MAX field being stored with a max_length of –1 and a maximum in_row length of 8000, provided it’s not stored off-row.</p>

<p>Varbinary seems to follow the exact same format.</p>

<h3>time</h3>

<p>0n809 = 0x329. 0x29 = the type ID of 41. 0x3 being the scale of 3. As with the datetime2 field, the precision scales with the scale (pun only slightly intended) – precision = 9 + scale.</p>

<h3>text</h3>

<p>0n4131 = 0x1023. 0x23 = the type ID of 35. 0x10 being the max_length of 16. The reason the text type has a max_length of 16 is that text is a LOB type that will always be stored off row, leaving just a 16 byte pointer in the record where it’s logically stored.</p>

<h2>Conclusion</h2>

<p>The OPENROWSET(TABLE RSCPROP, x) obviously performs some dark magic. The ti field is an integer that’s used to store multiple values &amp; formats, depending on the row type. Thus, to parse this properly, a switch would have to be made. Certain types also take values for a given – the precision fields based on the scale value, float having a fixed precision of 53 etc. It shouldn’t be long before I have a commit ready for <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> that’ll contain this parsing logic :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1360</wp:post_id>
		<wp:post_date>2011-07-13 22:23:39</wp:post_date>
		<wp:post_date_gmt>2011-07-13 20:23:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>exploring-the-sys-system_internals_partition_columns-ti-field</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="post_tag" nicename="dmv"><![CDATA[DMV]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Exploring the sys.system_internals_partition_columns.ti Field]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creating a Type Aware Parser for the sys.system_internals_partition_columns.ti Field</title>
		<link>http://improve.dk/creating-a-type-aware-parser-for-the-sys-system_internals_partition_columns-ti-field/</link>
		<pubDate>Wed, 13 Jul 2011 01:37:20 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/13/creating-a-type-aware-parser-for-the-sys-system_internals_partition_columns-ti-field.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Based on my findings <a href="http://improve.dk/archive/2011/07/13/exploring-the-sys-system_internals_partition_columns-ti-field.aspx" target="_blank">exploring the sys.system_internals_partition_columns.ti field</a>, I needed parser that could extract the scale, precision, max_length as well as the max_inrow_length fields from it. The tricky part is that those values are stored differently for each individual type, added onto the fact that some types have hardcoded defaults that are not stored in the ti field, even though there’s space for it.</p>

<p>As a result of some reverse engineering and empirical testing, I’ve made a SysrscolTIParser class that takes in the ti value (I have no idea what the acronym stands for – type information perhaps?), determines the type and parses it corresponding to the type. I won’t go into details as that’s all described in my <a href="http://improve.dk/archive/2011/07/13/exploring-the-sys-system_internals_partition_columns-ti-field.aspx" target="_blank">previous post</a>.</p>

<pre lang="csharp" escaped="true">using System;
using OrcaMDF.Core.MetaData.Enumerations;

namespace OrcaMDF.Core.MetaData
{
	public class SysrscolTIParser
	{
		public byte Scale;
		public byte Precision;
		public short MaxLength;
		public short MaxInrowLength;
		public int TypeID;

		public SysrscolTIParser(int ti)
		{
			TypeID = ti &amp; 0xFF;

			if (!Enum.IsDefined(typeof(SystemType), TypeID))
				throw new ArgumentException("Unknown TypeID '" + TypeID + "'");

			switch((SystemType)TypeID)
			{
				case SystemType.Bigint:
					MaxLength = MaxInrowLength = 8;
					Precision = 19;
					break;

				// All CLR types internally stored as varbinaries
				//case SystemType.Geography:
				//case SystemType.Geometry:
				//case SystemType.Hierarchyid:
				case SystemType.Varbinary:
				// Also covers SystemType.Sysname
				case SystemType.Nvarchar:
				case SystemType.Binary:
				case SystemType.Char:
				case SystemType.Nchar:
				case SystemType.Image:
				case SystemType.Ntext:
				case SystemType.Text:
				case SystemType.Varchar:
				case SystemType.Xml:
					MaxLength = (short)((ti &amp; 0xFFFF00) &gt;&gt; 8);
					if (MaxLength == 0)
					{
						MaxLength = -1;
						MaxInrowLength = 8000;
					}
					else
						MaxInrowLength = MaxLength;
					break;

				case SystemType.Bit:
					MaxLength = MaxInrowLength = Precision = 1;
					break;

				case SystemType.Date:
					Precision = 10;
					MaxLength = MaxInrowLength = 3;
					break;

				case SystemType.Datetime:
					Scale = 3;
					Precision = 23;
					MaxLength = MaxInrowLength = 8;
					break;

				case SystemType.Datetime2:
					Scale = (byte)((ti &amp; 0xFF00) &gt;&gt; 8);
					Precision = (byte)(20 + Scale);
					if (Scale &lt; 3)
						MaxLength = MaxInrowLength = 6;
					else if (Scale &lt; 5)
						MaxLength = MaxInrowLength = 7;
					else
						MaxLength = MaxInrowLength = 8;
					break;

				case SystemType.DatetimeOffset:
					Scale = (byte)((ti &amp; 0xFF00) &gt;&gt; 8);
					Precision = (byte)(26 + (Scale &gt; 0 ? Scale + 1 : Scale));
					if (Scale &lt; 3)
						MaxLength = MaxInrowLength = 8;
					else if (Scale &lt; 5)
						MaxLength = MaxInrowLength = 9;
					else
						MaxLength = MaxInrowLength = 10;
					break;

				case SystemType.Decimal:
				case SystemType.Numeric:
					Precision = (byte)((ti &amp; 0xFF00) &gt;&gt; 8);
					Scale = (byte)((ti &amp; 0xFF0000) &gt;&gt; 16);
					if (Precision &lt; 10)
						MaxLength = MaxInrowLength = 5;
					else if (Precision &lt; 20)
						MaxLength = MaxInrowLength = 9;
					else if (Precision &lt; 29)
						MaxLength = MaxInrowLength = 13;
					else
						MaxLength = MaxInrowLength = 17;
					break;

				case SystemType.Float:
					Precision = 53;
					MaxLength = MaxInrowLength = 8;
					break;
					
				case SystemType.Int:
					Precision = 10;
					MaxLength = MaxInrowLength = 4;
					break;

				case SystemType.Money:
					Scale = 4;
					Precision = 19;
					MaxLength = MaxInrowLength = 8;
					break;

				case SystemType.Real:
					Precision = 24;
					MaxLength = MaxInrowLength = 4;
					break;

				case SystemType.Smalldatetime:
					Precision = 16;
					MaxLength = MaxInrowLength = 4;
					break;

				case SystemType.Smallint:
					Precision = 5;
					MaxLength = MaxInrowLength = 2;
					break;

				case SystemType.Smallmoney:
					Scale = 4;
					Precision = 10;
					MaxLength = MaxInrowLength = 4;
					break;

				case SystemType.Sql_Variant:
					MaxLength = MaxInrowLength = 8016;
					break;

				case SystemType.Time:
					Scale = (byte)((ti &amp; 0xFF00) &gt;&gt; 8);
					Precision = (byte)(8 + (Scale &gt; 0 ? Scale + 1 : Scale));
					if (Scale &lt; 3)
						MaxLength = MaxInrowLength = 3;
					else if (Scale &lt; 5)
						MaxLength = MaxInrowLength = 4;
					else
						MaxLength = MaxInrowLength = 5;
					break;

				case SystemType.Timestamp:
					MaxLength = MaxInrowLength = 8;
					break;

				case SystemType.Tinyint:
					Precision = 3;
					MaxLength = MaxInrowLength = 1;
					break;

				case SystemType.Uniqueidentifier:
					MaxLength = MaxInrowLength = 16;
					break;

				default:
					throw new ArgumentException("TypeID '" + TypeID + "' not supported.");
			}
		}
	}
}</pre>

<p>It uses a SystemType enumeration for switching between the types (sorry, formatting isn’t being nice to me here):</p>

<pre lang="csharp" escaped="true">namespace OrcaMDF.Core.MetaData.Enumerations
{
	public enum SystemType
	{
		Image				= 34,
		Text				= 35,
		Uniqueidentifier		= 36,
		Date				= 40,
		Time				= 41,
		Datetime2			= 42,
		DatetimeOffset			= 43,
		Tinyint				= 48,
		Smallint			= 52,
		Int				= 56,
		Smalldatetime			= 58,
		Real				= 59,
		Money				= 60,
		Datetime			= 61,
		Float				= 62,
		Sql_Variant			= 98,
		Ntext				= 99,
		Bit				= 104,
		Decimal				= 106,
		Numeric				= 108,
		Smallmoney			= 122,
		Bigint				= 127,
		Hierarchyid			= 240,
		Geometry			= 240,
		Geography			= 240,
		Varbinary			= 165,
		Varchar				= 167,
		Binary				= 173,
		Char				= 175,
		Timestamp			= 189,
		Nvarchar			= 231,
		Nchar				= 239,
		Xml				= 241,
		Sysname				= 231
	}
}</pre>

<p>And last, but not least, a bunch of tests to verify the functionality:</p>

<pre lang="csharp" escaped="true">using NUnit.Framework;
using OrcaMDF.Core.MetaData;

namespace OrcaMDF.Core.Tests.MetaData
{
	[TestFixture]
	public class SysrscolTIParserTests
	{
		[Test]
		public void Bigint()
		{
			var parser = new SysrscolTIParser(127);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(19, parser.Precision);
			Assert.AreEqual(8, parser.MaxLength);
			Assert.AreEqual(127, parser.TypeID);
			Assert.AreEqual(8, parser.MaxInrowLength);
		}

		[Test]
		public void Binary()
		{
			var parser = new SysrscolTIParser(12973);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(50, parser.MaxLength);
			Assert.AreEqual(173, parser.TypeID);
			Assert.AreEqual(50, parser.MaxInrowLength);
		}

		[Test]
		public void Bit()
		{
			var parser = new SysrscolTIParser(104);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(1, parser.Precision);
			Assert.AreEqual(1, parser.MaxLength);
			Assert.AreEqual(104, parser.TypeID);
			Assert.AreEqual(1, parser.MaxInrowLength);
		}

		[Test]
		public void Char()
		{
			var parser = new SysrscolTIParser(2735);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(10, parser.MaxLength);
			Assert.AreEqual(175, parser.TypeID);
			Assert.AreEqual(10, parser.MaxInrowLength);
		}

		[Test]
		public void Date()
		{
			var parser = new SysrscolTIParser(40);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(10, parser.Precision);
			Assert.AreEqual(3, parser.MaxLength);
			Assert.AreEqual(40, parser.TypeID);
			Assert.AreEqual(3, parser.MaxInrowLength);
		}

		[Test]
		public void Datetime()
		{
			var parser = new SysrscolTIParser(61);
			Assert.AreEqual(3, parser.Scale);
			Assert.AreEqual(23, parser.Precision);
			Assert.AreEqual(8, parser.MaxLength);
			Assert.AreEqual(61, parser.TypeID);
			Assert.AreEqual(8, parser.MaxInrowLength);
		}

		[Test]
		public void Datetime2()
		{
			var parser = new SysrscolTIParser(1834);
			Assert.AreEqual(7, parser.Scale);
			Assert.AreEqual(27, parser.Precision);
			Assert.AreEqual(8, parser.MaxLength);
			Assert.AreEqual(42, parser.TypeID);
			Assert.AreEqual(8, parser.MaxInrowLength);

			parser = new SysrscolTIParser(810);
			Assert.AreEqual(3, parser.Scale);
			Assert.AreEqual(23, parser.Precision);
			Assert.AreEqual(7, parser.MaxLength);
			Assert.AreEqual(42, parser.TypeID);
			Assert.AreEqual(7, parser.MaxInrowLength);
		}

		[Test]
		public void Datetimeoffset()
		{
			var parser = new SysrscolTIParser(1835);
			Assert.AreEqual(7, parser.Scale);
			Assert.AreEqual(34, parser.Precision);
			Assert.AreEqual(10, parser.MaxLength);
			Assert.AreEqual(43, parser.TypeID);
			Assert.AreEqual(10, parser.MaxInrowLength);

			parser = new SysrscolTIParser(1067);
			Assert.AreEqual(4, parser.Scale);
			Assert.AreEqual(31, parser.Precision);
			Assert.AreEqual(9, parser.MaxLength);
			Assert.AreEqual(43, parser.TypeID);
			Assert.AreEqual(9, parser.MaxInrowLength);
		}

		[Test]
		public void Decimal()
		{
			var parser = new SysrscolTIParser(330858);
			Assert.AreEqual(5, parser.Scale);
			Assert.AreEqual(12, parser.Precision);
			Assert.AreEqual(9, parser.MaxLength);
			Assert.AreEqual(106, parser.TypeID);
			Assert.AreEqual(9, parser.MaxInrowLength);

			parser = new SysrscolTIParser(396138);
			Assert.AreEqual(6, parser.Scale);
			Assert.AreEqual(11, parser.Precision);
			Assert.AreEqual(9, parser.MaxLength);
			Assert.AreEqual(106, parser.TypeID);
			Assert.AreEqual(9, parser.MaxInrowLength);
		}

		[Test]
		public void Float()
		{
			var parser = new SysrscolTIParser(62);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(53, parser.Precision);
			Assert.AreEqual(8, parser.MaxLength);
			Assert.AreEqual(62, parser.TypeID);
			Assert.AreEqual(8, parser.MaxInrowLength);
		}

		[Test]
		public void Varbinary()
		{
			var parser = new SysrscolTIParser(165);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(-1, parser.MaxLength);
			Assert.AreEqual(165, parser.TypeID);
			Assert.AreEqual(8000, parser.MaxInrowLength);

			parser = new SysrscolTIParser(228517);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(892, parser.MaxLength);
			Assert.AreEqual(165, parser.TypeID);
			Assert.AreEqual(892, parser.MaxInrowLength);
		}

		[Test]
		public void Image()
		{
			var parser = new SysrscolTIParser(4130);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(16, parser.MaxLength);
			Assert.AreEqual(34, parser.TypeID);
			Assert.AreEqual(16, parser.MaxInrowLength);
		}

		[Test]
		public void Int()
		{
			var parser = new SysrscolTIParser(56);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(10, parser.Precision);
			Assert.AreEqual(4, parser.MaxLength);
			Assert.AreEqual(56, parser.TypeID);
			Assert.AreEqual(4, parser.MaxInrowLength);
		}

		[Test]
		public void Money()
		{
			var parser = new SysrscolTIParser(60);
			Assert.AreEqual(4, parser.Scale);
			Assert.AreEqual(19, parser.Precision);
			Assert.AreEqual(8, parser.MaxLength);
			Assert.AreEqual(60, parser.TypeID);
			Assert.AreEqual(8, parser.MaxInrowLength);
		}

		[Test]
		public void Nchar()
		{
			var parser = new SysrscolTIParser(5359);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(20, parser.MaxLength);
			Assert.AreEqual(239, parser.TypeID);
			Assert.AreEqual(20, parser.MaxInrowLength);
		}

		[Test]
		public void Ntext()
		{
			var parser = new SysrscolTIParser(4195);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(16, parser.MaxLength);
			Assert.AreEqual(99, parser.TypeID);
			Assert.AreEqual(16, parser.MaxInrowLength);
		}

		[Test]
		public void Numeric()
		{
			var parser = new SysrscolTIParser(265580);
			Assert.AreEqual(4, parser.Scale);
			Assert.AreEqual(13, parser.Precision);
			Assert.AreEqual(9, parser.MaxLength);
			Assert.AreEqual(108, parser.TypeID);
			Assert.AreEqual(9, parser.MaxInrowLength);

			parser = new SysrscolTIParser(135020);
			Assert.AreEqual(2, parser.Scale);
			Assert.AreEqual(15, parser.Precision);
			Assert.AreEqual(9, parser.MaxLength);
			Assert.AreEqual(108, parser.TypeID);
			Assert.AreEqual(9, parser.MaxInrowLength);
		}

		[Test]
		public void Nvarchar()
		{
			var parser = new SysrscolTIParser(25831);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(100, parser.MaxLength);
			Assert.AreEqual(231, parser.TypeID);
			Assert.AreEqual(100, parser.MaxInrowLength);

			parser = new SysrscolTIParser(231);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(-1, parser.MaxLength);
			Assert.AreEqual(231, parser.TypeID);
			Assert.AreEqual(8000, parser.MaxInrowLength);
		}

		[Test]
		public void Real()
		{
			var parser = new SysrscolTIParser(59);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(24, parser.Precision);
			Assert.AreEqual(4, parser.MaxLength);
			Assert.AreEqual(59, parser.TypeID);
			Assert.AreEqual(4, parser.MaxInrowLength);
		}

		[Test]
		public void Smalldatetime()
		{
			var parser = new SysrscolTIParser(58);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(16, parser.Precision);
			Assert.AreEqual(4, parser.MaxLength);
			Assert.AreEqual(58, parser.TypeID);
			Assert.AreEqual(4, parser.MaxInrowLength);
		}

		[Test]
		public void Smallint()
		{
			var parser = new SysrscolTIParser(52);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(5, parser.Precision);
			Assert.AreEqual(2, parser.MaxLength);
			Assert.AreEqual(52, parser.TypeID);
			Assert.AreEqual(2, parser.MaxInrowLength);
		}

		[Test]
		public void Smallmoney()
		{
			var parser = new SysrscolTIParser(122);
			Assert.AreEqual(4, parser.Scale);
			Assert.AreEqual(10, parser.Precision);
			Assert.AreEqual(4, parser.MaxLength);
			Assert.AreEqual(122, parser.TypeID);
			Assert.AreEqual(4, parser.MaxInrowLength);
		}

		[Test]
		public void Sql_Variant()
		{
			var parser = new SysrscolTIParser(98);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(8016, parser.MaxLength);
			Assert.AreEqual(98, parser.TypeID);
			Assert.AreEqual(8016, parser.MaxInrowLength);
		}

		[Test]
		public void Text()
		{
			var parser = new SysrscolTIParser(4131);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(16, parser.MaxLength);
			Assert.AreEqual(35, parser.TypeID);
			Assert.AreEqual(16, parser.MaxInrowLength);
		}

		[Test]
		public void Time()
		{
			var parser = new SysrscolTIParser(1833);
			Assert.AreEqual(7, parser.Scale);
			Assert.AreEqual(16, parser.Precision);
			Assert.AreEqual(5, parser.MaxLength);
			Assert.AreEqual(41, parser.TypeID);
			Assert.AreEqual(5, parser.MaxInrowLength);

			parser = new SysrscolTIParser(1065);
			Assert.AreEqual(4, parser.Scale);
			Assert.AreEqual(13, parser.Precision);
			Assert.AreEqual(4, parser.MaxLength);
			Assert.AreEqual(41, parser.TypeID);
			Assert.AreEqual(4, parser.MaxInrowLength);
		}

		[Test]
		public void Timestamp()
		{
			var parser = new SysrscolTIParser(189);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(8, parser.MaxLength);
			Assert.AreEqual(189, parser.TypeID);
			Assert.AreEqual(8, parser.MaxInrowLength);
		}

		[Test]
		public void Tinyint()
		{
			var parser = new SysrscolTIParser(48);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(3, parser.Precision);
			Assert.AreEqual(1, parser.MaxLength);
			Assert.AreEqual(48, parser.TypeID);
			Assert.AreEqual(1, parser.MaxInrowLength);
		}

		[Test]
		public void Uniqueidentifier()
		{
			var parser = new SysrscolTIParser(36);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(16, parser.MaxLength);
			Assert.AreEqual(36, parser.TypeID);
			Assert.AreEqual(16, parser.MaxInrowLength);
		}

		[Test]
		public void Varchar()
		{
			var parser = new SysrscolTIParser(12967);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(50, parser.MaxLength);
			Assert.AreEqual(167, parser.TypeID);
			Assert.AreEqual(50, parser.MaxInrowLength);

			parser = new SysrscolTIParser(167);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(-1, parser.MaxLength);
			Assert.AreEqual(167, parser.TypeID);
			Assert.AreEqual(8000, parser.MaxInrowLength);
		}

		[Test]
		public void Xml()
		{
			var parser = new SysrscolTIParser(241);
			Assert.AreEqual(0, parser.Scale);
			Assert.AreEqual(0, parser.Precision);
			Assert.AreEqual(-1, parser.MaxLength);
			Assert.AreEqual(241, parser.TypeID);
			Assert.AreEqual(8000, parser.MaxInrowLength);
		}
	}
}</pre>

<p>All of this is just one big giant bit of infrastructure I needed to implement to get my scanning of nonclustered indexes working. As soon as I’ve got that up and running, all of this, plus a lot more, will be committed &amp; pushed to the <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF repo</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1361</wp:post_id>
		<wp:post_date>2011-07-13 01:37:20</wp:post_date>
		<wp:post_date_gmt>2011-07-13 01:37:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-a-type-aware-parser-for-the-sys-system_internals_partition_columns-ti-field</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dmv"><![CDATA[DMV]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[Testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Creating a Type Aware Parser for the sys.system_internals_partition_columns.ti Field]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Identifying Complex Columns in Records</title>
		<link>http://improve.dk/identifying-complex-columns-in-records/</link>
		<pubDate>Fri, 15 Jul 2011 00:18:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/15/identifying-complex-columns-in-records.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>For an introduction to the anatomy of records, I suggest you read </em><a href="http://www.sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-record.aspx" target="_blank"><em>this post</em></a><em> by </em><a href="http://www.sqlskills.com/BLOGS/PAUL/" target="_blank"><em>Paul Randal</em></a><em>.</em></p>

<p>Not all variable length columns are the same. Some are more… Complex than others. An example of a complex column could be the 24 byte row-overflow pointer that are used when SLOB types overflow. <a href="http://sqlblog.com/blogs/kalen_delaney/default.aspx" target="_blank">Kalen Delaney</a> has an excellent post detailing how to <a href="http://sqlblog.com/blogs/kalen_delaney/archive/2007/10/09/geek-city-detecting-overflowing-columns.aspx" target="_blank">detect overflowing columns</a>. There are more than one complex column type though, and the technique outlined in Kalen’s post can be generalized a bit further.</p>

<h2>Complex columns containing row-overflow pointers</h2>

<p>Technically I don’t this is a complex column as it doesn’t follow the normal format. It is however identified the same way, so I’ll treat it as a complex column in this post. Let’s create a simple table, cause one of the columns to overflow and then check the record contents:</p>

<pre lang="tsql" escaped="true">CREATE TABLE OverflowTest (A varchar(8000), B varchar(8000))
INSERT INTO OverflowTest VALUES (REPLICATE('a', 5000), REPLICATE('b', 5000))
DBCC IND (X, OverflowTest, -1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_29.png"><img class="alignnone size-full wp-image-2521" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_29.png" width="491" height="120" /></a></div></div>

<p>Outputting the contents of page (1:4345) shows the following (cropped to only show the first 36 bytes of the lone record body:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_124.png"><img class="alignnone size-full wp-image-2522" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/07/image_124.png" width="615" height="138" /></a></div></div>

<p>The four colored bytes make up the variable length offset array – two bytes for each offset. The first offset has a value of 0x1395 == 5013, which fits perfectly with there being 5000 characters in the first column, plus 13 for the record overhead. The second offset has a value of 0x93AD == 37.805. Converted to binary that’s a value of 0b1001001110101101. Note how the high order bit is set to 1 – indicating a complex column. Getting the actual offset requires us to mask out the high order bit like so: 0n37805 &amp; 0b011111111111111 == 5.037. Now we can easily calculate the complex column length as being 5.037 – 5.013 == 24 bytes.</p>

<p>At this point we know that the column contains a complex column and we know that it’s 24 bytes long. Row-overflow pointers only use a single byte to identify the type of complex column – this is what distinguishes it from “normal” complex columns, hence why I’m reluctant to call it a complex column.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_142.png"><img class="alignnone size-full wp-image-2523" alt="image_14" src="http://improve.dk/wp-content/uploads/2011/07/image_142.png" width="525" height="51" /></a></div></div>

<p>The very first byte determines the type of complex column that this is. For row-overflow/LOB pointers this can either be 1, indicating a LOB pointer, or 2, indicating a row-overflow pointer. In this case the value is 2, which confirms that we’re looking at a row-overflow pointer.</p>

<h2>Complex columns containing forwarded record back pointers</h2>

<p>I’ve previously blogged about the <a href="http://improve.dk/archive/2011/06/09/anatomy-of-a-forwarded-record-ndash-the-back-pointer.aspx" target="_blank">anatomy of a forwarded record back pointer</a>. The important thing to note are the first two bytes in the pointer, marked with red:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_163.png"><img class="alignnone size-full wp-image-2524" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/07/image_163.png" width="626" height="137" /></a></div></div>

<p>All complex columns use the first two bytes to identify the kind of complex columns. In this case a complex column ID of 1.024 indicates a back pointer.</p>

<h2>Complex columns containing sparse vectors</h2>

<p>Let’s create a simple table containing some sparse columns:</p>

<pre lang="tsql" escaped="true">CREATE TABLE Sparse
(
	ID int,
	A int SPARSE,
	B int SPARSE,
	C int SPARSE,
	D int SPARSE,
	E int SPARSE
)</pre>

<p>Taking a look at a dump of a record looks like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_183.png"><img class="alignnone size-full wp-image-2525" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/07/image_183.png" width="616" height="144" /></a></div></div>

<p>Note that there are no variable length columns in the table definition. However, the sparse vector is stored as a variable length field, thus we have a variable length offset array. The red bytes make up the offset array value of 0x8023 = 32.803. Flipping the high order bit yields a value of 35, indicating that all remaining bytes in the record belong to the sparse vector.</p>

<p>Since the high order bit was flipped, we know that this is a complex column. Checking out the first two bytes (marked with blue) yields a value of 0x0005. A value of 5 is exactly what indicates that we’re dealing with a sparse vector.</p>

<h2>Conclusion</h2>

<p>In general, variable length columns that contain some kind of special data will be indicated by having their high order bit flipped in the variable length offset array. While row-overflow pointers are not technically complex columns, that act similarly, except only using a single byte to indicate the column type.</p>

<p>Forwarded record back pointers are stored in complex columns having a complex column ID of 1.024.</p>

<p>Sparse vectors use a complex column ID of 5.</p>

<p>I do not know of any more complex columns as of yet, but the documentation is rather non existent except for what’s mentioned in the <a href="http://www.amazon.com/Microsoft%C2%AE-SQL-Server%C2%AE-2008-Internals/dp/0735626243" target="_blank">SQL Server 2008 Internals book</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1362</wp:post_id>
		<wp:post_date>2011-07-15 00:18:32</wp:post_date>
		<wp:post_date_gmt>2011-07-15 00:18:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>identifying-complex-columns-in-records</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="forwarded-records-2"><![CDATA[Forwarded records]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="lob"><![CDATA[LOB]]></category>
		<category domain="post_tag" nicename="record"><![CDATA[Record]]></category>
		<category domain="post_tag" nicename="slob"><![CDATA[SLOB]]></category>
		<category domain="post_tag" nicename="sparse-column"><![CDATA[Sparse column]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Identifying Complex Columns in Records]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sparse Column Storage &amp; the Sparse Vector</title>
		<link>http://improve.dk/sparse-column-storage-ndash-the-sparse-vector/</link>
		<pubDate>Fri, 15 Jul 2011 16:55:22 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/15/sparse-column-storage-the-sparse-vector.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this post I’ll be looking at the internal storage mechanism that supports sparse columns. For an introduction to what sparse columns are and when they ought to be used, <a href="http://msdn.microsoft.com/en-us/library/cc280604.aspx" target="_blank">take a look here</a>.</p>

<p>Sparse columns, whether fixed or variable length, or not stored together with the normal columns in a <a href="http://www.sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-record.aspx" target="_blank">record</a>. Instead, they’re all stored in a hidden variable length column at the very end of the record (barring the potential 14 byte structure that may be stored when using versioning).</p>

<h2>Creating and finding a sparse vector</h2>

<p>Let’s create a sample table and insert a couple of test rows:</p>

<pre lang="tsql" escaped="true">CREATE TABLE Sparse
(
    ID int,
    A int SPARSE,
    B int SPARSE,
    C int SPARSE,
    D int SPARSE,
    E int SPARSE
)

INSERT INTO Sparse (ID, B, E) VALUES (1, 3, 1234)
INSERT INTO Sparse (ID, A, B) VALUES (45, 243, 328)</pre>

<p>As you’d expect, a SELECT * yields the following result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_210.png"><img class="alignnone size-full wp-image-2528" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_210.png" width="285" height="89" /></a></div></div>

<p>Now let’s use DBCC IND to find the lone data pages ID, and then check out the stored record using DBCC PAGE:</p>

<pre lang="tsql" escaped="true">DBCC IND (X, 'Sparse', -1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_44.png"><img class="alignnone size-full wp-image-2529" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/07/image_44.png" width="554" height="87" /></a></div></div>

<pre lang="tsql" escaped="true">DBCC PAGE (X, 1, 4328, 3)</pre>

<p>This gives us two records, the first one looking like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_85.png"><img class="alignnone size-full wp-image-2530" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/07/image_85.png" width="614" height="144" /></a></div></div>

<p>In a previous post I detailed how we <a href="http://improve.dk/archive/2011/07/15/identifying-complex-columns-in-records.aspx" target="_blank">identify complex columns like sparse vectors</a>, so I won’t go into too much detail there. The two red bytes is the single entry in the variable length offset array, with a value of 0x8023 = 32.803. Once we flip the high order bit (identifying this column as a complex column) we get an offset value of 35. Thus we know that the remaining 20 bytes in the record is our sparse vector.</p>

<h2>The sparse vector structure</h2>

<p>So what do those 20 bytes contain? The sparse vector structure looks like this:</p>

<table>
	<tbody>
		<tr>
			<td valign="top" width="173"><strong>Name</strong></td>
			<td valign="top" width="281"><strong>Bytes</strong></td>
			<td valign="top" width="344"><strong>Description</strong></td>
		</tr>
		<tr>
			<td valign="top" width="175">Complex column header</td>
			<td valign="top" width="281">2</td>
			<td valign="top" width="344">The header identifies the type of complex column that we’re dealing with. A value of 5 denotes a sparse vector.</td>
		</tr>
		<tr>
			<td valign="top" width="175">Sparse column count</td>
			<td valign="top" width="281">2</td>
			<td valign="top" width="344">Number of sparse column values that are stored in the vector – only columns that have values are included in the vector.</td>
		</tr>
		<tr>
			<td valign="top" width="176">Column ID set</td>
			<td valign="top" width="281">2 * Number of sparse columns with values</td>
			<td valign="top" width="344">Each sparse column storing a value will use two bytes to store the ID of the column (as seen in sys.columns).</td>
		</tr>
		<tr>
			<td valign="top" width="176">Column offset table</td>
			<td valign="top" width="281">2 * Number of sparse columns with values</td>
			<td valign="top" width="344">Just like the record variable offset array, this stores two bytes per sparse column with a value. The value denotes the end of the actual value in the sparse vector.</td>
		</tr>
		<tr>
			<td valign="top" width="176">Sparse data</td>
			<td valign="top" width="281">Total length of all sparse column data values.</td>
			<td valign="top" width="344"></td>
		</tr>
	</tbody>
</table>

<p>It’s interesting to note that unlike the normal record structure, fixed length and variable length sparse columns are stored in exactly the same way – both have an entry in the offset table, even though the fixed length values don’t differ in length.</p>

<h3>Looking at a record</h3>

<p>Going back to our record structure, I’ve colored it according to separate the different parts of the vector:</p>

<p><strong><span style="color: #ff0000;"><span style="color: #000000;">0x</span>0500</span><span style="color: #0000ff;">0200</span><span style="color: #9b00d3;">03000600</span><span style="color: #008000;">10001400</span>03000000d2040000</strong></p>

<p><em>Note that I’ve byte swapped the following byte references.</em></p>

<p>The first two bytes <strong><span style="color: #ff0000;">0x0005</span></strong> == 5 contains the complex column ID.</p>

<p>The next two bytes <strong><span style="color: #0000ff;">0x0002</span></strong> == 2 contains the number of sparse columns that are non-null, that is, they have a value stored in the sparse vector.</p>

<p>The purple part stores two bytes per column, namely the column IDs of the stored columns. <strong><span style="color: #9b00d3;">0x0003</span></strong> == 3, <span style="color: #9b00d3;"><strong>0x0006</strong></span> == 6.</p>

<p>Next up we have the green part – again storing two bytes per column, this time the offsets in the sparse vector. <strong><span style="color: #008000;">0x0010</span></strong> == 16, <strong><span style="color: #008000;">0x0014</span></strong> == 20.</p>

<p>Finally we have the values themselves. We know that the first column has an ID of 3 and it’s data ends et offset 16. Since the first 12 bytes are made up of the header, the actual values are stored in bytes 13-16: <strong>0x00000003</strong> == 3. The second value ends at offset 20, meaning it’s stored in bytes 17-20: <strong>0x000004d2</strong> == 1.234.</p>

<h3>Correlating sparse vector values with sys.columns</h3>

<p>Now that we have the values, we just need to correlate them with the columns whose value they store. Let’s select the columns in our Sparse table:</p>

<pre lang="tsql" escaped="true">SELECT
	*
FROM
	sys.columns
WHERE
	object_id = OBJECT_ID('Sparse')</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_104.png"><img class="alignnone size-full wp-image-2531" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/07/image_104.png" width="451" height="160" /></a></div></div>

<p>And there we have it – the value 3 was stored in column_id = 3 =&gt; B. The value 1.234 was stored in column_id = 6 =&gt; E. Coincidentally, that matches up with our originally select query:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_13.png"><img class="alignnone size-full wp-image-2532" alt="image_13" src="http://improve.dk/wp-content/uploads/2011/07/image_13.png" width="285" height="89" /></a></div></div>

<p>The same procedure can be repeated for the second record, but I’m going to leave that as an exercise for the reader :)</p>

<h2>Writing a sparse vector parser in C#</h2>

<p>Once we know the structure of the sparse vector, writing a parser in C# is surprisingly simple:</p>

<pre lang="csharp" escaped="true">using System;
using System.Collections.Generic;
using System.Linq;

namespace OrcaMDF.Core.Engine
{
	/// &lt;summary&gt;
	/// Parses sparse vectors as stored in records for tables containing sparse columns.
	/// &lt;/summary&gt;
	public class SparseVectorParser
	{
		public short ColumnCount { get; private set; }
		public IDictionary&lt;short, byte[]&gt; ColumnValues { get; private set; }

		public SparseVectorParser(byte[] bytes)
		{
			// First two bytes must have the value 5, indicating this is a sparse vector
			short complexColumnID = BitConverter.ToInt16(bytes, 0);
			if (complexColumnID != 5)
				throw new ArgumentException("Input bytes does not contain a sparse vector.");

			// Number of columns contained in this sparse vector
			ColumnCount = BitConverter.ToInt16(bytes, 2);

			// For each column, read the data into the columnValues dictionary
			ColumnValues = new Dictionary&lt;short, byte[]&gt;();
			short columnIDSetOffset = 4;
			short columnOffsetTableOffset = (short)(columnIDSetOffset + 2 * ColumnCount);
			short columnDataOffset = (short)(columnOffsetTableOffset + 2 * ColumnCount);
			for(int i=0; i&lt;ColumnCount; i++)
			{
				// Read ID, data offset and data from vector
				short columnID = BitConverter.ToInt16(bytes, columnIDSetOffset);
				short columnOffset = BitConverter.ToInt16(bytes, columnOffsetTableOffset);
				byte[] data = bytes.Take(columnOffset).Skip(columnDataOffset).ToArray();

				// Add ID + data to dictionary
				ColumnValues.Add(columnID, data);

				// Increment both ID and offset offsets by two bytes
				columnIDSetOffset += 2;
				columnOffsetTableOffset += 2;
				columnDataOffset = columnOffset;
			}
		}
	}
}</pre>

<p>I won’t go into the code as it’s documented and follows the procedure we just went through. A quick test verifies that it achieves the same results as we just did by hand:</p>

<pre lang="csharp" escaped="true">[TestFixture]
public class SparseVectorParserTests
{
	[Test]
	public void Parse()
	{
		byte[] bytes = new byte [] { 0x05, 0x00, 0x02, 0x00, 0x03, 0x00, 0x06, 0x00, 0x10, 0x00, 0x14, 0x00, 0x03, 0x00, 0x00, 0x00, 0xd2, 0x04, 0x00, 0x00 };
		var parser = new SparseVectorParser(bytes);

		Assert.AreEqual(2, parser.ColumnCount);
		Assert.AreEqual(3, BitConverter.ToInt32(parser.ColumnValues[3], 0));
		Assert.AreEqual(1234, BitConverter.ToInt32(parser.ColumnValues[6], 0));
	}
}</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_15.png"><img class="alignnone size-full wp-image-2534" alt="image_15" src="http://improve.dk/wp-content/uploads/2011/07/image_15.png" width="251" height="67" /></a></div></div>

<p>You can check out the full code at the <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF Github repository</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1363</wp:post_id>
		<wp:post_date>2011-07-15 16:55:22</wp:post_date>
		<wp:post_date_gmt>2011-07-15 16:55:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sparse-column-storage-ndash-the-sparse-vector</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="record"><![CDATA[Record]]></category>
		<category domain="post_tag" nicename="sparse-columns-2"><![CDATA[Sparse columns]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sparse-column-storage-the-sparse-vector]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Sparse Column Storage & the Sparse Vector]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Null Bitmap is Not Always Present in Data Records</title>
		<link>http://improve.dk/the-null-bitmap-is-not-always-present-in-data-records/</link>
		<pubDate>Fri, 15 Jul 2011 21:01:59 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/15/the-null-bitmap-is-not-always-present-in-data-records.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>While <a href="http://improve.dk/archive/2011/07/15/sparse-column-storage-ndash-the-sparse-vector.aspx" target="_blank">implementing sparse column support</a> for <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>, I ran into a special condition that caught me by surprise – a data record with no null bitmap. Even <a href="http://www.sqlskills.com/BLOGS/PAUL/" target="_blank">Paul Randal</a> mentioned that the null bitmap would *always* be present in data records in his <a href="http://www.sqlskills.com/BLOGS/PAUL/post/A-SQL-Server-DBA-myth-a-day-(630)-three-null-bitmap-myths.aspx" target="_blank">A SQL Server DBA myth a day: (6/30) three null bitmap myths</a> post.</p>

<h2>Optimized storage of sparse-only tables</h2>

<p>During my testing I discovered that tables containing only sparse columns neither stored a null bitmap, nor the usual number of columns. Let’s create a test table and find a reference to the data page:</p>

<pre lang="tsql" escaped="true">CREATE TABLE OnlyFixedSparse (A int SPARSE)
INSERT INTO OnlyFixedSparse VALUES (5)
DBCC IND (X, 'OnlyFixedSparse', -1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_211.png"><img class="alignnone size-full wp-image-2536" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_211.png" width="353" height="92" /></a></div></div>

<p>And then let’s check the record contents for page (1:4359):</p>

<pre lang="tsql" escaped="true">DBCC PAGE (X, 1, 4359, 3)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_65.png"><img class="alignnone size-full wp-image-2537" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/07/image_65.png" width="529" height="126" /></a></div></div>

<p>The first two bytes contain the record status bits. Next two bytes contain the offset for the end of the fixed-length portion of the record – which is 4 as expected, since we have no non-sparse fixed-length columns. As shown in the <em>Record Attributes</em> output, the status bytes indicates that there’s no null bitmap, and sure enough, the next two bytes indicates the number of variable length columns. The remaining bytes contains the variable length offset array as well as the <a href="http://improve.dk/archive/2011/07/15/sparse-column-storage-ndash-the-sparse-vector.aspx" target="_blank">sparse vector</a>.</p>

<h3>Under what conditions does the data record not contain a null bitmap?</h3>

<p>I did a quick empirical test to verify my theory that this only happens on tables containing only sparse columns:</p>

<table width="500">
	<tbody>
		<tr>
			<td valign="top" width="299"><strong>Schema</strong></td>
			<td valign="top" width="193"><strong>Contains null bitmap</strong></td>
		</tr>
		<tr>
			<td valign="top" width="299">Only variable length columns</td>
			<td valign="top" width="193">Yes</td>
		</tr>
		<tr>
			<td valign="top" width="299">Only fixed length columns</td>
			<td valign="top" width="193">Yes</td>
		</tr>
		<tr>
			<td valign="top" width="299">Only sparse fixed length columns</td>
			<td valign="top" width="193">No</td>
		</tr>
		<tr>
			<td valign="top" width="299">Only sparse variable length columns</td>
			<td valign="top" width="193">No</td>
		</tr>
		<tr>
			<td valign="top" width="299">Fixed length + sparse fixed length columns</td>
			<td valign="top" width="193">Yes</td>
		</tr>
		<tr>
			<td valign="top" width="299">Variable length + sparse fixed length columns</td>
			<td valign="top" width="193">Yes</td>
		</tr>
	</tbody>
</table>

<p>Thus it would seem that this is an optimization made possible for tables containing nothing but sparse columns.</p>

<h3>There’s always an exception to the exception</h3>

<p>It *is* actually possible to have a data record without a null bitmap for a table with non-sparse columns too. Continuing on from the OnlyFixedSparse table from before, let’s add two extra nullable columns:</p>

<pre lang="tsql" escaped="true">ALTER TABLE OnlyFixedSparse ADD B int NULL
Alter Table OnlyFixedSparse ADD C varchar(10) NULL</pre>

<p>Checking the stored record reveals the exact same output as before:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_86.png"><img class="alignnone size-full wp-image-2538" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/07/image_86.png" width="532" height="127" /></a></div></div>

<p>Thus it would seem that even without a null bitmap the usual alter semantics are followed – the addition of new nullable columns does not need to alter existing records. If we’d added a non-nullable column to the table, we would have to modify the record, causing the addition of a null bitmap and column count. The same goes if we insert a value into any of those new columns:</p>

<pre lang="tsql" escaped="true">UPDATE OnlyFixedSparse SET B = 2</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_105.png"><img class="alignnone size-full wp-image-2539" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/07/image_105.png" width="615" height="130" /></a></div></div>

<p>By setting the value of the B column we just added 7 extra bytes to our data record. 4 for the integer, 2 for the column count and 1 for the null bitmap. Had we not performed the update for all records in the table, only the affected records would be updated. This means we may have data records for a table where some have a null bitmap while others don’t. Just take a look at this:</p>

<pre lang="tsql" escaped="true">CREATE TABLE OnlyFixedSparse (A int SPARSE)
INSERT INTO OnlyFixedSparse VALUES (5), (6)
ALTER TABLE OnlyFixedSparse ADD B int NULL
UPDATE OnlyFixedSparse SET B = 2 WHERE A = 5</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_125.png"><img class="alignnone size-full wp-image-2540" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/07/image_125.png" width="614" height="281" /></a></div></div>

<h2>Conclusion</h2>

<p>As I unfortunately do not work on the SQL Server team and I haven’t seen this condition documented, I can only theorize on this. For all normal data records, the null bitmap is always present, even if the table does not contain any null columns. While we can achieve <a href="http://www.sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-record.aspx" target="_blank">read optimizations</a> when columns may be null, for completely non-null tables, we still get the benefit that we can add a new nullable column to an existing schema, without having to modify the already existing records.</p>

<p>While I think it’s bit of a special use case, my theory is that this is a specific optimization made for the case where you have a table with lots of sparse columns and no non-sparse columns present. For those cases, we save at least three bytes – two for the number of columns and at least one for the null bitmap. If there are only sparse columns, we have no need for the null bitmap as the null value is defined by the value not being stored in the sparse vector.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1364</wp:post_id>
		<wp:post_date>2011-07-15 21:01:59</wp:post_date>
		<wp:post_date_gmt>2011-07-15 21:01:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-null-bitmap-is-not-always-present-in-data-records</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="null-bitmap-2"><![CDATA[Null bitmap]]></category>
		<category domain="post_tag" nicename="record"><![CDATA[Record]]></category>
		<category domain="post_tag" nicename="sparse-columns-2"><![CDATA[Sparse columns]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The Null Bitmap is Not Always Present in Data Records]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1081</wp:comment_id>
			<wp:comment_author><![CDATA[Rob Volk]]></wp:comment_author>
			<wp:comment_author_email>robvolk@sqlteam.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-15 21:40:14</wp:comment_date>
			<wp:comment_date_gmt>2011-07-15 21:40:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&quot;If we’d added a non-nullable column to the table, we would have to modify the record, causing the addition of a null bitmap&quot;<br /><br />Marvelously paradoxical. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1082</wp:comment_id>
			<wp:comment_author><![CDATA[David Walker]]></wp:comment_author>
			<wp:comment_author_email>dwalker-wk@zianet.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-01 15:26:29</wp:comment_date>
			<wp:comment_date_gmt>2011-08-01 15:26:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Comments are closed on Paul Randal's blog from 2009, but he also says the same not-quite-correct thing here <a rel="nofollow external" href="http://www.sqlskills.com/BLOGS/PAUL/post/Misconceptions-around-adding-columns-to-a-table.aspx" title="http://www.sqlskills.com/BLOGS/PAUL/post/Misconceptions-around-adding-columns-to-a-table.aspx" rel="nofollow">www.sqlskills.com/...</a>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1083</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-01 20:09:59</wp:comment_date>
			<wp:comment_date_gmt>2011-08-01 20:09:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[To Paul Randal's defense, this is a very specific scenario (which is only possible since the introduction of sparse columns in SQL Server 2008) that I stumbled upon because I deliberately tried to find edge cases. In most practical cases, the null bitmap will always be present, just not *always* :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1084</wp:comment_id>
			<wp:comment_author><![CDATA[Paul Randal]]></wp:comment_author>
			<wp:comment_author_email>paul@sqlskills.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.sqlskills.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-15 22:51:03</wp:comment_date>
			<wp:comment_date_gmt>2011-07-15 22:51:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very cool - and makes perfect sense for that special case. Sure no-one's considered that before. I'll update my myth post with the info and link back.<br /><br />Cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1085</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 01:09:35</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 01:09:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Paul - thanks for the comment &amp; linkback. I see that all links in your myth post now points to my blog post. While I'm not complaining, I don't think that's what you intended :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The 8 Byte Record That Was 9 Bytes While Making No Sense</title>
		<link>http://improve.dk/the-8-byte-record-that-was-9-bytes-while-making-no-sense/</link>
		<pubDate>Sat, 16 Jul 2011 21:43:30 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/15/the-8-byte-record-that-was-9-bytes-while-making-no-sense.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Warning: this is a <em>select is (most likely) not broken, it’s just not working as I’d expect</em>. It may very well be that I’m just overlooking something, in which case I hope someone will correct me :)</p>

<p>I’ve previously blogged about <a href="http://improve.dk/archive/2011/07/15/the-null-bitmap-is-not-always-present-in-data-records.aspx" target="_blank">how sparse-column-only table records didn’t have a null bitmap</a>, nor did they store the usual column count, except for the number of variable length columns. In my effort to test <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>, I added the following SQL code as the setup for a test:</p>

<pre lang="tsql" escaped="true">CREATE TABLE ScanAllNullSparse
(
	A int SPARSE,
	B int SPARSE
)
INSERT INTO ScanAllNullSparse DEFAULT VALUES</pre>

<p>Dumping out the resulting record yields the following:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_21.png"><img class="alignnone size-full wp-image-2259" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_21.png" width="640" height="114" /></a></div></div>

<p>And this is where things start to get weird. The status bits (<span style="color: #ff0000;">red</span>) are all off, meaning there’s neither a null bitmap nor variable length columns in this record. The next two (<span style="color: #0000ff;">blue</span>) bytes indicate the end offset of the fixed length portion – right after those two very bytes, since we don’t have any fixed length data.</p>

<p>At this point I’m not too sure what to expect next – after all, in the <a href="http://improve.dk/archive/2011/07/15/the-null-bitmap-is-not-always-present-in-data-records.aspx" target="_blank">previous blog post</a> I showed how the column count wasn’t stored in all-sparse tables. Also, the status bits indicate that there’s no null bitmap. But what is the <span style="color: #008000;">green</span> 0x0100 (decimal value 1) bytes then? The only value I can see them possible indicating is the number of variable length columns. But why would that be present when the status bits indicate there are no such columns? Oh well, if that’s the case, then the next two (<span style="color: #ff0080;">pink</span>) bytes must be the offset array entry for the variable length column – having a value of 8 indicates that the variable length column has no value.</p>

<p>But wait, if the variable length column doesn’t have a value, then what is that last (<span style="color: #d16349;">orange/brownish</span>) 0x00 byte doing at the very end? That’s beyond the offset marked in the (assumedly) variable length offset array… And if the <span style="color: #ff0080;">pink</span> bytes really is the variable length offset array – should it not indicate a complex column for the sparse vector? (though it would make sense for it not to do so, if it weren’t stored in the record).</p>

<p>I can still parse this by just taking some precautions, but I still don’t understand what’s going on. Any suggestions?</p>

<h2>It’s not just DBCC PAGE</h2>

<p>To clear DBCC PAGE of any suspicion I amended my original test by inserting two extra rows with DEFAULT VALUES. The resulting offset table looks like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_42.png"><img class="alignnone size-full wp-image-2260" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/07/image_42.png" width="153" height="101" /></a></div></div>

<p>As can be seen, the storage engine allocates 9 bytes for all three rows (though we can only verify the first two). Thus it’s not just DBCC PAGE that reads the records as being 9 bytes, so does the storage engine. This just strengthens the case that SQL Server knows best, now if only I could figure out why :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1365</wp:post_id>
		<wp:post_date>2011-07-16 23:43:30</wp:post_date>
		<wp:post_date_gmt>2011-07-16 21:43:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-8-byte-record-that-was-9-bytes-while-making-no-sense</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="record"><![CDATA[Record]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The 8 Byte Record That Was 9 Bytes While Making No Sense]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1086</wp:comment_id>
			<wp:comment_author><![CDATA[Paul White]]></wp:comment_author>
			<wp:comment_author_email>sqlkiwi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://sqlblog.com/blogs/paul_white/default.aspx</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 03:41:05</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 03:41:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,<br /><br />The green and pink data above is the metadata for an extra variable-length column at the end of the normal data record.  <br /><br />This extra system column is the sparse vector (which might also be followed by versioning information).  In your example, there is no sparse data so the sparse vector contains zero elements.<br /><br />The detailed structure of the sparse vector is contained in SQL Server 2008 Internals (Kalen Delaney, Microsoft Press) pp406-408.<br /><br />Hope that helps,<br /><br />Paul]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1087</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 11:21:53</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 11:21:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Paul,<br /><br />I'm afraid it's not that simple. I've parsed the sparse vector in a previous post - <a rel="nofollow external" href="http://improve.dk/archive/2011/07/15/sparse-column-storage-ndash-the-sparse-vector.aspx" title="http://improve.dk/archive/2011/07/15/sparse-column-storage-ndash-the-sparse-vector.aspx" rel="nofollow">improve.dk/...</a><br /><br />When the sparse vector is present, the record will have the VARIABLE_COLUMNS bit set in the status bits. Even though the column is not present in sys.columns/sysrscols, it still acts like a normal varlength column.<br /><br />That being said, the record may have a column entry for the sparse vector, but it can be empty, if none of the sparse columns have ever had a non-null value.<br /><br />That last case almost makes sense - the green 0100 identifies the one variable length sparse vector column. The pink 0800 defines the valid zero-length value offset as right after the offset value itself. But that still leaves out the trailing 0x00 byte at the end - what is that doing?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1088</wp:comment_id>
			<wp:comment_author><![CDATA[SwePeso]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-19 04:24:56</wp:comment_date>
			<wp:comment_date_gmt>2011-07-19 04:24:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Does it have something to do with COLUMN_SET?<br /><br />Add this to your table and try again<br /><br />&quot;, cs xml column_set FOR ALL_SPARSE_COLUMNS&quot;<br /><br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1089</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-19 12:33:56</wp:comment_date>
			<wp:comment_date_gmt>2011-07-19 12:33:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's interesting, AFAIK the COLUMN_SET isn't stored physically in any way in the record, it's pure metadata. However, adding a third column defined as the ALL_SPARSE_COLUMNS COLUMN_SET does change the output to the following (still 9 bytes in length):<br /><br />00000400 01000000 00<br /><br />I can't see this being the same layout as before - in that case we've now got a zero-offset variable length column, which isn't valid AFAIK, still with an extra trailing byte.<br /><br />If I insert a row with any value like so:<br />INSERT INTO ScanAllNullSparse (A) VALUES (5)<br /><br />Then, with or without the column set, the record looks perfectly fine &amp; normal, weighing in at 20 bytes, all bytes accounted for:<br /><br />20000400 01001480 05000100 01000c00 05000000]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1090</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-16 23:01:35</wp:comment_date>
			<wp:comment_date_gmt>2011-07-16 23:01:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This probably isn't a very helpful comment, but worth considering as an option...<br /><br />What if your analysis is 100% correct up to the question about the trailing 0x00, and the explanation for the 0x00 is simply that the DBCC PAGE code incorrectly calculates the row length as 9 instead of 8? It is after all just a pretty printer and not core storage engine code, so edge case bugs can escape being noticed or fixed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1091</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-17 02:48:31</wp:comment_date>
			<wp:comment_date_gmt>2011-07-17 02:48:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Well, I can't rule the possibility that DBCC PAGE may not handle the scenario correctly. That being said, through my career I've usually been wrong whenever I've called out select being wrong, so I'm rather adamant towards doing that in this case.<br /><br />I don't have an explanation, as of yet, for the structure but I'm still thinking it's an edge case I'm just not understanding correctly yet - after all, I've had quite a few of those thus far :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1092</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-17 19:32:00</wp:comment_date>
			<wp:comment_date_gmt>2011-07-17 19:32:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fair enough - it's always the worst kind of cop-out to point fingers elsewhere. I'm just slightly concerned for your mental health if you find a lot more edge case implementations as you dig deeper!<br /><br />Seriously though, I applaud what you're doing, and I love these posts. Very much the spirit of Ken Henderson, sans source code access.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1093</wp:comment_id>
			<wp:comment_author><![CDATA[Jeremy Carroll]]></wp:comment_author>
			<wp:comment_author_email>jeremyc@intellinet.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-08 16:51:40</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 16:51:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[9B limit is for the FORWARDING_STUB, which is 9B. Even a clustered index has this rule b/c it can be converted into a heap.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1094</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-09 14:39:04</wp:comment_date>
			<wp:comment_date_gmt>2012-04-09 14:39:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Jeremy,<br /><br />Very interesting! I can see how this makes sense for a heap as we'd want to make sure there's always room for the FORWARDING_STUB to avoid having to move unrelated records to make space. And I assume the rule is there for clustered indexes so we won't have to change all of the (potentially &lt; 9 bytes) record structures themselves during the heap conversion.<br /><br />So in essence a bit of space is wasted to make conversions between indexes and heaps faster, as well as to ensure heap simplicity and speed. And seeing as &lt;9 byte records are probably pretty much non existent in most systems, it seems like a good trade off.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>The Garbage Null Bitmap and Why You Can&#039;t Rely on It Solely</title>
		<link>http://improve.dk/depending-on-how-itrsquos-added-spare-bits-in-the-null/</link>
		<pubDate>Sat, 16 Jul 2011 02:31:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/16/the-garbage-null-bitmap-and-why-you-cant-rely-on-it-solely.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>While adding some extra sparse column tests to the <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> test suite, I discovered an bug in my parsing of records. While the problem was simple enough, it took me a while to debug. Running the test, it worked about 40% of the time while failing the remaining 60% of the time. As I hadn’t picked up on this pattern I happily fixed (or so I thought) the bug, ran my test and verified that it was working. Shortly after the test failed – without me having changed any code. After having the first few strains of hair turn grey, I noticed the pattern and subsequently fixed the bug.</p>

<h2>The normal bitmap</h2>

<p>Creating a table like the following results in a record with both a null bitmap and a variable length column for the <a href="http://improve.dk/archive/2011/07/15/sparse-column-storage-ndash-the-sparse-vector.aspx" target="_blank">sparse vector</a>:</p>

<pre lang="tsql" escaped="true">CREATE TABLE Y (A int SPARSE, B int NULL)
INSERT INTO Y VALUES (5, 2)</pre>

<p>Outputting the lone record in the lone data pages yields the following:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_2.png"><img class="alignnone size-full wp-image-2251" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/07/image_2.png" width="612" height="130" /></a></div></div>

<p>The only thing of interest is the null bitmap. It has a value of 0, indicating that all columns are non null. The only column that actually uses the null bitmap is the <em>B</em> column. While the B column has a column index of 1, it’s represented by index 0 in the null bitmap, given that it’s the first column utilizing the null bitmap. Since the null bitmap has a value of 0x00, we know that the remaining (and unused) 7 bits all have a value of 0 – as would be expected.</p>

<h2>The garbage bitmap</h2>

<p>Now consider another schema, akin to the previous one:</p>

<pre lang="tsql" escaped="true">CREATE TABLE DifferingRecordFormats (A int SPARSE)
INSERT INTO DifferingRecordFormats VALUES (5)
ALTER TABLE DifferingRecordFormats ADD B int NULL
UPDATE DifferingRecordFormats SET B = 2</pre>

<p>While ending up with the exact same table schema, values and record layout, the null bitmap differs. The following are three sample records, resulting from running the above script three times, dropping the table in between to start on a fresh:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_41.png"><img class="alignnone size-full wp-image-2252" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/07/image_41.png" width="615" height="127" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_61.png"><img class="alignnone size-full wp-image-2253" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/07/image_61.png" width="613" height="129" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_81.png"><img class="alignnone size-full wp-image-2254" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/07/image_81.png" width="610" height="124" /></a></div></div>

<p>Notice how all three records are *exactly* the same, except for the null bitmap. It’s even identical to the “The normal bitmap” record that I fixed showed, *except* for the null bitmap value. Let’s try and convert those three null bitmaps to binary:</p>

<pre class="plain">
0x5C = 0b0101110<strong>0</strong>
0xDA = 0b1101101<strong>0</strong>
0x16 = 0b0001011<strong>0</strong>
</pre>

<p>All three bitmaps hold valid values for the bit we’re interested in – the very first (rightmost) bit. The remaining bits seem to be random garbage. While this doesn’t affect parsing as we’re not touching those spare bits, I find it interesting that the bitmap behaves differently depending on how it’s added. I’m guessing there’s an internal byte in memory that’s spilling through, having only the necessary bits flipped, instead of creating a new zeroed out byte and flipping bits as necessary on the clean byte.</p>

<h2>Thou shalt not trust the null bitmap blindly!</h2>

<p>Having garbage in the null bitmap raises some interesting questions. Usually when we add a nullable column to a schema, we don’t have to touch the data pages since we can determine the new columns data is not present in the record, hence it must be null. This is not done using the null bitmap however. Imagine this scenario:</p>

<pre lang="tsql" escaped="true">CREATE TABLE Garbage (A int sparse)
INSERT INTO Garbage VALUES (5)
ALTER TABLE Garbage ADD B int NULL
UPDATE Garbage SET B = 2
ALTER TABLE Garbage ADD E varchar(10)</pre>

<p>We start out as before, causing a garbage null bitmap that might have a value of 0b01011000, meaning the third three columns are non-null – that is, B and E (since A is sparse and therefor doesn’t utilize the null bitmap). But E *is* null, even though the null bitmap says otherwise. This is the record as it may (given that the null bitmap value can vary) look after the above queries have been run:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_101.png"><img class="alignnone size-full wp-image-2255" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/07/image_101.png" width="611" height="129" /></a></div></div>

<p>So according to the null bitmap, both B and E are null – doing a select confirms that that is not the case however:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_121.png"><img class="alignnone size-full wp-image-2257" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/07/image_121.png" width="153" height="70" /></a></div></div>

<p>So how do we determine that E is in fact null? By ignoring the null bitmap and realizing there’s no data for E. The column count for the record has a value of 1. It’s important to note that the column count counts the total number of non-sparse columns present in the record, including variable length. Since this has a value of 1 and there’s a fixed-length column present, that’s the one it’s counting. While there’s also a variable length column, that’s the sparse vector – identified by the fact that the column count didn’t include it, and that the variable length offset array entry identifies it as a <a href="http://improve.dk/archive/2011/07/15/identifying-complex-columns-in-records.aspx" target="_blank">complex column</a>.</p>

<h2>Conclusion</h2>

<p>I’m having <a href="http://improve.dk/archive/2011/07/15/the-null-bitmap-is-not-always-present-in-data-records.aspx" target="_blank">some</a> <a href="http://improve.dk/archive/2011/07/16/the-8-byte-record-that-was-9-bytes-while-making.aspx" target="_blank">fun</a> causing all kinds of edge cases due to sparse columns, even more fun trying to reason why what’s happening is happening. I haven’t seen garbage bitmaps before working with sparse columns and causing the specific scenario where the bitmap is added to a data record that doesn’t already have one. The most important thing to realize is that it doesn’t matter, at all. When doing reads of a record, the first thing we should check is *not* the null bitmap, but whether to expect the column in the record and afterwards whether there is a null bitmap at all (it may not be present in these sparse scenarios, as well as for index records).</p>

<p>Below is a pseudo code presentation of how I’m currently parsing records, passing all current tests. Note that it’s leaving out a lot of details, but the overall logic follows the actual implementation. Also note that I’m continually updating this as I discover new edge cases that I haven’t taken into account.</p>

<pre lang="tsql" escaped="true">foreach column in schema {
	if(sparse) {
		if(record has sparse vector) {
			Value = [Read value from sparse vector, possibly NULL]
		} else {
			Value = NULL
		}
	} else {
		if(non-sparse column index &lt; record.NumberOfColumns) {
			if(record does not have a null bitmap OR null bitmap indicates non NULL) {
				if(column is variable length) {
					Value = [Read value from variable length data section]
				} else {
					Value = [Read value from fixed length data section]
				}
			} else {
				Value = NULL
			}
		} else {
			Value = NULL
		}
	}
}</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1366</wp:post_id>
		<wp:post_date>2011-07-16 02:31:21</wp:post_date>
		<wp:post_date_gmt>2011-07-16 02:31:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>depending-on-how-itrsquos-added-spare-bits-in-the-null</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="null-bitmap-2"><![CDATA[Null bitmap]]></category>
		<category domain="post_tag" nicename="record"><![CDATA[Record]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[the-garbage-null-bitmap-and-why-you-cant-rely-on-it-solely]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The Garbage Null Bitmap and Why You Can't Rely on It Solely]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What is the Size of the LOB Pointer for (MAX) Types Like Varchar, Varbinary, Etc?</title>
		<link>http://improve.dk/what-is-the-size-of-the-lob-pointer-for-max-types-like-varchar-varbinary-etc/</link>
		<pubDate>Mon, 18 Jul 2011 20:31:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/18/what-is-the-size-of-the-lob-pointer-for-max-types-like-varchar-varbinary-etc.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>LOB types like varchar(MAX), nvarchar(MAX), varbinary(MAX) and xml suffer from split personality disorder. SQL Server may store values in-row or off-row depending on the size of the value, the available space in the record and the table settings. Because of this, it’s no easy task to predict the size of the pointer left in the record itself. You might even say… It depends.</p>

<p>Based on <a href="http://www.sqlservercentral.com/Forums/Topic1143500-391-1.aspx" target="_blank">this post</a>, and the fact that I’m working on LOB type support for <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">OrcaMDF</a> at the moment, I decided to look into the LOB pointer storage structures.</p>

<h2>Setup</h2>

<p>For testing, we’ll use a very simple schema:</p>

<pre lang="tsql" escaped="true">CREATE TABLE Lob
(
	A char(5000) NULL,
	B varchar(MAX) NOT NULL
)</pre>

<h2>The [BLOB Inline Data] for in-row data</h2>

<p>If data is small enough (“small enough” being hard to define as it depends on the free space in the page, the mood of SQL Server and probably a bunch of other undocumented factors), it will be stored in the record itself. Let’s insert a single small row:</p>

<pre lang="tsql" escaped="true">INSERT INTO Lob (B) VALUES ('Test')</pre>

<p>Since A takes up 5000 bytes and we only try to insert 4 bytes into B, there’s plenty of space for it to be stored in-row, taking up only the expected 4 bytes that we inserted. This behavior is just as a normal varchar(X) SLOB column would react.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_4.png"><img class="alignnone size-full wp-image-2236" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/07/image_4.png" width="618" height="261" /></a></div></div>

<h2>The [BLOB Inline Root] for row-overflow data</h2>

<p>Now let’s truncate the table and insert a new row, forcing SQL Server to push the data off-row as there isn’t enough space on the original record:</p>

<pre lang="tsql" escaped="true">TRUNCATE TABLE LOB
INSERT INTO Lob (B) VALUES (REPLICATE(CAST('a' AS varchar(max)), 4000))</pre>

<p>Since A once again takes up a fixed amount of 5000 bytes and we’re now trying to insert 4000 more bytes, we exceed the maximum capacity of 8096 bytes for the page body, causing SQL Server to push the data off-row. Running a DBCC IND confirms that SQL Server has allocated a new IAM page to track the LOB data pages:</p>

<pre lang="tsql" escaped="true">DBCC IND (X, 'Lob', -1)</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_6.png"><img class="alignnone size-full wp-image-2237" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/07/image_6.png" width="620" height="136" /></a></div></div>

<p>Extracting the record and looking at column 2 reveals that we’re now storing a 24 byte row-overflow pointer:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_8.png"><img class="alignnone size-full wp-image-2238" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/07/image_8.png" width="631" height="173" /></a></div></div>

<p>This pointer, once again, is exactly like a SLOB column would be stored. The (MAX) LOB variants do have one trick that SLOBs don’t have though – they can be longer than 8000 bytes. In that case, we need more than one page to store the value – and thus the off-row pointer needs to point at more than one page. The off-row pointer, at an abstract level, points to a root of pointers that then point onwards to the actual data pages (or onto another root in case we need more than two levels of page references). If the root is small enough, it’ll be stored in-row. The smallest root possible is 12 bytes – a single page reference (the extra 12 bytes is due to overhead). Each following page reference takes up an extra 12 bytes. Thus, an inline root pointing to two pages will take up 36 bytes of space, and so forth, just look at this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_10.png"><img class="alignnone size-full wp-image-2239" alt="image_10" src="http://improve.dk/wp-content/uploads/2011/07/image_10.png" width="621" height="159" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_12.png"><img class="alignnone size-full wp-image-2240" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/07/image_12.png" width="624" height="200" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_14.png"><img class="alignnone size-full wp-image-2241" alt="image_14" src="http://improve.dk/wp-content/uploads/2011/07/image_14.png" width="623" height="244" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_16.png"><img class="alignnone size-full wp-image-2243" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/07/image_16.png" width="622" height="297" /></a></div></div>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_18.png"><img class="alignnone size-full wp-image-2244" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/07/image_18.png" width="623" height="115" /></a></div></div>

<p>Note how we go from 24 to 36, 48, 60 and finally 72 bytes for a total of 40.000 bytes of data, stored on five data pages. Once we exceed 72 bytes, SQL Server doesn’t store the whole root inline any longer, instead if points to a single new slot on another page. The (1:379) page is a text_tree page, containing references to the pages where the data is stored:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_20.png"><img class="alignnone size-full wp-image-2246" alt="image_20" src="http://improve.dk/wp-content/uploads/2011/07/image_20.png" width="459" height="234" /></a></div></div>

<p>I haven’t been able to make SQL Server store inline blob roots any larger than 72 bytes so I’m guessing that’s a hard cutoff value before it’ll start referencing text_tree pages. Ignoring text_tree pages, the pointer format so far has been exactly the same as for SLOBs. So when exactly does SQL Server store a classic 16 byte LOB pointer for (MAX) LOB types?</p>

<h2>The [Textpointer] for LOB data</h2>

<p>SQL Server will *never* store a LOB pointer for the (MAX) LOB types, *unless* the <a href="http://msdn.microsoft.com/en-us/library/ms173530.aspx" target="_blank">large value types out of row</a> setting has been turned on. Let’s clear the table, set the setting, and then insert a new row like before:</p>

<pre lang="tsql" escaped="true">TRUNCATE TABLE LOB
EXEC sp_tableoption N'Lob', 'large value types out of row', 'ON'
INSERT INTO Lob (B) VALUES (REPLICATE(CAST('a' AS varchar(max)), 4000))</pre>

<p>Now just as with the inline root, SQL Server allocates an IAM page to track the LOB data pages:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_22.png"><img class="alignnone size-full wp-image-2247" alt="image_22" src="http://improve.dk/wp-content/uploads/2011/07/image_22.png" width="614" height="126" /></a></div></div>

<p>But when we look at the record stored on page (1:4380), we see that it stores a Textpointer instead of an inline blob root:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_24.png"><img class="alignnone size-full wp-image-2248" alt="image_24" src="http://improve.dk/wp-content/uploads/2011/07/image_24.png" width="561" height="117" /></a></div></div>

<h2>Mixed pointer types</h2>

<p>As long as the <a href="http://msdn.microsoft.com/en-us/library/ms173530.aspx" target="_blank">large value types out of row</a> setting is off (which it is by default), the (MAX) LOB types will act exactly like a SLOB column, except for the fact that the data can be larger than 8000 bytes. Once we turn the setting on, the (MAX) LOB types start acting like classic LOB types. So does this mean that the tables will always either use inline blob roots or textpointers? No, if only it were that simple. Take a look at this sample:</p>

<pre lang="tsql" escaped="true">CREATE TABLE TrickyLob
(
	A varchar(MAX) NOT NULL
)
INSERT INTO TrickyLob VALUES ('Mark')
INSERT INTO TrickyLob VALUES (REPLICATE(CAST('a' AS varchar(MAX)), 9000))
EXEC sp_tableoption N'TrickyLob', 'large value types out of row', 'ON'
INSERT INTO TrickyLob VALUES (REPLICATE(CAST('a' AS varchar(MAX)), 4000))</pre>

<p>Running DBCC PAGE on the single allocated data page reveals that we now have three records using three different pointer types:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/07/image_28.png"><img class="alignnone size-full wp-image-2249" alt="image_28" src="http://improve.dk/wp-content/uploads/2011/07/image_28.png" width="574" height="232" /></a></div></div>

<p>Lesson: When sp_tableoption is run to set the <a href="http://msdn.microsoft.com/en-us/library/ms173530.aspx" target="_blank">large value types out of row</a> setting, it only takes effect for newly added records. A table rebuild won’t affect existing inline blob roots either, only updates to existing records will rebuild the record and convert the inline blob root to a textpointers.</p>

<h2>Conclusion</h2>

<p>Predicting the LOB pointer type &amp; size can be tricky as it depends on multiple factors. Using the above, you should be able to get a notion of what will be stored, as well as to interpret the DBCC PAGE results you might run into.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1367</wp:post_id>
		<wp:post_date>2011-07-18 20:31:32</wp:post_date>
		<wp:post_date_gmt>2011-07-18 20:31:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-is-the-size-of-the-lob-pointer-for-max-types-like-varchar-varbinary-etc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-types"><![CDATA[Data Types]]></category>
		<category domain="post_tag" nicename="dbcc-page"><![CDATA[DBCC PAGE]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="lob"><![CDATA[LOB]]></category>
		<category domain="post_tag" nicename="slob"><![CDATA[SLOB]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[What is the Size of the LOB Pointer for (MAX) Types Like Varchar, Varbinary, Etc?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How Not to Reinvent Indexes</title>
		<link>http://improve.dk/how-not-to-reinvent-indexes/</link>
		<pubDate>Mon, 01 Aug 2011 13:29:03 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/07/31/how-not-to-reinvent-indexes.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In a moment of weakness I <a href="https://twitter.com/#!/improvedk/status/96646125402062849">pleged to make an absolute fool of myself</a> for this months <a href="http://thomaslarock.com/2011/07/meme-monday-for-august/">Meme Monday</a>. I wish I could say that this happened 20 years ago, when I was but a young grasshopper. To my disgrace, this happened fewer years ago than I’d like to admit.</p>

<h2>Wow, that’s a lot of data!</h2>

<p>As part of beginning a new project that would publish catalogs on the web, I tried to do some capacity calculations on storing user statistics. We needed to be able to query the number of views a single page in a given catalog had had, by the hour. Assuming a worst case scenario of 24/7 visitors for a catalog with 100 pages, that would equal 100 pages * 24 hours * 365 days, roughly equal to a million rows per year, per catalog.</p>

<p>At this point I’d been working with SQL Server for some years, though exclusively as a developer. I had no knowledge of the inner workings, storage, index internals, etc. I knew enough to get by as a normal web dev, never really reaching any limits in SQL Server no matter how brain dead my solutions were. As a result, when I figured we might have hundreds of these catalogs, we might have hundreds of millions of rows. Wow, there’s absolutely no way SQL Server will be able to search that must data in a table!</p>

<h2>Reinventing the clustered index</h2>

<p>Being convinced there was no way SQL Server would be able to search that many rows in a single table, I chose to shard my data. Not into separate tables, that’d be too easy. Instead I opted to create a database per catalog, with the sole purpose of storing statistics.</p>

<p>This was brilliant. It really was. Or at least I thought so.</p>

<p>Now instead of SQL Server having to search through a hundred million row large table, I would just query my catalog statistics like so:</p>

<pre lang="tsql" escaped="true">SELECT * FROM CatalogStatistics_[CatalogID].dbo.StatisticsTable WHERE Period BETWEEN @X AND @Y</pre>

<p>I knew indexes were crucial to querying so I made sure to create a nonclustered index on the Period column. Usually It’d go unused as it would require massive amounts of bookmark lookups and there’d be sufficiently small amounts of data that a clustered index scan was more effective.</p>

<h2>Knowing of indexes does not mean you understand them</h2>

<p>Obviously I’d heard of indexes, I’d even used them actively. I thought I understood them – you just create them on the columns you query and everything works faster, right?</p>

<p>I’ll give myself the credit that I knew SQL Server would need some kind of way to quickly narrow down the data it had to search. I thought I’d help out SQL Server by storing the data in separate databases, making sure it would be easy for it to scan just the data for a specific catalog. Had I known how indexes really worked, being stored in an ordered binary tree, I’d realize SQL Server wouldn’t benefit from my scheme at all.</p>

<p>I just made stuff worse by causing log trashing, disk trashing, memory trashing, management trashing, backup trashing, you name it, I trashed it.</p>

<h2>Dude, this isn’t gonna work</h2>

<p>Fast forward a couple of months. Performance wasn’t the bottleneck as there just wasn’t nearly enough data or querying to really cause concern. What was becoming a bottleneck on the other hand; management. We were on a managed server solution with an external hosting company acting as DBAs, though only ensuring SQL Server was running and was backed up. I got an email saying that they were having trouble handling our backups. At that point we had just short of 3.000 databases on the instance.</p>

<p>At the same time I was having trouble satisfying our querying requirements. In the beginning we just needed to query the statistics of a single catalog at a time. Later on we needed to dynamically aggregate statistics across several catalogs at a time. Suffice to say, this didn’t work out well in the long run:</p>

<pre lang="tsql" escaped="true">SELECT X, Y, Z FROM CatalogStatistics_123.dbo.StatisticsTable WHERE Period BETWEEN @X AND @Y

UNION ALL

SELECT X, Y, Z FROM CatalogStatistics_392.dbo.StatisticsTable WHERE Period BETWEEN @X AND @Y

UNION ALL

SELECT X, Y, Z FROM CatalogStatistics_940.dbo.StatisticsTable WHERE Period BETWEEN @X AND @Y

UNION ALL

SELECT X, Y, Z FROM CatalogStatistics_1722.dbo.StatisticsTable WHERE Period BETWEEN @X AND @Y

...</pre>

<h2>My revelation</h2>

<p>I remember going to my first SQL Server conference, attending an entry level internals session. Suddenly I knew what a page was, I knew, on a high level, how data was stored in SQL Server. Suddenly I understood the importance of the data being stored in a b-tree and how much it meant to my scalability concerns.</p>

<p>What I really like about this whole ordeal, when looking back at it, is how I didn’t attend a session on proper indexing. I didn’t attend a session about SQL Server limitations, how to store hundreds of millions of rows. Nope, I intended a session on the internals. Having just that basic knowledge of the internals suddenly provided me the necessary knowledge to figure it out myself. Maybe this is the real reason I’ve become slightly obsessed with internals ever since.</p>

<p>I don’t want a fish, I want to know how to fish.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1368</wp:post_id>
		<wp:post_date>2011-08-01 15:29:03</wp:post_date>
		<wp:post_date_gmt>2011-08-01 13:29:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-not-to-reinvent-indexes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="indexing"><![CDATA[Indexing]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[How Not to Reinvent Indexes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1095</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-04 05:34:01</wp:comment_date>
			<wp:comment_date_gmt>2011-08-04 05:34:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent story! Now wouldn't it be wonderful if we all kept a resume of our worst moments? I'd happily submit that to potential employers just to show that I have now risen above those mistakes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>SQLBits 9 Agenda Published</title>
		<link>http://improve.dk/sqlbits-9-agenda-published/</link>
		<pubDate>Wed, 03 Aug 2011 17:40:30 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/08/03/sqlbits-9-agenda-published.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>The <a href="http://sqlbits.com/information/Agenda.aspx" target="_blank">agenda for SQLBits 9</a> has been published (though it’s still provisional). It’s looking really, really good. Especially so when you consider the price of the event – you’ve got until the 26th of August to get the <a href="http://sqlbits.com/information/Pricing.aspx" target="_blank">early bird price</a> of £375 for two complete days of conference – PLUS a whole day of <a href="http://sqlbits.com/information/TrainingDay.aspx" target="_blank">full day training sessions</a>.</p>

<h2>My presentation</h2>

<p>I’ll be presenting my <a href="http://sqlbits.com/Sessions/Event9/Knowing_the_Internals_Who_Needs_SQL_Server_Anyway_" target="_blank">Knowing the Internals, Who Needs SQL Server Anyway?</a> session. This is by far my favorite session! I originally gave it back in April at Miracle Open World, though under the name “Anatomy of an MDF File”. Since then, I’ve added a good three months of development onto <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>, the project on which the backend of the session is based. As such, this session will be even more awesome than last! Here’s the abstract:</p>

<blockquote>
	<p>You're stuck on a remote island with just a laptop and your main database .MDF file. The boss calls and asks you to retrieve some data, but alas, you forgot to install SQL Server on your laptop. Luckily you have a HEX editor by your side! </p>

	<p>In this level 500 deep dive session we will go into the intimate details of the MDF file format. Think using DBCC Page is pushing it? Think again! As a learning experiment, I've created an open source parser for MDF files, called OrcaMDF. Using the OrcaMDF parser I'll go through the primary storage structures, how to parse page headers, boot pages, internal system tables, data &amp; index records, b-tree structures as well as the supporting IAM, GAM, SGAM &amp; PFS pages. </p>

	<p>Has your database suffered an unrecoverable disk corruption? This session might just be your way out! Using a corrupt &amp; unattachable MDF file, I'll demo how to recover as much data as possible. This session is not for the faint of heart, there will be bits &amp; bytes.</p>
</blockquote>

<h2>My training day</h2>

<p>If you think the session sounds awesome, fret not, you can opt in for a full day of delicious SQL Server internals at a level few people venture to! As I just blogged about recently, <a href="http://improve.dk/archive/2011/08/01/how-not-to-reinvent-indexes.aspx" target="_blank">knowing the internals is the key to creating efficient databases</a>, without knowing how to do so. I’m honored to have <a href="http://sqlblogcasts.com/blogs/simons/archive/2011/07/26/must-attend-training-day-for-anyone-serious-about-sql.aspx" target="_blank">Simon Sabin feature my training day on his blog</a>, and I really cannot promote it any better than he does. This is the official abstract:</p>

<blockquote>
<p>Join me for a journey into the depths of the SQL Server storage engine. Through a series of lectures and demonstrations we'll look at the internals of pages, data types, indexes, heaps, extent &amp; page allocation, allocation units, system views, base tables and nightmarish ways of data recovery. We'll look at several storage structures that are either completely undocumented or very scarcely so.  By the end of the day, not only will you know about the most important data structures in SQL Server, you'll also be able to parse every bit of a SQL Server data file yourself, using just a hex editor! There will be lots of hands on demos, a few of them performed in C# to demonstrate the parsing of data files outside of SQL Server.</p>
</blockquote>

<p>For a more thorough agenda, you should <a href="http://sqlbits.com/information/Event9/SQL_Server_Storage_Engine_and_MDF_File_Internals/TrainingDetails.aspx" target="_blank">go check it out at the SQLBits website</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1369</wp:post_id>
		<wp:post_date>2011-08-03 19:40:30</wp:post_date>
		<wp:post_date_gmt>2011-08-03 17:40:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlbits-9-agenda-published</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presenting a Free Preview of my SQL Server Storage Engine and MDF File Internals Training Day</title>
		<link>http://improve.dk/presenting-a-free-preview-of-my-sql-server-storage-engine-and-mdf-file-internals-training-day/</link>
		<pubDate>Thu, 04 Aug 2011 08:00:19 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/08/04/presenting-a-free-preview-of-my-sql-server-storage-engine-and-mdf-file-internals-training-day.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In collaboration with <a href="http://www.trifork.com">Trifork</a>, I’ll be giving a free preview of my <a href="http://www.sqlbits.com/information/Event9/SQL_Server_Storage_Engine_and_MDF_File_Internals/TrainingDetails.aspx">SQL Server Storage Engine and MDF File Internals training day at SQLBits</a>.</p>

<p>The event will take place at Trifork A/S, Margrethepladsen 4, 8000 Aarhus C on the 6th of September from 1PM – 7PM. Note that there’s a limit of just 30 attendees, so make sure to register soon if you want to join.</p>

<p><a href="http://gotocon.com/aarhus-2011/freeevent/index.jsp?eventOID=3556"><strong>Click here for more details and free registration</strong></a></p>

<p>Trifork has kindly chosen to sponsor some sandwiches and drinks for the night, that way you won’t be running completely dry by listening to me for six hours ;)</p>

<p>Whether you’re a SQL Server DBA/Dev that wants to take it to the next step, by gaining an extreme insight into the internals, or just a developer with a passion for bytes &amp; hacking, this should be an interesting session for you :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1370</wp:post_id>
		<wp:post_date>2011-08-04 10:00:19</wp:post_date>
		<wp:post_date_gmt>2011-08-04 08:00:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-a-free-preview-of-my-sql-server-storage-engine-and-mdf-file-internals-training-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<category domain="post_tag" nicename="trifork"><![CDATA[Trifork]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2011 Fall Presentation Schedule</title>
		<link>http://improve.dk/2011-fall-presentation-schedule/</link>
		<pubDate>Tue, 23 Aug 2011 16:21:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/08/23/2011-fall-presentation-schedule.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>My fall schedule is starting to fall into place, and boy, is it a busy one. I am absolutely thrilled that I’ll be going to the three major SQL Server conferences this fall: <a href="http://sqlbits.com/" target="_blank">SQLBits</a>, <a href="http://www.sqlpass.org/summit/2011/" target="_blank">PASS Summit</a> and <a href="http://www.sqlpass.org/sqlrally/2011/nordic/" target="_blank">PASS SQLRally Nordic</a>. While I’m thrilled that I’ll be attending, I’m even more thrilled, humbled and excited over the fact that I’ll be presenting at all three.</p>

<p>There’s a lot of people I’m looking forward to meet at this years events, presentations I can’t wait to see, and beer I can’t wait to taste :)</p>

<h2>September 6th, Aarhus, Denmark</h2>

<p>As preparation for my training day at SQLBits, I’ll be giving a free preview of my presentation. <a href="http://www.trifork.com/" target="_blank">Trifork</a> has kindly offered to provide facilities and refreshments. We’ll start up at 1PM and continue until 7PM. You can register (once again, totally free) here: <a title="http://gotocon.com/aarhus-2011/freeevent/index.jsp?eventOID=3556" href="http://gotocon.com/aarhus-2011/freeevent/index.jsp?eventOID=3556">http://gotocon.com/aarhus-2011/freeevent/index.jsp?eventOID=3556</a></p>

<h2>September 15th, Malmö, Sweden</h2>

<p>I will be giving a 60-minute presentation on the undocumented storage internals of SQL Server at the <a href="http://www.sqlug.se/" target="_blank">Swedish SQL Server User Group</a>. Registration is free, though limited. Make sure to register before space runs out! - <a title="http://sqlug20110915.eventbrite.com/" href="http://sqlug20110915.eventbrite.com/">http://sqlug20110915.eventbrite.com/</a></p>

<h2>September 29th, Liverpool, UK</h2>

<p>I’ll start out SQLBits by giving a full training day on the <a href="http://sqlbits.com/information/Event9/SQL_Server_Storage_Engine_and_MDF_File_Internals/TrainingDetails.aspx" target="_blank">SQL Server Storage Engine and MDF File Internals</a>. During this full day session, I’ll give a thorough walkthrough of the MDF file internals, how data is stored, parsed and used optimally. I will be providing a plethora of demos and slides on never-seen-before undocumented internals. I couldn’t ask for a bigger recommendation than what Simon Sabin has written on his blog: <a href="http://sqlblogcasts.com/blogs/simons/archive/2011/07/26/must-attend-training-day-for-anyone-serious-about-sql.aspx" target="_blank">Must attend training day for anyone serious about SQL</a>. You can still make the £375.00 <a href="http://www.regonline.com/Register/Checkin.aspx?EventID=987503" target="_blank">SQLBits early bird discount</a> (expires midnight, August 26th) on the complete conference, including the training day.</p>

<h2>September 30th, Liverpool, UK</h2>

<p>For those not attending my training day, I’ll be giving a 60-minute version where I’ll condense my training day down to the most useful &amp; interesting topics. Hopefully you’ll end up with some valuable knowledge and an unquenchable thirst for more internals knowledge. As mentioned above, you can still make the early bird discount before August 26th – so what are you waiting for?</p>

<h2>October 11-14, Seattle, USA</h2>

<p>While the final scheduling hasn’t been announced yet, I’ll be giving a lightning talk at this years PASS Summit. In my <a href="http://www.sqlpass.org/summit/2011/Speakers/CallForSpeakers/SessionDetail.aspx?sid=2103" target="_blank">Revealing the magic</a> lightning talk I will, with the speed of a lightning, attempt to walk you through how to parse the data of a given table given nothing but a table name and an MDF file. We’ll start by parsing the boot page and end up parsing the data records. My goal is not for you to be able to do this afterwards (it’s only 5 minutes, after all), but hopefully I’ll demonstrate that it’s not all magic. Only a little bit.</p>

<h2>October 22nd, Aarhus, Denmark</h2>

<p>For those of you who prefer to get hands on, I’m hosting a 6 hour code camp on SQL Server internals &amp; performance tuning. I’m aiming for a developer oriented audience who have limited to some experience with SQL Server. A laptop will be required. During the day I’ll be switching between presentations and workshop mode. I’ll introduce concepts after which you’ll be able to try it out yourself, with me helping out as necessary. While it’s aimed at developers, I’ll aim high, don’t expect me to go too easy on you ;) I’ll post once the signup page has been launched.</p>

<h2>November 8-9, Aronsborg, Sweden</h2>

<p>At the last event of the year, PASS SQLRally Nordic, I’ll be giving my <a href="http://www.sqlpass.org/sqlrally/2011/nordic/Agenda/Sessions/SessionsDBA.aspx" target="_blank">Knowing the Internals, Who Needs SQL Server Anyway?</a> session. This is an improved version of the session I held earlier this year at <a href="http://mow2011.dk/speakers/mark-s-rasmussen.aspx" target="_blank">Miracle Open World</a>. Since then, I’ve spent almost four months developing <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>, not to mention turning it into an open source project. Suffice to say, I’ve got a lot more to show this time around.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1371</wp:post_id>
		<wp:post_date>2011-08-23 18:21:08</wp:post_date>
		<wp:post_date_gmt>2011-08-23 16:21:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2011-fall-presentation-schedule</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="pass-summit"><![CDATA[PASS Summit]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<category domain="post_tag" nicename="sqlrally-nordic"><![CDATA[SQLRally Nordic]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OrcaMDF Feature Recap</title>
		<link>http://improve.dk/orcamdf-feature-recap/</link>
		<pubDate>Sat, 10 Sep 2011 17:47:00 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/09/10/orcamdf-feature-recap.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Time flies – it’s been about four months since I originally <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">introduced my pet project, OrcaMDF</a>. Since then, quite a lot has happened and OrcaMDF is somewhat more capable than when it started out. As a result I thought I’d provide a recap of what OrcaMDF is currently capable of, as well as what my plans are for the future.</p>

<h2>Page types</h2>

<p>OrcaMDF currently supports full parsing of Data, Index, TextMix, TextTree, GAM, SGAM, IAM, and PFS pages. It also supports minimal parsing of the Boot page, used for finding the starting point of the base table metadata.</p>

<p>Remaining are Sort, FileHeader, DiffMap and MLMap pages. As MLMap and DiffMap use the same bitmap format as IAM, GAM and SGAM pages, parsing those should be straightforward. FileHeader is a bit more tricky and will require some DBCC PAGE love. Sort pages are less relevant as those are only used temporarily while SQL Server is running and should thus not be stored in your MDF file.</p>

<h2>Data types</h2>

<p>I’ve been adding more and more data types to OrcaMDF, lately I’ve added support for parsing all of the LOB types except for XML. Currently supported data are:</p>

<ul>
	<li>bigint</li>
	<li>binary</li>
	<li>bit</li>
	<li>char</li>
	<li>datetime</li>
	<li>decimal</li>
	<li>image</li>
	<li>int</li>
	<li>nchar</li>
	<li>ntext</li>
	<li>nvarchar(x)</li>
	<li>nvarchar(MAX)</li>
	<li>smallint</li>
	<li>sysname</li>
	<li>text</li>
	<li>tinyint</li>
	<li>varbinary(x)</li>
	<li>varbinary(MAX)</li>
	<li>varchar(x)</li>
	<li>varchar(MAX)</li>
</ul>

<p>Adding support for further data types is relatively easy, it’s just a matter of analyzing the storage format and <a href="http://improve.dk/archive/2011/05/05/implementing-data-types-in-orcamdf.aspx#related-results" target="_blank">implementing the ISqlType interface</a>.</p>

<h2>Table &amp; index structures</h2>

<p>Using the DataScanner class, OrcaMDF is able to scan both clustered tables as well as heaps. Using the IndexScanner class enables you to scan nonclustered indexes, whether they’re applied to a clustered table or a heap.</p>

<h2>Metadata</h2>

<p>The only publicly exposed metadata that OrcaMDF currently exposes is a list of table names. Internally, OrcaMDF is able to parse both indexes, tables, partitions, allocation units and columns. This enables you to scan a clustered table/heap/index, providing just its name. OrcaMDF will automatically parse the schema of the object and discover where the IAM chain starts (for heaps) or find the root page for indexes.</p>

<h2>Notable leftovers</h2>

<p>OrcaMDF currently only supports single-file databases, that is, no secondary data files. Adding support would be trivial, but my efforts are concentrated on supporting the core data structures in data files, so secondary files wouldn’t change much. As for corrupted files &amp; corruption detection, OrcaMDF assumes the MDF files to be in perfect condition. There are many places where corruption could be detected, but I’ll postpone that until the day I feel OrcaMDF is able to parse most functioning databases correctly. The projected start out (and still is) as a way of getting a deeper understanding of SQL Server internals, and as such, corruption detection is less important at this stage – though it’s definitely something I’d like to add eventually.</p>

<h2>What’s coming next</h2>

<p>I want to extend the current metadata parsing capabilities, especially with focus on exposing the metadata publicly. Through OrcaMDF, it should be possible to reproduce the database/object/column tree as seen in SQL Server Management Studio. I want to provide table names, indexes, schemas, keys, etc. I also want to take a look at compression, starting out with row compression. As the format is rather well documented (compared to LOB structures, for example), it shouldn’t pose too many problems.</p>

<p>If you have any suggestions or features you’d love to see supported, do let me know!</p>

<p>I’ve also had a number of requests for examples of how to use OrcaMDF. I’ll probably end up creating a series of blog posts showcasing examples of how to use various features of OrcaMDF through code. I’m also planning to create a post on how to fetch the source code and compile it and finally how to run it from there – just to make it a tad easier to take it for a spin :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1372</wp:post_id>
		<wp:post_date>2011-09-10 17:47:00</wp:post_date>
		<wp:post_date_gmt>2011-09-10 17:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-feature-recap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Feature Recap]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQLBits Presentation Materials</title>
		<link>http://improve.dk/sqlbits-presentation-materials/</link>
		<pubDate>Mon, 03 Oct 2011 20:54:32 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/02/sqlbits-presentation-materials.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’ve got a blog post coming up tomorrow on general SQLBits reflections (‘twas awesome), for now I’ll just post my session materials as promised :)</p>

<h2>Precon attendees</h2>

<p>To those of you who attended my precon – thank you! I’m trying to see if I can get the materials sent out to you directly. Until I get that figured out, you can email me at <a href="mailto:mark@improve.dk">mark@improve.dk</a> and I’ll send the materials directly to you. I’m not keen on publishing the whole slide deck and demo archive so I hope you understand.</p>

<h2>Knowing the Internals – Who Needs SQL Server Anyway?</h2>

<p>Once again – thanks for attending! It was an extremely fast paced session but I hope you got an idea of what’s going on behind the scenes of SQL Server.</p>

<p>You can download a rar file containing the slide deck, the SNSC tool and the demos here:</p>

<p><a href="http://improve.dk/wp-content/uploads/2011/10/sqlbits_2011_09_30_knowing_the_internals.rar">sqlbits_2011_09_30_knowing_the_internals.rar</a></p>

<p>If you saw my session, you might be interested in the following links (besides the internals related posts on this blog):</p>

<p><a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF on Github</a><br />
<a href="https://github.com/improvedk/SNSC" target="_blank">SNSC on Github</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1373</wp:post_id>
		<wp:post_date>2011-10-03 22:54:32</wp:post_date>
		<wp:post_date_gmt>2011-10-03 20:54:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlbits-presentation-materials</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1097</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-03 16:05:54</wp:comment_date>
			<wp:comment_date_gmt>2011-10-03 16:05:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Mark, Thursday was as awesome as I expected. Hope to see you again at a future SQLbits!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1098</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-05 12:59:56</wp:comment_date>
			<wp:comment_date_gmt>2011-10-05 12:59:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad to hear that Ewald - it was nice meeting you - always great to put a face on people reading ones blog :)<br /><br />I'll definitely be back at SQLBits again, speaking or not :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Reflections on SQLBits 9 and Getting the Most From Conferences</title>
		<link>http://improve.dk/reflections-on-sqlbits-9-and-getting-the-most-from-conferences/</link>
		<pubDate>Wed, 05 Oct 2011 20:35:38 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/04/reflections-on-sqlbits-9-and-getting-the-most-from-conferences.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After getting back to Denmark from an excellent SQLBits 9, I’ve had a chance to reflect a bit on my experiences. Not just on SQLBits itself, but the very concept of attending conferences and how to get the most of it.</p>

<h2>SQLBits</h2>

<p>What can I say, it’s an excellent conference. The price is very low compared to comparable offerings, and there’s even free content if you’re just going on the Saturday. I loved the informality, placing it somewhere between the more serious PASS Summit and the king of informality, Miracle Open World.</p>

<p>One of the really great things about SQLBits was the layout. There was no separate exhibition hall, instead, it was smack in the middle of the lunch and walkthrough area. This meant people constantly went by the exhibitor booths and generally had a ball in the common area.</p>

<p>I presented a precon and a general session and I’m generally satisfied with the outcome. I look forward to receiving the feedback from SQLBits so I know how to create even better sessions next time! A special thanks goes out to <a href="http://sqlblogcasts.com/blogs/simons/" target="_blank">Simon Sabin</a> who not only cheered me on to continue OrcaMDF back in April, but also pushed me to turn my internals session into a fully fledged precon.</p>

<p>Now for a couple of observations and tips to get the most from the conferences you attend.</p>

<h2>Sit up front</h2>

<p>Some sessions were packed, others were scarcely populated. In almost all the sessions, you had a pretty free choice of where to sit. If the screen isn’t too close, and there’s space, make sure to get a front row seat! You’ll get an unobstructed view of the screen, better connection with the speaker and optimal conditions for saying hi to the speaker afterwards.</p>

<p>I used to always place myself near the back, just as I’d preferred it in school. Wouldn’t want that nasty teacher to ask you a question, would we? Well, this isn’t school! You’re most likely here voluntarily, so why not get the most from it? The speaker won’t ask you questions unless you participate yourself, so there’s nothing to fear. However, you should participate!</p>

<h2>Participate</h2>

<p>If there’s anything you’re in doubt of, disagree with or would like to have explained in further detail – raise your hand! The speaker will politely make it clear if there’s no time for questions, but most likely, he/she’ll enjoy the interaction. And don’t worry, there are no dumb questions – you’ll most likely find others pondering the same question, but just not wanting to raise their hand.</p>

<p>Not only will participation increase the chances of you going home satisfied, it’ll also improve the dynamics of the session. As a speaker, there’s nothing better than the feeling of an engaged audience.</p>

<h2>Don’t be a wallflower</h2>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/148157_458200187635_524362635_5715992_6612638_n_2.jpg"><img class=" wp-image-2453 alignright" alt="148157_458200187635_524362635_5715992_6612638_n_2" src="http://improve.dk/wp-content/uploads/2011/10/148157_458200187635_524362635_5715992_6612638_n_2.jpg" width="346" height="230" /></a></div></div>

<p>Wes Brown wrote an excellent piece on <a href="http://sqlserverio.com/2011/09/02/plucking_wallflowers/" target="_blank">plucking wallflowers</a>. I’ve attended quite a number of conferences so far, but never have I gotten as much out of them as I have this time at SQLBits. Why? I met people!</p>

<p>I went to the PASS Summit last year, not knowing anybody. I had a great time, but I didn’t meet very many people – all to the credit of myself. As most of us are, I’m an introvert – talking to strangers doesn’t come naturally to me. However, I know I should, so I try to do my best. At PASS I signed up for the excellent Inappropriate Sessions Meetup, a small community event where everyone seems to know each other. Not knowing anyone, it was a fun way for me to push some boundaries.</p>

<p>This year at SQLBits, I had the advantage of knowing a couple of people in real life. Even better, I’d connected with 20-30 people over Twitter during the last half year. I hadn’t met any of these outside of Twitter, but this really laid the foundation for a lot of great connections.</p>

<p>When you walk around and spot someone whose name you know, introduce yourself! Doesn’t matter if you don’t have anything clever to say, just shake their hand, introduce yourself and walk on if you feel like it. This makes it much much easier to start a conversation later on in the bar, during a session or lunch, etc.</p>

<p>If you liked a presentation, walk up to the presenter afterwards and introduce yourself. If you don’t have any comments, just say how you liked the session – presenters love that. And once again, you’ve set yourself up for an easier conversation later on.</p>

<h2>Speakers aren’t special</h2>

<p>On the topic of presenting yourself to people – don’t be afraid of speakers. The amount of speaker bite related injuries have been on a steady decline for the past several years, making it safer than ever. Joking aside, you’ll find that most speakers are just normal persons who love to have a conversation. Though speakers may seem very extrovert, many are actually introverts that have just managed to overcome that social boundary in the very moment. Talk to them! Introduce yourself! Set yourself up for conversation later by shaking their hand after a session.</p>

<p>I had a number of people come up to me during the days and just comment on my session, and all of a sudden, we had a conversation. It’s a great way of starting a conversation, and I love meeting new people, getting feedback on my sessions and hearing about their conference experience.</p>

<h2>Stay at the conference hotel</h2>

<p>The conference hotel is usually the most expensive option. At the same time, it’s one of the cheapest boosts you can give your conference experience. Staying there makes it much more convenient for you to stay at the bar until 4 AM while making friends and awesome conversation.</p>

<p>It’s also much more convenient when you realize the coffee you’ve spilt on your white shirt during the first session. And even more convenient once you get back with your new shirt and realize you also spilt coffee all over your badge and business cards, and thus have to make yet another trip to the room. I totally did this, and it didn’t take me more than 10 minutes to be back in the game.</p>

<p>Staying at the conference hotel will also make it much easier to hook up for dinner events, going out after the sessions, etc. Basically, it’ll make the tough social game easier – it’ll improve your odds of not becoming a wallflower.</p>

<h2>The PASS Summit</h2>

<p>I’m leaving for Seattle this Saturday. This’ll be my second PASS Summit, and I absolutely can’t wait. I’m fully determined to get the most from the Summit this year, taking advantage of all the after hours events. There are basically public social events Monday – Friday, many days are even double booked.</p>

<p>Make sure to get the most out of the Summit not just by attending all of the great sessions, but by connecting with people – that’s the one thing you can’t do at home sitting in your chair while watching the DVDs!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1374</wp:post_id>
		<wp:post_date>2011-10-05 22:35:38</wp:post_date>
		<wp:post_date_gmt>2011-10-05 20:35:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reflections-on-sqlbits-9-and-getting-the-most-from-conferences</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Reflections on SQLBits 9 and Getting the Most From Conferences]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1099</wp:comment_id>
			<wp:comment_author><![CDATA[Stefan Poulsen]]></wp:comment_author>
			<wp:comment_author_email>cyberzed@sleddog.dk</wp:comment_author_email>
			<wp:comment_author_url>http://cyberzed.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-05 12:02:55</wp:comment_date>
			<wp:comment_date_gmt>2011-10-05 12:02:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[...last but not least be on twitter and follow the official conference hashtag. That's how I meet alot of people at NDC including speakers like Jon Skeet and Philip Laureno...two of the most brainy people I have ever meet.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1100</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-05 12:26:33</wp:comment_date>
			<wp:comment_date_gmt>2011-10-05 12:26:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Stefan<br />Twitter - no doubt. A lot have already been written about Twitter at PASS since it's so prevalent in the SQL Server community.<br /><br />The tags to follow during the Summit will be:<br />#sqlpass<br />#sqlkilt<br />#sqlkaraoke<br />#sqlbeer &lt;- I'll make sure to populate this one!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Keeping Track of Time While Presenting</title>
		<link>http://improve.dk/keeping-track-of-time-while-presenting/</link>
		<pubDate>Fri, 07 Oct 2011 19:51:26 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/06/keeping-track-of-time-while-presenting.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the most important aspects of presenting is to stay within the allotted time slot. You should aim at finishing exactly on time, neither exceeding nor finishing too early.</p>

<p>Some prefer to rely on the room monitor giving you the 15, 10 and 5 minute signs, while others prefer to just watch the clock on the laptop. Personally I prefer neither. Depending on the venue, you may not have a room monitor available. Also, the room monitor might not be as precise as you’d like – giving you 30 min marks, etc. As for using the laptop, that may work well during demos, but while Powerpoint’s running, you’ll have a tough time checking the time.</p>

<p>What I do is to open up my iPad, turn off the auto-locking and maximize the screen brightness. Depending on the style, I’ll then place the iPad in an easily viewable location with a big watch on it. This allows me to always have a clock readily available in an easily readable format. I can also put it on the floor enabling me to walk around, while still being able to get the time by just glancing quickly towards the floor.</p>

<h2>Examples</h2>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/d1rzwd_4.jpg"><img class="alignnone size-full wp-image-2455" alt="d1rzwd_4" src="http://improve.dk/wp-content/uploads/2011/10/d1rzwd_4.jpg" width="1024" height="613" /></a></div></div>

<p><em>Here I am presenting an all day session (as evidenced by the Red Bulls). From my view I have complete control of the time and audience. The timer on the laptop is the Zoomit break timer.</em></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/DSC01610.jpg"><img class="alignnone size-full wp-image-2456" alt="DSC01610" src="http://improve.dk/wp-content/uploads/2011/10/DSC01610.jpg" width="1024" height="768" /></a></div></div>

<p><em>Also works good lying down to avoid blocking anyone’s view of the screen behind me.</em></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/IMAG0648_2.jpg"><img class="alignnone size-full wp-image-2457" alt="IMAG0648_2" src="http://improve.dk/wp-content/uploads/2011/10/IMAG0648_2.jpg" width="1024" height="613" /></a></div></div>

<p><em>Fits snuggly under the mouse wire.</em></p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/311452_10150292274357307_724027306_8401350_506801497_n_4.jpg"><img class="alignnone size-full wp-image-2458" alt="311452_10150292274357307_724027306_8401350_506801497_n_4" src="http://improve.dk/wp-content/uploads/2011/10/311452_10150292274357307_724027306_8401350_506801497_n_4.jpg" width="537" height="720" /></a></div></div>

<p><em>If you look closely, you’ll see the iPad right in front of me, on the floor, allowing me a perfect time view even when walking around on the stage.</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1375</wp:post_id>
		<wp:post_date>2011-10-07 21:51:26</wp:post_date>
		<wp:post_date_gmt>2011-10-07 19:51:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>keeping-track-of-time-while-presenting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="ipad"><![CDATA[iPad]]></category>
		<category domain="post_tag" nicename="time-tracking"><![CDATA[Time tracking]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Keeping Track of Time While Presenting]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1104</wp:comment_id>
			<wp:comment_author><![CDATA[Simon]]></wp:comment_author>
			<wp:comment_author_email>Simon@onarc.com</wp:comment_author_email>
			<wp:comment_author_url>http://sqlblogcasts.com/blogs/simons</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-07 13:21:47</wp:comment_date>
			<wp:comment_date_gmt>2011-10-07 13:21:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great tip<br /><br />I find if I'm doing a demo heavy session then the clock on the taskbar is as good as anything.<br /><br />The key thing is to modulate your speed. Some bits will go faster than expected some slower. If you are going fast then pause ask a few questions of the audience. If you don't get answers why not answer a question that is commonly asked, someone is probably thinking about it.<br /><br />I generally try to have my content shorter than the session so I adapt to the audience and what happens. Having too much content is the number 1 presenting mistake.<br /><br />Reminds me I've got far too much stuff for my PASS precon. Oh dear]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>138250</wp:comment_id>
			<wp:comment_author><![CDATA[PowerPad - Powerpoint Presenters View for Tablets &amp; Phones]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/powerpad-powerpoint-presenters-view-for-tablets-phones/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2013-10-28 15:36:50</wp:comment_date>
			<wp:comment_date_gmt>2013-10-28 14:36:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] as I&#8217;ve already got my iPad next to me when presenting it seems obvious to use that for the presenters view. However, even though I&#8217;ve scoured the [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1382971010.3559420108795166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Live Blogging From the PASS Keynotes</title>
		<link>http://improve.dk/live-blogging-from-the-pass-keynotes/</link>
		<pubDate>Sun, 09 Oct 2011 20:37:15 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/09/live-blogging-from-the-pass-keynotes.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm glad to announce that I'm one of the lucky few who've been appointed a seat at the coveted bloggers table during the PASS Summit keynotes. This means I'll have an excellent view of the leynotes, and I'll be live blogging and tweeting from both.</p>

<p>Wednesday 8:15-10:00 AM, PST:<br />
Ted Kummert, Senior VP, Business Platform Division, Microsoft<br />
Rushabh Mehta, President, PASS</p>

<p>Thursday 8:15-10:00 AM, PST:<br />
Quentin Clark, Corporate VP, SQL Server Database Systems Group, Microsoft<br />
Bill Graziano, Executive VP of Finance, PASS</p>

<p>For both days, 8:15 AM PST will be 4:15 PM in Denmark. The live blogging will be in English, as usual. Once the PASS Summit is over, I'll be following up with a full summary in Danish.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1376</wp:post_id>
		<wp:post_date>2011-10-09 20:37:15</wp:post_date>
		<wp:post_date_gmt>2011-10-09 20:37:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-blogging-from-the-pass-keynotes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="pass-summit"><![CDATA[PASS Summit]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Live Blogging From the 2011 PASS Summit Day 1 Keynote</title>
		<link>http://improve.dk/live-blogging-from-the-2011-pass-summit-day-1-keynote/</link>
		<pubDate>Wed, 12 Oct 2011 15:07:35 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/12/live-blogging-from-the-2011-pass-summit-day-1-keynote.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've found my seat at the Bloggers Table, ready for the beginning of the keynote in just 12 minutes. I’ll be doing my best keeping up with all of the exciting news about to be spilled out.</p>

<p>Todays keynote will be delivered by Ted Kummert (Senior VP, Business Platform Division, Microsoft) and Rushabh Mehta (PASS president).</p>

<p>If you follow this post, I’ll add new comments at the end of the post, ordered by time. Note that my blog aggresively caches content so you may have to clear your session to see the newest version of the post.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/DSC01634.jpg"><img class="alignnone size-full wp-image-2460" alt="DSC01634" src="http://improve.dk/wp-content/uploads/2011/10/DSC01634.jpg" width="1024" height="768" /></a></div></div>

<h2>Live content</h2>

<p><strong>[8:15]</strong><br />Room’s starting to fill up, there’s a LOT of people – looks like way more than last year. Hoping Rushabh will reveal some number porn for us during the keynote!</p>

<p><strong>[8:20]</strong><br />Light dimming down, PASS love testimonials blasting off on the 4 giant screens next to the stage.</p>

<p><strong>[8:23]</strong><br />If you’re not here, remember you can tune in to the live streaming feed here: <a title="http://www.sqlpass.org/summit/2011/Live/LiveStreaming.aspx" href="http://www.sqlpass.org/summit/2011/Live/LiveStreaming.aspx">http://www.sqlpass.org/summit/2011/Live/LiveStreaming.aspx</a></p>

<p><strong>[8:25]</strong><br />Rushabh Mehta on stage. Welcome all – THIS is community!</p>

<p><strong>[8:29]</strong><br />Rushabh talking about goals – 430k technical hours out of 1000k goal. 80k members out of 250k goal. 1 global region out of goal of 5. 20k new members alone this year, impressive!</p>

<p><strong>[8:31]</strong><br />The community has grown – 24HOP, SQLSaturday, SQLRally, PASS Chapters, Virtual Chapters &amp; of course the summit. Also actively collaborating with SQLBits &amp; SQLServerFAQ.</p>

<p><strong>[8:32]</strong><br />PASS – largest single event in the world dedicated to SQL Server &amp; technical BI content.</p>

<p><strong>[8:34]</strong><br />189 sesions, 5 tracks, 204 speakers (93 MVPs, 11 MCMs). Biggest SQL Server event.</p>

<p><strong>[8:39]</strong><br />SQL Server MVP Deep Dives vol II available. Profits going to charity. Get it! Book signing will be happening at the summit.</p>

<p><strong>[8:41]</strong><br />Rushabh welcoming Ted Kummert on stage.</p>

<p><strong>[8:44]</strong><br />”Some database vendors just decided to get into the cloud last week. You know who I’m talking about right?”</p>

<p><strong>[8:46]</strong><br />Over 4,000 registered attendees at the PASS Summit. Largest Summit conference ever!</p>

<p><strong>[8:48]</strong><br />Cloud is not either or, it’s a hybrid world. Some will be in cloud, some will be in your own datacenter. We want to provide choices.</p>

<p><strong>[8:49]</strong><br />Want to offer all the cloud capabilities, SSAS cloud version hinted at.</p>

<p><strong>[8:50]</strong><br />Denali – one of the most significant releases in our history.</p>

<p><strong>[8:51]</strong><br />Crescent will end up as Power View on release.</p>

<p><strong>[8:53]</strong><br />Denali is just around the corner. Official name – SQL Server 2012.</p>

<p><strong>[8:54]</strong><br />Denali / SQL Server 2012 being released in first half of 2012.</p>

<p><strong>[8:55]</strong><br />”Believe in the platform as more than just relational data.”</p>

<p><strong>[8:57]</strong><br />”No one size fits all.” Ted Kummert talking on Big Data.</p>

<p><strong>[8:59]</strong><br />Microsoft supporting the Apache Hadoop project. Make sure it’ll run great on Windows. Is this the belief in “more than just relational data”?</p>

<p><strong>[9:00]</strong><br />Connect Hadoop and Microsoft and offer them together. Microsoft submitting to the Hadoop project to ensure it runs great. “We’re going to connect the dots in our environment.”</p>

<p><strong>[9:01]</strong><br />Ted Kummert welcoming Eric Baldeschwieler (Hortonworks CEO) on stage.</p>

<p><strong>[9:02]</strong><br />Eric looks like he’s about to fall asleep. Should’ve had a Red Bull before going on stage before 4,000 people.</p>

<p><strong>[9:04]</strong><br />”Hadoop could be storing half of the worlds data in five years.”</p>

<p><strong>[9:06]</strong><br />Ted Kummert welcoming Denny Lee on stage (Principal Program Manager, Microsoft). Demo time!</p>

<p><strong>[9:07]</strong><br />”Hadoop for Windows Cluster”.</p>

<p><strong>[9:09]</strong><br />Denny Lee demoing HiveQL querying against Hadoop. Hadoop console 100% compatible with classic Hadoop.</p>

<p><strong>[9:10]</strong><br />Denny Lee showing Excel. Why oh why, I’m here for SQL Server, not Excel. Accessing Hadoop cluster through “Hive/Hadoop ODBC driver” from Excel.</p>

<p><strong>[9:13]</strong><br />CTP of Hadoop on Azure by the end of the year.</p>

<p><strong>[9:14]</strong><br />Always nice with a demo, but really, noone could read console (please use Zoomit next time, don’t use white on black). Rest was just pie charts and Excel with a story of where the data came from.</p>

<p><strong>[9:16]</strong><br />Demo of Data Explorer coming up in just a sec.</p>

<p><strong>[9:17]</strong><br />”Who’s excited to be at PASS today?”. Talking about self service BI – one (yes, ONE) person in the room clapped. That’s a 1:4000 ratio.</p>

<p><strong>[9:19]</strong><br />Ignoring content, it’s obvious that the Metro UI team had a say in the slide &amp; UI design of slide decks and products being demoed. Beautiful.</p>

<p><strong>[9:21]</strong><br />More pie charts. I made my first pie chart back in the 90’s, and I was way late to the game.</p>

<p><strong>[9:22]</strong><br />Oh, Excel just reappeared. What is this, PAE – Professional Association of Excel?</p>

<p><strong>[9:23]</strong><br />Talking about Excel &amp; pie charts. Noone can see the screen, even in front row. Resolution way too high, no usage of Zoomit. You’d think they’d get presenting 101 right for a keynote demo.</p>

<p><strong>[9:29]</strong><br />Not much to update. Demoing at unwatchable resoluition, talking Excel, BI, PowerPivot. It looks cool, but I just don’t believe in production drag’n’drop development/BI.</p>

<p><strong>[9:32]</strong><br />If you ever wondered what a golf clap sounded like, make sure to watch the PASS Summit live stream recordings later today.</p>

<p><strong>[9:36]</strong><br />Amir Netz welcomed on stage. This should be better, hoping for some tech demos. Amir is an excellent demoer, based on previous keynotes.</p>

<p><strong>[9:40]</strong><br />More sales, BI, graphs. At least Amir Netz utilizes Zoomit.</p>

<p><strong>[9:50]</strong><br />Amir showing lots of graphs, doing data mining on movies, actors, etc. Most of todays demos seem to be in building on top of what we saw last year. Hadoop announcement was awesome, rest just seems like slow evolution.</p>

<p><strong>[9:56]</strong><br />Keynote about to end. Lots and lots of Excel, BI and graphs. I saw two interesting announcements:</p>

<ul>
	<li>Denali will be released in first half of 2012 as SQL Server 2012.</li>
	<li>Microsoft actively supporting the Apache Hadoop project and bringing it to the Windows platform.</li>
</ul>

<p><strong>[10:00]</strong><br />Now on to the coffee to wake up from the keynote. Looking forward to live blogging the day 2 keynote tomorrow – it can only be better than what we just saw today.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1377</wp:post_id>
		<wp:post_date>2011-10-12 15:07:35</wp:post_date>
		<wp:post_date_gmt>2011-10-12 15:07:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-blogging-from-the-2011-pass-summit-day-1-keynote</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="pass-summit"><![CDATA[PASS Summit]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Live Blogging From the 2011 PASS Summit Day 2 Keynote</title>
		<link>http://improve.dk/live-blogging-from-the-2011-pass-summit-day-2-keynote/</link>
		<pubDate>Thu, 13 Oct 2011 15:19:19 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/13/live-blogging-from-the-2011-pass-summit-day-2-keynote.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It’s 8:15 AM and I’m back at the bloggers table, ready for the day 2 keynote. The format will be the same as <a href="http://improve.dk/archive/2011/10/12/live-blogging-from-the-2011-pass-summit-day-1-keynote.aspx">yesterday</a>.</p>

<p>On a side note – I’m surprised at how comfortable wearing a kilt is.</p>

<p><strong>[8:18]<br /></strong>Bill Graziano is on stage, cheering at all those of us wearing #sqlkilts. Next up applauding all the volunteers, speakers, chapter leaders, etc. Thank you!</p>

<p><strong>[8:23]<br /></strong>Lori Edwards is awarded the 2011 PASSion award, well deserved!</p>

<p><strong>[8:27]<br /></strong>Video on stage praising new SQL Server 2012 through personal testimonials. Looking forward to hear about the new features, hopefully non-BI today.</p>

<p><strong>[8:30]<br /></strong>Quentin Clark (Corporate VP, SQL Server, Microsoft) on stage. Using the same lovely Metro based slidedeck that we saw yesterday.</p>

<p><strong>[8:31]<br /></strong>Urges us to stop using the word Denali and instead use SQL Server 2012. Lots of hardware &amp; appliances on stage with Quentin – appliances will probably be a big topic, just as it was at SQLBits.</p>

<p><strong>[8:32]<br /></strong>SQL Azure powered by SQL Server 2012 at this point. 180+ new features, can’t showcase all, we’ll see top 12.</p>

<p><strong>[8:35]<br /></strong>Required 9s &amp; Protection: SSIS as a server, HA for StreamInsight, SQL Server AlwaysON – HA/DR being the main keyword.</p>

<p><strong>[8:36]<br /></strong>Bob Erickson (Executive VP of Interlink Transport Technologies) on stage telling about their experiences with SQL Server 2012 Mission Critical deployment. Lots of fancy buzz words, no technical details or practical details.</p>

<p><strong>[8:41]</strong><br />AlwaysON being demoed live on stage. Unfortunately fonts and UI is so small, even with scarse zoomit usage, that noone can see what actually goes on.</p>

<p><strong>[8:44]<br /></strong>Zoomiit used on stage, bloggers table goes wild in applause.</p>

<p><strong>[8:45]<br /></strong>AlwaysON demo is cool and all, but this is the same stuff we’ve seen at multiple presentations already.</p>

<p><strong>[8:47]<br /></strong>Quentin has moved onto the next topic – Blazing Fast Performance.</p>

<p><strong>[8:49]<br /></strong>Performance enhancements in RDBMs engine, SSAS, SSIS, ColumnStore indexes (previously known as Apollo). ColumnStore indexes are seriously interesting. Any kind of demo would’ve been cool.</p>

<p><strong>[8:50]<br /></strong>Quentin moving onto next two topics – Rapid Data Exploration &amp; Managed Self-Service BI. In other words, a rehash of what we saw yesterday. It looks cool, most DBA’s I’ve talked with are somewhat reluctant to letting their users get access to self-service BI.</p>

<p><strong>[8:51]<br /></strong>Credible Consistent Data. Lots of buzz words, hard to extract any practical details.</p>

<p><strong>[8:53]<br /></strong>Quentin welcoming Lara Rubbelke on stage – taking a jab at the Excel demos done yesterday. Demo starts out with Sharepoint interface with miniscule fonts – as usual, noone can see what’s happening. Sounds like this is going into ColumnStore demo.</p>

<p><strong>[8:56]<br /></strong>Lara creating a ColumnStore index live on stage, using Zoomit too. Stil needs to run at way lower resolution for everybody to be able to see what’s happening. Lara ditching the GUI and writing the index in T-SQL instead, lots of cheers from bloggers table.</p>

<p><strong>[9:00]<br /></strong>Lara demoing cloud based DQS, Azure marketplace, ColumnStore indexes.</p>

<p><strong>[9:02]<br /></strong>Quentin onto next topic – Organization Compliance. Added audit options as well as user - defined server roles.</p>

<p><strong>[9:04]<br /></strong>Next topic – Peace of Mind. Production simulated application testing – distributed replay hint. SCOM advisor &amp; management packs. Expanded support – Premier mission critical, no direct details yet.</p>

<p><strong>[9:05]<br /></strong>Next topic – Scalable Data Warehousing + Fast Time to Solution. Hardware vendors delivering hardware applications. HW+SW+Support – turn on the faucet, buy appliances, preoptimized. This is the SQLBits keynote. Choice of hardware – semi-appliance option as well?</p>

<p><strong>[9:10]<br /></strong>Going through hardware on stage, introducing the Dell &amp; HP appliances.for PDW, DW in general. Plug’n’play appliances. Appliances sound great, but aren’t they just overpriced versions of what you can do yourself? Add virtualization and you’ve got a complete appliance in just a VMDK. From boot to data loading / production usage – 20 minutes. If you have the money, this is a great &amp; quick way to get started.</p>

<p><strong>[9:14]<br /></strong>HP appliance can be ordered a month from now. Can start small and scale up – “Don’t know how big you can built it, haven’t reached limit yet”.</p>

<p><strong>[9:19]<br /></strong>Next topic – Extent Any Data, Anywhere – ODBC drivers for Linux – unreadable white on light orange background slide text.</p>

<p><strong>[9:21]<br /></strong>Beyond relational – adding new support for FileTable – FileStream evolved. 2D spatial, semantic search.</p>

<p><strong>[9:25]<br /></strong>Semantic search being demoed on stage by Michael Rys. Semantic search is basically an addition on top of FTS adding more language specific semantic improvements.</p>

<p><strong>[9:28]<br /></strong>Next topic – Optimized Productivity – Juneau / SQL Server Data Tools reference. Shipped with SQL Server 2012. Unified across DB &amp; BI, meaning no more SSMS/BI, just one “studio”. Deployment &amp; targeting freedom – just like .NET dev, we can target a certain platform and be limited to just hte options available. Talking contained databases.</p>

<p><strong>[9:29]<br /></strong>Last topic – Scale on Demand. AlwaysON, deployment across public &amp; private – hybrid cloud/private reference? Elastic scale = cloud reference, spin up many instances. It’s not vertical scaling, this is sharding through SQL Azure.</p>

<p><strong>[9:31]<br /></strong>Nicholas Dritsas on stage demoing deployment through SSMS 2012 / SQL Server Data Tools. “And I know how to get a big applause – Zoomit” – keynote speakers seem to be catching up on the zoomit hype. Thank god!</p>

<p><strong>[9:33]<br /></strong>Speakers referencing zoomit means they’re checking the tweets realtime – excellent.</p>

<p><strong>[9:34]<br /></strong>This is cool – SSMS being used to manage both local and Azure databases. You can now manage Azure without defaulting to the online web based management portal. This will make it much easier to achieve the “hybrid” approach of having both on-premise and cloud based databases.</p>

<p><strong>[9:35]<br /></strong>Now demoing how to do SQL Azure backups to Windows Azure. Lovely, and about time. Why wasn’t this here from the start?</p>

<p><strong>[9:39]<br /></strong>Cihan Biyikoglu entering the stage to talk about Elastic Scale – also known as SQL Azure Federations.</p>

<p><strong>[9:43]<br /></strong>New Azure management portal uses Metro UI, Looks slick, but does it scale?</p>

<p><strong>[9:45]<br /></strong>SQL Azure will now scale up to 150GB. But if only way to do “elastic scaling” is federation, whether it’s 50GB or 150GB doesn’t really change much other than your shard size. Since we’re still limited by unknown hardware, we may not be able to even utilize a 150GB database before having to federate.</p>

<p><strong>[9:47]<br /></strong>Execution plans in the Azure web interface based on Metro, looks slick.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1378</wp:post_id>
		<wp:post_date>2011-10-13 15:19:19</wp:post_date>
		<wp:post_date_gmt>2011-10-13 15:19:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>live-blogging-from-the-2011-pass-summit-day-2-keynote</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="pass-summit"><![CDATA[PASS Summit]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Live Blogging From the 2011 PASS Summit Day 2 Keynote]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>What Do Airlines Use for Primary Keys?</title>
		<link>http://improve.dk/what-do-airlines-use-for-primary-keys/</link>
		<pubDate>Thu, 20 Oct 2011 19:37:52 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/20/what-do-airlines-use-for-primary-keys.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>On my way home from the PASS Summit in Seattle, I had a layover in Amsterdam before continuing onto Copenhagen. For various reasons, we were about one and a half hours delayed, and I arrived in AMS at 9:30, my CPH flight departing at 9:35. As you’d probably guessed, I missed my flight.</p>

<p>To fix it, I was told to do a check-in at one of the self-service counters at the transfer desk. Apparently these both do normal check-ins, as well as (supposedly), get you a replacement flight in case you missed the normal one. I stuck my passport into the scanner and it gladly popped up with a new flight to Copenhagen about 4 hours later. Great! Well, except my name wasn’t on the check-in list, two other (unknown to me) Danish names were. However, I did share a surname with one of them.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/delta-air-france-klm_2.jpg"><img class="size-full wp-image-2462 alignright" alt="delta-air-france-klm_2" src="http://improve.dk/wp-content/uploads/2011/10/delta-air-france-klm_2.jpg" width="300" height="300" /></a></div></div>

<p>After asking one of the attendants I was told, “Oh, that’s because your flight has already departed, it’ll try to find the nearest match”. Áha, so if there’s no 1:1 match, it’ll just try to find the best match of an existing booking to a non-departed flight – and apparently the best it could find was a two-person ticket for a flight 4 hours later. Now, it was for the same destination, and I did share my surname with one of the passengers, but it surely wasn’t my ticket. Still, I was able to check-in as them and confirm “my” ticket.</p>

<p>So this leaves me the question, what in the world do they (Delta/KLM/AF) use as the primary key for their ticketing system? Once my passport is scanned, and they’ve got my passport number, how can there be <em>any</em> doubt as to who I am? How in the world can I get to check-in two completely, to me, unrelated passengers on a flight I’m not going on myself?</p>

<p>I ended up getting booked for another flight to another (closer to my home) destination in Denmark, but it did require manual intervention from the service desk.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1379</wp:post_id>
		<wp:post_date>2011-10-20 19:37:52</wp:post_date>
		<wp:post_date_gmt>2011-10-20 19:37:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>what-do-airlines-use-for-primary-keys</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="primary-key"><![CDATA[Primary key]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[What Do Airlines Use for Primary Keys?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OrcaMDF Now Supports Databases With Multiple Data Files</title>
		<link>http://improve.dk/orcamdf-now-supports-databases-with-multiple-data-files/</link>
		<pubDate>Mon, 24 Oct 2011 20:46:18 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/24/orcamdf-now-supports-databases-with-multiple-data-files.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the latest features I’ve added to <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> is support of databases with multiple data files. This required relatively little parsing changes, actually it was mostly bug fixing code that wasn’t hit previously, due to only working with single file databases. It did however require some major refactoring to move away from MdfFile being the primary entrypoint, to now using the Database class, encapsulating a variable number of DataFiles.</p>

<h2>Proportional fill allocation</h2>

<p>OrcaMDF supports the standard proportional fill allocation scheme where a table is created in the database, being bound to the default PRIMARY filegroup containing all the data files. As an example, you might create the following database &amp; schema:</p>

<pre lang="tsql" escaped="true">CREATE DATABASE
	[SampleDatabase]
ON  PRIMARY 
	(
		NAME = N'SampleDatabase_Data1',
		FILENAME = N'C:SampleDatabase_Data1.mdf',
		SIZE = 3072KB,
		FILEGROWTH = 1024KB
	), 
	(
		NAME = N'SampleDatabase_Data2',
		FILENAME = N'C:SampleDatabase_Data2.ndf',
		SIZE = 3072KB,
		FILEGROWTH = 1024KB
	), 
	(
		NAME = N'SampleDatabase_Data3',
		FILENAME = N'C:SampleDatabase_Data3.ndf',
		SIZE = 3072KB,
		FILEGROWTH = 1024KB
	)
LOG ON
	(
		NAME = N'SampleDatabase_log',
		FILENAME = N'C:SampleDatabase_log.ldf',
		SIZE = 3072KB,
		FILEGROWTH = 10%
	)
GO

USE SampleDatabase
GO

CREATE TABLE MyTable
(
	A int identity,
	B uniqueidentifier default(newid()),
	C char(6000)
)
GO

INSERT INTO MyTable DEFAULT VALUES
GO 100</pre>

<p>This would cause MyTable to be proportionally allocated between the three data files (the C column being used for the fill to require 100 pages of storage – to ensure we hit all three data files). And to parse it, all you’d do is the following:</p>

<pre lang="csharp" escaped="true">var files = new[]
    {
		@"C:SampleDatabase_Data1.mdf",
		@"C:SampleDatabase_Data2.ndf",
		@"C:SampleDatabase_Data3.ndf"
    };

using (var db = new Database(files))
{
	var scanner = new DataScanner(db);
	var result = scanner.ScanTable("MyTable");

	EntityPrinter.Print(result);
}</pre>

<p>And when run, you’ll see this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_6.png"><img class="alignnone size-full wp-image-2464" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/10/image_6.png" width="510" height="358" /></a></div></div>

<p>All the way down to 100. Notice how the A column identity value is jumping – this is due to the fact that we’re allocating one extent per data file in round robin fashion. ID’s 1-8 in the first data file, 9-16 in the second data file and finally 17-24 in the third data file. At this point pages 25-32 are allocated in the first data file again, and so on. Since it’s a heap, we’re scanning these in allocation order – by file. That causes us to get results 1-8, 25-32, 49-56, 73-80 and finally 97-100 all from the first file first, and then 9-16, 33-40, etc. from the second and finally the remaining pages from the third data file. Think that looks weird? Well, it’s exactly the same for SQL Server:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_8.png"><img class="alignnone size-full wp-image-2465" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/10/image_8.png" width="357" height="597" /></a></div></div>

<h2>Filegroup support</h2>

<p>OrcaMDF also supports the use of filegroups, including proportional fill allocation within a specific filegroup. As an example, you might create the following database &amp; schema:</p>

<pre lang="tsql" escaped="true">CREATE DATABASE
	[SampleDatabase]
ON  PRIMARY 
	(
		NAME = N'SampleDatabase_Data1',
		FILENAME = N'C:SampleDatabase_Data1.mdf',
		SIZE = 3072KB,
		FILEGROWTH = 1024KB
	)
LOG ON
	(
		NAME = N'SampleDatabase_log',
		FILENAME = N'C:SampleDatabase_log.ldf',
		SIZE = 3072KB,
		FILEGROWTH = 10%
	)
GO

ALTER DATABASE
	[SampleDatabase]
ADD FILEGROUP
	[SecondFilegroup]
GO

ALTER DATABASE
	[SampleDatabase]
ADD FILE
	(
		NAME = N'SampleDatabase_Data2',
		FILENAME = N'C:SampleDatabase_Data2.ndf',
		SIZE = 3072KB,
		FILEGROWTH = 1024KB
	),
	(
		NAME = N'SampleDatabase_Data3',
		FILENAME = N'C:SampleDatabase_Data3.ndf',
		SIZE = 3072KB,
		FILEGROWTH = 1024KB
	)
TO FILEGROUP
	[SecondFilegroup]
GO

USE SampleDatabase
GO

CREATE TABLE MyTable
(
	A float default(rand()),
	B datetime default(getdate()),
	C uniqueidentifier default(newid()),
	D char(5000)
) ON [SecondFilegroup]
GO

INSERT INTO MyTable DEFAULT VALUES
GO 100</pre>

<p>This would cause MyTable to be proportionally allocated in the second and third datafile (the D column being used for fill to require 100 pages of storage – to ensure we hit both data files in the filegroup), while the primary data file is left untouched. To parse it, you’d do the exact same as in the previous example, and the result would be:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_4.png"><img class="alignnone size-full wp-image-2466" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/10/image_4.png" width="673" height="355" /></a></div></div>

<p>... All the way down to 100.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1380</wp:post_id>
		<wp:post_date>2011-10-24 20:46:18</wp:post_date>
		<wp:post_date_gmt>2011-10-24 20:46:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-now-supports-databases-with-multiple-data-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Now Supports Databases With Multiple Data Files]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>How to Set Up and Serve Private Content Using S3 and Amazon CloudFront</title>
		<link>http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/</link>
		<pubDate>Wed, 26 Oct 2011 19:53:51 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/10/25/how-to-set-up-and-serve-private-content-using-s3-and-amazon-cloudfront.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Imagine the scenario – you’ve got customers all over the world all requesting binary files from you. To speed up your delivery, you want to utilize a CDN. Furthermore, all of the files needs to be protected on a specific user session level. Basically, you need to grant access to the specific file when a given user logs in – it’s not enough just to have a “hidden” URL or a URL with an infinitely sharable policy in the query string.</p>

<p>To do this, we’ll need to set up a private S3 bucket, a private CloudFront distribution, a bucket policy on said bucket so CloudFront is able to access the data, and finally we need to generate signed policies for the users on the fly, so they may retrieve the files using CloudFront.</p>

<p>To keep this post simple (relatively speaking), I’ll assume you’ve got a completely empty AWS account with access to S3 and CloudFront. Don’t worry if you’ve got existing content, you’ll just need to modify the scripts slightly to access the right objects (as I’m assuming an empty account, I’ll just access the <em>first</em> element here and there, instead of the specific one).</p>

<h3>Why you don’t want to rely on third party GUIs</h3>

<p>Admittedly, I used <a href="http://www.bucketexplorer.com/" target="_blank">Bucket Explorer</a> to begin with, to help me set up access identities and private distributions. However, as soon as I had a need that Bucket Explorer couldn’t help me with, or I had hiccups, I was totally lost. If you rely on third party GUIs to do the setup for you, you have very limited understanding of what’s actually being set up beneath the covers, and as such, you’ll be in a pickle when (no, not if!) something goes awry. Once you’ve done the setup by hand, you may later start using tools, but only if you understand what they’re doing.</p>

<p>Note that this is not a bash on Bucket Explorer, just my opinion never to use tooling before you understand what they do, just as I wouldn’t recommend you use TortoiseGit before you know the command line by heart.</p>

<h2>The AWS console only takes you so far</h2>

<p>While the AWS console is great in itself, it’s really only meant for the simplest of tasks. Very quickly you’ll find yourself limited by what you can do. For what we’re about to do, all you’d be able to do through the console GUI is to create a bucket, the rest would have to be done through code. To keep things consistent, I’m sticking to code for all tasks.</p>

<p>Before we start, <a href="http://aws.amazon.com/sdkfornet/" target="_blank">download the Amazon AWS .NET SDK</a> and create a template console application like this:</p>

<pre escaped="true" lang="csharp">using System;
using Amazon;
using Amazon.CloudFront.Model;
using Amazon.S3;
using Amazon.S3.Model;

namespace AWSTest 
{ 
    class Program 
    { 
        private static string accessKeyID = "AKI..."; 
        private static string secretAccessKey = "w49...";

        static void Main() 
        { 

        } 
    } 
}</pre>

<p>Make sure to insert your own access key ID and secret access key values. All code samples posted from now on should go into the Main() method body.</p>

<h2>Creating the private bucket</h2>

<p>Run the following code to set up a bucket, which will be private by default. Make sure you define a unique bucket name, I’m using the name <em>improve.dk</em> for this sample. Note that if your bucket is not in the EU region, you’ll need to substitute my ServiceURL with the one for your region. You can find all the service URLs here: <a title="http://docs.amazonwebservices.com/general/latest/gr/index.html?rande.html" href="http://docs.amazonwebservices.com/general/latest/gr/index.html?rande.html" target="_blank">http://docs.amazonwebservices.com/general/latest/gr/index.html?rande.html</a></p>

<pre escaped="true" lang="csharp">var config = new AmazonS3Config()
	.WithServiceURL("s3-eu-west-1.amazonaws.com");

using (var s3Client = AWSClientFactory.CreateAmazonS3Client(accessKeyID, secretAccessKey, config))
{
	var request = new PutBucketRequest()
		.WithBucketName("improve.dk")
		.WithBucketRegion(S3Region.EU);

	var response = s3Client.PutBucket(request);
}</pre>

<p>If all goes well, you should see your bucket in the AWS console immediately hereafter:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_16.png"><img class="alignnone size-full wp-image-2469" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/10/image_16.png" width="1024" height="521" /></a></div></div>

<h2>Creating a CloudFront Origin Access Identity</h2>

<p>Now that we’ve got our bucket, we need to create the private CloudFront distribution. However, we also need to concoct a way for the private distribution to gain access to our private bucket. We can do so by utilizing a special type of CloudFront identities called Origin Access Identities, which I’ll be referring to as OAI’s.</p>

<p>Creating an OAI allows us to tell CloudFront to access the S3 bucket using that OAI. On the bucket side, we can then create a policy granting access to that specific OAI, and thus enabling our private distribution access to our private bucket.</p>

<p>Run the following code:</p>

<pre escaped="true" lang="csharp">using (var cfClient = AWSClientFactory.CreateAmazonCloudFrontClient(accessKeyID, secretAccessKey))
{
	var oaiConfig = new CloudFrontOriginAccessIdentityConfig()
		.WithComment("OAI used for private distribution access to improve.dk bucket.");

	var request = new CreateOriginAccessIdentityRequest();
	request.OriginAccessIdentityConfig = oaiConfig;

	var response = cfClient.CreateOriginAccessIdentity(request);
	Console.WriteLine(response.OriginAccessIdentity.Id);
	Console.WriteLine(response.OriginAccessIdentity.S3CanonicalUserId);
}</pre>

<p>This creates a new OAI with a comment. Furthermore it prints out two bits of information that we’ll need shortly – the OAI ID and the OAI S3 canonical user ID. These are two different ways of identifying the OAI, and we’ll need both, so make sure to jot them down.</p>

<h2>Creating the private CloudFront distribution</h2>

<p>Now that we have our bucket and OAI, we can set up a private CloudFront distribution and point it at the S3 bucket.</p>

<p>Run the following code:</p>

<pre escaped="true" lang="csharp">using (var cfClient = AWSClientFactory.CreateAmazonCloudFrontClient(accessKeyID, secretAccessKey))
{
	var oaiIdentity = cfClient.ListOriginAccessIdentities().OriginAccessIdentities[0];

	var distributionConfig = new CloudFrontDistributionConfig();
	distributionConfig.S3Origin = new S3Origin("improve.dk.s3.amazonaws.com", oaiIdentity);
	distributionConfig.Comment = "Private distribution for accessing the improve.dk bucket.";
	distributionConfig.Enabled = true;
	distributionConfig.TrustedSigners = new UrlTrustedSigners().WithEnableSelf(true);

	var request = new CreateDistributionRequest();
	request.DistributionConfig = distributionConfig;

	var response = cfClient.CreateDistribution(request);
}</pre>

<p>This starts out by fetching the OAI we created just before. It then creates a new distribution configuration, specifying the improve.dk S3 bucket as the source, using the OAI for authentication. The TrustedSigners parameter determines who will be able to sign (and thereby grant access) to the distribution later on. For this demo, we’ll just grant access to our own AWS account. You may grant access to up to 5 other AWS accounts, should you so wish.</p>

<p>Once run, you should immediately see your distribution being in the InProgress state in the AWS console. This picture is taken approximately 10 minutes later, when the distribution enters the Deployed state:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_14.png"><img class="alignnone size-full wp-image-2470" alt="image_14" src="http://improve.dk/wp-content/uploads/2011/10/image_14.png" width="1024" height="521" /></a></div></div>

<h2>Setting up a bucket policy to grant our OAI access to the S3 bucket</h2>

<p>When we upload objects to our bucket, we <em>could</em> grant access to the OAI on each specific object. That will require an extra request for each upload though, as we can’t assign ACL’s at the same time as we create objects. It would also be a major hassle if we ever were to change our OAI/distribution. To make it easier, we can create a bucket wide policy that grants access to all the objects in the bucket, for one specific OAI.</p>

<p>Open up the <a href="http://awspolicygen.s3.amazonaws.com/policygen.html" target="_blank">AWS Policy Generator tool</a> in a new window. Make sure to select the S3 Bucket Policy type. In the Principal field, enter the S3 canonical user ID of the OAI we created earlier. For actions, only select the GetObject action – this allows the distribution to retrieve an object and nothing more. For the ARN, use this, though with your own bucket name:</p>

<pre class="plain">arn:aws:s3:::improve.dk/*</pre>

<p>That ARN will ensure the policy covers all objects in the bucket, no matter their name. Now click the Add Statement button, followed by the Generate Policy button. What you’ll end up with is a JSON based policy like this:</p>

<pre class="plain">{
  "Id": "Policy1319566876317",
  "Statement": [
    {
      "Sid": "Stmt1319566860498",
      "Action": [
        "s3:GetObject"
      ],
      "Effect": "Allow",
      "Resource": "arn:aws:s3:::improve.dk/*",
      "Principal": {
        "AWS": [
          "7d76be60a0acc160399f6d6750bdc9d4d78d16a58a30987844d4df010f2ded483a9e73b8b0877089fab75f5d0b591dee"
        ]
      }
    }
  ]
}</pre>

<p>However, this won’t work yet! You need to change the “AWS” principal value into “CanonicalUser”, like so:</p>

<pre class="plain">{
  "Id": "Policy1319566876317",
  "Statement": [
    {
      "Sid": "Stmt1319566860498",
      "Action": [
        "s3:GetObject"
      ],
      "Effect": "Allow",
      "Resource": "arn:aws:s3:::improve.dk/*",
      "Principal": {
        "CanonicalUser": [
          "7d76be60a0acc160399f6d6750bdc9d4d78d16a58a30987844d4df010f2ded483a9e73b8b0877089fab75f5d0b591dee"
        ]
      }
    }
  ]
}</pre>

<p>Now that we have the policy ready, we need to add it to our bucket. Run the following code:</p>

<pre escaped="true" lang="csharp">var config = new AmazonS3Config()
	.WithServiceURL("s3-eu-west-1.amazonaws.com");

using (var s3Client = AWSClientFactory.CreateAmazonS3Client(accessKeyID, secretAccessKey, config))
{
	var request = new PutBucketPolicyRequest();
	request.BucketName = "improve.dk";
	request.Policy = "{ "Id": "Policy1319566876317", "Statement": [ { "Sid": "Stmt1319566860498", " +
		""Action": [ "s3:GetObject" ], "Effect": "Allow", "Resource": "arn:aws:s3:::improve.dk/*", " +
		""Principal": { "CanonicalUser": [ "7d76be60a0acc160399f6d6750bdc9d4d78d16a58a30987844d4df010f2ded483a9e73b8b0877089fab75f5d0b591dee" ] } } ] }";

	var response = s3Client.PutBucketPolicy(request);
}</pre>

<p>Make sure you escape your policy properly. There’s no need to concatenate it over multiple lines, I just did so only to avoid too much website distortion when displayed here.</p>

<h2>Uploading a test object</h2>

<p>To test everything out, we need to have a test object in our bucket. It can be anything, though an image is probably the easiest to test with. I used this little dapper AWS logo:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/logo_aws_thumb.gif"><img class="alignnone size-full wp-image-2472" alt="logo_aws_thumb" src="http://improve.dk/wp-content/uploads/2011/10/logo_aws_thumb.gif" width="168" height="64" /></a></div></div>

<p>Run the following code to upload the object:</p>

<pre escaped="true" lang="csharp">var config = new AmazonS3Config()
	.WithServiceURL("s3-eu-west-1.amazonaws.com");

using (var s3Client = AWSClientFactory.CreateAmazonS3Client(accessKeyID, secretAccessKey, config))
{
	var request = new PutObjectRequest()
		.WithFilePath(@"C:logo_aws.gif")
		.WithBucketName("improve.dk");

	var response = s3Client.PutObject(request);
}</pre>

<p>Make sure to substitute with your own bucket name as well as the correct path for whatever test file you’re using. Immediately after running this you should see the file in your bucket:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_12.png"><img class="alignnone size-full wp-image-2474" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/10/image_12.png" width="941" height="584" /></a></div></div>

<p>If you enter the properties of the object, you’ll see a link like this:</p>

<a title="https://s3-eu-west-1.amazonaws.com/improve.dk/logo_aws.gif" href="https://s3-eu-west-1.amazonaws.com/improve.dk/logo_aws.gif" target="_blank">https://s3-eu-west-1.amazonaws.com/improve.dk/logo_aws.gif</a>

<p>If you try to access the URL directly, you should get an error like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_18.png"><img class="alignnone size-full wp-image-2480" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/10/image_18.png" width="749" height="302" /></a></div></div>

<p>This is expected, given that our bucket is private and we’re currently accessing the object directly from the bucket. If you go back to your distribution, you’ll see a domain name like d2ya0f2cfwcopc.cloudfront.net. Try substituting the S3 domain name with the one of your distribution, like so:</p>

<p><a title="https://s3-eu-west-1.amazonaws.com/improve.dk/logo_aws.gif" href="https://s3-eu-west-1.amazonaws.com/improve.dk/logo_aws.gif" target="_blank">https://s3-eu-west-1.amazonaws.com/improve.dk/logo_aws.gif</a> =&gt; <a href="https://d2ya0f2cfwcopc.cloudfront.net/logo_aws.gif" target="_blank">https://d2ya0f2cfwcopc.cloudfront.net/logo_aws.gif</a></p>

<p>Accessing the distribution URL doesn’t help however:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_20.png"><img alt="image_20" src="http://improve.dk/wp-content/uploads/2011/10/image_20.png" width="749" height="302" /></a></div></div>

<p>Once again we’re not allowed access. This time not due to S3 policies, but due to the distribution being private and thus requiring signed URLs.</p>

<h2>Creating a time limited signed URL for a given object</h2>

<p>Now that we have the URL of our distribution object, we need to sign it with a policy granting access to it for a given time period. To do the signing, I’ve create a class based on <a href="http://stackoverflow.com/questions/2284206/how-to-encrypt-amazon-cloudfront-signature-for-private-content-access-using-cann/2545017#2545017" target="_blank">Gael Fraiteurs post on Stack Overflow</a>. His class deals with canned policies, whereas this one deals with custom policies as they’re a bit more dynamic, configurable and thereby powerful.</p>

<p align="left">Add the following class to your project:</p>

<pre escaped="true" lang="csharp">using System;
using System.Security.Cryptography;
using System.Text;

namespace AWSTest
{
	public class CloudFrontSecurityProvider
	{
		private readonly RSACryptoServiceProvider privateKey;
		private readonly string privateKeyId;
		private readonly SHA1Managed sha1 = new SHA1Managed();

		public CloudFrontSecurityProvider(string privateKeyId, string privateKey)
		{
			this.privateKey = new RSACryptoServiceProvider();
			RSACryptoServiceProvider.UseMachineKeyStore = false;

			this.privateKey.FromXmlString(privateKey);
			this.privateKeyId = privateKeyId;
		}

		private static int getUnixTime(DateTime time)
		{
			var referenceTime = new DateTime(1970, 1, 1);
			return (int)(time - referenceTime).TotalSeconds;
		}

		public string GetCustomUrl(string url, DateTime expiration)
		{
			string expirationEpoch = getUnixTime(expiration).ToString();

			string policy =
				@"{""Statement"":[{""Resource"":""&lt;url&gt;"",""Condition"":{""DateLessThan"":{""AWS:EpochTime"":&lt;expiration&gt;}}}]}".
					Replace("&lt;url&gt;", url).
					Replace("&lt;expiration&gt;", expirationEpoch);

			string signature = getUrlSafeString(sign(policy));

			return url + string.Format("?Policy={0}&amp;Signature={1}&amp;Key-Pair-Id={2}", getUrlSafeString(Encoding.ASCII.GetBytes(policy)), signature, privateKeyId);
		}

		private static string getUrlSafeString(byte[] data)
		{
			return Convert.ToBase64String(data).Replace('+', '-').Replace('=', '_').Replace('/', '~');
		}

		private byte[] sign(string data)
		{
			byte[] plainbytes = Encoding.UTF8.GetBytes(data);

			byte[] hash = sha1.ComputeHash(plainbytes);

			return privateKey.SignHash(hash, "SHA1");
		}
	}
}</pre>

<h3>Creating CloudFront key pairs</h3>

<p>Before we can use it though, we need a CloudFront key pair. Go to the Access Credentials section of the Security Credentials section of the AWS console, click on the Key Pairs pane, and then click “Create a New Key Pair”. If successful, a key pair should have been created, and the private part of the key should have been downloaded as a .pem file automatically:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_24.png"><img class="alignnone size-full wp-image-2477" alt="image_24" src="http://improve.dk/wp-content/uploads/2011/10/image_24.png" width="935" height="542" /></a></div></div>

<p>Make sure to save the .pem file as it cannot be recreated. If you loose it, you’ll have to create a new key pair. Note that these credentials have nothing to do with your access key ID &amp; secret key – those are a completely separate set of keys. Before we can use the .pem secret key, we need to transform it into an XML format that RSACryptoServiceProvider can parse. Go to <a href="http://www.jensign.com/opensslkey/" target="_blank">http://www.jensign.com/opensslkey/</a> and download the opensslkey.exe application – save it in the same directory as your .pem file. If you don’t like running the .exe, the source code is available for you to compile and run yourself.</p>

<p>Run opensslkey.exe and give it the name of your .pem file like so:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_26.png"><img class="alignnone size-full wp-image-2478" alt="image_26" src="http://improve.dk/wp-content/uploads/2011/10/image_26.png" width="837" height="414" /></a></div></div>

<h3>Creating the actual signed URL</h3>

<p>One way or the other, copy that &lt;RSAKeyValue&gt; bit of XML. Now run the following code, substituting my CloudFront key pair and object URL with your own:</p>

<pre escaped="true" lang="csharp">[STAThread]
static void Main()
{
	string keyPairID = "APKAILAOYMDETYTM7NYQ";
	string secretKey = @"
		&lt;RSAKeyValue&gt;
			&lt;Modulus&gt;kp2udNofRGbbiMtFLWMFMGB1U67JWq2EYqLR0qbfFnOd2kMnY7UUMLLf/uPdf9RsEZxA3wnbIS6fH2vesHYkk=&lt;/Modulus&gt;
			&lt;Exponent&gt;AQAB&lt;/Exponent&gt;
			&lt;P&gt;6GhWFDM89x69lp3b93RACdm9yQBjbrP9+ySIiaiy8htXxxKYF5fEn0TRQEzo3FLFG/cf17ozrFAtHV6rqMaRFQ==&lt;/P&gt;
			&lt;Q&gt;oX/Yg4huItINr9SfLmOdZ0y/ysPykmvcESwuXjJiLNB+V5My5AWDSgucE8ZuqT5wvMQJ93DZPpLX0+P6esbRZQ==&lt;/Q&gt;
			&lt;DP&gt;BepB5pm3P4LkyGSUKKQozRdhoTAFV9f06uNvJjHI/Ch9/28Vt+QA+RzDRqOueY0Rvzh28wKmNgiEXW7/Z3hGUQ==&lt;/DP&gt;
			&lt;DQ&gt;F8y5YZjnciY2ciUJWFLBzYlX8k+yHbXbdoRmSOdv5F7NX6aHp2bQlEblt1xUzogvIQJa3aY5vajyOX2tWg6WqQ==&lt;/DQ&gt;
			&lt;InverseQ&gt;cMc+6NMLU1A6LbOeNikuVRbGu43HoG+hECnEzhk6VtQQO3HiUCUdCuZ1lBZegm5YecURbSZ+pWnGok5tqo//gA==&lt;/InverseQ&gt;
			&lt;D&gt;HBgW69E4GJVVD9tTgCTvQ5vYH5bognWpXnUwm5raOKUitBsxABDFISmOfYjwwx2cE4lTR18r4Fgqt0jxOXVBzWE=&lt;/D&gt;
		&lt;/RSAKeyValue&gt;";

	var provider = new CloudFrontSecurityProvider(keyPairID, secretKey);
	var signedUrl = provider.GetCustomUrl("https://d2ya0f2cfwcopc.cloudfront.net/logo_aws.gif", DateTime.Now.AddMinutes(5));

	Clipboard.SetText(signedUrl);
	Console.WriteLine(signedUrl);
	Console.Read();
}</pre>

<p>Note how we instantiate the CloudFrontSecurityProvider, passing in the CloudFront key pair ID and secret key. We then give it the complete URL of the file we want, including a time limit for when it should no longer be available – 5 minutes in this case. For the sake of simplicity, I’m automatically copying the URL to the clipboard so I can easily paste it into my browser and test it. In my case, my complete URL looks like this:</p>

<pre class="plain">https://d2ya0f2cfwcopc.cloudfront.net/logo_aws.gif?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiaHR0cHM6Ly9kMnlhMGYyY2Z3Y29wYy5jbG91ZGZyb250Lm5ldC9sb2dvX2F3cy5naWYiLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjEzMTk1NzkzNzd9fX1dfQ__&amp;Signature=CBnOaq5mO~RHhHo9fmK~hIxYSG4RC4IuZHJtH8Yk00p97Ihhy-yYYdggqbkdY68L1Vf7POVCjbf7gpdC5hJ9AHl5bTeWZyHLQXzXstHlOF~BgAyxNUPWQvSZPcwY6qpkKzMwrq2OU4tut7749TAgYfXt3BiGPmQF-8GFIEXB8iI_&amp;Key-Pair-Id=APKAILAOYMDETYTM7NYQ</pre>

<p>By the time you read this, hopefully, the link should no longer be working. If you upload another file (IMAG0655.jpg in my case) and just substitute the filename, using the same policy, you’ll get the following error:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/10/image_28.png"><img class="alignnone size-full wp-image-2476" alt="image_28" src="http://improve.dk/wp-content/uploads/2011/10/image_28.png" width="697" height="313" /></a></div></div>

<h3>Using wildcards when signing URLs</h3>

<p>So what if you want to grant access to many files at once, do we have to create a policy for each single one? Thankfully, no, we don’t! Say you want to grant access to all files in the folder “Test” (and remember, there is no such thing as folders in S3 – just objects named e.g. /Test/FileName.jpg). What we’d do is to create a policy like this:</p>

<pre escaped="true" lang="csharp">var signedUrl = provider.GetCustomUrl("https://d2ya0f2cfwcopc.cloudfront.net/Test/*", DateTime.Now.AddMinutes(5));</pre>

<p>That’s right, we can create custom policies for wildcard URLs too! Once you’ve got this URL, just substitute the asterisk for whatever file you want to request:</p>

<pre class="plain">
https://d2ya0f2cfwcopc.cloudfront.net/Test/A.jpg?Policy=eyJTdGF0ZW1lbnQiOlt7I...<br />https://d2ya0f2cfwcopc.cloudfront.net/Test/B.jpg?Policy=eyJTdGF0ZW1lbnQiOlt7I...<br />https://d2ya0f2cfwcopc.cloudfront.net/Test/C.jpg?Policy=eyJTdGF0ZW1lbnQiOlt7I...
</pre>

<p>All using the same policy, just with a different file paths.</p>

<h3>Limiting the users IP address</h3>

<p>At this point we’ve created a URL with a custom signed policy that grants access to a given resource (or wildcard) within a limited time period. However, within this period, the user may distribute the URL to anyone else, who will then also be able to access the resource. To hinder this, we can add the source IP address as an additional condition to the policy!</p>

<p>Add an overload to the GetCustomUrl function in the CloudFrontSecurityProvider class like so:</p>

<pre escaped="true" lang="csharp">public string GetCustomUrl(string url, DateTime expiration, string allowedCidr)
{
	string expirationEpoch = GetUnixTime(expiration).ToString();

	string policy =
		@"{""Statement"":[{""Resource"":""&lt;url&gt;"",""Condition"":{""IpAddress"":{""AWS:SourceIp"":""&lt;cidr&gt;""}, ""DateLessThan"":{""AWS:EpochTime"":&lt;expiration&gt;}}}]}"
			.Replace("&lt;url&gt;", url)
			.Replace("&lt;expiration&gt;", expirationEpoch)
			.Replace("&lt;cidr&gt;", allowedCidr);

	string signature = getUrlSafeString(sign(policy));

	return url + string.Format("?Policy={0}&amp;Signature={1}&amp;Key-Pair-Id={2}", getUrlSafeString(Encoding.ASCII.GetBytes(policy)), signature, privateKeyId);
}</pre>

<p>To use it, we just pass in an IP address in the <a href="http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing" target="_blank">CIDR</a> format:</p>

<pre escaped="true" lang="csharp">var signedUrl = provider.GetCustomUrl("https://d2ya0f2cfwcopc.cloudfront.net/D.jpg", DateTime.Now.AddMinutes(5), "212.242.193.110/32");</pre>

<p>The above example would provide access to the D.jpg object for 5 minutes, but only for the 212.242.193.110 IP address specifically. We could grant access to a whole subnet by passing in the IP/CIDR 212.242.193.0/24, etc.</p>

<p>You can only use the date and source IP address for conditions, contrary to other AWS policies that allow a plethora of conditions. For a full description, see page 80+ in this document: <a href="http://awsdocs.s3.amazonaws.com/CF/latest/cf_dg.pdf" target="_blank">http://awsdocs.s3.amazonaws.com/CF/latest/cf_dg.pdf</a></p>

<h2>Conclusion</h2>

<p>This seems way more complex than it... Who am I kidding? This IS complex to set up! However, at this point, you can upload any number of objects to your bucket, and you never have to consider object-level ACLs as it’s all handled by the bucket policy. You can also create any number of custom policies for your URLs using your private distribution, limiting both the time period in which the link is valid, as well as the source IP address. Once all of this is setup, it’s rather easy to use.</p>

<p>Utilizing private S3 buckets and private CloudFront distributions, we can now secure our content completely while having very fine grained control over who gets access. All this while we still utilize the CloudFront CDN to deliver the content from the destination nearest to the end user.</p>

<p>PS – before you remind me the remove them – all keys, user identities etc. have all been inactivated/removed.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1381</wp:post_id>
		<wp:post_date>2011-10-26 21:53:51</wp:post_date>
		<wp:post_date_gmt>2011-10-26 19:53:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-set-up-and-serve-private-content-using-s3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="amazon-web-services"><![CDATA[Amazon Web Services]]></category>
		<category domain="post_tag" nicename="cloudfront"><![CDATA[CloudFront]]></category>
		<category domain="post_tag" nicename="s3"><![CDATA[S3]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[how-to-set-up-and-serve-private-content-using-s3-and-amazon-cloudfront]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[How to Set Up and Serve Private Content Using S3 and Amazon CloudFront]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1106</wp:comment_id>
			<wp:comment_author><![CDATA[Rudolf B]]></wp:comment_author>
			<wp:comment_author_email>rudolfb@miracletutorials.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.miracletutorials.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-27 20:55:52</wp:comment_date>
			<wp:comment_date_gmt>2011-10-27 20:55:52</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I found bucket explorer cumbersome too and rather expensive for what you get. If you seek to work with S3 amazon seriously, the AWS console is simply no option, it is too slow and primitive to work with.<br />You should check out CloudBerry S3 Explorer. It is the photoshop of S3 amazon clients and it is free.<br />It practically automates all these things for you, including policies thanks to the easy wizards. <br /><br />I actually tested over 10 applications and the only one that came out tops was CloudBerry S3 Explorer.  On Mac, I use CrossFTP, which is not as good as CloudBerry, but it comes close. <br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1107</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-27 21:54:18</wp:comment_date>
			<wp:comment_date_gmt>2011-10-27 21:54:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[As I mentioned in the beginning of my post, I wasn't bashing Bucket Explorer explicitly, although that's just the tool I used. I won't recommend any tool, S3 Explorer or not, before you're 100% certain what's being done for you.<br /><br />In my opinion, there's no way to achieve complete understanding without having used the SDK directly first, before you resort to using tools.<br /><br />Wizards and GUIs are good, but I feel they do most users a disservice.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1109</wp:comment_id>
			<wp:comment_author><![CDATA[Andy]]></wp:comment_author>
			<wp:comment_author_email>newphx@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-27 20:52:28</wp:comment_date>
			<wp:comment_date_gmt>2012-06-27 20:52:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[First...thank you for taking the time to do this...I have been trying to set up a system like this for 7 months, and had just about run out of patience when I stumbled upon your tutorial.<br /><br />Everything seemed to be working but...when I got up to the .pem secret key, I downloaded the device and when I enter the information for creating the encoding , it simply disappears. Nothing happens. Any idea why this would be?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1110</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-27 20:58:32</wp:comment_date>
			<wp:comment_date_gmt>2012-06-27 20:58:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That sounds like an issue with the PEM keyfile conversion using OpenSSL. I'd double check you've got the correct OpenSSL downloaded and then run through the process again. Make sure to make a copy of the PEM file in case it disappears.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1111</wp:comment_id>
			<wp:comment_author><![CDATA[Andy]]></wp:comment_author>
			<wp:comment_author_email>newphx@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-06-27 23:51:17</wp:comment_date>
			<wp:comment_date_gmt>2012-06-27 23:51:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[actually, the downloaded converter from <a rel="nofollow external" href="http://www.jensign.com/opensslkey/" title="http://www.jensign.com/opensslkey/" rel="nofollow">http://www.jensign.com/opensslkey/</a> a to create the XML file disappeared after I enter the information and click &quot;execute&quot;.<br /><br />The .pem files are not affected.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1112</wp:comment_id>
			<wp:comment_author><![CDATA[Tim O]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-26 04:10:31</wp:comment_date>
			<wp:comment_date_gmt>2012-02-26 04:10:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is an incredibly helpful walkthrough. Many thanks for taking the time to write it up in such detail!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1113</wp:comment_id>
			<wp:comment_author><![CDATA[James L.]]></wp:comment_author>
			<wp:comment_author_email>jlu1202@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-26 17:26:35</wp:comment_date>
			<wp:comment_date_gmt>2012-07-26 17:26:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,<br /><br />I managed to use the latest AWS SDK to create a console app based on your great post! Just try to get DistributionConfig created correctly is a chellenge with the latest SDK. Anyway, I have not been able to view the content using a signed url. All I got back is a HTTP 403: &quot;This error (HTTP 403 Forbidden) means that Internet Explorer was able to connect to the website, but it does not have permission to view the webpage&quot;.<br /><br />Not sure how I can proceed from here; feeling so close and so far away...<br /><br />Regards,<br /><br />James]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1114</wp:comment_id>
			<wp:comment_author><![CDATA[James L.]]></wp:comment_author>
			<wp:comment_author_email>jlu1202@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-26 17:56:46</wp:comment_date>
			<wp:comment_date_gmt>2012-07-26 17:56:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Another question I have is that it seems the public key is never used in your code, but shouldn't the public key be used to be used by the client browser in some way?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1115</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-20 20:37:10</wp:comment_date>
			<wp:comment_date_gmt>2012-08-20 20:37:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@James<br /><br />The 403 Forbidden error you see is Internet Explorers friendly error page that actually hides the error you get from AWS (which is most likely also an access denied error). You should either use a different browser or disable the friendly error messages.<br /><br />As for the error - make sure that you're allowing the exact path of the file including http:// and everything.<br /><br />As for the public key - AWS uses that one internally. In public key cryptosystems the public key can be used to decrypt data encrypted with the secret key and vice versa. Thus AWS can verify that we're who we say we are, by using our public key (which AWS knows), since only we know the secret key.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1116</wp:comment_id>
			<wp:comment_author><![CDATA[AJ]]></wp:comment_author>
			<wp:comment_author_email>hitman047@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-08-30 00:40:31</wp:comment_date>
			<wp:comment_date_gmt>2012-08-30 00:40:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent post! I found a similar post on Stackoverflow for Python, but I needed something for Java. Your post is much more detailed and thorough. Thank you!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165089</wp:comment_id>
			<wp:comment_author><![CDATA[Jianbo Hou]]></wp:comment_author>
			<wp:comment_author_email>knightuniverse@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>119.233.196.206</wp:comment_author_IP>
			<wp:comment_date>2014-02-06 10:22:56</wp:comment_date>
			<wp:comment_date_gmt>2014-02-06 09:22:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the marvelous posting!It helps much.

But I have a question about the cloudfront. Is there a way to set private content in s3 then we use cloudfront without signed url?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391678576.9299519062042236328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>164215</wp:comment_id>
			<wp:comment_author><![CDATA[Sean]]></wp:comment_author>
			<wp:comment_author_email>seanleason@moose-mail.com</wp:comment_author_email>
			<wp:comment_author_url>http://clashofclansonlinereview.tumblr.com</wp:comment_author_url>
			<wp:comment_author_IP>142.234.104.27</wp:comment_author_IP>
			<wp:comment_date>2014-01-19 20:32:58</wp:comment_date>
			<wp:comment_date_gmt>2014-01-19 19:32:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the marvelous posting! I quite enjoyed reading it, you can be a great author.I 
will always bookmark your blog and will eventually come back at some point.
I want to encourage that you continue your 
great work, have a nice weekend!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1390159978.89043903350830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165707</wp:comment_id>
			<wp:comment_author><![CDATA[golivejasmin]]></wp:comment_author>
			<wp:comment_author_email>monikanowland@bigstring.com</wp:comment_author_email>
			<wp:comment_author_url>http://golivejasmin.com</wp:comment_author_url>
			<wp:comment_author_IP>77.255.126.101</wp:comment_author_IP>
			<wp:comment_date>2014-02-20 22:49:25</wp:comment_date>
			<wp:comment_date_gmt>2014-02-20 21:49:25</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My brother suggested I might like this blog. He was entirely right.
This post actually made my day. You cann't imagine just 
how much time I had spent for this info! Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392932965.8790009021759033203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165454</wp:comment_id>
			<wp:comment_author><![CDATA[Elliott]]></wp:comment_author>
			<wp:comment_author_email>elliott.nerli@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://overttail9201.jimdo.com</wp:comment_author_url>
			<wp:comment_author_IP>77.249.40.94</wp:comment_author_IP>
			<wp:comment_date>2014-02-14 07:57:53</wp:comment_date>
			<wp:comment_date_gmt>2014-02-14 06:57:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello every one, here every person is sharing these kinds of experience, thus it's 
good to read this blog, and I used to go to see this weblog everyday.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392361073.839684963226318359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165252</wp:comment_id>
			<wp:comment_author><![CDATA[derm exclusive tv kit reviews]]></wp:comment_author>
			<wp:comment_author_email>maple_dunstan@arcor.de</wp:comment_author_email>
			<wp:comment_author_url>https://sites.google.com/site/dermexclusiveasseenontv</wp:comment_author_url>
			<wp:comment_author_IP>198.50.136.251</wp:comment_author_IP>
			<wp:comment_date>2014-02-09 15:41:21</wp:comment_date>
			<wp:comment_date_gmt>2014-02-09 14:41:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great deliѵеry. Great arguments. Keep up the good spirit.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391956881.4325540065765380859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166023</wp:comment_id>
			<wp:comment_author><![CDATA[พลอย]]></wp:comment_author>
			<wp:comment_author_email>jorjabowmaker@aol.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/bangkokgemstore</wp:comment_author_url>
			<wp:comment_author_IP>180.180.65.100</wp:comment_author_IP>
			<wp:comment_date>2014-02-26 22:21:54</wp:comment_date>
			<wp:comment_date_gmt>2014-02-26 21:21:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very good website you have here but I was wondering if you knew of any message boards 
that cover the same topics talked about here? I'd really like to be a part of online community where I can get suggestions from other experienced people that share the same interest.
If you have any suggestions, please let me know.
Thanks a lot!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393449714.166902065277099609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:12:"พลอย";s:20:"comment_author_email";s:21:"jorjabowmaker@aol.com";s:18:"comment_author_url";s:40:"https://www.facebook.com/bangkokgemstore";s:15:"comment_content";s:335:"Very good website you have here but I was wondering if you knew of any message boards 
that cover the same topics talked about here? I'd really like to be a part of online community where I can get suggestions from other experienced people that share the same interest.
If you have any suggestions, please let me know.
Thanks a lot!";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"180.180.65.100";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:12:"พลอย";s:10:"POST_email";s:21:"jorjabowmaker@aol.com";s:8:"POST_url";s:40:"https://www.facebook.com/bangkokgemstore";s:12:"POST_comment";s:335:"Very good website you have here but I was wondering if you knew of any message boards 
that cover the same topics talked about here? I'd really like to be a part of online community where I can get suggestions from other experienced people that share the same interest.
If you have any suggestions, please let me know.
Thanks a lot!";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"eba5a8e884";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"581";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"180.180.65.100";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"15013";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393449713";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166026</wp:comment_id>
			<wp:comment_author><![CDATA[Indira]]></wp:comment_author>
			<wp:comment_author_email>indirasantoro@t-online.de</wp:comment_author_email>
			<wp:comment_author_url>http://albumtravel.com</wp:comment_author_url>
			<wp:comment_author_IP>109.73.73.178</wp:comment_author_IP>
			<wp:comment_date>2014-02-26 23:25:03</wp:comment_date>
			<wp:comment_date_gmt>2014-02-26 22:25:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[We're a group of volunteers and starting a new scheme in 
our community. Your site offered us with valuable info to work on.

You've done a formidable job and our whole community will be thankful to you.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393453503.2369930744171142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:64:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:6:"Indira";s:20:"comment_author_email";s:25:"indirasantoro@t-online.de";s:18:"comment_author_url";s:22:"http://albumtravel.com";s:15:"comment_content";s:206:"We're a group of volunteers and starting a new scheme in 
our community. Your site offered us with valuable info to work on.

You've done a formidable job and our whole community will be thankful to you.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:13:"109.73.73.178";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:6:"Indira";s:10:"POST_email";s:25:"indirasantoro@t-online.de";s:8:"POST_url";s:22:"http://albumtravel.com";s:12:"POST_comment";s:206:"We're a group of volunteers and starting a new scheme in 
our community. Your site offered us with valuable info to work on.

You've done a formidable job and our whole community will be thankful to you.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"eba5a8e884";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"402";s:8:"HTTP_VIA";s:38:"1.0 UK-HAMPSHIRE-RST-45 (squid/3.1.10)";s:20:"HTTP_X_FORWARDED_FOR";s:9:"127.0.0.1";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:15:"HTTP_CONNECTION";s:5:"close";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"109.73.73.178";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"60732";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393453502";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166093</wp:comment_id>
			<wp:comment_author><![CDATA[Brigette]]></wp:comment_author>
			<wp:comment_author_email>brigette.steinmetz@freenet.de</wp:comment_author_email>
			<wp:comment_author_url>http://tinyurl.com/p8l6srp</wp:comment_author_url>
			<wp:comment_author_IP>5.255.90.95</wp:comment_author_IP>
			<wp:comment_date>2014-02-27 21:31:36</wp:comment_date>
			<wp:comment_date_gmt>2014-02-27 20:31:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent site you've got here.. It's hard to find high quality 
writing like yours nowadays. I honestly appreciate 
people like you! Take care!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393533097.0164940357208251953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:8:"Brigette";s:20:"comment_author_email";s:29:"brigette.steinmetz@freenet.de";s:18:"comment_author_url";s:26:"http://tinyurl.com/p8l6srp";s:15:"comment_content";s:147:"Excellent site you've got here.. It's hard to find high quality 
writing like yours nowadays. I honestly appreciate 
people like you! Take care!!";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:11:"5.255.90.95";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:8:"Brigette";s:10:"POST_email";s:29:"brigette.steinmetz@freenet.de";s:8:"POST_url";s:26:"http://tinyurl.com/p8l6srp";s:12:"POST_comment";s:147:"Excellent site you've got here.. It's hard to find high quality 
writing like yours nowadays. I honestly appreciate 
people like you! Take care!!";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"642ac810be";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"357";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:11:"5.255.90.95";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"41059";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393533096";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166100</wp:comment_id>
			<wp:comment_author><![CDATA[asos asos discount code asos clothing]]></wp:comment_author>
			<wp:comment_author_email>dinofawkner@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://storify.com/domilufu/enjoy-free-online-coupons-and-discounts-on-your-on</wp:comment_author_url>
			<wp:comment_author_IP>89.44.23.57</wp:comment_author_IP>
			<wp:comment_date>2014-02-27 23:43:06</wp:comment_date>
			<wp:comment_date_gmt>2014-02-27 22:43:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Often great top quality items can be discovered at a 
fraction of High Road charges. Price reduction codes can be located at myvouchercodes.
Still, once looking for coupon code guarantees that you find the 
new and operating code to get of the discount.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393540986.13434600830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:62:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:37:"asos asos discount code asos clothing";s:20:"comment_author_email";s:21:"dinofawkner@yahoo.com";s:18:"comment_author_url";s:78:"http://storify.com/domilufu/enjoy-free-online-coupons-and-discounts-on-your-on";s:15:"comment_content";s:256:"Often great top quality items can be discovered at a 
fraction of High Road charges. Price reduction codes can be located at myvouchercodes.
Still, once looking for coupon code guarantees that you find the 
new and operating code to get of the discount.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:11:"89.44.23.57";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:37:"asos asos discount code asos clothing";s:10:"POST_email";s:21:"dinofawkner@yahoo.com";s:8:"POST_url";s:78:"http://storify.com/domilufu/enjoy-free-online-coupons-and-discounts-on-your-on";s:12:"POST_comment";s:256:"Often great top quality items can be discovered at a 
fraction of High Road charges. Price reduction codes can be located at myvouchercodes.
Still, once looking for coupon code guarantees that you find the 
new and operating code to get of the discount.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"642ac810be";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"537";s:18:"HTTP_CACHE_CONTROL";s:14:"max-age=259200";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:11:"89.44.23.57";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"36489";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:15:"HTTP_CONNECTION";s:5:"close";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393540985";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165893</wp:comment_id>
			<wp:comment_author><![CDATA[กาแฟถุงกระดาษ]]></wp:comment_author>
			<wp:comment_author_email>karolbage@gawab.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/zaabverfranchise</wp:comment_author_url>
			<wp:comment_author_IP>180.180.75.187</wp:comment_author_IP>
			<wp:comment_date>2014-02-24 19:19:15</wp:comment_date>
			<wp:comment_date_gmt>2014-02-24 18:19:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great beat ! I wish to apprentice whilst you amend your site, how could i subscribe for a weblog site?
The account helped me a applicable deal. I have been a little bit acquainted of this your broadcast provided vibrant clear 
idea]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393265955.6141960620880126953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:39:"กาแฟถุงกระดาษ";s:20:"comment_author_email";s:19:"karolbage@gawab.com";s:18:"comment_author_url";s:41:"https://www.facebook.com/zaabverfranchise";s:15:"comment_content";s:233:"Great beat ! I wish to apprentice whilst you amend your site, how could i subscribe for a weblog site?
The account helped me a applicable deal. I have been a little bit acquainted of this your broadcast provided vibrant clear 
idea";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"180.180.75.187";s:10:"user_agent";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:39:"กาแฟถุงกระดาษ";s:10:"POST_email";s:19:"karolbage@gawab.com";s:8:"POST_url";s:41:"https://www.facebook.com/zaabverfranchise";s:12:"POST_comment";s:233:"Great beat ! I wish to apprentice whilst you amend your site, how could i subscribe for a weblog site?
The account helped me a applicable deal. I have been a little bit acquainted of this your broadcast provided vibrant clear 
idea";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"2020ccca79";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:119:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"553";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"180.180.75.187";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"12946";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393265955";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163750</wp:comment_id>
			<wp:comment_author><![CDATA[Chad]]></wp:comment_author>
			<wp:comment_author_email>chadrosser@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.4therapy.com/faq/apprendre-le-day-trading-et-le-forex</wp:comment_author_url>
			<wp:comment_author_IP>188.165.121.250</wp:comment_author_IP>
			<wp:comment_date>2014-01-11 20:50:05</wp:comment_date>
			<wp:comment_date_gmt>2014-01-11 19:50:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Asking questions are actually good thing if you are not 
understanding anything completely, except this post 
presents pleasant understanding yet.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389469805.952950000762939453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>157332</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-12-07 01:19:44</wp:comment_date>
			<wp:comment_date_gmt>2013-12-07 00:19:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Jim

You should be able to do it through the interface - much functionality has been added to the web interface since I wrote this post. However, if you can't get it to work and there's no meaningful error message, I'd try the programmatic approach - at least that should result in an error message of some sort.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386375584.7164020538330078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>157324</wp:comment_id>
			<wp:comment_author><![CDATA[Jim Houseman]]></wp:comment_author>
			<wp:comment_author_email>codercurtis@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.117.141.219</wp:comment_author_IP>
			<wp:comment_date>2013-12-07 01:00:16</wp:comment_date>
			<wp:comment_date_gmt>2013-12-07 00:00:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Do you HAVE to create the Policy programmatically?  

My policy I generated on the website looks like this:

{
	"Version": "2008-10-17",
	"Id": "PolicyForCloudFrontPrivateContent",
	"Statement": [
		{
			"Sid": "1",
			"Effect": "Allow",
			"Principal": {
				"AWS": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity EF5LIV7LW3XE4"
			},
			"Action": "s3:GetObject",
			"Resource": "arn:aws:s3:::ct.recorder/*"
		}
	]
}


I tried to add "CanonicalUser" to the "Principal" entry, but when I click "Save" and, then "Save" on the whole permissions tab of the bucket Properties, then view the policy again, my changes aren't saved.

As you can see by my generated policy, it's not in the same format that yours is in. My Principal.AWS entry isn't the Canonical User ID like yours is. Did AWS change since you wrote this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386374416.2819728851318359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166115</wp:comment_id>
			<wp:comment_author><![CDATA[seo marketing]]></wp:comment_author>
			<wp:comment_author_email>bobbieratliff@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://helpdesk.mydigitalclients.com/entries/41753627-Leprechaun-Repellent-And-Confirmed-Search-Engine-Optimization-Providers-The-Disturbing-Hyperlink</wp:comment_author_url>
			<wp:comment_author_IP>23.94.38.120</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 02:19:31</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 01:19:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, I do believe this is a great web site. I stumbledupon it ;) I am going to revisit yet again since i have saved as a favorite it.

Money and freedom is the best way to change, may you be rich and continue to help other people.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393550371.69702911376953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:13:"seo marketing";s:20:"comment_author_email";s:23:"bobbieratliff@gmail.com";s:18:"comment_author_url";s:150:"http://helpdesk.mydigitalclients.com/entries/41753627-Leprechaun-Repellent-And-Confirmed-Search-Engine-Optimization-Providers-The-Disturbing-Hyperlink";s:15:"comment_content";s:231:"Hi, I do believe this is a great web site. I stumbledupon it ;) I am going to revisit yet again since i have saved as a favorite it.

Money and freedom is the best way to change, may you be rich and continue to help other people.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:12:"23.94.38.120";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:13:"seo marketing";s:10:"POST_email";s:23:"bobbieratliff@gmail.com";s:8:"POST_url";s:150:"http://helpdesk.mydigitalclients.com/entries/41753627-Leprechaun-Repellent-And-Confirmed-Search-Engine-Optimization-Providers-The-Disturbing-Hyperlink";s:12:"POST_comment";s:231:"Hi, I do believe this is a great web site. I stumbledupon it ;) I am going to revisit yet again since i have saved as a favorite it.

Money and freedom is the best way to change, may you be rich and continue to help other people.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"32703d1dc1";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"564";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"23.94.38.120";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"52975";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393550370";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166130</wp:comment_id>
			<wp:comment_author><![CDATA[massage envy locations mesa]]></wp:comment_author>
			<wp:comment_author_email>richarddarbonne@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.eroticromancepublishers.com/2013/02/i-just-noticed-that-i-last-updated.html</wp:comment_author_url>
			<wp:comment_author_IP>192.3.179.71</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 07:13:24</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 06:13:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is very interesting, You're a very skilled blogger.
I've joined your rss feed and look forward to seeking more of your wonderful post.
Also, I have shared your site in my social networks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393568004.1475980281829833984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:27:"massage envy locations mesa";s:20:"comment_author_email";s:25:"richarddarbonne@gmail.com";s:18:"comment_author_url";s:86:"http://www.eroticromancepublishers.com/2013/02/i-just-noticed-that-i-last-updated.html";s:15:"comment_content";s:194:"This is very interesting, You're a very skilled blogger.
I've joined your rss feed and look forward to seeking more of your wonderful post.
Also, I have shared your site in my social networks!";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:12:"192.3.179.71";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:27:"massage envy locations mesa";s:10:"POST_email";s:25:"richarddarbonne@gmail.com";s:8:"POST_url";s:86:"http://www.eroticromancepublishers.com/2013/02/i-just-noticed-that-i-last-updated.html";s:12:"POST_comment";s:194:"This is very interesting, You're a very skilled blogger.
I've joined your rss feed and look forward to seeking more of your wonderful post.
Also, I have shared your site in my social networks!";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"32703d1dc1";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.71 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"483";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:12:"192.3.179.71";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"54683";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393568003";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166161</wp:comment_id>
			<wp:comment_author><![CDATA[League of Angels Cheat]]></wp:comment_author>
			<wp:comment_author_email>bevyarnold@web.de</wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/pages/League-of-Angels-Cheats-Hack/482634681772997</wp:comment_author_url>
			<wp:comment_author_IP>23.108.147.81</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 15:52:56</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 14:52:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's actually a nice and helpful piece of information.
I'm happy that you shared this useful information with us.
Please keep us up to date like this. Thank you for 
sharing.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393599176.117710113525390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:22:"League of Angels Cheat";s:20:"comment_author_email";s:17:"bevyarnold@web.de";s:18:"comment_author_url";s:75:"https://www.facebook.com/pages/League-of-Angels-Cheats-Hack/482634681772997";s:15:"comment_content";s:177:"It's actually a nice and helpful piece of information.
I'm happy that you shared this useful information with us.
Please keep us up to date like this. Thank you for 
sharing.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:13:"23.108.147.81";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:22:"League of Angels Cheat";s:10:"POST_email";s:17:"bevyarnold@web.de";s:8:"POST_url";s:75:"https://www.facebook.com/pages/League-of-Angels-Cheats-Hack/482634681772997";s:12:"POST_comment";s:177:"It's actually a nice and helpful piece of information.
I'm happy that you shared this useful information with us.
Please keep us up to date like this. Thank you for 
sharing.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"82b1c9c618";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"440";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"23.108.147.81";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"37888";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393599175";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166287</wp:comment_id>
			<wp:comment_author><![CDATA[Dick]]></wp:comment_author>
			<wp:comment_author_email>dickhighett@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kurumsallogo.com</wp:comment_author_url>
			<wp:comment_author_IP>37.59.150.124</wp:comment_author_IP>
			<wp:comment_date>2014-03-01 19:31:27</wp:comment_date>
			<wp:comment_date_gmt>2014-03-01 18:31:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great delivery. Great arguments. Keep up 
the amazing effort.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393698687.473720073699951171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:4:"Dick";s:20:"comment_author_email";s:21:"dickhighett@gmail.com";s:18:"comment_author_url";s:23:"http://kurumsallogo.com";s:15:"comment_content";s:62:"Great delivery. Great arguments. Keep up 
the amazing effort.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:13:"37.59.150.124";s:10:"user_agent";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:4:"Dick";s:10:"POST_email";s:21:"dickhighett@gmail.com";s:8:"POST_url";s:23:"http://kurumsallogo.com";s:12:"POST_comment";s:62:"Great delivery. Great arguments. Keep up 
the amazing effort.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"c8f1482eec";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:67:"Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"241";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:13:"37.59.150.124";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"39996";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393698686";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143543</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Miller]]></wp:comment_author>
			<wp:comment_author_email>criznach@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.102.201.145</wp:comment_author_IP>
			<wp:comment_date>2013-11-11 18:45:57</wp:comment_date>
			<wp:comment_date_gmt>2013-11-11 17:45:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You mention wildcard signed URLs using the policy parameter.  Do those work for S3 as well, or only CloudFront?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384191957.09698200225830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143545</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-11-11 18:51:58</wp:comment_date>
			<wp:comment_date_gmt>2013-11-11 17:51:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Chris
Honestly not sure, I haven't done any working with custom policies for S3, other than through the AWS console. That being said, the IAM policies you create can definitely refer to content on S3 using wildcards, so I'd be surprised if you couldn't create wildcard policies through the SDK as well.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384192318.7606360912322998046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143559</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Miller]]></wp:comment_author>
			<wp:comment_author_email>criznach@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>50.170.178.227</wp:comment_author_IP>
			<wp:comment_date>2013-11-11 19:33:21</wp:comment_date>
			<wp:comment_date_gmt>2013-11-11 18:33:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm sure I can create wildcard policies, but I'm not sure if I can use the policy= parameter in the signed URLs.  I don't see any mention of it in the docs, so I have my doubts.  But I may try it anyway.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384194801.382153987884521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143560</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-11-11 19:35:49</wp:comment_date>
			<wp:comment_date_gmt>2013-11-11 18:35:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Chris
Ah, gotcha. Not sure, haven't tried it :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384194949.5288250446319580078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166210</wp:comment_id>
			<wp:comment_author><![CDATA[http://tibbsville.com//users.php?mode=profile&amp;uid=10905]]></wp:comment_author>
			<wp:comment_author_email>sherrylcolwell@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://tibbsville.com//users.php?mode=profile&amp;uid=10905</wp:comment_author_url>
			<wp:comment_author_IP>219.159.198.8</wp:comment_author_IP>
			<wp:comment_date>2014-03-01 03:40:15</wp:comment_date>
			<wp:comment_date_gmt>2014-03-01 02:40:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great article.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166215</wp:comment_id>
			<wp:comment_author><![CDATA[asos promo codes amazon shoes]]></wp:comment_author>
			<wp:comment_author_email>josefaaugustine@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>http://worldbestonlinecoupons.manifo.com/</wp:comment_author_url>
			<wp:comment_author_IP>192.227.240.66</wp:comment_author_IP>
			<wp:comment_date>2014-03-01 04:30:14</wp:comment_date>
			<wp:comment_date_gmt>2014-03-01 03:30:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you spend $500, you get 20% off and 25% off when you spend $1,000.
Black is generally frowned upon at weddings, especially summer ones.
Coupons can quickly increase the value for shoppers on Black Friday.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393644614.33961200714111328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1381;s:14:"comment_author";s:29:"asos promo codes amazon shoes";s:20:"comment_author_email";s:25:"josefaaugustine@inbox.com";s:18:"comment_author_url";s:41:"http://worldbestonlinecoupons.manifo.com/";s:15:"comment_content";s:209:"If you spend $500, you get 20% off and 25% off when you spend $1,000.
Black is generally frowned upon at weddings, especially summer ones.
Coupons can quickly increase the value for shoppers on Black Friday.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"192.227.240.66";s:10:"user_agent";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36";s:8:"referrer";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:29:"asos promo codes amazon shoes";s:10:"POST_email";s:25:"josefaaugustine@inbox.com";s:8:"POST_url";s:41:"http://worldbestonlinecoupons.manifo.com/";s:12:"POST_comment";s:209:"If you spend $500, you get 20% off and 25% off when you spend $1,000.
Black is generally frowned upon at weddings, especially summer ones.
Coupons can quickly increase the value for shoppers on Black Friday.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1381";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"bad2a2407f";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:101:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.72 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:67:"http://improve.dk/how-to-set-up-and-serve-private-content-using-s3/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"455";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"192.227.240.66";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"57474";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393644613";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 21:30:17";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160292</wp:comment_id>
			<wp:comment_author><![CDATA[Jim Houseman]]></wp:comment_author>
			<wp:comment_author_email>codercurtis@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.117.141.219</wp:comment_author_IP>
			<wp:comment_date>2013-12-11 22:39:31</wp:comment_date>
			<wp:comment_date_gmt>2013-12-11 21:39:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm trying to follow this tutorial from the beginning, just to be sure of everything, and the SDK seems to have changed a great deal. I'm running into a lot of problems at almost every step of the way. What language is your code in?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386797971.4256799221038818359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160295</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-12-11 22:41:57</wp:comment_date>
			<wp:comment_date_gmt>2013-12-11 21:41:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Jim

The post is just over two years old and I know that the AWS SDK has changed somewhat since then. That beings aid, as for all I know, the practical functionality hasn't changed, just the SDK interface. As such, the actual steps should be more or less the same, though the actual code might differ slightly.

All code is in C#.

I've made a note that I should redo/update this post with the most recent SDK &amp; Console interface.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386798117.8979780673980712890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160321</wp:comment_id>
			<wp:comment_author><![CDATA[Jim Houseman]]></wp:comment_author>
			<wp:comment_author_email>codercurtis@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>209.117.141.219</wp:comment_author_IP>
			<wp:comment_date>2013-12-11 23:46:34</wp:comment_date>
			<wp:comment_date_gmt>2013-12-11 22:46:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I skipped to the part where you programmatically create the policy, and AWS changes the "CanonincalUser" back to "AWS" and the value of it changes from the long ID to "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity XXXXXXXXXXX"

So, no matter what you do, it seems like, AWS insists that you use the former values, rather than the latter.

I've never gotten protected cloudfront RTMP streaming to work, though, so I don't know if this is what's keeping it from working, or if it's the library I use to sign my urls, or something else entirely.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1386801994.302115917205810546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Pushing the Limits of Amazon S3 Upload Performance</title>
		<link>http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/</link>
		<pubDate>Mon, 07 Nov 2011 16:03:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/11/06/pushing-the-limits-of-amazon-s3-upload-performance.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently I’ve been working on a project where I’ve got millions of relatively small objects, sized between 5kb and 500kb, and they all have to be uploaded to S3. Naturally, doing a synchronous upload of each object, one by one, just doesn’t cut it. We need to upload the objects in parallel to achieve acceptable performance. But what are the optimal parameters when it comes to the number of simultaneous upload threads? Does it depend on the object size? How much of a difference does HTTPS over HTTP make? Let me share what I discovered during my testing.</p>

<p>Note that some of these graphs are much larger than what I can show in-page. All can be opened in full size by clicking them.</p>

<h2>Test code</h2>

<p>To reduce variance in the outcome, I’ve run all test cases four times and reported the average runtime. Each test case tries to upload 512 objects of a given size. In total, 2048 objects are uploaded across the four repetitions, before the average runtime is reported back. Even though I ran four repetitions, I still saw some fluctuations in the results that I’ll have to attest to variance.</p>

<p>I started out by using the thread pool and the asynchronous Begin/EndPutObject methods. However, even when setting the thread pool max/min thread/IO settings explicitly, I found the thread pool usage caused too much variance. Instead I went with manual thread control.</p>

<p>One major player is the ServicePointManager.DefaultConnectionLimit – this limits the number of active connections to any given host at the same time. By default, this has a low value of 2 and thus limits you to just two concurrent uploads to S3, before others are queued at the network level. If this limit is set below the number of active threads, you will invariably have threads waiting to open network connections. To avoid this, I set the connection limit equal to the number of threads I was running.</p>

<p>I tried running the tests both with and without MD5 checksum generation &amp; verification, but I saw no measurable difference in the outcome.</p>

<p>At no point, in any of the test environments, were the CPUs stressed to the point where they were close to becoming bottlenecks. As the test object is all in-memory and no disk is involved, I’ve ruled out disks as a bottleneck factor as well. Thus, the number one of piece of hardware affecting the results is the network interface card (NIC).</p>

<p>Before starting the four repetitions of the test, I fire off a single PutObject request to warm up the stack. The test code is relatively simple, it runs in an infinite loop, checking whether we need to upload more objects, or whether we’re done. If done, it breaks the loop and ends the thread. When launching I start up X amount of threads and immediately after join with them to wait for them all to complete. The runtime includes the amount of time required to instantiate the threads, though it should have no measurable impact on the result. The runtime calculation is done using integer math for output simplicity, but the impact should be minimal in the big picture.</p>

<pre escaped="true" lang="csharp">using System;
using System.Collections.Generic;
using System.Configuration;
using System.Diagnostics;
using System.Net;
using System.Threading;
using Amazon;
using Amazon.S3;
using Amazon.S3.Model;

namespace S3Optimization
{
	class Program
	{
		private const string bucketName = "improve.dk";
		private const string serviceUrl = "s3-eu-west-1.amazonaws.com";

		// ConnectionLimit ObjSizeInKB
		static void Main(string[] args)
		{
			int repetitions = 4;
			int uploadCount = 512;
			int objSize = Convert.ToInt32(args[1]) * 1024;
			int numThreads = Convert.ToInt32(args[0]);
			string dir = "Optimization/" + Guid.NewGuid();
			var config = new AmazonS3Config().WithServiceURL(serviceUrl).WithCommunicationProtocol(Protocol.HTTPS);
			var sw = new Stopwatch();
			object locker = new object();
			string obj = randomString(objSize);

			// Ensuring all connections have network connectivity
			ServicePointManager.DefaultConnectionLimit = numThreads;

			// The actual job each thread will be performing
			var work = new ThreadStart(() =&gt;
				{
					using (var s3Client = AWSClientFactory.CreateAmazonS3Client(ConfigurationManager.AppSettings["AccessKeyID"], ConfigurationManager.AppSettings["SecretAccessKey"], config))
					{
						while (true)
						{
							lock (locker)
							{
								if (uploadCount &lt;= 0)
									break;
								uploadCount--;
							}

							var request = new PutObjectRequest()
								.WithBucketName(bucketName)
								.WithKey(dir + "/" + Guid.NewGuid())
								.WithContentBody(obj);
							s3Client.PutObject(request);
						}
					}
				});

			// Warmup
			using (var s3Client = AWSClientFactory.CreateAmazonS3Client(ConfigurationManager.AppSettings["AccessKeyID"], ConfigurationManager.AppSettings["SecretAccessKey"], config))
			{
				var request = new PutObjectRequest()
					.WithBucketName(bucketName)
					.WithKey(dir + "/" + Guid.NewGuid())
					.WithContentBody(obj);
				s3Client.PutObject(request);
			}

			// Actual timing
			sw.Start();
			for(int i=0; i&lt;repetitions; i++)
			{
				int originalUploadCount = uploadCount;

				var threads = new List();
				for(int j=0; j&lt;numthreads; j++)="" threads.add(new="" thread(work));="" threads.foreach(x=""&gt; x.Start());
				threads.ForEach(x =&gt; x.Join());

				uploadCount = originalUploadCount;
			}
			sw.Stop();

			Console.WriteLine(sw.ElapsedMilliseconds / repetitions);
		}

		static string randomString(int size)
		{
			var rnd = new Random();
			var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

			char[] buffer = new char[size];

			for (int i = 0; i &lt; size; i++)
				buffer[i] = chars[rnd.Next(chars.Length)];

			return new string(buffer);
		}
	}
}</pre>

<p>For running the tests, I’m using the following test runner application, testing all combinations of thread count and object size between 1 and 256/2048 respectively (in powers of 2):</p>

<pre escaped="true" lang="csharp">var psi = new ProcessStartInfo("S3Optimization.exe")
    {
        UseShellExecute = false,
		RedirectStandardOutput = true
    };

var connectionLimits = new[] { 1, 2, 4, 8, 16, 32, 64, 128, 256 };
var objSizes = new[] { 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048 };

foreach(int connectionLimit in connectionLimits)
{
	foreach (int objSize in objSizes)
	{
		psi.Arguments = connectionLimit + " " + objSize;

		var p = Process.Start(psi);
		string output = connectionLimit + "t" + objSize + "t" + p.StandardOutput.ReadToEnd();
		p.WaitForExit();

		Console.Write(output);
		File.AppendAllText("Output.txt", output);
	}
}</pre>

<h2>Initial results</h2>

<p>The first test is done using a colocation (colo) Dell PowerEdge 1950 placed at a Danish ISP in Aarhus, Denmark. The server is running Windows Server 2003 x64 and has a single gigabit NIC with gigabit support throughout the network stack. Note that I won’t be mentioning neither CPU, memory nor disk for any of the machines. Neither of those were ever close to being the bottleneck and are thus irrelevant. Suffice to say – they all had plenty of CPU, memory and disk capabilities. A tracert from the server to the S3 EU endpoint in Dublin looks like this:</p>

<pre class="plain">Tracing route to s3-eu-west-1.amazonaws.com [178.236.6.31]
over a maximum of 30 hops:

1	1 ms	4 ms	13 ms	89.221.162.249
2	1 ms	1 ms	3 ms	10.1.2.1
3	3 ms	2 ms	2 ms	89.221.161.105
4	&lt;1 ms	&lt;1 ms	&lt;1 ms	92-62-199-177.customer.fuzion.dk [92.62.199.177]
5	&lt;1 ms	&lt;1 ms	&lt;1 ms	87.116.1.157
6	5 ms	4 ms	4 ms	93.176.94.175
7	4 ms	4 ms	4 ms	xe-3-3-0.cph10.ip4.tinet.net [77.67.74.37]
8	47 ms	47 ms	47 ms	xe-2-2-0.dub40.ip4.tinet.net [89.149.181.37]
9	*	*	*	Request timed out.</pre>

<p>The following graph has the number of threads (that is, simultaneous uploads) on the X-axis and the MiB/s on the Y-axis. The MiB/s was calculated using the formula (UploadCount x ObjectSizeInKB / 1024 / AvgTimePerRepetitionInSeconds). Each color bar represents a given object size in KB as noted on the legend on the right. Note also that these results were made using the standard HTTPS protocol. You might ask yourself why I’m measuring MiB/s and not requests/s. Thing is – they’re exactly the same. MiB/s and requests/s are just calculations based on the time it took to run a fixed number of requests. The absolute values are less interesting than they are in relation to each other. If you want to take a look at the requests/sec, you can download my raw data at the end of the post.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_2.png"><img class="alignnone size-full wp-image-2406" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/11/image_2.png" width="1024" height="527" /></a></div></div>

<p>There is an overwhelming amount of information in this graph alone. We can see how the general throughput seems to increase relatively linearly along the amount of threads, though they seem to reach their max potential at <strong>128 threads</strong>.</p>

<h3>Small object characteristics</h3>

<p>Let me zoom in on the 1KB object size:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_4.png"><img class="alignnone size-full wp-image-2408" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/11/image_4.png" width="499" height="291" /></a></div></div>

<p>For the 1KB object size we see clear improvements all the way up to <strong>64 threads</strong>, after which it seems to stabilize. The 1KB object size is the one that incurs the most overhead due to S3 not utilizing persistent connections. Each request we make needs to create a new TCP connection and perform an SSL handshake. Compared to a 2MB object, we spend a lot more time and resources on overhead compared to actually transferring data. What if we disabled SSL and used unencrypted HTTP instead?</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_6.png"><img class="alignnone size-full wp-image-2409" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/11/image_6.png" width="499" height="291" /></a></div></div>

<p>Now we get increased performance all the way up <strong>128 threads</strong> – and we actually end up pushing 200% as much data as we did using HTTPS! For small objects, HTTPS has an extremely high cost – you should avoid it if you can.</p>

<h3>Number of threads – finding the sweet spot</h3>

<p>Take a look at this graph, showing the results for object sizes 1KB – 128KB:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_13.png"><img class="alignnone size-full wp-image-2410" alt="image_13" src="http://improve.dk/wp-content/uploads/2011/11/image_13.png" width="956" height="563" /></a></div></div>

<p>Ignoring minor deviances, all of the objects seem to <strong>peak at 64 connections</strong>. Any more than that either causes a significant drop off, or just minor variance. For objects less than 128KB, 64 threads definitely seem to be the cut-off point. Compare it with the following graph, showing object sizes 256KB – 2048KB:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_17.png"><img class="alignnone size-full wp-image-2411" alt="image_17" src="http://improve.dk/wp-content/uploads/2011/11/image_17.png" width="956" height="563" /></a></div></div>

<p>For these objects, we clearly see that going up to <strong>128 connections actually provide a boost in throughput</strong>, leading me to conclude that for objects of size 256KB+, you can use somewhat more threads successfully.</p>

<p>For all object sizes, using  HTTP over HTTPS seems to increase the maximum throughput thread limit – this increasing it from 64 to 128 for smaller objects and from 128 to 256 threads for larger objects. If you’re uploading objects of varying sizes, this means you’ll have to do some testing with your specific workload to find out the optimal amount of threads.</p>

<h3>Object size vs. HTTPS performance impact</h3>

<p>In the following graph I’ve calculated the average gain HTTP had over HTTPS for each object size, across all thread counts. As there is quite some variance, the trend line is the most interesting part of the graph. It clearly shows that as object size grows, the HTTP over HTTPS advantage decreases.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_19.png"><img class="alignnone size-full wp-image-2412" alt="image_19" src="http://improve.dk/wp-content/uploads/2011/11/image_19.png" width="638" height="343" /></a></div></div>

<h2>Server 2008 R2 vs. Server 2003</h2>

<p>You’ve probably heard about Server 2008 bringing along a <a href="http://technet.microsoft.com/en-us/network/bb545475" target="_blank">bunch of updates to the TCP/IP stack</a>. I thought it would be interesting to run the same tests on an identical server, just running Windows Server 2008 R2 x64. Luckily, I have just that. A server with identical hardware, on the same subnet at the same ISP, just running Server 2008 R2 x64 instead. Question is, how big of a difference does the OS alone make?</p>

<p>For this graph, I calculated the maximum attainable transfer speed, using HTTPS, for a given object, across any number of threads. I’ve then mapped those values into the graph for both Server 2003 and Server 2008 R2 (note the log(2) scale!).</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_21.png"><img class="alignnone size-full wp-image-2413" alt="image_21" src="http://improve.dk/wp-content/uploads/2011/11/image_21.png" width="685" height="419" /></a></div></div>

<p>It clearly shows that Server 2008 R2 consistently wins out over 2003 - and this is using the exact same hardware, same switches, connection, etc. - only the OS is different. What about HTTP?</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_23.png"><img class="alignnone size-full wp-image-2414" alt="image_23" src="http://improve.dk/wp-content/uploads/2011/11/image_23.png" width="684" height="419" /></a></div></div>

<p>Ignoring some minor variance, HTTP is still clearly the winner.</p>

<p>On average, I found Server 2008 R2 to be <strong>16.8% faster</strong> than Server 2003 when testing HTTPS, and <strong>18.7% faster</strong> when using HTTP. That is a major gain just by changing the OS!</p>

<h2>The impact of locality – EC2 meets S3</h2>

<p>At this point I’ve demonstrated that you get rather crappy performance if you perform your uploads single threaded. By just scaling out the number of threads, we can actually end up saturating a gigabit NIC, provided the object size is large enough. However, we do spend a large amount of time waiting for network latency. What difference would it make if we were to run this in the cloud… Say in EC2 for example?</p>

<p>I spawned an m1.xlarge instance in the EU EC2 region, providing me with a stable instance with plenty of CPU and memory. A tracert confirms that we are indeed <strong>very close to the S3 servers</strong>:</p>

<pre class="plain">Tracing route to s3-eu-west-1.amazonaws.com [178.236.5.31]
over a maximum of 30 hops:

1	&lt;1 ms	&lt;1 ms	&lt;1 ms	ip-10-48-248-2.eu-west-1.compute.internal [10.48.248.2]
2	&lt;1 ms	&lt;1 ms	&lt;1 ms	ec2-79-125-0-242.eu-west-1.compute.amazonaws.com [79.125.0.242]
3	&lt;1 ms	&lt;1 ms	&lt;1 ms	ip-10-1-44-253.eu-west-1.compute.internal [10.1.44.253]
4	1 ms	2 ms	1 ms	ip-10-1-0-5.eu-west-1.compute.internal [10.1.0.5]
5	&lt;1 ms	&lt;1 ms	&lt;1 ms	ec2-79-125-1-97.eu-west-1.compute.amazonaws.com [79.125.1.97]
6	2 ms	2 ms	2 ms	178.236.0.138
7	2 ms	20 ms	2 ms	178.236.0.123
8	2 ms	2 ms	2 ms	178.236.0.155
9	2 ms	2 ms	2 ms	178.236.5.31</pre>

<h3>HTTP still wins out over HTTPS</h3>

<p>Just to make sure, I compared the average performance of HTTP over HTTPS again. For now, I’m hiding the actual units, and instead I’m just showing the percentage difference. Note that the blue HTTPS line is a baseline performance of 100%.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_48.png"><img class="alignnone size-full wp-image-2415" alt="image_48" src="http://improve.dk/wp-content/uploads/2011/11/image_48.png" width="536" height="320" /></a></div></div>

<p>Ignoring variation, we see an <strong>average performance improvement of almost 150% compared to HTTPS</strong>. From this we can conclude that locality doesn’t change the performance characteristics of HTTP vs. HTTPS – HTTP still wins any day. As a result of this, numbers from now on will be based on HTTP tests, unless explicitly stated otherwise.</p>

<h3>Now we’re talking throughput!</h3>

<p>Let's look at a quick graph detailing the maximum attainable transfer speeds for any given object, comparing my colo Server 2008 R2 server with the m1.xlarge instance run in the AWS EC2 cloud (note the log(10) scale):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_25.png"><img class="alignnone size-full wp-image-2416" alt="image_25" src="http://improve.dk/wp-content/uploads/2011/11/image_25.png" width="816" height="459" /></a></div></div>

<p>Wow. I redid this test several times as I just couldn't believe the results. Where my 2008 R2 instance pushed about 1 meg/sec, I was getting <strong>5.2 megs/sec</strong> through the EC2 instance. Okay, I guess that's reasonable since the smaller objects are punished so severely by connection overhead - and that's the primary advantage of having close locality to the S3 servers, right?</p>

<p>However - once we get to object size 32, we're now pushing <strong>120 megs/sec</strong> from EC2 - at the very border of the 100Mbps NIC that the server reports. But it doesn't stop there - oh no. I ended up hitting the ceiling at a stable transfer speed of <strong>460 megs/sec</strong>, pushing 1024KB objects using 64 threads. But how in the world am I able to push <strong>3,680Mbps</strong> through a<strong> 100Mbps NIC</strong>?</p>

<p>The thing is, these are all just virtual machines sharing physical hardware. The server itself reports 100Mbps, but Amazon will scale your NIC depending on the instance type - typically telling you to expect a worst case of 250Mbps on a large instance. My guess is that these machines are running 10gige internally, and you'll get whatever is available, though QoS'ed so you'll get your 250Mbps at a minimum. If that is the case, I can easily pull 3,680Mbps of the theoretically available 10,000Mbps, the rest being used by other VPCs on the same physical network. To all my neighbors during these tests, sorry!</p>

<p>This begs the question though - what if I had that 10gige connection all by myself? What if I didn't have to share it?</p>

<h2>Pushing the limits using compute clusters</h2>

<p>If we take a look at the <strong>Cluster Compute Quadruple Extra Large Instance</strong> (let's just call it CC from now on) specs, we're told to expect <strong>10gige network connectivity</strong>:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_27.png"><img class="alignnone size-full wp-image-2417" alt="image_27" src="http://improve.dk/wp-content/uploads/2011/11/image_27.png" width="572" height="153" /></a></div></div>

<p>Aha! Just what we need. Unfortunately the CC instances are only available in the US regions, so I had to setup a new bucket in the US, and change my test code to connect to said bucket, from the US. As such, it shouldn't change anything, though it should be noted that the tests so far have been run in the Dublin DC, whereas this test is run in the North Virginia DC.</p>

<p>Let's start out by looking at object sizes 1-16KB, comparing the m1.xlarge instance with the cc1.4xlarge instance:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_39.png"><img class="alignnone size-full wp-image-2418" alt="image_39" src="http://improve.dk/wp-content/uploads/2011/11/image_39.png" width="612" height="387" /></a></div></div>

<p>Huh, that's kinda disappointing. It seems that the CC instance consistently performs worse than the m1.xlarge instance. Let's try and take a look at object sizes 32-2048KB:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_41.png"><img class="alignnone size-full wp-image-2419" alt="image_41" src="http://improve.dk/wp-content/uploads/2011/11/image_41.png" width="647" height="398" /></a></div></div>

<p>Now we're talking! As soon as we cross 256KB in object size, we start to saturate the available fabric speed of the m1.xlarge instance - the CC instance on the other hand, it just keeps going up! In this test I reached a max speed of <strong>1091,7 megs/sec</strong> using 128 threads pushing objects of 2048KB. That's <strong>8,733.6Mbps</strong> out of a theoretical max of <strong>10,000Mbps</strong> - on a single virtualized instance, mind you.</p>

<h3>To infinity and beyond</h3>

<p>Still not satisfied? Well, neither was I. I tried to tweak the settings a bit more to see if I could push it even further. Given that an object size of 2048KB seemed to improve the result over 1024KB, would an even larger object help? How about more than 128 threads?</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_49.png"><img class="alignnone size-full wp-image-2420" alt="image_49" src="http://improve.dk/wp-content/uploads/2011/11/image_49.png" width="755" height="422" /></a></div></div>

<p>It's evident that more than 256 threads does not yield any benefit, quite the contrary. However, using 256 threads and an object size of 4096KB, I was able to push <strong>1117,9 megs/sec to S3</strong>. I am extremely satisfied with that result. I honestly did not expect to even get 25% of that from a single machine, whether physical or virtual. That's <strong>8,943,2Mbps of pure data</strong> - that is, not including the inevitable network overhead.</p>

<h2>Expanding on the results</h2>

<p>You can download an Excel sheet of all my raw data, including the various graphs and calculations that I've made. Note that all raw numbers are repeated, first sorted by the number of threads, then sorted by the object size. Note also that there are some extra data here and there where I had to do some adhoc tests.</p>

<p>If you want me to create some graphs of a specific scenario, compare two different result sets, environments, etc. - just let me know in the comments. I've probably overlooked something interesting as there is just so much data to pull out. Optimally I'd want to run each of these tests for 100 repetitions at different times of the day, just to weed out all of the variance completely. Unfortunately, that would cost me way too much, and it would take ages. I may do some high-rep tests for specific scenarios like the HTTP vs. HTTPS tests as I feel there were too many fluctuations there.</p>

<p>Download: <a href="http://improve.dk/wp-content/uploads/2011/11/S3Optimization.xlsx">S3Optimization.xlsx</a></p>

<h2>Conclusions</h2>

<p>There are a lot of factors to consider when optimizing for upload speed. However, there are just a few rules that you need to follow to reach near-optimal speed with limited effort.</p>

<h3>Parallelization</h3>

<p><strong>The easiest way to scale is to just parallelize your workload</strong>. Each S3 connection doesn't get that much bandwidth through, but as long as you run many of them at the same time, the aggregate throughput is excellent. Most workloads showed 64, 128 or 256 to be the optimal number of threads.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_57.png"><img class="alignnone size-full wp-image-2421" alt="image_57" src="http://improve.dk/wp-content/uploads/2011/11/image_57.png" width="795" height="347" /></a></div></div>

<h3>Locality &amp; bandwidth</h3>

<p>Being close to the S3 bucket servers is of utmost importance. As can be seen from the graph, I almost exhausted my 1gige NIC on my colo servers, but I doubt I'd be able to exhaust a 10gige connection (anyone got a server I can borrow for testing?). The graph is slightly misleading though as the EC2 servers had anywhere from 4gige to 10gige of connectivity, so it's not all just latency - bandwidth certainly matters too, especially once you reach high amounts of thread with large object sizes.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_61.png"><img class="alignnone size-full wp-image-2422" alt="image_61" src="http://improve.dk/wp-content/uploads/2011/11/image_61.png" width="782" height="526" /></a></div></div>

<h3>Operating system</h3>

<p>Now, you shouldn't go out and format all of your Server 2003 servers just to get 2008 R2. However, 2008 R2 does consistently perform better than 2003. Though I haven't tested it, I expect 2008 and 2008 R2 to be about the same. Generally you'll get about <strong>15% better performance on a 2008 R2 server over a 2003 server</strong>.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_63.png"><img class="alignnone size-full wp-image-2423" alt="image_63" src="http://improve.dk/wp-content/uploads/2011/11/image_63.png" width="685" height="419" /></a></div></div>

<h3>Saturating the S3 service</h3>

<p>Not going to happen, simple as that. I'm utterly amazed at the throughput I managed to gain from just a single machine. At the top, I was pushing more than one gigabyte of data to S3 every second - 1117,9 megs/sec to be precise. That is an awful lot of data, all coming from a single machine. Now imagine you scale this out over multiple machines, and you have the network infrastructure to support it - you can really send a lot of data.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_67.png"><img class="alignnone size-full wp-image-2424" alt="image_67" src="http://improve.dk/wp-content/uploads/2011/11/image_67.png" width="483" height="291" /></a></div></div>

<h3>Variance</h3>

<p>As can be seen in some of my results, you can't avoid running into variance when using a cloud service. However, it's important to look at the baseline numbers - what is the worst case performance you can expect? Not only did my best-case numbers blow my mind, so did the worst-case numbers! Even though performance does fluctuate, the median performance is what matters, and it's nothing short of impressive.</p>

<h3>Optimizing the network stack</h3>

<p>I'm certain I've left out some percentages by not looking at the NIC drivers and settings. However, generally that'll be your very last resort, and it'll only help you get those last few percentages. In most cases there's no reason to mess around with the remaining 1%, I'll easily settle for the 99%.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1382</wp:post_id>
		<wp:post_date>2011-11-07 17:03:40</wp:post_date>
		<wp:post_date_gmt>2011-11-07 16:03:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pushing-the-limits-of-amazon-s3-upload-performance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="amazon-web-services"><![CDATA[Amazon Web Services]]></category>
		<category domain="post_tag" nicename="ec2"><![CDATA[EC2]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="post_tag" nicename="s3"><![CDATA[S3]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Pushing the Limits of Amazon S3 Upload Performance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1120</wp:comment_id>
			<wp:comment_author><![CDATA[Dan Eloff]]></wp:comment_author>
			<wp:comment_author_email>dan.eloff@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2013-01-12 16:31:39</wp:comment_date>
			<wp:comment_date_gmt>2013-01-12 16:31:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic write-up. As I read I wondered<br /><br />1) What about HTTP instead of HTTPS?<br />2) What if the server is in EC2?<br />3) What if the server is a cluster compute with 10Gbps NIC?<br /><br />I was very happy to find as I kept reading that you were thinking along the same lines and tested all of these scenarios. The results are indeed more than I could have hoped for.<br /><br />Thank you for a great article! Cheers!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1123</wp:comment_id>
			<wp:comment_author><![CDATA[Guillaume Plessis]]></wp:comment_author>
			<wp:comment_author_email>gui@dotdeb.org</wp:comment_author_email>
			<wp:comment_author_url>http://www.dotdeb.org/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-07 13:08:39</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 13:08:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What about using TCP window scaling?<br /><br /><a rel="nofollow external" href="http://docs.amazonwebservices.com/AmazonS3/latest/dev/index.html?TCPWindowScaling.html" title="http://docs.amazonwebservices.com/AmazonS3/latest/dev/index.html?TCPWindowScaling.html" rel="nofollow">docs.amazonwebservices.com/.../index.html</a><br /><a rel="nofollow external" href="https://forums.aws.amazon.com/thread.jspa?threadID=18863" title="https://forums.aws.amazon.com/thread.jspa?threadID=18863" rel="nofollow">forums.aws.amazon.com/thread.jspa?threadID=18863</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1124</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-07 13:42:46</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 13:42:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent suggestion, thanks for the link! I definitely want to follow up with a new test where I attempt to tweak the NIC drivers and Windows TCP/IP stack - I'm especially interested in boosting the small object upload speed across all environments.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1125</wp:comment_id>
			<wp:comment_author><![CDATA[Kiran]]></wp:comment_author>
			<wp:comment_author_email>kiran.n.s@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-07 18:51:23</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 18:51:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool results. I would like to see latency numbers as well, specifically for small objects. Also, how does read performance (mainly latency) change when you have Amazon's Cloudfront (or other CDN) caching these objects.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1126</wp:comment_id>
			<wp:comment_author><![CDATA[Chris Smith]]></wp:comment_author>
			<wp:comment_author_email>chris.j.smith@live.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-07 19:38:54</wp:comment_date>
			<wp:comment_date_gmt>2011-11-07 19:38:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for the genuinely useful example.  I've got a few Gb to push to S3 as fast as possible soon, replacing our colo'ed document store and this makes my life considerably easier!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1127</wp:comment_id>
			<wp:comment_author><![CDATA[Andy]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-08 01:39:16</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 01:39:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This is a really nice test.  <br />Unfortunately, your results appear to have less to do with Amazon and more to do with TCP.  By running in parallel you are just getting past the default TCP window settings.  <br />By moving inside Amazon you are removing the latency component that is impacted by the TCP component.<br />You'll find those TCP settings aren't the last 1% but actually the 99% for this type of test.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1128</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-08 01:58:22</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 01:58:22</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Kiran Cloudfront will improve all but first time requests from around the world. In this post however, I'm only concerned with upload speed. Download &amp; latency might be another post at some point.<br /><br />@Andy True - TCP plays a major role in the tests as that is the transport layer. However, I did manage to (almost) saturate both 1gige and 10gige connections, so TCP settings will have their primary effect with the smaller object uploads - which is definitely a topic I will follow up on! Stay tuned :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1129</wp:comment_id>
			<wp:comment_author><![CDATA[Alex O]]></wp:comment_author>
			<wp:comment_author_email>alex@emergencynap.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-08 03:03:37</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 03:03:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark - good experiment.  Can you publish the costs associated with running this test?   <br /><br />As engineers we have to keep track of costs and that's relevant here.  What happens if you add compression to the mix?  Whats the trade off in compressing data and sending it vs cost per instance vs speed and whether this is really optimal.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1130</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-08 10:56:32</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 10:56:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The total cost, once I'd gotten rid of the kinks, came out to less than $50.<br /><br />Compression comes in multiple flavors. In my real case I'm uploading JPGs so there is no benefit in compressing those. In this case, as I'm only uploading text data, HTTP request compression would work wonders - if only it was part of the HTTP standard. What I could do, in this test, would be to compress the objects and apply gzip content encoding headers to S3, which would then be relayed onto the clients. That'd increase the total data throughput, but it heavily depends on the payload applicability.<br /><br />What's more interesting would be to compress multiple smaller objects into just one file, send those to an intermediate EC2 instance that unpacks it and uploads to S3 from there. That would help combat the high latency costs.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1131</wp:comment_id>
			<wp:comment_author><![CDATA[Lindsay]]></wp:comment_author>
			<wp:comment_author_email>lgordon@dzone.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dzone.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-08 20:41:04</wp:comment_date>
			<wp:comment_date_gmt>2011-11-08 20:41:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, my name is Lindsay and I'm the Community Manager at DZone, a website that collects articles, links, and other information pertaining to the software and development worlds.  One of our content curators found your blog and we think you would be a great fit for our Most Valuable Bloggers (MVB) program.  The program is free, easy to join, and it is a great way for your writing to reach a wider audience.  If you are interested please e-mail me at lgordon (at) dzone (dot) com.  I promise this isn't spam, and I hope to hear from you soon!  ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1132</wp:comment_id>
			<wp:comment_author><![CDATA[Abhishek kumar]]></wp:comment_author>
			<wp:comment_author_email>abhishek.p906@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-10 12:52:01</wp:comment_date>
			<wp:comment_date_gmt>2011-11-10 12:52:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, my name is Abhishek and i'm M.C.A student. Now as you have said for allocation of objects &amp; getting the requsite IP if needed then in that case it also be not very much cost effective.<br /> And even what happens if you add compression to the mix? ie the compressed data and the speed.<br />So, scalability be also be affected.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1133</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-10 14:51:48</wp:comment_date>
			<wp:comment_date_gmt>2011-11-10 14:51:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Abishek - Please see me answer to Alex O on why compression itself wouldn't make much of a difference.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1134</wp:comment_id>
			<wp:comment_author><![CDATA[Abhishek kumar]]></wp:comment_author>
			<wp:comment_author_email>abhishek.p906@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-11 04:51:07</wp:comment_date>
			<wp:comment_date_gmt>2011-11-11 04:51:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark S. Rasmussen : Sir, but the congestion problem be remain there...as the width of the pipe and the number of requesting thread for the resource access remain be the same.<br />Then how we get over it??<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1135</wp:comment_id>
			<wp:comment_author><![CDATA[Tim]]></wp:comment_author>
			<wp:comment_author_email>tim.jones@payresource.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-08 14:01:20</wp:comment_date>
			<wp:comment_date_gmt>2012-02-08 14:01:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'm a c# newbie and I know this is an older post but I've just recently discovered it.  I put the changes in my code and my run time almost doubled.  My test consisted of moving 600 files that are about 300k each.  The time went from just over a minute to almost 3 minutes.  Do you see what I might be doing wrong?<br /><br /><br /><br />// The actual job each thread will be performing<br />var work = new ThreadStart(() =&gt;<br />{<br />   using (var s3Client = AWSClientFactory.CreateAmazonS3Client(Settings.Default.key, Settings.Default.keycode, config))<br />{<br />    var pdfFiles = from pdfFile in Directory.EnumerateFiles(@filePath + &quot;*.pdf&quot;)<br />    select pdfFile;<br /><br />    foreach (var pdfFile in pdfFiles)<br />   {<br />       PutObjectRequest request = new PutObjectRequest();<br />       request.WithBucketName(bucketName + directoryPrefix);<br />       request.WithKey(fileName);<br />       request.WithFilePath(pdfFile);<br />       s3Client.PutObject(request);<br />   }<br />}<br />});<br /><br />// Start multiple threads<br />var threads = new List&lt;Thread&gt;();<br /><br />for (int j = 0; j &lt; numThreads; j++)<br />{<br />    threads.Add(new Thread(work));<br />}<br />threads.ForEach(x =&gt; x.Start());<br />threads.ForEach(x =&gt; x.Join());]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1136</wp:comment_id>
			<wp:comment_author><![CDATA[Tim]]></wp:comment_author>
			<wp:comment_author_email>tim.jones@payresource.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-08 14:07:19</wp:comment_date>
			<wp:comment_date_gmt>2012-02-08 14:07:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Forgot to mention I'm running on an EC2 Windows 2008 server]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1137</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-08 15:51:30</wp:comment_date>
			<wp:comment_date_gmt>2012-02-08 15:51:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Tim,<br /><br />From what I can see, that code uploads the same PDFs once for each thread you're running, rather than uploading the PDFs in a parallel fashion.<br /><br />Each thread loops all *.pdf files in the @filePath directory. You need to enumerate all the threads once and put them into a queue. Each thread can then loop until the queue is empty - and when it's not, picks a file from the queue and uploads it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1138</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-14 16:52:08</wp:comment_date>
			<wp:comment_date_gmt>2011-11-14 16:52:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Once we saturate the pipe, you cannot get over it other than to utilize multiple machines or get a fatter pipe. This post is just about maximizing single-instance speed, not system-wide.<br /><br />My earlier reply on compression contains hints as to how you can increase the overall data volume by compression and using EC2 proxies - where it makes sense.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166445</wp:comment_id>
			<wp:comment_author><![CDATA[download youtube videos free]]></wp:comment_author>
			<wp:comment_author_email>emmett_goin@animail.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=zy1Vf0-uH50</wp:comment_author_url>
			<wp:comment_author_IP>107.158.22.141</wp:comment_author_IP>
			<wp:comment_date>2014-03-03 12:36:49</wp:comment_date>
			<wp:comment_date_gmt>2014-03-03 11:36:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Greetings from Carolina! I'm bored to death at 
work so I decided to browse your website on 
my iphone during lunch break. I enjoy the knowledge you present here and can't wait to take a look when I get 
home. I'm shocked at how fast your blog loaded on my phone ..
I'm not even using WIFI, just 3G .. Anyways, wonderful site!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393846609.736752033233642578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1382;s:14:"comment_author";s:28:"download youtube videos free";s:20:"comment_author_email";s:23:"emmett_goin@animail.net";s:18:"comment_author_url";s:42:"http://www.youtube.com/watch?v=zy1Vf0-uH50";s:15:"comment_content";s:330:"Greetings from Carolina! I'm bored to death at 
work so I decided to browse your website on 
my iphone during lunch break. I enjoy the knowledge you present here and can't wait to take a look when I get 
home. I'm shocked at how fast your blog loaded on my phone ..
I'm not even using WIFI, just 3G .. Anyways, wonderful site!";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"107.158.22.141";s:10:"user_agent";s:65:"Mozilla/5.0 (Windows NT 5.1; rv:22.0) Gecko/20100101 Firefox/22.0";s:8:"referrer";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:28:"download youtube videos free";s:10:"POST_email";s:23:"emmett_goin@animail.net";s:8:"POST_url";s:42:"http://www.youtube.com/watch?v=zy1Vf0-uH50";s:12:"POST_comment";s:330:"Greetings from Carolina! I'm bored to death at 
work so I decided to browse your website on 
my iphone during lunch break. I enjoy the knowledge you present here and can't wait to take a look when I get 
home. I'm shocked at how fast your blog loaded on my phone ..
I'm not even using WIFI, just 3G .. Anyways, wonderful site!";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1382";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"ca95e0ecaa";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:65:"Mozilla/5.0 (Windows NT 5.1; rv:22.0) Gecko/20100101 Firefox/22.0";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"588";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"107.158.22.141";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"41233";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393846609";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 22:57:40";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42729</wp:comment_id>
			<wp:comment_author><![CDATA[Ross McAtee]]></wp:comment_author>
			<wp:comment_author_email>rmcatee@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://aut.ac.nz</wp:comment_author_url>
			<wp:comment_author_IP>216.131.72.71</wp:comment_author_IP>
			<wp:comment_date>2013-05-20 13:07:35</wp:comment_date>
			<wp:comment_date_gmt>2013-05-20 11:07:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Mark,

great post, it would be great to see you test repeated using HTTPS and the SPDY protocol http://www.chromium.org/spdy

Cheers
Ross]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369048055.641089916229248046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161567</wp:comment_id>
			<wp:comment_author><![CDATA[sraj]]></wp:comment_author>
			<wp:comment_author_email>summitraj@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.22.20.244</wp:comment_author_IP>
			<wp:comment_date>2013-12-18 22:06:41</wp:comment_date>
			<wp:comment_date_gmt>2013-12-18 21:06:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why are you assuming that HTTPS connections to S3 are not persistent. You can send up to 100 requests one after the other (non-pipelined) over an HTTPS or HTTP connection, before Amazon will close the connection.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387400801.368752956390380859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161568</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>212.130.169.45</wp:comment_author_IP>
			<wp:comment_date>2013-12-18 22:12:58</wp:comment_date>
			<wp:comment_date_gmt>2013-12-18 21:12:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@sraj
I observed the connections using a sniffer and could see that persistent connections were in fact not used while running the tests. Do note that this post is more than two years old and was run using an equally old version of the SDK. Much has happened since then and this may very well have been affected too.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387401178.8008840084075927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165676</wp:comment_id>
			<wp:comment_author><![CDATA[twitter backgrounds]]></wp:comment_author>
			<wp:comment_author_email>klausurquhart@inbox.com</wp:comment_author_email>
			<wp:comment_author_url>https://www.youtube.com/watch?v=1ljtsxiXvIE</wp:comment_author_url>
			<wp:comment_author_IP>107.158.21.138</wp:comment_author_IP>
			<wp:comment_date>2014-02-20 10:20:04</wp:comment_date>
			<wp:comment_date_gmt>2014-02-20 09:20:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello everyone, it's my first pay a quick visit at this website, and post is genuinely fruitful designed for me, keep up posting these types of posts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392888004.9745700359344482421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34917</wp:comment_id>
			<wp:comment_author><![CDATA[Flix Mcpherson]]></wp:comment_author>
			<wp:comment_author_email>netflix.boundaries@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>181.179.112.98</wp:comment_author_IP>
			<wp:comment_date>2013-05-08 00:55:31</wp:comment_date>
			<wp:comment_date_gmt>2013-05-07 22:55:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dear Mark

Very good job.

I was wondering if source could be changed from local to another s3bucket.

s3://sourcebucket to s3://destbucket

Verifiying md5, time stamp or file size to avoid copying existent and delete inexsistent from remote location (destbucket)?

If you can do that, then that will be real improvement for bucket syncing. 

Best.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1367967331.175818920135498046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113010</wp:comment_id>
			<wp:comment_author><![CDATA[Pushing the Limits of Amazon S3 Upload Performance | Scott Hack]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.scotthack.com/pushing-the-limits-of-amazon-s3-upload-performance</wp:comment_author_url>
			<wp:comment_author_IP>69.65.9.149</wp:comment_author_IP>
			<wp:comment_date>2013-09-13 09:58:51</wp:comment_date>
			<wp:comment_date_gmt>2013-09-13 07:58:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/ [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379059131.843080997467041015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165983</wp:comment_id>
			<wp:comment_author><![CDATA[how to open rar files]]></wp:comment_author>
			<wp:comment_author_email>rickieedmondson@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=QvGHbhPMZYI</wp:comment_author_url>
			<wp:comment_author_IP>165.231.22.180</wp:comment_author_IP>
			<wp:comment_date>2014-02-26 12:00:49</wp:comment_date>
			<wp:comment_date_gmt>2014-02-26 11:00:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you do not see the file you are looking for, go to the upper left corner of the 
screen and click on "Archive". The R4 SDHC is untested for 
Micro-SD cards above 32GB and problems are reported for 6GB micro SD.

Personally, my favorite indie stores have a mildly musty smell, indicative 
of the age of some of their stock.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1393412449.65981292724609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1382;s:14:"comment_author";s:21:"how to open rar files";s:20:"comment_author_email";s:25:"rickieedmondson@gmail.com";s:18:"comment_author_url";s:42:"http://www.youtube.com/watch?v=QvGHbhPMZYI";s:15:"comment_content";s:330:"If you do not see the file you are looking for, go to the upper left corner of the 
screen and click on "Archive". The R4 SDHC is untested for 
Micro-SD cards above 32GB and problems are reported for 6GB micro SD.

Personally, my favorite indie stores have a mildly musty smell, indicative 
of the age of some of their stock.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"165.231.22.180";s:10:"user_agent";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:8:"referrer";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:21:"how to open rar files";s:10:"POST_email";s:25:"rickieedmondson@gmail.com";s:8:"POST_url";s:42:"http://www.youtube.com/watch?v=QvGHbhPMZYI";s:12:"POST_comment";s:330:"If you do not see the file you are looking for, go to the upper left corner of the 
screen and click on "Archive". The R4 SDHC is untested for 
Micro-SD cards above 32GB and problems are reported for 6GB micro SD.

Personally, my favorite indie stores have a mildly musty smell, indicative 
of the age of some of their stock.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1382";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"af4d630343";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:102:"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"581";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"165.231.22.180";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"48963";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1393412449";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 22:57:40";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>165722</wp:comment_id>
			<wp:comment_author><![CDATA[youtube music downloader]]></wp:comment_author>
			<wp:comment_author_email>catherinehalstead@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/watch?v=dpbePweJVXU</wp:comment_author_url>
			<wp:comment_author_IP>196.196.18.214</wp:comment_author_IP>
			<wp:comment_date>2014-02-21 07:50:17</wp:comment_date>
			<wp:comment_date_gmt>2014-02-21 06:50:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What's up, constantly i used to check webpage posts here in 
the early hours in the daylight, since i love to learn more and more.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392965417.6048610210418701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:61:{s:15:"comment_post_ID";i:1382;s:14:"comment_author";s:24:"youtube music downloader";s:20:"comment_author_email";s:27:"catherinehalstead@gmail.com";s:18:"comment_author_url";s:42:"http://www.youtube.com/watch?v=dpbePweJVXU";s:15:"comment_content";s:131:"What's up, constantly i used to check webpage posts here in 
the early hours in the daylight, since i love to learn more and more.";s:12:"comment_type";s:0:"";s:14:"comment_parent";i:0;s:7:"user_ID";i:0;s:7:"user_ip";s:14:"196.196.18.214";s:10:"user_agent";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:8:"referrer";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:4:"blog";s:17:"http://improve.dk";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:21:"akismet_comment_nonce";s:6:"passed";s:11:"POST_author";s:24:"youtube music downloader";s:10:"POST_email";s:27:"catherinehalstead@gmail.com";s:8:"POST_url";s:42:"http://www.youtube.com/watch?v=dpbePweJVXU";s:12:"POST_comment";s:131:"What's up, constantly i used to check webpage posts here in 
the early hours in the daylight, since i love to learn more and more.";s:11:"POST_submit";s:12:"Post Comment";s:20:"POST_comment_post_ID";s:4:"1382";s:19:"POST_comment_parent";s:1:"0";s:26:"POST_akismet_comment_nonce";s:10:"267496602d";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:5:"PHPRC";s:33:"/etc/custom_php_config/improve.dk";s:4:"PATH";s:28:"/usr/local/bin:/usr/bin:/bin";s:3:"PWD";s:27:"/var/www/wrappers/improvedk";s:17:"HTTP_X_PHPVERSION";s:2:"52";s:5:"SHLVL";s:1:"0";s:17:"HTTP_X_DOMAINNAME";s:10:"improve.dk";s:9:"FCGI_ROLE";s:9:"RESPONDER";s:9:"HTTP_HOST";s:10:"improve.dk";s:15:"HTTP_CONNECTION";s:5:"close";s:15:"HTTP_USER_AGENT";s:120:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.116 Safari/537.36";s:11:"HTTP_ACCEPT";s:129:"text/html, application/xml;q=0.9, application/xhtml+xml, image/png, image/webp, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1";s:20:"HTTP_ACCEPT_LANGUAGE";s:2:"en";s:20:"HTTP_ACCEPT_ENCODING";s:13:"gzip, deflate";s:12:"HTTP_REFERER";s:69:"http://improve.dk/pushing-the-limits-of-amazon-s3-upload-performance/";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:14:"CONTENT_LENGTH";s:3:"367";s:16:"SERVER_SIGNATURE";s:0:"";s:11:"SERVER_NAME";s:10:"improve.dk";s:11:"SERVER_ADDR";s:15:"217.116.232.208";s:11:"SERVER_PORT";s:2:"80";s:11:"REMOTE_ADDR";s:14:"196.196.18.214";s:13:"DOCUMENT_ROOT";s:21:"/home/www/improve.dk/";s:12:"SERVER_ADMIN";s:18:"[no address given]";s:15:"SCRIPT_FILENAME";s:41:"/home/www/improve.dk/wp-comments-post.php";s:11:"REMOTE_PORT";s:5:"52181";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:14:"REQUEST_METHOD";s:4:"POST";s:12:"QUERY_STRING";s:0:"";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1392965417";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";s:25:"comment_post_modified_gmt";s:19:"2013-01-29 22:57:40";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>116044</wp:comment_id>
			<wp:comment_author><![CDATA[AWS Performance | Email Expert At BitTitan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://jscotthead.wordpress.com/2013/09/17/aws-performance/</wp:comment_author_url>
			<wp:comment_author_IP>72.232.7.20</wp:comment_author_IP>
			<wp:comment_date>2013-09-17 17:04:05</wp:comment_date>
			<wp:comment_date_gmt>2013-09-17 15:04:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] AWS Performance [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379430245.780747890472412109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>OrcaMDF Now Exposes Metadata Through System DMVs</title>
		<link>http://improve.dk/orcamdf-now-exposes-metadata-through-system-dmvs/</link>
		<pubDate>Thu, 10 Nov 2011 15:49:29 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/11/10/orcamdf-now-exposes-metadata-through-system-dmvs.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’m sitting here on the train in Denmark, on the final leg home from <a href="http://www.sqlpass.org/sqlrally/2011/" target="_blank">SQLRally Nordic</a>. During my presentation based on my OrcaMDF work, I implicitly announced that OrcaMDF now exposes metadata – thougt I might as well share here as well. Other than expanding the core engine support in OrcaMDF, one of the main features I’ve wanted to implement was a way for OrcaMDF to expose metadata about your database. How do you list the tables, indexes, columns, etc. from your database?</p>

<h2>Avoiding false abstractions</h2>

<p>My initial thought was to create my own abstraction layer on top of the objects. You could get the list of user tables by accessing the database.GetMetadata().UserTables enumeration, you’d get a list of tables, including columns, etc. This has a very clean interface from the development side, everything being normal .NET objects. However, it would also require me to come up with said abstraction – and where do I draw the line on what to expose and what to keep internal? What if my abstraction didn’t feel natural to DBAs, being used to the sys.* DMVs from SQL Server?</p>

<h2>Exposing the built-in DMVs from SQL Server</h2>

<p>I spent some time considering who might end up using OrcaMDF – and concluded there might be just about four persons in the world, and those four would be split evenly between DBA and SQL Server dev. Common for those is that they’re already used to navigating the metadata of SQL Server databses through system DMVs like sys.tables, sys.columns, sys.indexes etc. What then struck me was that I’m already able to parse all of the base tables in SQL Server, and using OBJECT_DEFINITION, I can get the source code of the built-in system DMVs. As such, it was a simple matter of creating my own replicas of the built-in DMVs.</p>

<h2>How to use the DMVs in OrcaMDF</h2>

<p>Say we wanted to retrieve all the columns for a given data in SQL Server, we create a query like this:</p>

<pre lang="tsql" escaped="true">SELECT
	c.*
FROM
	sys.columns c
INNER JOIN
	sys.tables t ON c.object_id = t.object_id
WHERE
	t.name = 'Persons'</pre>

<p>Doing the same in OrcaMDF could look like this:</p>

<pre lang="csharp" escaped="true">using (var db = new Database(new[] { @"C:Test.mdf" }))
{
	var sys = db.Dmvs;

	var table = sys.Tables.Where(t =&gt; t.Name == "Persons").Single();
	var columns = sys.Columns.Where(c =&gt; c.ObjectID == table.ObjectID);

	foreach (var col in columns)
		Console.WriteLine(col.Name);
}</pre>

<p>And if you prefer the more SQL-esque syntax of LINQ, you can of course do it like this as well:</p>

<pre lang="csharp" escaped="true">using (var db = new Database(new[] { @"C:Test.mdf" }))
{
	var sys = db.Dmvs;

	var columns =	from c in sys.Columns
			join t in sys.Tables on c.ObjectID equals t.ObjectID
			where t.Name == "Persons"
			select c;

	foreach (var col in columns)
		Console.WriteLine(col.Name);
}</pre>

<p>No matter how you choose to do it, this is the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_22.png"><img class="alignnone size-full wp-image-2429" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/11/image_22.png" width="677" height="342" /></a></div></div>

<h2>What’s available at this point</h2>

<p>If you grab the <a href="https://github.com/improvedk/OrcaMDF" target="_blank">latest commit of OrcaMDF</a>, you’ll have access to the following DMVs, just as they’re exposed through SQL Server:</p>

<ul>
	<li>sys.columns</li>
	<li>sys.indexes</li>
	<li>sys.index_columns</li>
	<li>sys.objects</li>
	<li>sys.objects$</li>
	<li>sys.system_internals_allocation_units</li>
	<li>sys.system_internals_partitions</li>
	<li>sys.system_internals_partition_columns</li>
	<li>sys.tables</li>
	<li>sys.types</li>
</ul>

<p>More is definitely on their way. Let me know if you have a special wish for a DMV – I might just be able to make your wish come true!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1383</wp:post_id>
		<wp:post_date>2011-11-10 15:49:29</wp:post_date>
		<wp:post_date_gmt>2011-11-10 15:49:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-now-exposes-metadata-through-system-dmvs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dmv"><![CDATA[DMV]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Now Exposes Metadata Through System DMVs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1139</wp:comment_id>
			<wp:comment_author><![CDATA[Lindsay]]></wp:comment_author>
			<wp:comment_author_email>lgordon@dzone.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.dzone.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-14 16:11:19</wp:comment_date>
			<wp:comment_date_gmt>2011-11-14 16:11:19</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there!  My name is Lindsay, and I'm the Community Manager at DZone, a website that provides information sharing for the developer community.  Our Most Valuable Bloggers (MVB) program is for bloggers such as yourself, and we'd love to invite you to join!  If you are interested in learning more please contact me at lgordon (at) dzone (dot) com.  I promise that this is not spam and I hope to hear from you! ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140575</wp:comment_id>
			<wp:comment_author><![CDATA[OrcaMDF RawDatabase - A Swiss Army Knife for MDF Files]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/orcamdf-rawdatabase-a-swiss-army-knife-for-mdf-files/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2013-11-05 00:24:17</wp:comment_date>
			<wp:comment_date_gmt>2013-11-04 23:24:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] plans of doing so, OrcaMDF has ended up being capable of parsing base tables, metadata and even dynamically recreating common DMVs. On top of this, I made a simple GUI, just to make OrcaMDF easier to [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383607457.673840045928955078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Optimizing Single Instance Amazon S3 Delete Performance</title>
		<link>http://improve.dk/optimizing-single-instance-amazon-s3-delete-performance/</link>
		<pubDate>Thu, 17 Nov 2011 18:39:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/11/16/optimizing-single-instance-amazon-s3-delete-performance.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Once you’ve <a href="http://improve.dk/archive/2011/11/07/pushing-the-limits-of-amazon-s3-upload-performance.aspx" target="_blank">made a mess</a> and you’ve now got millions of objects you need to delete, how do you do that as fast as possible?</p>

<h2>Characteristics of a delete request</h2>

<p>Contrary to a PutObjectRequest, the DeleteObjectRequest carries a rather constant payload. If we look at the actual request, the only things varying is the object name (MyObject.txt in this case) and the x-amz-date header field, as set by the .NET AWS SDK:</p>

<pre class="plain">DELETE http://improve-eu.dk.s3-eu-west-1.amazonaws.com/MyObject.txt HTTP/1.1
User-Agent: aws-sdk-dotnet/1.3.16.0 .NET Runtime/4.0 .NET Framework/4.0 OS/6.1.7601.65536
Authorization: AWS XYZ
x-amz-date: Tue, 15 Nov 2011 21:09:38 GMT
Host: improve-eu.dk.s3-eu-west-1.amazonaws.com
Content-Length: 0
Connection: Close</pre>

<p>The result is equally static:</p>

<pre class="plain">HTTP/1.1 204 No Content
x-amz-id-2: k5r8aSZ3lpcWe4V255z7v8yqbMSPQQ7COEAGwsnRwzLeXpaJkSgRXNMoOf9ATdH0
x-amz-request-id: DABA77DD2B542C43
Date: Tue, 15 Nov 2011 21:09:37 GMT
Server: AmazonS3</pre>

<p>Looking at this particular request, it takes up 322 bytes, with the only really variable part, the object name, taking up 13 of those bytes. As such, a delete request takes up roughly 309 bytes + the object name. This means pipe width probably won’t be an issue – even with massive parallelization we won’t be able to saturate even a smaller line. Again, we’re forced to look into reducing latency and increasing parallelization to improve our mass delete performance.</p>

<h2>Does object size &amp; existence matter?</h2>

<p>When uploading, the size of the object obviously matters, as shown in <a href="http://improve.dk/archive/2011/11/07/pushing-the-limits-of-amazon-s3-upload-performance.aspx" target="_blank">post on upload performance</a>. For deletes, I’d assume object size wouldn’t matter. Just to be sure though, I made a test. Through four iterations, I created 1024 objects of 1KB, 1MB and 16MB size. I then, single-threaded, deleted each of those objects, one by one and recorded the total runtime. Once all the objects were deleted, I performed all of the delete requests again, even though the objects didn’t exist. I wanted to know whether the existence of an object had an impact on the request latency.</p>

<p>The tests were performed using an m1.large (100Mbps bandwidth reported by instance, usually more available) instance in the EU region, accessing a bucket also in the EU region. Once run, I discarded the best and worst results and took the average of the remaining two.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_62.png"><img class="alignnone size-full wp-image-2431" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/11/image_62.png" width="400" height="229" /></a></div></div>

<p>The first graphs shows some variance, which is to be expected. Key, however, is that neither the object size nor the existence of an object seems to have any general say in the performance. If we put this in a logarithmic scale, it’s a bit more apparent:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_8.png"><img class="alignnone size-full wp-image-2432" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/11/image_8.png" width="400" height="229" /></a></div></div>

<p>My guess is that Amazons S3 service is most likely handling a request by just marking the object, if it exists, as deleted, returning, and the asynchronously deleting the object from disk at a later time. As is usual database practice, the marking of an object as deleted and the existence check is probably done in the same query to the database, returning the number of rows affected. As such, performance is identical, no matter if an object exists or not, just as the size doesn’t matter as it’s physically deleted asynchronously.</p>

<p>I’ll use this fact in my testing as that means I can simply performance test deleting non-existing objects, sparing myself the need to upload deterministically named objects beforehand.</p>

<h2>Multi-threaded deletes</h2>

<p>The key to performance, as previously shown, is without doubt achieved by scaling out the number of threads.</p>

<p>The following test code spins up a given number of threads and lets them run for 30 seconds, before they’re all aborted. Each thread is continually looping, firing off as many DeleteObjectRequest’s as it can. After 30 seconds, the average request/sec is calculated and output. I ran four repetitions of each, discarded the top and bottom result and calculated the average of the remaining two.</p>

<pre lang="csharp" escaped="true">private const string bucketName = "improve-eu.dk";
private const string serviceUrl = "s3-eu-west-1.amazonaws.com";

static void Main(string[] args)
{
	var config = new AmazonS3Config().WithServiceURL(serviceUrl).WithCommunicationProtocol(Protocol.HTTP);
	int numThreads = Convert.ToInt32(args[0]);
	int count = 0;
	var sw = new Stopwatch();

	// Ensuring all connections have network connectivity
	ServicePointManager.DefaultConnectionLimit = numThreads;

	// The actual job each thread will be performing
	var work = new ThreadStart(() =&gt;
	{
		using (var s3Client = AWSClientFactory.CreateAmazonS3Client(ConfigurationManager.AppSettings["AccessKeyID"], ConfigurationManager.AppSettings["SecretAccessKey"], config))
		{
			var request = new DeleteObjectRequest()
				.WithBucketName(bucketName)
				.WithKey("xyz");

			while (sw.ElapsedMilliseconds &lt;= 30000)
			{
				s3Client.DeleteObject(request);

				// Avoid extra counts while threads are spinning down
				if(sw.ElapsedMilliseconds &lt;= 30000)
					count++;
			}
		}
	});

	// Warmup
	using (var s3Client = AWSClientFactory.CreateAmazonS3Client(ConfigurationManager.AppSettings["AccessKeyID"], ConfigurationManager.AppSettings["SecretAccessKey"], config))
	{
		var request = new DeleteObjectRequest()
			.WithBucketName(bucketName)
			.WithKey("xyz");
		s3Client.DeleteObject(request);
	}

	// Start X number of threads and let them upload as much as they can
	var threads = new List&lt;Thread&gt;();
	for (int j = 0; j &lt; numThreads; j++)
		threads.Add(new Thread(work));

	sw.Start();
	threads.ForEach(x =&gt; x.Start());

	// Wait 30 secs, stop all threads, output reqs/sec result
	Thread.Sleep(30000);
	threads.ForEach(x =&gt; x.Abort());

	Console.WriteLine((double)count / 30);
}</pre>

<p>The following graph shows the results, testing with thread counts of 8, 16, 32, 64, 128, 256, being run on an m1.large instance, the more CPU-beefy c1.xlarge instance and finally the Danish Server 2003 Colo instance that I used in my last post:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_16.png"><img class="alignnone size-full wp-image-2433" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/11/image_16.png" width="572" height="311" /></a></div></div>

<p>Results clearly show similar performance characteristics – both EC2 servers max out at 32 threads. The m1.large instance managed 1428 requests/sec while the c1.xlarge instance managed 1591 requests/sec. I could probably go higher using a compute cluster instance, but that’s not what I’m trying to show in this post. The colo instance went further and didn’t max out until I was running 64 threads – most likely due to the larger latency, and thus added benefit of more outstanding requests.</p>

<h2>Disabling the Nagle algorithm</h2>

<p>I considered, and tested, whether disabling the <a href="http://en.wikipedia.org/wiki/Nagle's_algorithm" target="_blank">Nagle algorithm</a> might have an impact. However – since each of these requests are fired on a single connection that’s closed, and hence flushed, immediately afterwards – disabling the Nagle algorithm has no measureable effect.</p>

<h2>Can we lower the CPU usage?</h2>

<p>While the EC2 CPU isn’t maxed at 32 threads, it’s way higher than I’d like it to be, even just at 64 threads:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_42.png"><img class="alignnone size-full wp-image-2434" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/11/image_42.png" width="585" height="446" /></a></div></div>

<p>However, the code we’re running is already in a rather tight loop without much to optimize:</p>

<pre lang="csharp" escaped="true">while (sw.ElapsedMilliseconds &lt;= 30000)
{
	s3Client.DeleteObject(request);

	// Avoid extra counts while threads are spinning down
	if(sw.ElapsedMilliseconds &lt;= 30000)
		count++;
}</pre>

<p>It’s basically just a loop, reusing the same request and letting the AmazonS3Client do its part to send off the object. Internally, AmazonS3Client.DeleteObject() is firing off the asynchronous BeginPutObject and then immediately waiting for EndPutObject afterwards. If we dig further in, there’s a lot of generic AWS SDK framework overhead in constructing the requests, checking for all sorts of conditions that may arise, but are not particularly relevant to our case. How about we ditch the SDK and create our own requests?</p>

<p>Following this guide on <a href="http://docs.amazonwebservices.com/AmazonS3/2006-03-01/dev/index.html?RESTAuthentication.html" target="_blank">signing and authenticating REST requests</a>, I constructed a method like this (minus the measuring and reformatting, this just shows the basic form):</p>

<pre lang="csharp" escaped="true">var accessKeyID = "XYZ";
var secretAccessKey = "SecretXYZ";

using (var sha1 = new HMACSHA1())
{
	while(true)
	{
		var webrequest = (HttpWebRequest)WebRequest.Create("http://improve-eu.dk.s3-eu-west-1.amazonaws.com/xyz");
		webrequest.Method = "DELETE";
		webrequest.ContentLength = 0;
		webrequest.KeepAlive = false;
		webrequest.AllowWriteStreamBuffering = false;
		webrequest.AllowAutoRedirect = false;

		var date = DateTime.UtcNow.ToString("R");

		string stringToSign = 
			"DELETE" + "n" +
			"n" +
			"n" +
			"n" +
			"x-amz-date:" + date + "n" +
			"/improve-eu.dk/xyz";

		string signature = AWSSDKUtils.HMACSign(stringToSign, secretAccessKey, sha1);

		webrequest.Headers.Add("x-amz-date", date);
		webrequest.Headers.Add("Authorization", "AWS " + accessKeyID + ":" + signature);

		webrequest.GetResponse().Close();
	}
}</pre>

<p>This tries to push through as many requests as possible in as little time as possible, with as little framework overhead as possible. Alas, I saw no noteworthy improvements in performance so I’m glad to report that the AWS SDK seems well optimized, even with it’s generic looks. A side result was that I shaved off the user-agent and thereby ended up with slightly smaller requests:</p>

<pre class="plain">DELETE http://improve-eu.dk.s3-eu-west-1.amazonaws.com/xyz HTTP/1.1
x-amz-date: Wed, 16 Nov 2011 18:58:11 GMT
Authorization: AWS XYZ
Host: improve-eu.dk.s3-eu-west-1.amazonaws.com
Content-Length: 0
Connection: Close</pre>

<p>This took me from a request size of 322 bytes down to 223 bytes on average. Sadly, this too had no noteworthy impact on performance.</p>

<h2>Conclusion</h2>

<p>Deletes carry a constant cost, both in payload size as well as execution time. We can’t batch them up and there’s no data to compress. As such, we’re left with just multi-threading and possibly optimizing the TCP/IP stack depending on the latency characteristics of the environment. The lower the latency, the fewer threads you should use. In my testing, a typical low-latency (e.g. EC2) environment seems to max out at 32 threads, where as a medium/high latency environment seems to max out at 64 concurrent threads.</p>

<p>Obviously there are steps between 32 and 64 threads and you may get better results at running just 50 threads – these are just ballpark test numbers. As always, your mileage may vary.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1384</wp:post_id>
		<wp:post_date>2011-11-17 19:39:55</wp:post_date>
		<wp:post_date_gmt>2011-11-17 18:39:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>optimizing-single-instance-amazon-s3-delete-performance</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="amazon-web-services"><![CDATA[Amazon Web Services]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="post_tag" nicename="s3"><![CDATA[S3]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Optimizing Single Instance Amazon S3 Delete Performance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OrcaMDF Studio Release + Feature Recap</title>
		<link>http://improve.dk/orcamdf-studio-release-feature-recap/</link>
		<pubDate>Fri, 25 Nov 2011 22:59:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/11/24/orcamdf-studio-release-feature-recap.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Just about two and a half months have passed since I last posted an <a href="http://improve.dk/archive/2011/09/10/orcamdf-feature-recap.aspx" target="_blank">OrcaMDF feature recap</a>. Since then I’ve been busy attending three of the top SQL Server conferences – SQLBits, PASS and SQL Rally. It’s been excellent chatting about <a href="http://improve.dk/archive/2011/05/03/introducing-orcamdf.aspx" target="_blank">OrcaMDF</a> and getting some feedback on where to take it, thanks to all of you!</p>

<p>Though I’ve been busy, I’ve also managed to put some work into OrcaMDF in the meantime.</p>

<h2>New features</h2>

<p>A non-exhaustive list of additions since my last post:</p>

<ul>
	<li><a href="http://improve.dk/archive/2011/10/24/orcamdf-now-supports-databases-with-multiple-data-files.aspx" target="_blank">Support for multi-file databases</a>.</li>
	<li><a href="http://improve.dk/archive/2011/11/10/orcamdf-now-exposes-metadata-through-system-dmvs.aspx" target="_blank">Exposing metadata through standard SQL Server DMVs</a>.</li>
	<li>Optimized performance by more light weight usage of byte arrays, as well as sharing a single instance of the table schema between all rows.</li>
</ul>

<p>I’ve also added support for the following extra data types:</p>

<ul>
	<li>money</li>
	<li>smallmoney</li>
	<li>uniqueidentifier</li>
	<li>User defined types</li>
</ul>

<p>And just one more minor thing...</p>

<h2>OrcaMDF Studio</h2>

<p>Common among much of the feedback I got was something along the lines of: Awesome project! I definitely want to try it out, but I haven’t had the time yet.</p>

<p>To be honest, it’s been somewhat cumbersome to try out OrcaMDF. You had to download the source, compile it yourself and then write your own application to actually invoke OrcaMDF. It’s never been my intention for it to be directly end user usable, as that’s just not my focus. However, to improve upon OrcaMDF, I need more usage feedback. As a result, I decided to create OrcaMDF Studio – an UI on top of OrcaMDF, allowing you to query user tables, dmvs and base tables without looking at any of the code at all. What you’re seeing here is OrcaMDF showing the contents of the Product table in a standard AdventureWorks 2008 database:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_43.png"><img class="alignnone size-full wp-image-2437" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/11/image_43.png" width="1024" height="413" /></a></div></div>

<h3>Base tables</h3>

<p>OrcaMDF Studio exposes all of the base tables (that it currently supports &amp; parses), just like normal tables:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_12.png"><img class="alignnone size-full wp-image-2438" alt="image_12" src="http://improve.dk/wp-content/uploads/2011/11/image_12.png" width="792" height="460" /></a></div></div>

<h3>Dynamic Management Views</h3>

<p>OrcaMDF also exposes all of the currently supported DMVs, just like any other table:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_14.png"><img class="alignnone size-full wp-image-2439" alt="image_14" src="http://improve.dk/wp-content/uploads/2011/11/image_14.png" width="792" height="460" /></a></div></div>

<h3>User tables, indexes &amp; schemas</h3>

<p>Finally, OrcaMDF also exposes all of the user tables, including their schemas, indexes and index schemas:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_161.png"><img class="alignnone size-full wp-image-2440" alt="image_16" src="http://improve.dk/wp-content/uploads/2011/11/image_161.png" width="792" height="460" /></a></div></div>

<h3>Error reporting</h3>

<p>As OrcaMDF, and the Studio, is still far from production ready, you’ll probably run into unsupported scenarios or common bugs. If you do, OrcaMDF Studio will report it to you, as well as save a stack trace in the application directory. Here’s an example of a typical error – trying to open a table with an unsupported column type (xml for example):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_18.png"><img class="alignnone size-full wp-image-2441" alt="image_18" src="http://improve.dk/wp-content/uploads/2011/11/image_18.png" width="489" height="274" /></a></div></div>

<p>If you look in the ErrorLog.txt file that’s written to the application directory, you’ll see an exception like this:</p>

<pre class="plain">25-11-2011 00:41:21
----------
System.ArgumentException: Unsupported type: xml(-1)
   at OrcaMDF.Core.MetaData.DataColumn..ctor(String name, String type, Boolean nullable) in D:ProjectsOrcaMDFsrcOrcaMDF.CoreMetaDataDataColumn.cs:line 135
   at OrcaMDF.Core.MetaData.DataColumn..ctor(String name, String type) in D:ProjectsOrcaMDFsrcOrcaMDF.CoreMetaDataDataColumn.cs:line 20
   at OrcaMDF.Core.MetaData.DatabaseMetaData.GetEmptyDataRow(String tableName) in D:ProjectsOrcaMDFsrcOrcaMDF.CoreMetaDataDatabaseMetaData.cs:line 155
   at OrcaMDF.Core.Engine.DataScanner.ScanTable(String tableName) in D:ProjectsOrcaMDFsrcOrcaMDF.CoreEngineDataScanner.cs:line 31
   at OrcaMDF.OMS.Main.loadTable(String table) in D:ProjectsOrcaMDFsrcOrcaMDF.OMSMain.cs:line 158</pre>

<p>Completely anonymous data that just gives an indication of where the error occurred. If you run into issues like these, I would appreciate if you would send me the ErrorLog.txt file so I can debug potential issues. All issues, requests, error reports, etc. should be sent to my email.</p>

<h3>Database version support</h3>

<p>OrcaMDF has been developed for, and tested with, SQL Server 2008 R2. Some operations will work on SQL Server 2005, but many will fail since some of the base tables have different schemas. OrcaMDF does not differ and will thus throw up once you hit those differences. I’ll add an abstraction layer + support for both at a later time.</p>

<h3>Opening live databases</h3>

<p>OrcaMDF Studio will have to take a read lock on the database file(s) for now. As SQL Server takes exclusive locks on the files, this means you can’t open a live database. You can either detach the database, take it offline, backup-restore-detach or simply use a non-attached database to begin with. For a later release, I’ll add automatic VSS snapshot functionality.</p>

<h3>System requirements</h3>

<p>OrcaMDF is built on top of the <a href="http://www.microsoft.com/download/en/details.aspx?id=17851" target="_blank">.NET Framework 4.0</a> – as such, you will need to have it installed for OrcaMDF Studio to run. OrcaMDF Studio will run on both x64 and x86 machines.</p>

<h3>Disclaimer</h3>

<p>Once again, OrcaMDF + Studio is experimental software. I give no guarantees whatsoever, and you’re using it at your own risk. OrcaMDF will not write anything to disk and will thus not, in any way, modify your database files. However, I strongly suggest that you <strong>do not</strong> use this on a production database, either way.</p>

<p>OrcaMDF neither knows nor cares about security. No matter who owns that schema or object, OrcaMDF will parse it just fine – no need for pesky usernames and passwords. However, OrcaMDF does not support <a href="http://msdn.microsoft.com/en-us/library/bb934049.aspx" target="_blank">Transparent Data Encryption</a>, so databases using TDE will not be supported.</p>

<h3>Download</h3>

<p>You can download the OrcaMDF Studio binary release at the <a href="https://github.com/improvedk/OrcaMDF/downloads" target="_blank">OrcaMDF Github project page</a>. Please don’t ever download OrcaMDF anywhere else, you risk that someone modifies the source and distributes their own version. <strong>Always</strong> get it from the Github project page.</p>

<p>Once you download it, simply unpack it and run the OrcaMDF.OMS.exe application:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_221.png"><img class="alignnone size-full wp-image-2443" alt="image_22" src="http://improve.dk/wp-content/uploads/2011/11/image_221.png" width="698" height="260" /></a></div></div>

<p>Note that this is a debug build – hence the .pdf files. Debug builds will be slightly slower than release builds, but it does enable me to get full stack traces if/when an exception occurs. Once OrcaMDF stabilizes, I’ll provide both debug and release versions.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1385</wp:post_id>
		<wp:post_date>2011-11-25 23:59:07</wp:post_date>
		<wp:post_date_gmt>2011-11-25 22:59:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-studio-release-feature-recap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Studio Release + Feature Recap]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1142</wp:comment_id>
			<wp:comment_author><![CDATA[xin]]></wp:comment_author>
			<wp:comment_author_email>254897536@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-12-22 17:31:18</wp:comment_date>
			<wp:comment_date_gmt>2012-12-22 17:31:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thank you]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1143</wp:comment_id>
			<wp:comment_author><![CDATA[neo]]></wp:comment_author>
			<wp:comment_author_email>popion2011@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-10 12:05:02</wp:comment_date>
			<wp:comment_date_gmt>2012-02-10 12:05:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What about a source code? <br />I get and error &quot;Index was out of range ...&quot; and I would like to debug.<br />Great idea ... OrcaMDF.<br /><br />Thanks !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1144</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-10 13:43:40</wp:comment_date>
			<wp:comment_date_gmt>2012-02-10 13:43:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Neo,<br /><br />The source code is available on Github:<br /><a rel="nofollow external" href="https://github.com/improvedk/OrcaMDF" title="https://github.com/improvedk/OrcaMDF" rel="nofollow">https://github.com/improvedk/OrcaMDF</a><br /><br />Note that the error most likely stems from OrcaMDF and not the Studio. Also note that only SQL Server 2008 R2 databases are currently supported - all others will probably fail one way or the other :)<br /><br />If you need help tracking down the cause, please let me know and I'll see if I can help.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42814</wp:comment_id>
			<wp:comment_author><![CDATA[mbourgon]]></wp:comment_author>
			<wp:comment_author_email>michael_bourgon@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url>http://thebakingdba.blogspot.com</wp:comment_author_url>
			<wp:comment_author_IP>64.129.145.182</wp:comment_author_IP>
			<wp:comment_date>2013-05-20 16:30:44</wp:comment_date>
			<wp:comment_date_gmt>2013-05-20 14:30:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very cool.  I can see a few specific uses where it would come in amazingly handy (system databases in particular, corrupt DBs, etc).  We'll have to give it a whirl!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369060244.7645800113677978515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38314</wp:comment_id>
			<wp:comment_author><![CDATA[OrcaMDF Is Now Available on NuGet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/orcamdf-is-now-available-on-nuget/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2013-05-13 12:55:44</wp:comment_date>
			<wp:comment_date_gmt>2013-05-13 10:55:44</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] OrcaMDF now being available on NuGet as well as with a simple GUI, it really doesn&#8217;t get any simpler to take it for a spin [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368442544.936695098876953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Automated Testing of OrcaMDF Against Multiple SQL Server Versions</title>
		<link>http://improve.dk/automated-testing-of-orcamdf-against-multiple-sql-server-versions/</link>
		<pubDate>Mon, 28 Nov 2011 22:45:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/11/27/automated-testing-of-orcamdf-against-multiple-sql-server-versions.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since I released <a href="http://improve.dk/archive/2011/11/25/orcamdf-studio-release-feature-recap.aspx" target="_blank">OrcaMDF Studio</a>, I’ve gotten aware of some base table differences between SQL Server 2008 and 2005. These differences causes OrcaMDF to fail since it’s coded against 2008 R2 and expect that format.</p>

<p>While working on support for SQL Server 2005, it dawned on me that I need to expand my <a href="http://improve.dk/archive/2011/06/14/avoiding-regressions-in-orcamdf-by-system-testing.aspx" target="_blank">testing</a> to cover multiple SQL Server versions, instead of just hitting a single one. Somehow I also need to support the fact that some tests are only applicable for certain versions (e.g. sparse column tests should only be run for SQL Server 2008+, etc.).</p>

<h2>NUnit TestCaseSourceAttribute to the rescue!</h2>

<p>NUnit supports <a href="http://www.nunit.org/index.php?p=testCase&amp;r=2.5" target="_blank">inline parameterized tests</a> through the TestCase attribute. Even better, we can also provide the parameter data for test cases dynamically, using the <a href="http://www.nunit.org/index.php?p=testCaseSource&amp;r=2.5" target="_blank">TestCaseSource</a> attribute.</p>

<p>First up, I implemented a simple enumeration covering the versions that I’m currently working on supporting:</p>

<pre lang="csharp" escaped="true">public enum DatabaseVersion
{
	SqlServer2005,
	SqlServer2008,
	SqlServer2008R2,
}</pre>

<p>I then created the SqlServerTestAttribute class, inheriting directly from TestCaseSourceAttribute like so:</p>

<pre lang="csharp" escaped="true">public class SqlServerTestAttribute : TestCaseSourceAttribute
{
	private static IEnumerable&lt;TestCaseData&gt; versions
	{
		get
		{
			foreach (var value in Enum.GetValues(typeof(DatabaseVersion)))
				yield return new TestCaseData(value).SetCategory(value.ToString());
		}
	}

	public SqlServerTestAttribute() : base(typeof(SqlServerTestAttribute), "versions")
	{ }
}</pre>

<p>The SqlServerTestAttribute class tells TestCaseSourceAttribute to find the test case source data in the private static <em>versions</em> property. The versions property enumerates all the DatabaseVersion values and returns them one by one – ensuring to set the test category to the name of the DatabaseVersion value.</p>

<p>Next up, I converted my current tests to use the new SqlServerTest attribute, instead of the previous vanilla NUnit Test attribute:</p>

<pre lang="csharp" escaped="true">[SqlServerTest]
public void HeapForwardedRecord(DatabaseVersion version)
{
	...
}</pre>

<p>This causes all of my tests to be run once per enumeration value in the DatabaseVersion enumeration, automatically getting each of the values as input values in the version parameter.</p>

<h2>Supporting different development environments</h2>

<p>Now, I don’t want to force everyone to install all versions of SQL Server – they might just want to support SQL Server 2005 &amp; 2008R2 for example. In the OrcaMDF.Core.Tests project, I’ve defined a connection string for each supported test database like so:</p>

<pre lang="xml" escaped="true">&lt;connectionStrings&gt;
	&lt;clear/&gt;
	&lt;add name="SqlServer2005" connectionString="Data Source=.SQL2005;Integrated Security=SSPI"/&gt;
	&lt;add name="SqlServer2008R2" connectionString="Data Source=.;Integrated Security=SSPI"/&gt;
&lt;/connectionStrings&gt;</pre>

<p>If a database doesn’t have a connection (the name corresponding to the DatabaseVersion enumeration value), the test won’t be run for that version, simple as that. In this case I’m currently ignoring SQL Server 2008 as I only have 2005 and 2008R2 installed on my machine.</p>

<p>To perform the filtering on available databases, I’ve modified my test cases to let the base class actually run the test, using a lambda:</p>

<pre lang="csharp" escaped="true">[SqlServerTest]
public void HeapForwardedRecord(DatabaseVersion version)
{
	RunDatabaseTest(version, db =&gt;
	{
		var scanner = new DataScanner(db);
		var rows = scanner.ScanTable("HeapForwardedRecord").ToList();

		Assert.AreEqual(25, rows[0].Field&lt;int&gt;("A"));
		Assert.AreEqual("".PadLeft(5000, 'A'), rows[0].Field&lt;string&gt;("B"));

		Assert.AreEqual(28, rows[1].Field&lt;int&gt;("A"));
		Assert.AreEqual("".PadLeft(4000, 'B'), rows[1].Field&lt;string&gt;("B"));
	});
}</pre>

<p>The RunDatabase method is exposed in the SqlServerSystemTestBase class:</p>

<pre lang="csharp" escaped="true">protected void RunDatabaseTest(DatabaseVersion version, Action&lt;Database&gt; test)
{
	string versionConnectionName = version.ToString();

	// Only run test for this version if a connection string has been provided
	if (ConfigurationManager.ConnectionStrings[versionConnectionName] == null)
		Assert.Inconclusive();

	// Setup database and store file paths, if we haven't done so already
	ensureDatabaseIsSetup(version);

	// Run actual test
	using (var db = new Database(databaseFiles[version]))
		test(db);
}</pre>

<p>If a corresponding connection string hasn’t been declared in the configuration file, we abort the test and mark it as inconclusive – we simply weren’t able to run it given the current setup. Next up, ensureDatabaseIsSetup() runs the usual setup code (as detailed in the <a href="http://improve.dk/archive/2011/06/14/avoiding-regressions-in-orcamdf-by-system-testing.aspx" target="_blank">earlier blog post</a>), though this time once per database versions, per fixture. Finally an OrcaMDF instance is created and passed onto the actual test as a parameter.</p>

<h2>Supporting different SQL Server feature versions</h2>

<p>As mentioned, I need a way of executing some tests only on certain versions of SQL Server. The standard SqlServerTestAttribute automatically enumerations <em>all</em> values of the DatabaseVersion enumeration, but there’s no reason we can’t create a SqlServer2005TestAttribute like this:</p>

<pre lang="csharp" escaped="true">public class SqlServer2005TestAttribute : TestCaseSourceAttribute
{
	private static IEnumerable&lt;TestCaseData&gt; versions
	{
		get
		{
			yield return new TestCaseData(DatabaseVersion.SqlServer2005).SetCategory(DatabaseVersion.SqlServer2005.ToString());
		}
	}

	public SqlServer2005TestAttribute() : base(typeof(SqlServer2005TestAttribute), "versions")
	{ }
}</pre>

<p>Or what about tests that need to be run on SQL Server 2008+?</p>

<pre lang="csharp" escaped="true">public class SqlServer2008PlusTestAttribute : TestCaseSourceAttribute
{
	private static IEnumerable&lt;TestCaseData&gt; versions
	{
		get
		{
			foreach (var value in Enum.GetValues(typeof(DatabaseVersion)))
				if((DatabaseVersion)value &gt;= DatabaseVersion.SqlServer2008)
					yield return new TestCaseData(value).SetCategory(value.ToString());
		}
	}

	public SqlServer2008PlusTestAttribute()
		: base(typeof(SqlServer2008PlusTestAttribute), "versions")
	{ }
}</pre>

<p>Once we have the attributes, it’s as easy as marking the individual tests with the versions they’re supposed to be run on:</p>

<pre lang="csharp" escaped="true">[SqlServer2008PlusTest]
public void ScanAllNullSparse(DatabaseVersion version)
{
	RunDatabaseTest(version, db =&gt;
	{
		var scanner = new DataScanner(db);
		var rows = scanner.ScanTable("ScanAllNullSparse").ToList();

		Assert.AreEqual(null, rows[0].Field&lt;int?&gt;("A"));
		Assert.AreEqual(null, rows[0].Field&lt;int?&gt;("B"));
	});
}</pre>

<h2>ReSharper test runner support</h2>

<p>For the tests to run, you’ll need ReSharper 6.0 as ReSharper 5.1 doesn’t support the TestCaseSource attribute. Once you do, you’ll see a result like this once run (having enabled SQL Server 2005 &amp; 2008 R2 testing in this case):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_24.png"><img class="alignnone size-full wp-image-2445" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/11/image_24.png" width="918" height="621" /></a></div></div>

<p>Each test case is automatically multiplied by each DatabaseVersion (the Parse test isn’t, since it doesn’t implement SqlServerSystemTestBase and thus isn’t run on multiple versions). Most of the tests are failing on SQL Server 2005 since I don’t support it yet. All 2008 tests are inconclusive as I’m not running the tests. And finally, all of the 2008R2 tests are green, yay!</p>

<h2>Filtering the tests</h2>

<p>Obviously, we don’t want to run the tests for all versions of SQL Server all the time, that’d simply be too time consuming. One way to disable the testing of a specific version would be to remove the connection string. However, that still yields an inconclusive output, and it’s somewhat cumbersome to edit the configuration file all the time.</p>

<p>Unfortunately, the ReSharper test runner doesn’t support category filtering of parameterized tests created using the TestCaseSourceAttribute. I’ve created a <a href="http://youtrack.jetbrains.net/issue/RSRP-283463" target="_blank">feature request case on YouTRACK</a> as I really hope they’ll consider adding it for 6.1. If you also think it’d be awesome, please consider voting for the request case!</p>

<p>Fortunately, the NUnit test runner <em>does</em> support this kind of filtering. Opening the OrcaMDF.Core.Tests assembly in the NUnit test runner gives the following result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_44.png"><img class="alignnone size-full wp-image-2446" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/11/image_44.png" width="716" height="625" /></a></div></div>

<p>Notice how it already knows about the parameterized test parameters, even before we’ve run the test! Also note how it recognizes that the DifferingRecordFormats test is only to be run on SQL Server 2008+ while the FGSpecificClusteredAllocation test is to be run on 2005+.</p>

<p>What’s even better – if we go to the Categories tab, we get a list of all the test categories:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_64.png"><img class="alignnone size-full wp-image-2447" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/11/image_64.png" width="716" height="625" /></a></div></div>

<p>By explicitly selecting certain categories, we can choose to run just those versions. Once run, the other versions will be clearly greyed out:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/11/image_81.png"><img class="alignnone size-full wp-image-2448" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/11/image_81.png" width="716" height="629" /></a></div></div>

<p>Note the horrible runtime of 89 secs – just over 1 second per test. 98% of that time is spent in the LobTypes feature testing. Thanks to the category format, I can also apply categories to the main tests themselves, and thus easily filter out the long running tests and just concentrate on the quick ones. Lob types are especially demanding to test since they involve a lot of disk activity, creating all of the setup tables &amp; rows before hitting the database.</p>

<h2>Going forward</h2>

<p>Adding new versions is as simple as installing that version of SQL Server, adding a connection string in the configuration settings, and finally, adding the SQL Server name to the DatabaseVersion enumeration. That’s all there is to it.</p>

<p>On the more advanced side, at some point, I will need to test the many permutations of upgrade paths. Based on some testing I did, a SQL Server 2005 database upgraded to 2008R2 isn’t necessarily identical to a native 2008R2 one, or to a 2008-2008R2 upgraded one. As such, I’d need to test the many distinct upgrade paths to ensure full compatibility. However, that’s not high on my priority list, and it’d take even more time to test.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1386</wp:post_id>
		<wp:post_date>2011-11-28 23:45:07</wp:post_date>
		<wp:post_date_gmt>2011-11-28 22:45:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>automated-testing-of-orcamdf-against-multiple-sql-server-versions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="nunit"><![CDATA[NUnit]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[Testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Automated Testing of OrcaMDF Against Multiple SQL Server Versions]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQLBits 9 Session Evaluation</title>
		<link>http://improve.dk/sqlbits-9-session-evaluation/</link>
		<pubDate>Sun, 04 Dec 2011 23:28:35 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/12/05/sqlbits-9-session-evaluation.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’d heard many rumors about the excellent SQLBits session evaluation results that speakers are sent. Knowing the SSRS geeks on the SQLBits team, I’d expect nothing short of data &amp; graph filled reports – and I’m glad to say they didn’t disappoint!</p>

<p>Besides my <a href="http://improve.dk/archive/2011/06/30/presenting-a-precon-at-sqlbits.aspx" target="_blank">precon</a>, I presented my <a href="http://sqlbits.com/Sessions/Event9/Knowing_the_Internals_Who_Needs_SQL_Server_Anyway" target="_blank">Knowing the Internals, Who Needs SQL Server Anyway</a> session. Before I start – thanks to all of you who attended my session(s), and especially thanks to those of you who filled out the feedback forms! Unfortunately the A/V people had some troubles with the microphone, so the video cuts off after about 10 minutes. Hopefully my SQLRally Nordic presentation will be made public – if/when it does, I’ll post it here.</p>

<h2>The results</h2>

<p>Looking at the overall results, I’m extremely pleased to see that I’m pretty much top rated for the demos, expectations and overall categories. While my knowledge trumps all the other ratings I received, someone clearly set the bar extremely high there – I suspect it might be <a href="http://blog.kejser.org/" target="_blank">Thomas Kejser</a> as his session was simply out of this world. Note that the graph is kind of misleading as the scale goes from 1-9, not 10.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_4.png"><img class="alignnone size-full wp-image-2377" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/12/image_4.png" width="1006" height="366" /></a></div></div>

<h2>Score distribution</h2>

<p>Looking at the score distribution, I got a single 4 and a single 5, while the rest is 7+ with a heavy bias on 8’s and 9’s – can’t be anything but extremely satisfied. That being said – I’d love to weed out that single 4 &amp; 5, thankfully they’ve included comments with their feedback.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_6.png"><img class="alignnone size-full wp-image-2378" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/12/image_6.png" width="1024" height="277" /></a></div></div>

<h2>Comments</h2>

<p>I’ve listed all of the comments I got, including the average score for that comment (on a scale of 1-9). There were 20 evaluations in total, and out of those, 14 were commented. I, as all speakers, really appreciate the comments, whether to critique or praise – thank you!</p>

<blockquote>9 - Excellent content, great overview of what can be achieved.</blockquote>

<blockquote>9 – Was a lot to cover in one hour but Mark did a fantasic job, has really inspired me to learn a lot more.</blockquote>

<blockquote>9 – Very impressive!</blockquote>

<blockquote>9 – Thanks for sharing. This wasn't the most useful but a great deep dive into SQL internals and did inspire which I think is the purpose of a 1 hour session.</blockquote>

<blockquote>9 – Far too much spare time on your hands! Enjoyed it though, makes you think about how you store data and use the correct data types.</blockquote>

<blockquote>9 – While overwhelming at times this was probably my favourite session of SQLBits, It was a very insightful look at the computing principles that make SQL Server work. Considering the very technical content Mark did an excellent job of explaining his thought processes. The slides were very clear and the demos when stopping SQL Server, modifying the file in a Hex editor and then restarting to see the updated stats really joined everything together.</blockquote>

<blockquote>9 – One of the presentations of the few days for me. Whilst the material was probably a little bit too detailed for any practical use I may currently have, it's great to watch someone with great presentation skills (rare for a lot of techies?), sense of humour and a genuine enthusiasm for the work/hobby he is undertaking.</blockquote>

<blockquote>9 – Very impressive session. Technical level of the session was very high (as stated at the start). Watched Klaus Aschenbrenner's internals session from previous SQL bits and felt this was a good pre-cursor. Will definitely be downloading OrcaMDF.</blockquote>

<blockquote>8.66 – My favourite talk of the conference. Absolutley superb.</blockquote>

<blockquote>8.5 – Mark handled a topic with many grey areas with consummate ease. Lots of undocumented detail, quite incredible perseverance with a topic that is largely a black box.</blockquote>

<blockquote>8.5 – Excellent session - wished id have done the Full day thursday!!!! Marks knowledge in the subjects was second to none!!</blockquote>

<blockquote>8 – Very interesting session. Not entirely useful yet, but I can believe that by continuing to reverse engineering the file format this would be very useful knowledge to have.</blockquote>

<blockquote>7.66 – Really interesting stuff. Possibly not immediately usable in the work place, but it's good background information.</blockquote>

<blockquote>7.5 – Tough choice between this one and around the world session. Only negative was a bit heavy on the slides but this is a tough topic to demo in 1 hour so maximum respect for pulling this off. Also, it was made clear that the session was to inspire and not teach. He had to push through the session quickly to make the hour and Mark did it well.</blockquote>

<h2>Conclusions</h2>

<p><em>This session is not meant to teach, but to inspire.</em></p>

<p>That’s how I started out my session, and with good reason. Originally I held a 45 minute session at Miracle Open World earlier this year, which laid the foundation for my precon and session at SQLBits. While developing my precon, I suddenly ended up with a lot of material, way too much to present in just a single hour. I had to compress it somehow, so I basically had two choices – ditch 90% of the material, or ditch just 20% of the material and speed through the rest. I opted for the latter.</p>

<p>I made the choice that I’d rather give people the same experience that I had at my first SQL Server conference, several years ago. I went to a basic internals session, and suddenly it dawned upon me, how SQL Server wasn’t magic – it’s merely a bunch of deterministic rules for juggling with bytes on disk. Since then, I’ve been on a quest of learning how to SQL Server catches its fish, rather than just eating the fish it provides.</p>

<p>While I can’t deem any of the comments or ratings as negative, the only critique I got was on the direct practical usability of the content, as well as the amount of material presented in one hour. For both of those, I fully recognize what’s being said. As a result, some of my SQLBits X submissions are sessions that go in-depth on specific topics, that I’d otherwise just skimmed in my last session:</p>

<ul>
	<li><a href="http://sqlbits.com/Sessions/Event10/OrcaMDF-Real_Life_Usage" target="_blank">OrcaMDF – Real Life Usage</a></li>
	<li><a href="http://sqlbits.com/Sessions/Event10/Creating_the_Optimal_Schema_for_Storage_Efficiency" target="_blank">Creating the Optimal Schema for Storage Efficiency</a></li>
	<li><a href="http://sqlbits.com/Sessions/Event10/Storing_Character_Data_Optimally" target="_blank">Storing Character Data Optimally</a></li>
	<li><a href="http://sqlbits.com/Sessions/Event10/Optimizing_Performance_Using_Page_and_Row_Compression" target="_blank">Optimizing Performance Using Page and Row Compression</a></li>
	<li><a href="http://sqlbits.com/Sessions/Event10/Revealing_the_Magic" target="_blank">Revealing the Magic</a></li>
</ul>

<p>Revealing the Magic is the same session as Knowing the Internals – Who Needs SQL Server Anyways? I’ve renamed it to better reflect what my purpose with the session is – to reveal the magic. To hopefully provide that revelation of what SQL Server really is, once we hit the disk.</p>

<p>I look forward to an excellent 2012 with, hopefully, a lot of presentations to come!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1387</wp:post_id>
		<wp:post_date>2011-12-05 00:28:35</wp:post_date>
		<wp:post_date_gmt>2011-12-04 23:28:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlbits-9-session-evaluation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presenting at the 2012 Spring SQL Server Connections</title>
		<link>http://improve.dk/presenting-at-the-2012-spring-sql-server-connections/</link>
		<pubDate>Fri, 09 Dec 2011 22:15:39 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/12/08/presenting-at-the-2012-spring-sql-server-connections.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Las Vegas feels like home to me, ever since going there the first time at age 7 and looking at all those ever so banned-for-me slot machines. I’ve since gone there more times than I can count, including my 21st birthday – and what a difference that age does, in a city like Las Vegas. I’ve been to the CES conference, DevConnections (2007) and I’ve played a hand of poker or two, eventually ending up in me staying there for a month to participate in the World Series of Poker (finished #822 out of 8.773).</p>

<p>With Las Vegas being so special to me, I’m extremely thrilled and honored to announce that I’ll be presenting at the <a href="http://www.devconnections.com/shows/sp2012/speakers.aspx?s=185" target="_blank">SQL Server Connections</a> conference, March 26-29, 2012 at the MGM Grand in Las Vegas!</p>

<h2>SQL433: Optimizing Storage and Performance Using Page and Row Compression</h2>

<p>Since SQL Server 2005, we’ve been able to use the vardecimal data type to store decimals efficiently. With SQL Server 2008 came row and page compression, resulting in much better options for compressing our data. However, neither row nor page compression are panaceas! In this session I’ll walk you through the internals of row and page compression, and based on that knowledge, enable you to better evaluate when to use which type of compression, if compression should be used at all. Once we’ve decided to use compression, how do we determine its effectiveness? What are the pitfalls to look out for? I'll give you a full tool belt of knowledge to bring home and put to use on your databases.</p>

<h2>SQLConnections</h2>

<p>One of the really awesome features of SQLConnections is that it’s co-hosted alongside ASP.NET &amp; Silverlight, Visual Studio, SharePoint as well as Cloud &amp; Windows Connections. Each with their own set of tracks and speakers. It’s a humongous event, and I love the fact that you can mix them together – you can freely mix sessions from all the different conferences.</p>

<p>If you haven’t already, make sure to <a href="http://devconnections.com/shows/sp2012/registration.aspx?s=185" target="_blank">register today</a>!</p>

<h2>What about SQLBits X and SQL Saturday 105?</h2>

<p>Before being confirmed as a speaker at SQLConnections, I’d already submitted a ton of sessions for <a href="http://sqlbits.com/" target="_blank">SQLBits X</a> and <a href="http://www.sqlsaturday.com/105/eventhome.aspx" target="_blank">SQLSat105</a>. While I could just cram in SQLSat105 in Dublin on the 24th of March, I just can’t afford the extra stop on the trip. Unfortunately that means I’ve had to withdraw my submissions :(</p>

<p>As for SQLBits X, not going is simply not an option. SQLBits 9 was awesome, and I’ve really been looking forward to going again, whether I’m speaking or not. As such, I’ll be flying out of Vegas in the evening of March 29th, arriving in London on the 30th of March, just in time to catch day two and three of SQLBits X.</p>

<p>I’m really looking forward to presenting at SQLConnections, and I’m equally excited to meet a lot of good friends again at both Connections and SQLBits X!</p>

<p>PS – If anyone wants to share rooms at either Connections or SQLBits, <a href="https://twitter.com/improvedk" target="_blank">let me know</a>!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1388</wp:post_id>
		<wp:post_date>2011-12-09 23:15:39</wp:post_date>
		<wp:post_date_gmt>2011-12-09 22:15:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-at-the-2012-spring-sql-server-connections</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlconnections"><![CDATA[SQLConnections]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Determining If Vardecimal Is Enabled For a Table Without Using OBJECTPROPERTY</title>
		<link>http://improve.dk/determining-if-vardecimal-is-enabled-for-a-table-without-using/</link>
		<pubDate>Mon, 12 Dec 2011 16:21:58 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/12/10/determining-if-vardecimal-is-enabled-for-a-table-without-using-objectproperty.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Determining whether <a href="http://msdn.microsoft.com/en-us/library/bb508963(v=sql.90).aspx" target="_blank">vardecimal</a> is enabled for a given table is usually done by using the OBJECTPROPERTY function like so:</p>

<pre lang="tsql" escaped="true">SELECT OBJECTPROPERTY(OBJECT_ID('MyTable'), 'TableHasVarDecimalStorageFormat')</pre>

<p>If it’s disabled, you’ll see this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_2.png"><img class="alignnone size-full wp-image-2381" alt="image_2" src="http://improve.dk/wp-content/uploads/2011/12/image_2.png" width="167" height="69" /></a></div></div>

<p>Whereas if it’s enabled, you’ll see a 1:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_41.png"><img class="alignnone size-full wp-image-2382" alt="image_4" src="http://improve.dk/wp-content/uploads/2011/12/image_41.png" width="160" height="72" /></a></div></div>

<p>This works excellent as long as SQL Server is running, and you have access to the OBJECTPROPERTY function. However, as for all I know, there’s no DMV that exposes the vardecimal status for a table. I’ve also not been able to find this property in any of the base tables (if you know where/how it’s actually stored, please let me know!).</p>

<p>However, I’ve come up with the following query as a workaround for determining if vardecimal is enabled for a given table, without using OBJECTPROPERTY:</p>

<pre lang="tsql" escaped="true">SELECT
	COUNT(*)
FROM
	sys.system_internals_partition_columns PC
INNER JOIN
	sys.partitions P ON P.partition_id = pc.partition_id
INNER JOIN
	sys.tables T ON T.object_id = P.object_id
WHERE
	T.name = 'MyTable' AND
	P.index_id &lt;= 1 AND
	PC.system_type_id = 106 AND
	PC.leaf_offset &lt; 0</pre>

<p>What this does is to look for all of the decimal columns for the table, stored on any partition (as vardecimal is set at the table level, we don’t really care about the specific partitions) belonging to either the clustered index or heap.</p>

<p>Note that while this is usually true, you can actually have partitions within the same object, with both decimal and vardecimal columns. If you enable and disable vardecimal quickly, you'll often see an extra partition with the old schema definition, though no pages are allocated. Thus, if you're using this method for parsing purposes - make sure to check at the partition level. For most use cases, this won't be an issue.</p>

<p>If <em>any</em> of those decimal columns have a negative leaf_offset value (result &gt; 0), we can be sure that vardecimal is enabled for the table. The leaf_offset value determines the physical order of the fixed length columns in the actual records stored on disk. All variable length columns will have a negative value, and as such, normal decimal columns should always have a positive value. If any decimal column has a negative leaf_offset value, we know it’s stored in the variable length section of the records – and only vardecimals are stored that way!</p>

<h2>Example</h2>

<p>Here’s a table without vardecimal enabled:</p>

<pre lang="tsql" escaped="true">CREATE TABLE MyDecimalTable (A decimal(5, 0))

SELECT
	COUNT(*)
FROM
	sys.system_internals_partition_columns PC
INNER JOIN
	sys.partitions P ON P.partition_id = pc.partition_id
INNER JOIN
	sys.tables T ON T.object_id = P.object_id
WHERE
	T.name = 'MyDecimalTable' AND
	P.index_id &lt;= 1 AND
	PC.system_type_id = 106 AND
	PC.leaf_offset &lt; 0</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_61.png"><img class="alignnone size-full wp-image-2383" alt="image_6" src="http://improve.dk/wp-content/uploads/2011/12/image_61.png" width="164" height="75" /></a></div></div>

<p>And here’s one <em>with</em> vardecimal enabled:</p>

<pre lang="tsql" escaped="true">CREATE TABLE MyVardecimalTable (A decimal(5, 0))

EXEC sp_tableoption 'MyVardecimalTable', 'vardecimal storage format', '1'

SELECT
	COUNT(*)
FROM
	sys.system_internals_partition_columns PC
INNER JOIN
	sys.partitions P ON P.partition_id = pc.partition_id
INNER JOIN
	sys.tables T ON T.object_id = P.object_id
WHERE
	T.name = 'MyVardecimalTable' AND
	P.index_id &lt;= 1 AND
	PC.system_type_id = 106 AND
	PC.leaf_offset &lt; 0</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_8.png"><img class="alignnone size-full wp-image-2384" alt="image_8" src="http://improve.dk/wp-content/uploads/2011/12/image_8.png" width="172" height="80" /></a></div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1389</wp:post_id>
		<wp:post_date>2011-12-12 17:21:58</wp:post_date>
		<wp:post_date_gmt>2011-12-12 16:21:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>determining-if-vardecimal-is-enabled-for-a-table-without-using</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dmv"><![CDATA[DMV]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="objectproperty"><![CDATA[OBJECTPROPERTY]]></category>
		<category domain="post_tag" nicename="vardecimal"><![CDATA[Vardecimal]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[determining-if-vardecimal-is-enabled-for-a-table-without-using-objectproperty]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Determining If Vardecimal Is Enabled For a Table Without Using OBJECTPROPERTY]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>The Anatomy of Vardecimals</title>
		<link>http://improve.dk/how-are-vardecimals-stored/</link>
		<pubDate>Tue, 13 Dec 2011 21:22:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2011/12/11/the-anatomy-of-vardecimals.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this post I’ll do a deep dive into how vardecimals are stored on disk. For a general introduction to what they are and how/when to use them, <a href="http://msdn.microsoft.com/en-us/library/bb326755.aspx" target="_blank">see this post</a>.</p>

<h2>Is vardecimal storage enabled?</h2>

<p>First up, we need to determine whether vardecimals are enabled, since it completely changes the way decimals are stored on disk. Vardecimal is not a type itself, so all columns, whether stored as decimals are vardecimals share the same system type (106). Note that in SQL Server, <em>numeric</em> is exactly the same as decimal. Anywhere I mention decimal, you can substitute that with numeric and get the same result.</p>

<p>Provided SQL Server is running, you can execute the following to determine the vardecimal status of any given table:</p>

<pre lang="tsql">SELECT OBJECTPROPERTY(OBJECT_ID('MyTable'), 'TableHasVarDecimalStorageFormat')</pre>

<p>If you don’t have access to, or do not want to use the OBJECTPROPERTY function, you can query the sys.system_internals_partition_columns DMV to obtain the same information – see <a href="http://improve.dk/archive/2011/12/12/determining-if-vardecimal-is-enabled-for-a-table-without-using.aspx" target="_blank">Determining If vardecimal Is Enabled For a Table Without Using OBJECTPROPERTY</a>.</p>

<h2>Fixed length goes variable length</h2>

<p>Normal decimal columns are stored in the fixed length portion of a <a href="http://sqlskills.com/blogs/paul/post/Inside-the-Storage-Engine-Anatomy-of-a-record.aspx" target="_blank">record</a>. This means all that’s actually stored is the data itself. There is no need for length information as the number of required storage bytes can be calculated exclusively by the use of metadata. Once you enable vardecimals, all decimals are no longer stored in the fixed length portion of the record, but as a variable length field instead.</p>

<p>Storing the decimal as a variable length field has a couple of implications:</p>

<ul>
	<li>We can no longer statically calculate the number of bytes required to store a given value.</li>
	<li>There’s a two byte overhead for storing the record offset value in the variable length offset array.</li>
	<li>If the record previously had no variable length records, that overhead is actually four bytes since we also need to store the number of variable length records in the record offset array.</li>
	<li>The actual value of the decimal has a variable amount of bytes that we need to decipher.</li>
</ul>

<h2>What does the vardecimal value consist of?</h2>

<p>Once we’ve parsed the record and thereby retrieved the vardecimal value bytes from the variable length portion of the record, we need to parse it. There will <em>always</em> be at least <em>two</em> bytes for the value, though there can be up to 20 at most.</p>

<p>Where normal decimals are basically stored as one humongous integer (with the scale metadata defining the decimal position), vardecimals are stored using <a href="http://en.wikipedia.org/wiki/Scientific_notation" target="_blank">scientific notation</a>. Using scientific notation, we need to store three different values:</p>

<ul>
	<li>The sign (positive/negative).</li>
	<li>The exponent.</li>
	<li>The mantissa.</li>
</ul>

<p>Using these three components, we can calculate the actual number using the following formula:</p>

<pre class="plain">(sign) * mantissa * 10<sup>exponent</sup></pre>

<h3>Example</h3>

<p>Assume we have a vardecimal(5,2) column and we store the value 123.45. In scientific notation, that would be expressed as 1.2345 * 10<sup>2</sup>. In this case we have positive sign (1), an mantissa of 1.2345 and an exponent of 2. SQL Server knows that the mantissa always has a fixed decimal point after the first digit, and as such it simply stores the integer value 12345 as the mantissa. While the exponent is 2, SQL Server knows we have a scale of 2 defined, and it subtracts that from the exponent and thus stores 0 as the actual exponent.</p>

<p>Once we read it, we end up with a formula like this for calculating the mantissa (note that at this point we don’t care if the mantissa is positive or negative – we’ll take that into account later):</p>

<pre class="plain">mantissa / 10<sup>floor(log10(mantissa))</sup></pre>

<p>And plotting in our values, we get:</p>

<pre class="plain">12345 / 10<sup>floor(log10(12345))</sup></pre>

<p>Through basic simplification we get:</p>

<pre class="plain">12345 / 10<sup>4</sup></pre>

<p>Which finally ends up in the scientific notation version of the mantissa:</p>

<pre class="plain">1.2345</pre>

<p>So far so good – we now have the mantissa value. At this point we need just two things – to apply the sign and to move the decimal into the right position by factoring in the exponent. As SQL Server knows the scale is 2, it stores an exponent value of 2 instead of 4, in effect subtracting the scale from the exponent value – enabling us to ignore the scale and just calculate the number directly.</p>

<p>And thus we have all we need to calculate the final number:</p>

<pre class="plain">(sign) * mantissa * 10<sup>exponent</sup> =&gt; (1) * 1.2345 * 10<sup>2</sup> =&gt; 1.2345 * 10<sup>2</sup> = 123.45</pre>

<h2>Reading the sign &amp; exponent</h2>

<p>The very first byte of the value contains the sign and the exponent. In the previous sample, the value takes up four bytes (plus an additional two for the offset array entry):</p>

<pre class="plain">0xC21EDC20</pre>

<p>If we take a look at just the first byte, and convert it to binary, we get the following:</p>

<pre lang="xml" parse="false">
Hex: C2
Bin: <span style="background-color: #dfce04;">1</span>1000010
</pre>

<p>The most significant bit (the leftmost one), or bit 7 (0-indexed) is the sign bit. If it’s set, the value is positive. If it’s not set, it’s negative. Since it has a value of 1, we know that the result is positive.</p>

<p>Bits 0-6 is a 7-bit value containing the exponent. A normal unsigned 7-bit value can contain values from 0 to 127. As the decimal data type has a range of –10<sup>38</sup>+1 to 10<sup>38</sup>-1, we need to be able to store negative numbers. We could use one of those 7 bits as a sign bit, and then store the value in just 6 bits, allowing a range from –64 to 63. SQL Server however does use all 7 bits for the value itself, but stores the value offset by 64. Thus, an exponent value of 0 will store the value 64. An exponent of –1 will store 63 while an exponent of 1 will store 65, and so forth.</p>

<p>In our sample, reading bits 0-6 gives the following value:</p>

<pre parse="false" class="plain">
<span style="font-family: 'Courier New';"><span style="font-size: medium;">0b1</span><span style="font-family: 'Courier New';"><span style="font-size: medium;"><span style="background-color: #dfce04; color: #444444;">1000010</span></span></span><span style="font-family: 'Courier New';"><span style="font-size: medium;"> = 66</span></span> </span>
</pre>

<p>Subtracting the offset of 64 leaves us with an exponent value of 2.</p>

<h2>Mantissa chunk storage</h2>

<p>The remaining bytes contain the mantissa value. Before we get started, let’s convert them into binary:</p>

<pre parse="false" class="plain">
<span style="font-family: 'Courier New'; font-size: medium;">Hex: </span><span style="font-family: 'Courier New'; font-size: medium;">1E       DC       20

Bin: 00011110 11011100 00100000</span>
</pre>

<p>The mantissa is stored in chunks of 10 bits, each chunk representing three digits in the mantissa (and remember, the mantissa is just one large integer – it’s not until later that we begin to think of it as a decimal pointer number). Splitting the bytes into chunks gives us the following grouping:</p>

<pre parse="false" class="plain">
<span style="font-family: 'Courier New'; font-size: medium;">Hex:   1E       DC       20
Bin:   <span style="background-color: #f3a447;">00011110 11</span><span style="background-color: #dfce04;">011100 0010</span>0000

Chunk: <span style="background-color: #f3a447;">1          </span><span style="background-color: #dfce04;">2          </span></span>
</pre>

<p>In this case, SQL Server wastes 4 bits by using a chunk size that doesn’t align with the 8-bit byte size. This begs the question, why choose a chunk size of just exactly 10 bits? Those 10 bits are required to represent all possible values of a three-digit integer (0-999). What if we instead wanted to use a chunk size representing just a single digit?</p>

<p>In that case, we’d need to represent the values 0-9. That requires a total of 4 bits (0b1001 = 9). However, using those 4 bits, we can actually represent a range spanning from 0 to 15 – which means we’re wasting 6 of those values as they’ll never be needed. In percentages, we’re wasting 6/16 = 37.5%!</p>

<p>Let’s try and plot some different chunk sizes into a graph:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_3.png"><img class="alignnone size-full wp-image-2387" alt="image_3" src="http://improve.dk/wp-content/uploads/2011/12/image_3.png" width="526" height="318" /></a></div></div>

<p>We see that chunk sizes of both 4 and 7 have massive waste compared to a chunk size of 10. At 20 bits, we’re getting closer, but still waste twice as much as at 10.</p>

<p>Now, waste isn’t everything. For compression, ideally we don’t want to use more digits than absolutely necessary. With a chunk size of 10, representing 3 digits, we’re wasting two digits for values in the range of 0-9. However, for numbers in the range 100-999, we’re spot on. If we were to use a chunk size of 20 bits, representing 6 digits per chunk, we’d be wasting bytes for values 0-99999, while we’d be spot on for values 1000000-999999. Basically it’s a tradeoff – the higher the granularity, with the least amount of waste, the better. The further to the right we go in the graph, the less the granularity. With this, it seems obvious that a chunk size of 10 bits is an excellent choice – it has the lowest amount of waste with a suitable amount of granularity at 3 digits.</p>

<p>There’s just one more detail before we move on. Imagine we need to store the mantissa value 4.12, effectively resulting in the integer value 412.</p>

<pre parse="false" class="plain"><span style="font-family: 'Courier New'; font-size: medium;">Dec: 412
Bin: 01100111 00
Hex: 67       0
</span></pre>

<p>In this case, we’d waste 8 bits in the second byte, since we only need a single chunk, but we need two bytes to represent those 10 bits. In this case, given that the last two bits aren’t set, SQL Server will simply truncate that last byte. Thus, if you’re reading a chunk and you run out of bits on disk, you can assume that the remaining bits aren’t set.</p>

<h2>Parsing a vardecimal value</h2>

<p>Finally – we’re ready to actually parse a stored vardecimal (implemented in C#)! We’ll use the previous example, storing the 123.45 value in a decimal(5,2) column. On disk, we read the following into a byte array called <em>value</em>:</p>

<pre parse="false" class="plain"><span style="font-family: 'Courier New'; font-size: medium;">Hex: C2       1E       DC       20
Bin: 11000010 00011110 11011100 00100000</span></pre>

<h3>Reading the sign bit</h3>

<p>Reading the sign bit is relatively simple. We’ll only be working on the first byte:</p>

<pre parse="false" class="plain"><span style="font-family: 'Courier New'; font-size: medium;">Hex: C2       1E       DC       20
Bin: <span style="background-color: #dfce04;">1</span>1000010 <span style="color: #a5a5a5;">00011110 11011100 00100000</span></span></pre>

<p>By shifting the bits 7 spots to the right, all we’re left with is the most significant bit, the least significant position. This means we’ll get a value of 1 is the sign is positive, and 0 if it’s negative.</p>

<pre lang="csharp">decimal sign = (value[0] &gt;&gt; 7) == 1 ? 1 : -1;</pre>

<h3>Reading the exponent</h3>

<p>The next (technically these bits come before the sign bit) 7 bits contain the exponent value.</p>

<pre parse="false" class="plain"><span style="font-family: 'Courier New'; font-size: medium;">Hex: C2       <span style="color: #a5a5a5;">1E       DC       20</span>
Bin: 1<span style="background-color: #dfce04;">1000010</span> <span style="color: #a5a5a5;">00011110 11011100 00100000</span></pre>

<p>Converting the value 0b1000010 into decimal yields the decimal result 66. As we know the exponent is always offset by a value of 64, we need to subtract 64 from the stored value to get to the actual exponent value:</p>

<pre parse="false" class="plain"><span style="font-family: 'Courier New'; font-size: medium;">Exponent = 0b1000010 – 0n64 &lt;=&gt; Exponent = 66 – 64 = 2</span></pre>

<h3>Reading the mantissa</h3>

<p>Next up is the mantissa value. As mentioned, we need to read it in chunks of 10 bits, while taking care of there potentially being some truncated bits.</p>

<p>First, we need to know how many bits there are available. Doing this is straightforward – we simply multiply the number of mantissa bytes (which is all of the bytes, except one) by 8:</p>

<pre lang="csharp">int totalBits = (value.Length - 1) * 8;</pre>

<p>Once we know how many bits are available (3 bytes of 8 bits = 24 in this case), we can calculate the number of chunks:</p>

<pre lang="csharp">int mantissaChunks = (int)Math.Ceiling(totalBits / 10d);</pre>

<p>Since each chunk takes up 10 bits, we just need to divide the total number of bits by 10. If there’s padding at the end, to match a byte boundary, it’ll all be 0’s and won’t change the end result. Thus for a 2-byte mantissa we’ll have 8 bits to spare, which will all be non-significant 0’s. For a 3-byte mantissa we’ll have 4 bits to spare – once again adding 0 to the total mantissa value.</p>

<p>At this point we’re ready to read the chunk values. Before doing so, we’ll allocate two variables:</p>

<pre lang="csharp">decimal mantissa = 0;
int bitPointer = 8;</pre>

<p>The mantissa variable contains the cumulative mantissa value, accumulating value each time we read a new 10-bit chunk. The <em>bitPointer </em>is a pointer to the index of the bit currently being. As we’re not going to read the first byte, we’ll start this one off at bit index 8 (0-based, thus bit index 8 = the first bit of the second byte).</p>

<p>Looking at the bits as one long stream makes it look simple – we just read from left to right, right? Not quite. As you may remember, (visually) the rightmost bit is the least significant, and is thus the first one we should read. However – we need to read one byte at a time. As such, the <em>overall</em> direction is left-to-right, chunkwise. Once we get to any given chunk, we need to read one byte at a time. Bits 1-8 in the first chunk are read from the first byte, while bits 9-10 are read from the second byte, following the orange arrows in the figure (byte read order following the large ones, individual byte bit read order following the smaller ones):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_26.png"><img class="alignnone size-full wp-image-2388" alt="image_26" src="http://improve.dk/wp-content/uploads/2011/12/image_26.png" width="590" height="143" /></a></div></div>

<p>To easily access all of the bits, and to avoid doing a lot of manual bit shifting, I initialize a BitArray that contains all of the data bits:</p>

<pre lang="csharp">var mantissaBits = new BitArray(value);</pre>

<p>Using this, you have to know how the bit array maps into the bytes. Visually, it looks like this, the mantissaBits array index being on top:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_28.png"><img class="alignnone size-full wp-image-2390" alt="image_28" src="http://improve.dk/wp-content/uploads/2011/12/image_28.png" width="668" height="218" /></a></div></div>

<p>I know this may seem complex, but it’s all just a matter of knowing which pointers point to which values. Our source is the array of <em>bytes</em>. The way we access the individual bits is through the <em>mantissaBits</em> array, which is just one big array of pointers to the individual bits.</p>

<p>Looking at just the first 8 bits, the manitssaBits array aligns nicely with the direction we need to read. The first entry (mantissaBits[0]) points to the first/rightmost bit in the first byte. The second entry points to the second bit we need to read, and so forth. Thus, the first 8 bits are straightforward to read. The next two however, they require us to skip 6 entries in the mantissaBits array so we read index 14 and 15, as those point to the last two bits in the next byte.</p>

<p>Reading the second chunk, we have to go back and read bit index 8-13 and then skip to index 20-23, ignoring entries 16-19 as they’re just irrelevant padding. This is rather tricky to get right. Fortunately we can freely choose to read the bits from the least significant to the most significant, or the other way around.</p>

<p>Let’s first look at the implementation:</p>

<pre lang="csharp">for (int chunk = mantissaChunks; chunk &gt; 0; chunk--)
{
	// The cumulative value for this 10-bit chunk
	decimal chunkValue = 0;

	// For each bit in the chunk, shift it into position, provided it's set
	for (int chunkBit = 9; chunkBit &gt;= 0; chunkBit--)
	{
		// Since we're looping bytes left-to-right, but read bits right-to-left, we need
		// to transform the bit pointer into a relative index within the current byte.
		int byteAwareBitPointer = bitPointer + 7 - bitPointer % 8 - (7 - (7 - bitPointer % 8));

		// If the bit is set and it's available (SQL Server will truncate 0's), shift it into position
		if (mantissaBits.Length &gt; bitPointer &amp;&amp; mantissaBits[byteAwareBitPointer])
			chunkValue += (1 &lt;&lt; chunkBit);

		bitPointer++;
	}

	// Once all bits are in position, we need to raise the significance according to the chunk
	// position. First chunk is most significant, last is the least significant. Each chunk
	// defining three digits.
	mantissa += chunkValue * (decimal)Math.Pow(10, (chunk - 1) * 3);
}</pre>

<p>The outer for loop loops through the chunks, going from the most significant to the least significant chunk. In this case we’ll first iterate over chunk 2, then chunk 1.</p>

<p>The chunkValue variable holds the total value for the chunk that we’re currently reading. We’ll be shifting bits into the variable until we have parsed all 10 bits.</p>

<p>Next, we loop from the most significant bit to the least significant bit (that is, going from the <em>chunkBit</em> values 9 through 0). By reading the most significant bit first, basically reading the values backwards, we avoid having to skip inside the individual bytes. We’ll always read the bits going from right to left in the mantissaBits array, following the top arrows like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2011/12/image_30.png"><img class="alignnone size-full wp-image-2391" alt="image_30" src="http://improve.dk/wp-content/uploads/2011/12/image_30.png" width="669" height="241" /></a></div></div>

<p>Though we do read each byte backward, everything else just follows a natural path, which makes parsing a lot easier.</p>

<p>The <em>byteAwareBitPointer</em> variable is the index in our mantissaBits array from where we’ll read the current value. The calculation ensures we read each byte starting from the top mantissaBits index to the lower one. The first chunk is read in the following mantissaBit index order:</p>

<pre class="plain">7, 6, 5, 4, 3, 2, 1, 0, 15, 14</pre>

<p>And the second chunk is read in the following mantissaBit order:</p>

<pre class="plain">13, 12, 11, 10, 9, 8, 23, 22, 21, 20</pre>

<p>Once we’ve read a specific bit, we shift it into position in the chunkValue variable – though only if it’s set and it’s available (that is, it hasn’t been zero-truncated).</p>

<p>Once all bits have been shifted into position, we apply the chunk significance to the value. In our case, storing the value 12345, we’re actually storing the value 123450 (since each chunk stores three digits, it’ll always be a multiple of 3 digits). The first read chunk (<em>chunk 2</em>) contains the value 123, which corresponds to the value 123000. The second read chunk (<em>chunk 1</em>) contains the value 450. Multiplying by 10<sup>(chunk–1)*3</sup> ensures we get the right order of magnitude (x1000 for <em>chunk 2</em> and x1 for <em>chunk 1</em>). For each chunk iteration, we add the finalized chunk value to the total mantissa sum.</p>

<p>Once we have the integer based mantissa value of 123450, we need to insert the decimal point, using the following formula:</p>

<pre class="plain">mantissa = mantissa / 10<sup>floor(log10(mantissa))</sup></pre>

<p>Implemented like so:</p>

<pre lang="csharp">mantissa = mantissa / (decimal)Math.Pow(10, Math.Floor(Math.Log10((double)mantissa)));</pre>

<p>This results in the mantissa having a value of 1.2345</p>

<h3>Mantissa parsing performance</h3>

<p>Before you beat me to it – this implementation is far from fast. To start with, we could easily shift whole groups of bits into position instead of just one at a time. That’d ensure each chunk would take no more than two shifting operations, instead of ~10 in this implementation. However, my goal for this implementation is code clarity first and foremost. I’m nowhere near the point where I want to look at optimizing OrcaMDF for speed.</p>

<h3>Putting it all together</h3>

<p>Once we have the sign, the exponent and the mantissa, we simply calculate the final value like so:</p>

<pre lang="csharp">return sign * mantissa * (decimal)Math.Pow(10, exponent);</pre>

<p>In our case it has the following result:</p>

<pre class="plain">1 * 1.2345 * 10<sup>2</sup> = 1.2345 * 100 = 123.45</pre>

<h2>Conclusion</h2>

<p>Vardecimal was the only option for built-in compression back in SQL Server 2005 SP2. Since 2008, we’ve had row &amp; page compression available (which both feature a superset of the vardecimal storage format). Ever since the release of row &amp; page compression, Microsoft has made it clear that vardecimal is a deprecated feature, and it will be removed in a future version. Since vardecimal requires enterprise edition, just like row &amp; page compression, there’s really no reason to use it, unless you’re running SQL Server 2005, or unless you have a very specific dataset that would only benefit from compressing the decimals and no other values.</p>

<p>Knowing how the vardecimal storage format works is a great precursor for looking at compression internals – which I’ll be writing about in a later post – and I’ll be presenting on it at the <a href="http://improve.dk/archive/2011/12/09/presenting-at-the-2012-spring-sql-server-connections.aspx" target="_blank">2012 Spring SQL Server Connections</a>.</p>

<p>In the meantime you can check out my <a href="https://github.com/improvedk/OrcaMDF/blob/83b7460b07d175f6edb21e094106ec8a52d44bf9/src/OrcaMDF.Core/Engine/SqlTypes/SqlDecimal.cs" target="_blank">SqlDecimal.cs implementation on github</a>. Or you can have a look at the complete <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF source code</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1390</wp:post_id>
		<wp:post_date>2011-12-13 22:22:08</wp:post_date>
		<wp:post_date_gmt>2011-12-13 21:22:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-are-vardecimals-stored</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="math"><![CDATA[Math]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="vardecimal"><![CDATA[Vardecimal]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[62]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[the-anatomy-of-vardecimals]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The Anatomy of Vardecimals]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presenting at Miracle Open World 2012</title>
		<link>http://improve.dk/presenting-at-miracle-open-world-2012/</link>
		<pubDate>Mon, 23 Jan 2012 01:11:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/01/22/presenting-at-miracle-open-world-2012.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having presented at Miracle Open World back to back in 2010 and 2011, I’m excited to announce I’ll also be present in 2012! Not only will I be presenting, I’ll be presenting a full day track.</p>

<p>I’ve been continually improving my original internals training day that I <a href="http://improve.dk/archive/2011/06/30/presenting-a-precon-at-sqlbits.aspx" target="_blank">presented at SQLBits</a>. At MOW, I’ll be presenting the evolved session, which now also includes compression internals. As the allotted time at MOW is slightly shorter than at SQLBits, and I have slightly more material, expect to bring coffee :)</p>

<p>For more details on the session, please see <a href="http://mow2012.dk/program/sql-server-storage-engine.aspx" target="_blank">the description at the MOW website</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1391</wp:post_id>
		<wp:post_date>2012-01-23 02:11:07</wp:post_date>
		<wp:post_date_gmt>2012-01-23 01:11:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-at-miracle-open-world-2012</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="miracle-open-world"><![CDATA[Miracle Open World]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Broadcom NICs Considered Harmful?</title>
		<link>http://improve.dk/broadcom-nics-considered-harmful/</link>
		<pubDate>Wed, 25 Jan 2012 10:56:16 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/01/25/broadcom-nics-considered-harmful.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Every night at around 2AM I get an email from my best friend, confirming that she’s OK. It usually looks something like this:</p>

<blockquote>JOB RUN:    'Backup.Daily' was run on 04-08-2011 at 02:00:00
DURATION:    0 hours, 5 minutes, 57 seconds
STATUS:     Succeeded
MESSAGES:    The job succeeded.  The Job was invoked by Schedule 9 (Backup.Daily (Mon-Sat)).  The last step to run was step 1 (Daily).</blockquote>

<p>Just the other night, I got one that didn’t look right:</p>

<blockquote>DURATION: 4 hours, 3 minutes, 32 seconds</blockquote>

<p>Looking at the event log revealed a symptom of the problem:</p>

<blockquote>SQL Server has encountered 2 occurrence(s) of I/O requests taking longer than 15 seconds to complete on file [J:XXX.mdf] in database [XXX] (150).  The OS file handle is 0x0000000000003294.  The offset of the latest long I/O is: 0x00000033da0000</blockquote>

<p>Our databases were the same, the workload was the same. The only teeny, tiny little thing that had changed was that I’d moved all of the data files + backup drive onto a new SAN. Obviously, that’s gotta be the problem.</p>

<h2>Broadcom, how I loathe thee!</h2>

<p>Through some help on #sqlhelp and Database Administrators, I managed to find the root cause as well as to fix it. For a full walkthrough of the process, please see <a href="http://dba.stackexchange.com/questions/10950/i-o-requests-taking-longer-than-15-seconds" target="_blank">my post on Database Administrators</a>.</p>

<p>Mark Storey-Smith ended up giving the vital clue – a link to a <a href="http://blog.serverfault.com/2011/03/04/broadcom-die-mutha/" target="_blank">post by Kyle Brandt</a> which I clearly remember reading earlier on, but didn’t suspect was applicable to my situation. I ended up disabling jumbo frames, large send offload (LSO) and TCP connection offload (TOE), and lo and behold, everything was running smoothly. By enabling each of the features individually I pinpointed the issue to the Broadcom TOE feature on the NICs. Once I enabled TOE, my IO requests were stalling. As soon as I disabled TOE, everything ran smoothly.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/01/image_10.png"><img class="alignnone size-full wp-image-2367" alt="image_10" src="http://improve.dk/wp-content/uploads/2012/01/image_10.png" width="541" height="168" /></a></div></div>

<p>After disabling TOE on both NICs, my backups went from looking like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/01/image_14.png"><img class="alignnone size-full wp-image-2368" alt="image_14" src="http://improve.dk/wp-content/uploads/2012/01/image_14.png" width="624" height="619" /></a></div></div>

<p>To this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/01/image_12.png"><img class="alignnone size-full wp-image-2369" alt="image_12" src="http://improve.dk/wp-content/uploads/2012/01/image_12.png" width="676" height="661" /></a></div></div>

<p>At this point the backup timing was back on track and the event log was all green. I did use the same Broadcom NICs with TOE enabled for the previous SAN, so obviously something must have triggered the issue, whether it’s a problem between the new switches, the drivers, cables, I have no idea. All I know is that I’m apparently not the first to suffer similar issues with Broadcom NICs and I know for sure that I’ll get Intels in my next servers.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1392</wp:post_id>
		<wp:post_date>2012-01-25 10:56:16</wp:post_date>
		<wp:post_date_gmt>2012-01-25 10:56:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>broadcom-nics-considered-harmful</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="broadcom"><![CDATA[Broadcom]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="network"><![CDATA[Network]]></category>
		<category domain="post_tag" nicename="san"><![CDATA[SAN]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Broadcom NICs Considered Harmful?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presenting at SQLBits X</title>
		<link>http://improve.dk/presenting-at-sqlbits-x/</link>
		<pubDate>Thu, 26 Jan 2012 13:53:09 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/01/26/presenting-at-sqlbits-x.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.sqlbits.com/" target="_blank">SQLBits X</a> is coming up soon, and by the looks of it, it’ll feature a full house of excited attendees:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/01/image_4.png"><img class="alignnone size-full wp-image-2371" alt="image_4" src="http://improve.dk/wp-content/uploads/2012/01/image_4.png" width="523" height="271" /></a></div></div>

<p>If you haven’t been before, just take a look at these <a href="http://sqlblogcasts.com/blogs/simons/archive/2012/01/26/ten-reason-to-attend-sqlbits-x.aspx?utm_source=twitterfeed&amp;utm_medium=twitter&amp;utm_campaign=Feed%3A+SimonsSqlServerStuff+%28SimonS+SQL+Server+Stuff%29" target="_blank">ten reasons, provided by Simon Sabin</a>. Not convinced yet? Take a look at <a href="http://www.simple-talk.com/community/blogs/jonathanallen/archive/2010/09/20/94522.aspx#105686" target="_blank">10 more reasons, provided by Jonathan Allen</a> (though written for SQLBits 7, they’re just as applicable for SQLBits X).</p>

<h2>Revealing the Magic</h2>

<p>To my big surprise, I’ve got another chance at speaking at SQLBits – I must’ve done <a href="http://improve.dk/archive/2011/12/05/sqlbits-9-session-evaluation.aspx" target="_blank">something right</a> after all :)</p>

<p>I will once again be presenting a session based on my work with <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>. Here’s the abstract:</p>

<blockquote>Think SQL Server is magical? You're right! However, there's some sense to the magic, and that's what I'll show you in this level 500 deep dive session. Through my work in creating OrcaMDF, an open source parser for SQL Server databases, I've learned a lot of internal details for the SQL Server database file format. In this session, I will walk you through the internal storage format of MDF files, how we might go about parsing a complete database ourselves, using nothing but a hex editor. I will cover how SQL Server stores its own internal metadata about objects, how it knows where to find your data on disk, and once it finds it, how to read it. Using the knowledge from this session, you'll find it much easier to predict performance characteristics of queries since you'll know what needs to be done.</blockquote>

<p>The basis of the session is the same as <a href="http://improve.dk/archive/2011/08/03/sqlbits-9-agenda-published.aspx" target="_blank">the one I gave last year</a>. However, based on the feedback I got, as well as the work I’ve done with OrcaMDF since then, I’ll be readjusting the content a bit. I’ll not be covering disaster recovery, just as I’ll trim some sections to leave room for some new stuff like compression internals.</p>

<p>Just as last time, the session is meant to <strong>inspire</strong>, not to teach. There’ll be far too much content to understand everything during the session. My hope is to reveal how SQL Server is really governed by a relatively small set of rules – and once you know those, you’ve got a powerful tool to add to your existing arsenal.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1393</wp:post_id>
		<wp:post_date>2012-01-26 14:53:09</wp:post_date>
		<wp:post_date_gmt>2012-01-26 13:53:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-at-sqlbits-x</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seemingly Random Exceptions Thrown From CachedPathData.ValidatePath</title>
		<link>http://improve.dk/seemingly-random-exceptions-thrown-from-cachedpathdata-validatepath/</link>
		<pubDate>Tue, 31 Jan 2012 14:38:49 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/01/26/seemingly-random-exceptions-thrown-from-cachedpathdata-validatepath.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Several times a day I’d get an error report email noting that the following exception had occurred in our ASP.NET 4.0 application:</p>

<blockquote>
System.Web.HttpException (0x80004005)<br />
at System.Web.CachedPathData.ValidatePath(String physicalPath)<br />
at System.Web.HttpApplication.PipelineStepManager.ValidateHelper(HttpContext context)
</blockquote>

<p>The 80004005 code is a red herring – it’s used for lots of different errors and doesn’t really indicate what’s wrong. Besides that, there’s no message on the exception, so I was at a loss for what might’ve caused it.</p>

<p>We have several 100k’s of visitors each day and I only got 5-10 of these exceptions a day, so it wasn’t critical. Even so, I don’t like exceptions being thrown without reason. After much digging (and cursing at the combination of our error logging and gmail trimming the affected URL’s), I discovered the cause.</p>

<p>All of the URL’s had an extra %20 at the end – caused by others linking incorrectly to our site.</p>

<p>After a short bit of Googling, I found the new <a href="http://msdn.microsoft.com/en-us/library/system.web.configuration.httpruntimesection.relaxedurltofilesystemmapping.aspx" target="_blank">RelaxedUrlToFileSystemMapping httpRuntime attribute</a> in .NET 4.0. And sure enough, setting it to false (or letting it have it’s default false value), an exception is thrown when I add %20 to the URL. Once set to true, everything works as expected.</p>

<p>Though I got the problem solved, I would’ve appreciated a more descriptive exception being thrown.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1394</wp:post_id>
		<wp:post_date>2012-01-31 15:38:49</wp:post_date>
		<wp:post_date_gmt>2012-01-31 14:38:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seemingly-random-exceptions-thrown-from-cachedpathdata-validatepath</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="asp-net"><![CDATA[ASP.NET]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Seemingly Random Exceptions Thrown From CachedPathData.ValidatePath]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4462</wp:comment_id>
			<wp:comment_author><![CDATA[rob]]></wp:comment_author>
			<wp:comment_author_email>robert.jezyk@mastertronic.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>62.254.208.57</wp:comment_author_IP>
			<wp:comment_date>2013-03-13 14:34:05</wp:comment_date>
			<wp:comment_date_gmt>2013-03-13 13:34:05</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing mate.

I have implemented this solution and wait to see how effective it is.

Cheers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1363181645.8125030994415283203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>The Anatomy of Row &amp; Page Compressed Integers</title>
		<link>http://improve.dk/the-anatomy-of-row-amp-page-compressed-integers/</link>
		<pubDate>Mon, 30 Jan 2012 14:41:21 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/01/29/the-anatomy-of-row-page-compressed-integers.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>While working on row compression support for <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>, I ran into some challenges when trying to parse integers. Contrary to normal non-compressed integer storage, these are all variable width – meaning an integer with a value of <em>50</em> will only take up one byte, instead of the usual four. That wasn’t new though, seeing as <a href="http://improve.dk/archive/2011/12/13/how-are-vardecimals-stored.aspx" target="_blank">vardecimals are also stored as variable width</a>. What is different however is the way the numbers are stored on disk. Note that while I was only implementing row compression, the integer compression used in page compression is exactly the same, so this goes for both types of compression.</p>

<h2>Tinyint</h2>

<p>Tinyint is pretty much identical to the usual tinyint storage. The only exception being that a value of 0 will take up no bytes when row compressed, where as in non-compressed storage it’ll store the value 0x0, taking up a single byte. All of the integer types are the same regarding 0-values – the value is indicated by the compression row metadata and thus requires no actual value stored.</p>

<h2>Smallint</h2>

<p>Let’s start out by looking at a normal non-compressed smallint, for the values –2, –1, 1 and 2. As mentioned before, 0 isn’t interesting as nothing is stored. Note that all of these values are represented exactly as they’re stored on disk – in this case they’re stored in <a href="http://en.wikipedia.org/wiki/Endianness" target="_blank">little endian</a>.</p>

<pre lang="csharp" escaped="true">-2	=	0xFEFF
-1	=	0xFFFF
1	=	0x0100
2	=	0x0200</pre>

<p>Starting with the values 1 and 2, they’re very straightforward. Simply convert it into decimal and you’ve got the actual number. –1 however, is somewhat different. The value 0xFFFF converted to decimal is 65.535 – the maximum value we can store in an unsigned two-byte integer. The SQL Server range for a smallint is –32.768 to 32.767.</p>

<p>Calculating the actual values relies on what’s called <a href="http://en.wikipedia.org/wiki/Integer_overflow" target="_blank">integer overflows</a>. Take a look at the following C# snippet:</p>

<pre lang="csharp" escaped="true">unchecked
{
	Console.WriteLine(0 + (short)32767);
	Console.WriteLine(0 + (short)32768);
	Console.WriteLine(0 + (short)32769);
	// ...
	Console.WriteLine(0 + (short)65534);
	Console.WriteLine(0 + (short)65535);
}</pre>

<p>The output is as follows:</p>

<pre lang="csharp" escaped="true">32767
-32768
-32767
-2
-1</pre>

<p>If we start with the value 0 and add the maximum value for a signed short, 32.767, we obviously end up with just that – 32.767. However, if we add 32.768, which is outside the range of the short, we rollover and end up with the smallest possible short value. Since these are constant numbers, the compiler won’t allow the overflow – unless we encapsulate our code in an unchecked {} section.</p>

<p>You may have heard of the fabled <a href="http://en.wikipedia.org/wiki/Sign_bit" target="_blank">sign bit</a>. Basically it’s the highest order bit that’s being used to designate whether a number is positive or negative. As special sounding as it is, it should be obvious from the above that the sign bit isn’t special in any way – though it can be queried to determine the sign of a given number. Take a look at what happens to the sign bit when we overflow:</p>

<pre lang="csharp" escaped="true">32.767	=	0b0111111111111111
-32.768	=	0b1000000000000000
-32.767	=	0b1000000000000001</pre>

<p>For the number to become large enough for it to cause an overflow, the high order “sign bit” needs to be set. It isn’t magical in any way, it’s simply used to cause the overflow.</p>

<p>OK, so that’s some background information on how normal non-compressed integers are stored. Now let’s have a look at how those same smallint values are stored in a row compressed table:</p>

<pre lang="csharp" escaped="true">-2	=	0x7E
-1	=	0x7F
1	=	0x81
2	=	0x82</pre>

<p>Let’s try and convert those directly to decimal, as we did before:</p>

<pre lang="csharp" escaped="true">-2	=	0x7E	=	126
-1	=	0x7F	=	127
1	=	0x81	=	129
2	=	0x82	=	130</pre>

<p>Obviously, these are not stored the same way. The immediate difference is that we’re now only using a single byte – due to the variable-width storage nature. When parsing these values, we should simply look at the number of byte stored. If it’s using a single byte, we know it’s in the 0 to 255 range (for tinyints) or –128 to 127 range for smallints. Smallints in that range will be stored using a single signed byte.</p>

<p>If we use the same methodology as  before, we obviously get the wrong results.1 &lt;&gt; 0 + 129. The trick in this case is to treat the stored values as unsigned integers, and then minimum value as the offset. That is, instead of using 0 as the offset, we’ll use the signed 1-byte minimum value of –128 as the offset:</p>

<pre lang="csharp" escaped="true">-2	=	0x7E	=	-128 + 126
-1	=	0x7F	=	-128 + 127
1	=	0x81	=	-128 + 129
2	=	0x82	=	-128 + 130</pre>

<p>Aha, so that must mean we’ll need to store two bytes as soon as we exceed the signed 1-byte range, right? Right!</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/01/image_2.png"><img class="alignnone size-full wp-image-2373" alt="image_2" src="http://improve.dk/wp-content/uploads/2012/01/image_2.png" width="463" height="210" /></a></div></div>

<p>One extremely important difference is that the non-compressed values will always be stored in little endian on disk, whereas the row compressed integers are stored using big endian! So not only do they use different offset values, they also use different endianness. The end result is the same, but the calculations involved are dramatically different.</p>

<h2>Int &amp; bigint</h2>

<p>Once I figured out the endianness and number scheme of the row-compressed integer values, int and bigint were straightforward to implement. As with the other types, they’re still variable width so you may have a 5-byte bigint as well as a 1-byte int. Here’s the main parsing code for my SqlBigInt type implementation:</p>

<pre lang="csharp" escaped="true">switch (value.Length)
{
	case 0:
		return 0;

	case 1:
		return (long)(-128 + value[0]);

	case 2:
		return (long)(-32768 + BitConverter.ToUInt16(new[] { value[1], value[0] }, 0));

	case 3:
		return (long)(-8388608 + BitConverter.ToUInt32(new byte[] { value[2], value[1], value[0], 0 }, 0));

	case 4:
		return (long)(-2147483648 + BitConverter.ToUInt32(new[] { value[3], value[2], value[1], value[0] }, 0));

	case 5:
		return (long)(-549755813888 + BitConverter.ToInt64(new byte[] { value[4], value[3], value[2], value[1], value[0], 0, 0, 0 }, 0));

	case 6:
		return (long)(-140737488355328 + BitConverter.ToInt64(new byte[] { value[5], value[4], value[3], value[2], value[1], value[0], 0, 0 }, 0));

	case 7:
		return (long)(-36028797018963968 + BitConverter.ToInt64(new byte[] { value[6], value[5], value[4], value[3], value[2], value[1], value[0], 0 }, 0));

	case 8:
		return (long)(-9223372036854775808 + BitConverter.ToInt64(new[] { value[7], value[6], value[5], value[4], value[3], value[2], value[1], value[0] }, 0));

	default:
		throw new ArgumentException("Invalid value length: " + value.Length);
}</pre>

<p>The <em>value</em> variable is a byte array containing the bytes as stored on disk. If the length is 0, nothing is stored and hence we know it has a value of 0. For each of the remaining valid lengths, it’s simply a matter of using the smallest representable number as the offset and then adding the stored value onto it.</p>

<p>For non-compressed values we can use the BitConverter class directly as it expects the input value to be in system endianness – and for most Intel and AMD systems, that’ll be little endian (which means OrcaMDF won’t run on a big endian system!). However, as the compressed values are stored in big endian, I have to remap the input array into little endian format, as well as pad the 0-bytes so it matches up with the short, int and long sizes.</p>

<p>For the shorts and ints I’m reading unsigned values in, as that’s really what I’m interested in. This works since int + uint is coerced into a long value. I can’t do the same for the long’s since there’s no data type larger than a long. For the maximum long value of 9.223.372.036.854.775.807, what’s actually stored on disk is 0xFFFFFFFFFFFFFFFF. Parsing that as a signed long value using BitConverter results in the value –1 due to the overflow. Wrong as that may be, it all works out in the end due to an extra negative overflow:</p>

<pre lang="csharp" escaped="true">-9.223.372.036.854.775.808 + 0xFFFFFFFFFFFFFF =&gt;
-9.223.372.036.854.775.808 + -1 =
9.223.372.036.854.775.807</pre>

<h2>Conclusion</h2>

<p>As usual, I’ve had a lot of fun trying to figure out how the bytes on disk ended up as the values I saw when performing a SELECT query. It doesn’t take long to realize that while the excellent Internals book really takes you far, there’s so much more to dive into.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1395</wp:post_id>
		<wp:post_date>2012-01-30 15:41:21</wp:post_date>
		<wp:post_date_gmt>2012-01-30 14:41:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-anatomy-of-row-amp-page-compressed-integers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="page-compression"><![CDATA[Page compression]]></category>
		<category domain="post_tag" nicename="row-compression"><![CDATA[Row compression]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[the-anatomy-of-row-page-compressed-integers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[The Anatomy of Row & Page Compressed Integers]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stop Worrying About Exhausting Bigints</title>
		<link>http://improve.dk/stop-worrying-about-exhausting-bigints/</link>
		<pubDate>Mon, 20 Feb 2012 21:12:48 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/01/29/stop-worrying-about-exhausting-bigints.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’ve done it myself, worried about what to do when I exhausted my bigint identity value. I was worried that part of the LSN being a bigint – what would happen when it ran out? Would it perform an integer overflow? The answer? Worrying about exhausting the range of a bigint is not something you should spend time on. Allow me to elaborate.</p>

<h2>The log table</h2>

<p>Imagine you have a table to which you only add new rows. You never delete rows and thus you can’t reuse previous identity values. Instead of looking at how many rows you can have (9,223,372,036,854,775,807; or 18,446,744,073,709,551,616 if you use the maximum negative value as the seed), let’s take a look at the storage requirements, if you were to actually exhaust the range.</p>

<p>Imagine that each row stores nothing but the bigint – no data at all, only the bigint identity value. The fixed row size can easily be calculated as such: two bytes for the status bits, two bytes for the null bitmap pointer, eight bytes for the bigint value, two bytes for the null bitmap column count and finally a single byte for the null bitmap itself. In total – 15 bytes. On top of that we need to add two bytes for an entry into the record offset array.</p>

<p>On an 8KB page, the header takes up 96 bytes, leaving 8096 bytes for the body, including the record offset array. Weighing in at 17 bytes per record, we can store a total of 476 records per page.</p>

<p>If we theoretically were to max out the positive bigint range, storing all records on disk; storing <em>just the bigint identity column</em> would take up a whopping 9,223,372,036,854,775,807 / 476 * 8KB = 140,985 PB. And this is with a seed value of 1 – you can double that amount if you were to start at the negative max. Seeing as the SQL Server database size limit is 524TB – you should probably worry about that sometime before worrying about running out of bigint seed values.</p>

<h2>The high transaction/sec table</h2>

<p>OK, ok, you don’t store all of the rows, you delete them shortly after they’ve entered the system. Let’s say you never have more than 1000 rows in the table at a time, thus avoiding the storage issue.</p>

<p>If you allocate 1,000,000 new rows every second (deleting the other 999,000 of them), how long would you last?</p>

<p>9,223,372,036,854,775,807 / 1,000,000 / 60 / 60 / 24 / 365 = 292,471 years. Even for atheists, that’s a long time.</p>

<p>OK, ok, that’s not enough. What if you allocated 100,000,000 new rows every second instead?</p>

<p>9,223,372,036,854,775,807 / 100,000,000 / 60 / 60 / 24 / 365 = 2,924 years.</p>

<p>So at 100 million new bigint seed allocations per second, you’d still last almost 3,000 years before running out. And you can double that to 6,000 years if you start from the negative max seed value.</p>

<p>If you do manage to setup a SQL Server system with this kind of tx/sec – I’d love to see it!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1396</wp:post_id>
		<wp:post_date>2012-02-20 22:12:48</wp:post_date>
		<wp:post_date_gmt>2012-02-20 21:12:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stop-worrying-about-exhausting-bigints</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="data-type"><![CDATA[Data type]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="scalability"><![CDATA[Scalability]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Stop Worrying About Exhausting Bigints]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1148</wp:comment_id>
			<wp:comment_author><![CDATA[Henrik Sjang Davidsen]]></wp:comment_author>
			<wp:comment_author_email>hsd@geniiius.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.geniiius.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-20 16:30:53</wp:comment_date>
			<wp:comment_date_gmt>2012-02-20 16:30:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice blog post. <br />I already knew that the bigint was BIG, but it's kinda cool to the the actual calculations to help convincing folks that say stuff like &quot;but my system is very busy&quot;.. yeah, but not THAT busy :)<br /><br />/Sjang]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1149</wp:comment_id>
			<wp:comment_author><![CDATA[Henrik Sjang Davidsen]]></wp:comment_author>
			<wp:comment_author_email>hsd@geniiius.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.geniiius.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-20 19:32:21</wp:comment_date>
			<wp:comment_date_gmt>2012-02-20 19:32:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Another thing. How would the calculations look like, if the table should hold log-errors from an application. Let's say a stacktrace. First question: What is the average length of a stacktrace? An how many rows can we then have with a bigint key? :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1150</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-20 19:35:54</wp:comment_date>
			<wp:comment_date_gmt>2012-02-20 19:35:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That depends on the schema - give me an example and I'll tell you :)<br /><br />The avg. length of a stacktrace depends completely on the application as it'll vary a lot depending on the complexity and language used.<br /><br />What's the number you're looking for - the past-what-SQL-server-can-handle data usage given an exhausted bigint, or the max number of rows SQL Server could theoretically handle (though likely break down way before)?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1603</wp:comment_id>
			<wp:comment_author><![CDATA[himanshu rawat]]></wp:comment_author>
			<wp:comment_author_email>rawat10.himanshu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>118.94.178.178</wp:comment_author_IP>
			<wp:comment_date>2013-02-22 08:36:41</wp:comment_date>
			<wp:comment_date_gmt>2013-02-22 07:36:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,
   will you tell me about what is row offset is greater than 8192.
how can i find the right offset for that row.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361518601.6831328868865966796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1611</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>217.195.185.18</wp:comment_author_IP>
			<wp:comment_date>2013-02-22 09:27:09</wp:comment_date>
			<wp:comment_date_gmt>2013-02-22 08:27:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@himanshu

There will never be a row with an offset greater than 8192 as that would exceed the size of a page.

If you're looking for 8KB+ row values, you might want to look at http://improve.dk/what-is-the-size-of-the-lob-pointer-for-max-types-like-varchar-varbinary-etc/]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361521629.756124973297119140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Adding 6+7 At The Logic Gate Level</title>
		<link>http://improve.dk/adding-67-at-the-logic-gate-level/</link>
		<pubDate>Mon, 06 Feb 2012 03:55:15 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/02/05/adding-67-at-the-logic-gate-level.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Most people can do simple decimal addition in their heads, and even advanced addition using common rules like carrying. Here’s how we’d add 6 + 7:</p>

<pre class="plain">
  1
   6
+  7
----
  13
</pre>

<p>Adding 6+7 gives a result of 3, with a 1 as a carry. In the final step, the 1 carry simply falls down as a 10 on the result, giving 10 + 3 = 13 as the final result.</p>

<p>It may seem extensive to go through this for such a simple operation, but it’s quite important to know of the carry method when we go on.</p>

<h2>Binary addition</h2>

<p>Just as we added two decimal numbers, we can do the exact same in binary. In binary 6 is represented as 0b110 while 7 is represented as 0b111. Take a look:</p>

<p>First we add the first (rightmost) column, resulting in a 0b1 in the sum:</p>

<pre class="plain">
   110
+  111
------
     1
</pre>

<p>Next up we add the second column. In this case the two ones produce the result 0b10 – meaning we’ll get a sum of 0b0 and a carry of 0b1:</p>

<pre class="plain">
   110
+  111
------
    01
</pre>

<p>Then we add the third column. Ignoring the carry, 0b1 + 0b1 gives a sum of 0b10. Adding the 0b1 we had in carry, we get 0b11 – resulting in a sum of 0b1 as well as a carry of 0b1:</p>

<pre class="plain">
  11
   110
+  111
------
   101
</pre>

<p>And finally we add the final column, in this case containing nothing but the carry:</p>

<pre class="plain">
  11
   110
+  111
------
  1101
</pre>

<p>And there we go – 0b1101 = 13 = 6 + 7.</p>

<h2>Implementing a simple ALU that does addition</h2>

<p>Now that we can do binary addition by hand, lets recreate a very simple <a href="http://en.wikipedia.org/wiki/Arithmetic_logic_unit" target="_blank">arithmetic logic unit</a> that’ll do the same. The ALU is at the very core of the CPU that’s powering your machine right now. It’s the hearth that does all of the arithmetic and logical operations that are required to run the computer.</p>

<p>In the following I will generally talk of single bits as being enabled/positive/true/1 or being disabled/negative/false/0. All four designations mean the same and will be used depending on the context.</p>

<h2>The half adder</h2>

<p>The first step is to implement what’s known as a <a href="http://en.wikipedia.org/wiki/Adder_(electronics)#Half_adder" target="_blank">half adder</a>. This is the circuit that takes two bits and adds them together. The result is a sum value as well as a carry. Both can be either 0 or 1.</p>

<p>In the following circuit we get two inputs from the left, bits A and B. Both A and B are connected to an <a href="http://en.wikipedia.org/wiki/XOR_gate" target="_blank">XOR gate</a>. The XOR gate (top) gives an output of 1 iff (<strong>if</strong> and only i<strong>f</strong>) only one of the inputs have a value of 1. If A and B have the same value, it gives a result of 0. This is just what we need for the sum – remember, 0b1 + 0b1 gave a result of 0b10 – a sum of 1 and a carry of 0. The XOR gate is thus used to calculate the sum – denoted S in the circuit below.</p>

<p>Both A and B are connected to an <a href="http://en.wikipedia.org/wiki/AND_gate" target="_blank">AND gate</a> as well (bottom). The AND gate gives a result of 1 iff both A and B are 1, in all other cases it gives a result of 0. This is just what we need – if both A and B are 1, it means we get an output of 1 – the carry.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_16.png"><img class="alignnone size-full wp-image-2301" alt="image_16" src="http://improve.dk/wp-content/uploads/2012/02/image_16.png" width="322" height="130" /></a></div></div>

<p>If we enable A, we see how the signal propagates through the XOR gate and results in an enabled sum:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_6.png"><img class="alignnone size-full wp-image-2303" alt="image_6" src="http://improve.dk/wp-content/uploads/2012/02/image_6.png" width="326" height="135" /></a></div></div>

<p>The result is exactly the same if we just enable B instead:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_14.png"><img class="alignnone size-full wp-image-2304" alt="image_14" src="http://improve.dk/wp-content/uploads/2012/02/image_14.png" width="325" height="131" /></a></div></div>

<p>And finally, if we enable both, we get a disabled sum but an enabled carry instead:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_12.png"><img class="alignnone size-full wp-image-2305" alt="image_12" src="http://improve.dk/wp-content/uploads/2012/02/image_12.png" width="325" height="132" /></a></div></div>

<p>As we’ll be reusing the half adder in the next circuit, I’ve converted it into an integrated circuit (IC). On the left we have the input bits A and B on top &amp; bottom respectively. On the right we have the sum on top and the carry at the bottom.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_18.png"><img class="alignnone size-full wp-image-2306" alt="image_18" src="http://improve.dk/wp-content/uploads/2012/02/image_18.png" width="144" height="70" /></a></div></div>

<p>Having created the half adder IC, we can now simplify our circuit somewhat:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_20.png"><img class="alignnone size-full wp-image-2307" alt="image_20" src="http://improve.dk/wp-content/uploads/2012/02/image_20.png" width="297" height="134" /></a></div></div>

<h2>The full adder</h2>

<p>At this point we have a fully working ALU capable of adding two 1-bit numbers and outputting a 2-bit result. As most computers today are either 32-bit or 64-bit, we obviously need to expand our ALU’s capabilities. Let’s work towards making it accept two 2-bit inputs instead.</p>

<p>To do so we first need to create another component, the <a href="http://en.wikipedia.org/wiki/Adder_(electronics)#Full_adder" target="_blank">full adder</a>. While the half adder is great for working with just two inputs, to calculate the next column we need to take three inputs – bits A and B, as well as the potential carry C. The result, as before, should still be a sum as well as a carry.</p>

<p>Technically what we’re creating is called a 1-bit full adder, since it’s able to add two 1-bit numbers while also respecting the carry input.</p>

<p>In the following circuit we use two of the half adder IC’s that we created before. Bits A and B are hooked into the first one, while the carry bit is hooked into the second half adder. The sum from the first half adder is used as the second input to the second half adder.</p>

<p>The end sum is a direct sum from both the half adders. For the sum to be enabled, both half adders must produce an enabled sum. Both carry outputs are connected to an <a href="http://en.wikipedia.org/wiki/OR_gate" target="_blank">OR gate</a>. As the name implies, the OR gate will output a positive result if either of the inputs are enabled.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_22.png"><img class="alignnone size-full wp-image-2308" alt="image_22" src="http://improve.dk/wp-content/uploads/2012/02/image_22.png" width="548" height="194" /></a></div></div>

<p>If we enabled the A bit, the sum passes right through both half adders and results in a positive sum output:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_24.png"><img class="alignnone size-full wp-image-2309" alt="image_24" src="http://improve.dk/wp-content/uploads/2012/02/image_24.png" width="546" height="197" /></a></div></div>

<p>If we enabled both A and B, the first half adder gives a carry output, which passes right through the OR gate and results in a positive carry output:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_26.png"><img class="alignnone size-full wp-image-2310" alt="image_26" src="http://improve.dk/wp-content/uploads/2012/02/image_26.png" width="549" height="194" /></a></div></div>

<p>And finally, if we enable the input carry bit as well, we get a carry output from the first half adder and a sum output from the second one:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_28.png"><img class="alignnone size-full wp-image-2311" alt="image_28" src="http://improve.dk/wp-content/uploads/2012/02/image_28.png" width="550" height="199" /></a></div></div>

<p>The way the circuit is constructed, it doesn’t matter which of the bits are enabled, only the amount of them. If one is enabled, we get a positive sum. Two enabled results in a positive carry. And finally, if all three are enabled, we get a positive sum as well as a positive carry.</p>

<p>Just to demonstrate, we can disable the B input and get the same positive carry result as we got with the A and B bits enabled:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_30.png"><img class="alignnone size-full wp-image-2312" alt="image_30" src="http://improve.dk/wp-content/uploads/2012/02/image_30.png" width="545" height="197" /></a></div></div>

<p>Just as we can disabled all but the carry input and get a sum output, just like when only the A bit was enabled:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_32.png"><img class="alignnone size-full wp-image-2313" alt="image_32" src="http://improve.dk/wp-content/uploads/2012/02/image_32.png" width="546" height="193" /></a></div></div>

<p>Having created this circuit, we can now convert it into a full adder IC and simplify our diagram:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_34.png"><img class="alignnone size-full wp-image-2314" alt="image_34" src="http://improve.dk/wp-content/uploads/2012/02/image_34.png" width="328" height="193" /></a></div></div>

<h2>Chaining 1-bit full adders to create a 3-bit ripple carry adder</h2>

<p>Now that we’re able to easily add two 1-bit numbers using our full adder, let’s try and chain them up so we can add two 2-bit numbers.</p>

<p>In the following diagram we have two 2-bit inputs. The first output bit of both inputs are connected to the A and B inputs on the first full adder (rightmost one). Likewise, the second output bits from each input is connected to the A and B inputs on the second full adder. The carry output from the first full adder is connected to the carry input on the second full adder.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_42.png"><img class="alignnone size-full wp-image-2315" alt="image_42" src="http://improve.dk/wp-content/uploads/2012/02/image_42.png" width="158" height="348" /></a></div></div>

<p>Now, we started out wanting to add the numbers 6 and 7. To do so, we need a 3-bit adder so we can express the input numbers 6 and 7, both requiring three input bits.</p>

<p>At this point it’s a trivial operation to extend the adder with one more bit. We simply connect each output bit from the first input to the A bits on each full adder. Likewise we connect each output bit on the second input to the B input bits on each full adder. The carry from the first full adder is added as carry input to the second, and likewise for the second and third full adders.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_44.png"><img class="alignnone size-full wp-image-2316" alt="image_44" src="http://improve.dk/wp-content/uploads/2012/02/image_44.png" width="283" height="363" /></a></div></div>

<p>By using the decimal inputs we can now type the input numbers 6 and 7 and see our whole circuit in action, providing the correct output of 13:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_46.png"><img class="alignnone size-full wp-image-2317" alt="image_46" src="http://improve.dk/wp-content/uploads/2012/02/image_46.png" width="265" height="352" /></a></div></div>

<p>And there we go, we’ve now created a 3-bit <a href="http://en.wikipedia.org/wiki/Adder_(electronics)#Ripple_carry_adder" target="_blank">ripple carry adder</a>.</p>

<h2>Conclusion</h2>

<p>I’m sure (read: hope) I’m not the only one having the nightmare of an apocalyptic event occurring here on Earth. Imagine the scenario, you’ve got all of the materials in the world as well as all the manpower you need. Unfortunately, you’re the only computer scientist that’s survived. Given time, manpower and materials, would you be able to rebuild the computer as we know it today?</p>

<p>Each layer you peel off of the computer arms you with more knowledge and capability, not just at that layer, but at all of the layers that lie above. Knowing about gate logic enables you to understand so much more of how the CPU works as well as what’s actually being performed once you write “int x = 6+7;” in your application (assuming you also know about all of the layers between the logic gates and your C#/other high level code).</p>

<p>Naturally there are more layers to peel. For instance, you could create your own XOR/AND/OR gates using the base NAND gate. And you could create your own NAND gates using nothing but interconnected transistors. And you could create your own transistors using... You get the point.</p>

<p>I can’t help but feel in total awe of the amount of technology that’s packed in each and every CPU that’s shipped to a home computer somewhere. Experimenting with electrical circuits is lots of fun, and you learn loads from it.</p>

<p>If you want to try it out for yourself, go grab a copy of Steve Kollmansbergers (free) open source <a href="http://www.kolls.net/gatesim/" target="_blank">Logic Gate Simulator</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1397</wp:post_id>
		<wp:post_date>2012-02-06 04:55:15</wp:post_date>
		<wp:post_date_gmt>2012-02-06 03:55:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>adding-67-at-the-logic-gate-level</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="computer-science"><![CDATA[Computer Science]]></category>
		<category domain="post_tag" nicename="logic"><![CDATA[Logic]]></category>
		<category domain="post_tag" nicename="logic-gate"><![CDATA[Logic gate]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Adding 6+7 At The Logic Gate Level]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1189</wp:comment_id>
			<wp:comment_author><![CDATA[Tobias Huebner]]></wp:comment_author>
			<wp:comment_author_email>info@medienistik.de</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.167.72.33</wp:comment_author_IP>
			<wp:comment_date>2013-02-18 22:01:41</wp:comment_date>
			<wp:comment_date_gmt>2013-02-18 21:01:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great - just what I need to show my pupils (12 years old) how computer work. All I have to do now is translating your explanations into german :) I bought 10 Raspberry Pi and we`re doing some coding in the next few months. But before we do that I want to show them some basic stuff: Transistors, logic gates etc.

Greetings from Munich!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361221301.11085796356201171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1151</wp:comment_id>
			<wp:comment_author><![CDATA[Jesper]]></wp:comment_author>
			<wp:comment_author_email>blog@graffen.dk</wp:comment_author_email>
			<wp:comment_author_url>http://blog.graffen.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-06 12:41:46</wp:comment_date>
			<wp:comment_date_gmt>2012-02-06 12:41:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This was quite a fun post to read. It's so easy to forget all the stuff that goes on millions of times a second in today's consumer electronics :-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1152</wp:comment_id>
			<wp:comment_author><![CDATA[An Qiu]]></wp:comment_author>
			<wp:comment_author_email>fantasycool@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-11-20 06:11:31</wp:comment_date>
			<wp:comment_date_gmt>2012-11-20 06:11:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks!<br /> your post is so clear that it answer the question which in my mind for a long time ~]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>OrcaMDF Row Compression Support</title>
		<link>http://improve.dk/orcamdf-row-compression-support/</link>
		<pubDate>Tue, 07 Feb 2012 22:04:00 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/02/06/orcamdf-row-compression-support.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>After two months of on and off work, I finally merged the <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> compression branch into master. This means OrcaMDF now officially supports data row compression!</p>

<h2>Supported data types</h2>

<p>Implementing row compression required me to modify nearly all existing data types as compression changes the way they’re stored. Integers are <a href="http://improve.dk/archive/2012/01/30/the-anatomy-of-row-amp-page-compressed-integers.aspx" target="_blank">compressed</a>, decimals are <a href="http://improve.dk/archive/2011/12/13/how-are-vardecimals-stored.aspx" target="_blank">variable length</a> and variable length values are generally truncated instead of padded with 0’s. All previous data types implemented in OrcaMDF supports row compression, just as I’ve added a few. The current list of supported data types is as follows:</p>

<ul>
	<li>bigint</li>
	<li>binary</li>
	<li>bit</li>
	<li>char</li>
	<li>date</li>
	<li>datetime</li>
	<li>mal/numeric (including vardecimal, both with and without row compression)</li>
	<li>image</li>
	<li>int</li>
	<li>money</li>
	<li>nchar</li>
	<li>ntext</li>
	<li>nvarchar</li>
	<li>smallint</li>
	<li>smallmoney</li>
	<li>text</li>
	<li>time</li>
	<li>uniqueidentifier</li>
	<li>varbinary</li>
	<li>varchar</li>
</ul>


<h2>Unicode compression</h2>

<p>Nchar and nvarchar proved to be slightly more tricky than the rest as they use the <a href="http://unicode.org/reports/tr6/" target="_blank">SCSU</a> unicode compression format. I found a single <a href="http://gautam-m.blogspot.com/2010/09/standard-compression-scheme-for-unicode.html" target="_blank">.NET implementation of SCSU</a>, but while I was allowed to use the code, it didn’t come with a license and that’s a no go when I want to embed it in OrcaMDF. Furthermore had a lot of Java artifacts lying around (relying on goto for instance) that I didn’t fancy. I chose to implement my own SCSU decompression based on the reference implementation provided by Unicode, Inc. I’ve only implemented decompression to end up with a very slim and simple SCSU decompressor.</p>

<p>I’ll be posting a blog on the decompressor itself as it has some value as a standalone class outside of OrcaMDF.</p>

<h2>Architecture changes</h2>

<p>I started out thinking I’d be able to finish off compression support within a week or two, after all, it was <a href="http://www.amazon.com/Microsoft%C2%AE-SQL-Server%C2%AE-2008-Internals/dp/0735626243" target="_blank">rather well documented</a>. It didn’t take long before it dawned upon me, just how many changes implementing compression would require. The record parser would obviously need to know whether the page was compressed or not. But where would it know that from? Previously all it got was a page pointer, now I had to lookup the compression (which varies by partition) metadata and make sure it was passed along all the way from the DataScanner to the page parser, to the record parser and onwards to the data type parsers.</p>

<p>I’ve had to implement multiple abstractions on top of the regular parsers to abstract away whether the records were stored in a compressed or non compressed format. Overall it’s resulted in a better architecture, but it took a lot more work than expected. Actually parsing the compressed record format was the smallest part of the ordeal – the documentation was spot on and it’s a simple format. The data types however, that took some more work until I had the format figured out.</p>

<h2>Taking it for a spin</h2>

<p>As always, the <a href="https://github.com/improvedk/OrcaMDF" target="_blank">code is available at Github</a>, feel free to take a look! If you’re not the coding type, I’ve also uploaded the <a href="https://github.com/improvedk/OrcaMDF/downloads" target="_blank">binary download</a> (dated 2012-02-06) of the OrcaMDF Studio, a GUI built on top of OrcaMDF.</p>

<h2>Stats</h2>

<p>Being a lover of numbers myself, I love looking at statistics. Here’s a couple of random stats from OrcaMDF:</p>

<ul>
	<li>123 commits, the first one being made on April 15th 2011 – that’s almost a year ago!</li>
	<li>~11.700 lines of C# code (excluding blanks).</li>
	<li>~1000 lines of comments.</li>
	<li>~35% of the code is dedicated to testing, with a test suite comprising of over 200 tests.</li>
	<li><a href="https://www.ohloh.net/p/OrcaMDF" target="_blank">Ohloh</a> estimates OrcaMDF has a development cost of $144,090 – makes me wonder if not my time would be better spent elsewhere...</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1398</wp:post_id>
		<wp:post_date>2012-02-07 23:04:00</wp:post_date>
		<wp:post_date_gmt>2012-02-07 22:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-row-compression-support</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="row-compression"><![CDATA[Row compression]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[66]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Row Compression Support]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creating Multiplexers Using Logic Gates</title>
		<link>http://improve.dk/creating-multiplexers-using-logic-gates/</link>
		<pubDate>Mon, 13 Feb 2012 01:26:51 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/02/11/creating-multiplexers-using-logic-gates.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>So what’s a multiplexer you ask? A multiplexer is an <a href="http://en.wikipedia.org/wiki/Integrated_circuit" target="_blank">integrated circuit</a> that takes a number of inputs and outputs a smaller number of outputs. In this case we’re aiming at creating a 4-to-1 multiplexer. As the name implies, it takes four inputs and outputs exactly one output, determined by a <em>select input</em>. Depending on the number of input lines, one or more select lines may be required. For 2<sup>n</sup> input lines, n select lines are needed. In hardware terms, this is basically the simplest of switches.</p>

<h2>Creating a 2-to-1 multiplexer</h2>

<p>To start out easy, we’ll create a multiplexer taking two inputs and a single selector line. With inputs A and B and select line S, if S is 0, the A input will be the output Z. If S is 1, the B will be the output Z.</p>

<p>The boolean formula for the 2-to-1 multiplexer looks like this:</p>

<pre lang="tsql" escaped="true">Z = (A ∧ ¬S) ∨ (B ∧ S)</pre>

<p>If you’re not used to boolean algebra, it may be easier to see it represented in SQL:</p>

<pre lang="tsql" escaped="true">SELECT @Z = (A &amp; ~S) | (B &amp; S)</pre>

<p>By ANDing A and B with NOT S and S respectively, we’re guaranteed that either A or B will be output. Creating the circuit, it looks like this:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb1_2.png"><img class="alignnone size-full wp-image-2343" alt="image_thumb1_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb1_2.png" width="583" height="202" /></a></div></div>

<p>If we enable both A and B inputs but keep S disabled, we see that the A input is passed all the way through to the Z output:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb3_2.png"><img class="alignnone size-full wp-image-2345" alt="image_thumb3_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb3_2.png" width="586" height="221" /></a></div></div>

<p>And if we enable the S selector line, B is passed through to Z as the output:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb5_2.png"><img class="alignnone size-full wp-image-2346" alt="image_thumb5_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb5_2.png" width="583" height="199" /></a></div></div>

<h2>Creating a 4-to-1 multiplexer</h2>

<p>Now that we’ve created the simplest of multiplexers, let’s get on with the 4-to-1 multiplexer. Given that we have 2<sup>2</sup> inputs, we need two selector lines. The logic is just as before – combining the two selector lines, we have four different combinations. Each combination will ensure that one of the input lines A-D are passed through as the output Z. The formula looks like this:</p>

<pre lang="tsql" escaped="true">Z = (A ∧ ¬S0 ∧ ¬S1) ∨ (B ∧ S0 ∧ ¬S1) ∨ (C ∧ ¬S0 ∧ S1) ∨ (D ∧ S0 ∧ S1)</pre>

<p>And in SQL:</p>

<pre lang="tsql" escaped="true">SELECT Z = (A &amp; ~S0 &amp; ~S1) | (B &amp; S0 &amp; ~S1) | (C &amp; ~S0 &amp; S1) | (D &amp; S0 &amp; S1)</pre>

<p>The circuit is pretty much the same as in the 2-to-1 multiplexer, except we add all four inputs and implement the 4-input boolean formula, with S<sub>0</sub> on top and S<sub>1</sub> on bottom:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb7_2.png"><img class="alignnone size-full wp-image-2347" alt="image_thumb7_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb7_2.png" width="594" height="679" /></a></div></div>

<p>I’ll spare you a demo of all the states and just show all four inputs activated while the signal value of 0b10 results in C being pass through to Z as the result:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb9_2.png"><img class="alignnone size-full wp-image-2348" alt="image_thumb9_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb9_2.png" width="585" height="677" /></a></div></div>

<h2>Combining two 4-to-1 multiplexers into an 8-to-1 multiplexer</h2>

<p>I’ll spare you the algebraic logic this time as it follows the same pattern as previously, except it’s starting to become quite verbose. In the following circuit I’ve taken the the exact 4-to-1 multiplexer circuit that we created just before, and turned it into an integrated circuit (just as I converted the 2-to-1 multiplexer into an integrated circuit). I’ve then added 8 inputs, A through H as well as three selector inputs, S0 through S2.</p>

<p>S0 and S1 are passed directly into each of the 4-1 multiplexers, no matter the value of S2. This means both 4-1 multiplexers are completely unaware of S2s existence. However, as the output from each of the 4-1 multiplexers are passed into a 2-1 multiplexer connected to the S2 selector line, S2 determines which of the 4-1 multiplexers get to deliver the output.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb2_2.png"><img class="alignnone size-full wp-image-2349" alt="image_thumb[2]_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb2_2.png" width="582" height="458" /></a></div></div>

<p>Here’s an example where S2 defines the output should come from the second (leftmost) 4-1 multiplexer, while the S0 and S1 selector lines defines the input should come from the second input in that multiplexer, meaning input F gets passed through as the result Z.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_thumb4_2.png"><img class="alignnone size-full wp-image-2350" alt="image_thumb[4]_2" src="http://improve.dk/wp-content/uploads/2012/02/image_thumb4_2.png" width="585" height="462" /></a></div></div>

<h2>Combining two 8-to-1 multiplexers into a 16-to-1 multiplexer</h2>

<p>Ok, let’s just stop here.Using the smaller multiplexers we can continue combining them until we reach the desired size.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1399</wp:post_id>
		<wp:post_date>2012-02-13 02:26:51</wp:post_date>
		<wp:post_date_gmt>2012-02-13 01:26:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creating-multiplexers-using-logic-gates</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="computer-science"><![CDATA[Computer Science]]></category>
		<category domain="post_tag" nicename="logic"><![CDATA[Logic]]></category>
		<category domain="post_tag" nicename="logic-gate"><![CDATA[Logic gate]]></category>
		<category domain="post_tag" nicename="multiplexer"><![CDATA[Multiplexer]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Creating Multiplexers Using Logic Gates]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1153</wp:comment_id>
			<wp:comment_author><![CDATA[David Parrott]]></wp:comment_author>
			<wp:comment_author_email>david.parrott@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.eightlittlebits.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-13 13:18:32</wp:comment_date>
			<wp:comment_date_gmt>2012-02-13 13:18:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,<br /><br />You're missing a not in the formula for the 4-1 multiplexer. :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1154</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-13 13:26:16</wp:comment_date>
			<wp:comment_date_gmt>2012-02-13 13:26:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[David,<br /><br />You're quick - I noticed it and fixed just a couple of minutes after posting - thanks :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163821</wp:comment_id>
			<wp:comment_author><![CDATA[bok]]></wp:comment_author>
			<wp:comment_author_email>krowbo@bigpond.net.au</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>121.217.70.155</wp:comment_author_IP>
			<wp:comment_date>2014-01-13 12:38:35</wp:comment_date>
			<wp:comment_date_gmt>2014-01-13 11:38:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for this info, much appreciated. What I'm wondering  is how to derive a boolean formula if all you have is a specification in the form of "if sel =0, then out = a, else out = b". Is there a generalised procesT for this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1389613115.723269939422607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>145605</wp:comment_id>
			<wp:comment_author><![CDATA[ashish kamble]]></wp:comment_author>
			<wp:comment_author_email>ashishkamble317@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>37.228.107.191</wp:comment_author_IP>
			<wp:comment_date>2013-11-16 05:58:54</wp:comment_date>
			<wp:comment_date_gmt>2013-11-16 04:58:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanx for information.....
find it very useful....
:-)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384577934.838551044464111328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>151281</wp:comment_id>
			<wp:comment_author><![CDATA[Ri]]></wp:comment_author>
			<wp:comment_author_email>gaurishirsikar49@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>117.222.33.32</wp:comment_author_IP>
			<wp:comment_date>2013-11-27 09:10:18</wp:comment_date>
			<wp:comment_date_gmt>2013-11-27 08:10:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[what about kmap, where is it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385539818.9128820896148681640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>LINQPad - The Perfect Playground for Amazon Web Services</title>
		<link>http://improve.dk/linqpad-ndash-the-perfect-playground-for-amazon-web-services/</link>
		<pubDate>Fri, 17 Feb 2012 20:50:35 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/02/16/linqpad-the-perfect-playground-for-amazon-web-services.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’ve previously written on <a href="http://improve.dk/archive/2011/10/26/how-to-set-up-and-serve-private-content-using-s3.aspx" target="_blank">why I don’t want to rely on third party GUIs</a> for managing my AWS services. Assuming I’ll be interacting with AWS through the SDK later on, I much prefer doing the initial setup using the SDK as well, to ensure I fully understand what I’ve done. <a href="http://improve.dk/archive/2011/10/26/how-to-set-up-and-serve-private-content-using-s3.aspx" target="_blank">In</a> <a href="http://improve.dk/archive/2011/11/07/pushing-the-limits-of-amazon-s3-upload-performance.aspx" target="_blank">previous</a> <a href="http://improve.dk/archive/2011/11/17/optimizing-single-instance-amazon-s3-delete-performance.aspx" target="_blank">posts</a>, I’ve shown full console application examples on how to use the SDK for various tasks; however, creating a console application project, compiling and running it can be kind of cumbersome, especially if you’re just doing some quick testing or API exploration.</p>

<h2>Enter LINQPad</h2>

<p>If you haven’t tried <a href="http://www.linqpad.net/" target="_blank">LINQPad</a> out before, go do it now! It’s an awesome scratchpad style application for writing and running C#/VB.NET/F# code, either as a single expression, a set of statements or a full application. There are also various plugins for easily connecting to databases, Azure services and lots more. Probably just a matter of time before someone writes a <a href="http://www.linqpad.net/extensibility.aspx" target="_blank">custom provider</a> for AWS as well.</p>

<h3>Getting started with the AWS SDK in LINQPad</h3>

<p>First up, you need to <a href="http://aws.amazon.com/sdkfornet/" target="_blank">download</a> and install the AWS SDK. Once installed, open LINQPad and press F4. In the following dialog, click Add...</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_2.png"><img class="alignnone size-full wp-image-2353" alt="image_2" src="http://improve.dk/wp-content/uploads/2012/02/image_2.png" width="514" height="363" /></a></div></div>

<p>You can either browse to the AWSSDK.dll file manually, or you can pick it from the GAC – which would be the easiest option if you’re just doing some quick testing.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_4.png"><img class="alignnone size-full wp-image-2354" alt="image_4" src="http://improve.dk/wp-content/uploads/2012/02/image_4.png" width="604" height="343" /></a></div></div>

<p>After adding it, as a final step, go to the <em>Additional Namespace Imports</em> tab and add Amazon to the list.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_61.png"><img class="alignnone size-full wp-image-2355" alt="image_6" src="http://improve.dk/wp-content/uploads/2012/02/image_61.png" width="390" height="306" /></a></div></div>

<h2>Discoverability</h2>

<p>There are generally two ways to approach a new and unknown API. You <a href="http://aws.amazon.com/documentation/" target="_blank">could read the documentation</a>, or you could just throw yourself at it, relying on intellisense. Unfortunately the free version of LINQPad does not come with intellisense/auto completion, however, at a price of $39 it’s a bargain.</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_121.png"><img class="alignnone size-full wp-image-2356" alt="image_12" src="http://improve.dk/wp-content/uploads/2012/02/image_121.png" width="1024" height="480" /></a></div></div>

<h3>Exception output</h3>

<p>Inevitably, you’ll probably run into an exception or two. Take the following piece of code for example; it works perfectly, but I forgot to assign the IAM user access to the bucket I’m trying to interact with (and before you remind me to remove the keys, don’t worry, the IAM user was temporary and no longer exists):</p>

<pre lang="csharp" escaped="true">var accessKeyID = "AKIAIKB6FI6SSOGGOP7A";
var secretKey = "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";

using (var client = AWSClientFactory.CreateAmazonS3Client(accessKeyID, secretKey))
{
	var request = new Amazon.S3.Model.ListObjectsRequest()
		.WithBucketName("improve-us.dk");

	using (var result = client.ListObjects(request))
	{
		result.Dump();
	}
}</pre>

<p>What you’ll see is a clear notification saying an exception has occurred, as well as a repeated exception in the output pane:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_141.png"><img class="alignnone size-full wp-image-2357" alt="image_14" src="http://improve.dk/wp-content/uploads/2012/02/image_141.png" width="696" height="649" /></a></div></div>

<p>But look what happens once we expand the exception:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_161.png"><img class="alignnone size-full wp-image-2358" alt="image_16" src="http://improve.dk/wp-content/uploads/2012/02/image_161.png" width="580" height="768" /></a></div></div>

<p>We get all of the output! Any object, returned or thrown from the code, will automatically be displayed in the output, and can easily be drilled into.</p>

<h3>Dumping objects</h3>

<p>In case you’re code neither throws exceptions (by some miracle, in my case) nor returns objects, you can always call the .Dump() extension method on any object. Once I granted the IAM user the correct permissions, result.Dump() was called and the result of the ListObjectsRequest was output:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/02/image_181.png"><img class="alignnone size-full wp-image-2360" alt="image_18" src="http://improve.dk/wp-content/uploads/2012/02/image_181.png" width="658" height="768" /></a></div></div>

<p>Once again it’s easy to drill down and see all of the properties of the result.</p>

<h2>Conclusion</h2>

<p>Adhering to my original statement of not liking third party GUIs, using tools like LINQPad is an excellent option for easily writing test code, without the added overhead of starting Visual Studio, compiling, running, etc. The output is neatly presented and really helps you to get a feeling for the API.</p>

<p>Just to finish off – LINQPad has plenty of uses besides AWS, this is just one scenario for which I’ve been using it extensively lately. I’m really considering creating a LINQPad provider for <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> as one of my next projects.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1400</wp:post_id>
		<wp:post_date>2012-02-17 21:50:35</wp:post_date>
		<wp:post_date_gmt>2012-02-17 20:50:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linqpad-ndash-the-perfect-playground-for-amazon-web-services</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="category" nicename="amazon-web-services"><![CDATA[Amazon Web Services]]></category>
		<category domain="post_tag" nicename="linqpad"><![CDATA[LINQPad]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[linqpad-the-perfect-playground-for-amazon-web-services]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[LINQPad - The Perfect Playground for Amazon Web Services]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why Use Big Endian For Compressed Integers?</title>
		<link>http://improve.dk/why-use-big-endian-for-compressed-integers/</link>
		<pubDate>Wed, 29 Feb 2012 20:47:38 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/02/28/why-use-big-endian-for-compressed-integers.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>While implementing compression support for <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a>, it stumped me when I discovered that integers (including datetime, money and all other type based on integers) were <a href="http://improve.dk/archive/2012/01/30/the-anatomy-of-row-amp-page-compressed-integers.aspx" target="_blank">stored in big endian</a>. As all other integers are stored in little endian and I couldn’t see why they’d want to change it, I assumed it must’ve been due to using different libraries or something to that extent.</p>

<p>However, at that time I was only implementing row compression, and thus I didn’t consider the implications endianness would have on page compression. You see, one of the techniques page compression uses to save space is column prefixing. When page compressing a page, SQL Server will look for any common column prefix values (at the byte level, page compression is data type agnostic). The best match for a column prefix will be stored as an overall prefix for the column and all other columns will base their value off of this, only storing the diff.</p>

<p>Let’s take a look at a sample identity column and it’s values, stored in little endian:</p>

<pre class="plain">
2312398493 = 0x9D66D489
2312398494 = 0x9E66D489
2312398495 = 0x9F66D489
2312398496 = 0xA066D489
</pre>

<p>In this case, the very first byte (the least significant in little endian) changes for each number and thus there’s no common prefix to use for page compression. If we instead store those same values in big endian, look what we get:</p>

<pre class="plain" parse="false">
2312398493 = 0x<strong>89D466</strong>9D
2312398494 = 0x<strong>89D466</strong>9E
2312398495 = 0x<strong>89D466</strong>9F
2312398496 = 0x<strong>89D466</strong>A0
</pre>

<p>Notice how the bolded bytes are all the same now – only the last, and least significant, byte is changed when the number increments. As such, we can now store the values using just two bytes instead of four:</p>

<pre class="plain">Column prefix = 0x89D4669D</pre>

<pre class="plain">
2312398493 =
2312398494 = 0x039E
2312398495 = 0x039F
2312398496 = 0x03A0
</pre>

<p>The first column actually takes up zero bytes, as it matches the stored column prefix exactly – a saving of four bytes! All the others store a single byte that identifies how many bytes to use from the stored column prefix (0x03), as well as the differential bytes coming afterwards.</p>

<p>Once you realize why we need to use big endian instead of little endian, it’s so obvious. Without the change of endianness, page compression would be way less effective.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1401</wp:post_id>
		<wp:post_date>2012-02-29 21:47:38</wp:post_date>
		<wp:post_date_gmt>2012-02-29 20:47:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-use-big-endian-for-compressed-integers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="page-compression"><![CDATA[Page compression]]></category>
		<category domain="post_tag" nicename="row-compression"><![CDATA[Row compression]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[69]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Why Use Big Endian For Compressed Integers?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Speaking at NDC</title>
		<link>http://improve.dk/speaking-at-ndc/</link>
		<pubDate>Tue, 27 Mar 2012 20:50:02 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/03/22/speaking-at-ndc.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://improve.dk/wp-content/uploads/2012/03/download_2.jpg"><img class="size-full wp-image-2296 alignleft" alt="download_2" src="http://improve.dk/wp-content/uploads/2012/03/download_2.jpg" width="226" height="117" /></a>Just before departing for SQLConnections in Vegas and SQLBits in London, I got notified that I’ve been selected for two presentations at the Norwegian Developers Conference in Oslo, June 6-8th!</p>

<p>I’ve never been to NDC before but I’ve heard lots of good stuff, as well as seen various clips from the recorded videos. I’m especially excited to participate in a developer oriented conference, given that I’ve been focusing most of my time on SQL Server dedicated events over the last year. Lots of interesting new people and sessions to see!</p>

<p>As mentioned, I’ll be presenting two sessions:</p>

<h2>Revealing the SQL Server Magic</h2>

<p><em>Think SQL Server is magical? You're right! However, there's some sense to the magic, and that's what I'll show you in this extremely deep dive session.</em></p>

<p><em>Through my work in creating OrcaMDF, an open source parser for SQL Server databases, I've learned a lot of internal details for the SQL Server database file format. In this session, I will walk you through the internal storage format of MDF files, how we might go about parsing a complete database ourselves, using nothing but a hex editor.</em></p>

<p><em>I will cover how SQL Server stores its own internal metadata about objects, how it knows where to find your data on disk, and once it finds it, how to read it. Using the knowledge from this session, you'll get a solid understanding of the basics behind SQL Server storage.</em></p>

<p>This is the same session that I’ll be presenting at SQLBits next Saturday. However, given the audience I will be modifying the session to focus more on the development side of things.</p>

<h2>Running SQL Server on Amazon EC2</h2>

<p><em>SQL Azure is awesome, if you're in the Microsoft cloud. But what are your options if you're using the Amazon cloud?</em></p>

<p><em>I'll introduce the available database options at Amazon and segue into setting up SQL Server on EC2 using EBS for storage. While EBS is great, it needs to be handled with care to ensure not only proper performance, but also to avoid the inevitable cloud instability and varying performance metrics.</em></p>

<p><em>How far can we push it, and what are the gotchas you need to be aware of?</em></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1402</wp:post_id>
		<wp:post_date>2012-03-27 22:50:02</wp:post_date>
		<wp:post_date_gmt>2012-03-27 20:50:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-ndc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="ndc"><![CDATA[NDC]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQLConnections Slides + Demos</title>
		<link>http://improve.dk/sqlconnections-slides-demos/</link>
		<pubDate>Thu, 29 Mar 2012 01:52:57 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/03/29/sqlconnections-slides-demos.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I presented my “Optimizing Storage and Performance Using Page and Row Compression” presentation today here at SQLConnections. Overall I think it went alright, even though I had to speed up a bit at the end due to lack of time – I really hope I’ll be able to get a 75 minute slot next time :)</p>

<p>As promised, here are the materials from my session:<a href="/Images/Files/SQLConnections_2012_03_29_SQL433.rar" target="_blank">
</a></p>

<p><a href="http://improve.dk/wp-content/uploads/2012/03/SQLConnections_2012_03_29_SQL433.rar">SQLConnections_2012_03_29_SQL433.rar - Slides &amp; demos</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1403</wp:post_id>
		<wp:post_date>2012-03-29 01:52:57</wp:post_date>
		<wp:post_date_gmt>2012-03-29 01:52:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlconnections-slides-demos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlconnections"><![CDATA[SQLConnections]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQLBits X Slides + Demos</title>
		<link>http://improve.dk/sqlbits-x-slides-demos/</link>
		<pubDate>Mon, 02 Apr 2012 09:18:15 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/04/02/sqlbits-x-slides-demos.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://improve.dk/wp-content/uploads/2012/04/2012-03-31-12.00.43_2.jpg"><img class=" wp-image-2291 alignright" alt="2012-03-31 12.00.43_2" src="http://improve.dk/wp-content/uploads/2012/04/2012-03-31-12.00.43_2.jpg" width="368" height="277" /></a>As usual, I had a wonderful time at SQLBits X in London. Unfortunately I didn’t arrive until late Friday afternoon since I was flying in at the last minute from SQLConnections. I did however make it to the fabulous party and managed to get in bed early enough so I could be ready for my presentation on Saturday.</p>

<p>As promised in my session, here are the downloadable slides and demos: <a href="/Images/Files/sqlbits_2012_04_01_revealing_the_magic.rar" target="_blank"></a></p>

<p><a href="http://improve.dk/wp-content/uploads/2012/04/sqlbits_2012_04_01_revealing_the_magic.rar">sqlbits_2012_04_01_revealing_the_magic.rar - Slides &amp; demos</a></p>

<p>All of you who showed up, or wanted to showed up but couldn’t get in, thank you! Also, a big thanks goes out to the SQLBits crew – I can’t say how impressed I am by the tightness with which it’s run. Everything was timed to perfection, the hardware was running excellently and I didn’t see a room without a helper ready to jump in if anyone needed anything.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1404</wp:post_id>
		<wp:post_date>2012-04-02 11:18:15</wp:post_date>
		<wp:post_date_gmt>2012-04-02 09:18:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlbits-x-slides-demos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlbits"><![CDATA[SQLBits]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Materials For My Miracle Open World 2012 Presentation</title>
		<link>http://improve.dk/materials-for-my-miracle-open-world-2012-presentation/</link>
		<pubDate>Mon, 23 Apr 2012 18:49:41 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/04/23/materials-for-my-miracle-open-world-2012-presentation.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Last Thursday I did a full-day presentation at Miracle Open World 2012 on the SQL Server storage engine and MDF file internals.</p>  <p>As mentioned in the session, I usually don’t post my precon slidedeck and materials publicly. If you attended the session, please send me an email at <a href="mailto:mark@improve.dk">mark@improve.dk</a> and I’ll send you the slides + demos for my session :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1405</wp:post_id>
		<wp:post_date>2012-04-23 20:49:41</wp:post_date>
		<wp:post_date_gmt>2012-04-23 18:49:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>materials-for-my-miracle-open-world-2012-presentation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="miracle-open-world"><![CDATA[Miracle Open World]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1160</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Torpegart]]></wp:comment_author>
			<wp:comment_author_email>mto@miracleas.dk</wp:comment_author_email>
			<wp:comment_author_url>http://www.miracleas.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-04-24 14:58:38</wp:comment_date>
			<wp:comment_date_gmt>2012-04-24 14:58:38</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Super god og top faglig gennemgang af stoffet og en ualmindelig god m&#229;de at pr&#230;sentere det p&#229;.<br />Level 500+ bliver spiseligt n&#229;r du formidler det<br />Mange tak for en god oplevelse som jeg ikke fortryder og varmt anbefaler til andre.<br /><br />mvh<br />Michael Torpegart<br />SQL Server Specialist<br />Miracle A/S]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>2012 Community &amp; Demo Day Materials</title>
		<link>http://improve.dk/2012-community-amp-demo-day-materials/</link>
		<pubDate>Fri, 11 May 2012 12:33:00 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/05/11/2012-community-demo-day-materials.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Yesterday I presented at <a href="http://communityday2012.c1preprod01.composite.net/Community-Day" target="_blank">Community Day</a>. As promised, you can download my slide deck here:</p>

<p><a href="http://improve.dk/wp-content/uploads/2012/05/2012-05-10-CommunityDay-Using-Amazon-S3-CloudFront-for-Scalable-and-Secure-Distribution.rar">CommunityDay-Using-Amazon-S3-CloudFront-for-Scalable-and-Secure-Distribution.rar - Slides</a><a href="/Images/Files/2012-05-10-CommunityDay-Using-Amazon-S3-CloudFront-for-Scalable-and-Secure-Distribution.rar" target="_blank">
</a></p>

<p>I also did a demo of OrcaMDF for the following Demo Day happening. You can find more on OrcaMDF here:</p>

<p><a href="https://github.com/improvedk/OrcaMDF" target="_blank">Git repository</a><br />
<a href="http://improve.dk/category/79.aspx" target="_blank">Blog entries</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1406</wp:post_id>
		<wp:post_date>2012-05-11 14:33:00</wp:post_date>
		<wp:post_date_gmt>2012-05-11 12:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2012-community-amp-demo-day-materials</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="community-day"><![CDATA[Community Day]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[2012-community-demo-day-materials]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>In the Nick of Time: Band Aid Solution for Umbraco 5.1 Performance</title>
		<link>http://improve.dk/in-the-nick-of-time-band-aid-solution-for-umbraco/</link>
		<pubDate>Mon, 14 May 2012 12:35:26 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/05/13/in-the-nick-of-time-band-aid-solution-for-umbraco-5-1-performance.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As I write this I’m finishing the last details on a new website project I’m working on for a client. A couple of months ago I made the easy decision of going with <a href="http://umbraco.org/" target="_blank">Umbraco</a> as the underlying CMS. I’ve had excellent experiences with Umbraco previously and the <a href="http://our.umbraco.org/" target="_blank">community</a> is amazing.</p>

<p>Umbraco was at a split road however, version 4.7 being a widely deployed and tested version, while the brand new 5.0 rewrite had just been released as a release candidate. It was made clear that 5.0 would not be upgradable from previous versions, so I could basically go with 4.7 and be stuck, or go with a release candidate version. To my luck, 5.0 was finally released as RTM before I had to make the decision, rendering my following decision easy – 5.0 was heralded as being production ready.</p>

<h2>Performance, oh my</h2>

<p>Fast forward a month or so, development well underway. It was clear that there were performance issues. The forums were full of <a href="http://our.umbraco.org/forum/core/umbraco-5-general-discussion/28565-Umbraco-5-Performance-issues" target="_blank">posts</a> asking how to get performance equivalent to what people were used to in 4.7. Unfortunately, there wasn’t really a solution yet. Thankfully 5.1 was released, promising better performance. After spending a couple of days fighting a <a href="http://our.umbraco.org/forum/core/umbraco-5-general-discussion/31197-Failing-to-upgrade-from-501-to-51RC" target="_blank">5.0 –&gt; 5.1 upgrade bug</a>, I finally got 5.1 running. Much to my dismay, performance was still dismal.</p>

<p>This is me requesting the front page of the website:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/05/image_2.png"><img class="alignnone size-full wp-image-2284" alt="image_2" src="http://improve.dk/wp-content/uploads/2012/05/image_2.png" width="671" height="519" /></a></div></div>

<p>1780 individual requests to the database, with several interesting queries like the following:</p>

<pre lang="csharp" escaped="true">SELECT this_.Id as Id16_7_, this_.DateCreated as DateCrea2_16_7_, this_.DefaultName as DefaultN3_16_7_,
this_.AttributeSchemaDefinition_id as Attribut4_16_7_, this_.NodeId as NodeId16_7_, attribalia1_.NodeVersionId
as NodeVers3_9_, attribalia1_.Id as Id9_, attribalia1_.Id as Id5_0_, attribalia1_.AttributeDefinitionId as
Attribut2_5_0_, attribalia1_.NodeVersionId as NodeVers3_5_0_, attributed5_.AttributeId as Attribut4_10_,
attributed5_.Id as Id10_, attributed5_.Id as Id1_1_, attributed5_.Value as Value1_1_, attributed5_.ValueKey
as ValueKey1_1_, attributed5_.AttributeId as Attribut4_1_1_, attributed5_.LocaleId as LocaleId1_1_,
attributed6_.AttributeId as Attribut4_11_, attributed6_.Id as Id11_, attributed6_.Id as Id0_2_, attributed6_.Value
as Value0_2_, attributed6_.ValueKey as ValueKey0_2_, attributed6_.AttributeId as Attribut4_0_2_, attributed6_.LocaleId
as LocaleId0_2_, attributei4_.AttributeId as Attribut4_12_, attributei4_.Id as Id12_, attributei4_.Id as
Id3_3_, attributei4_.Value as Value3_3_, attributei4_.ValueKey as ValueKey3_3_, attributei4_.AttributeId
as Attribut4_3_3_, attributei4_.LocaleId as LocaleId3_3_, attributel3_.AttributeId as Attribut4_13_,
attributel3_.Id as Id13_, attributel3_.Id as Id4_4_, attributel3_.Value as Value4_4_, attributel3_.ValueKey as
ValueKey4_4_, attributel3_.AttributeId as Attribut4_4_4_, attributel3_.LocaleId as LocaleId4_4_,
attributes2_.AttributeId as Attribut4_14_, attributes2_.Id as Id14_, attributes2_.Id as Id6_5_, attributes2_.Value
as Value6_5_, attributes2_.ValueKey as ValueKey6_5_, attributes2_.AttributeId as Attribut4_6_5_,
attributes2_.LocaleId as LocaleId6_5_, node14_.Id as Id9_6_, node14_.DateCreated as DateCrea2_9_6_,
node14_.IsDisabled as IsDisabled9_6_, node14_1_.Alias as Alias10_6_, node14_1_.Description as Descript3_10_6_,
node14_1_.Name as Name10_6_, node14_1_.Ordinal as Ordinal10_6_, node14_1_.AttributeSchemaDefinitionId as
Attribut6_10_6_, node14_2_.Alias as Alias11_6_, node14_2_.Description as Descript3_11_6_, node14_2_.Name as
Name11_6_, node14_2_.SchemaType as SchemaType11_6_, node14_2_.XmlConfiguration as XmlConfi6_11_6_, case when
node14_1_.NodeId is not null then 1 when node14_2_.NodeId is not null then 2 when node14_.Id is not null then
0 end as clazz_6_ FROM dbo.NodeVersion this_ left outer join dbo.Attribute attribalia1_ on this_.Id=attribalia1_.NodeVersionId
left outer join dbo.AttributeDecimalValue attributed5_ on attribalia1_.Id=attributed5_.AttributeId left outer join
dbo.AttributeDateValue attributed6_ on attribalia1_.Id=attributed6_.AttributeId left outer join dbo.AttributeIntegerValue
attributei4_ on attribalia1_.Id=attributei4_.AttributeId left outer join dbo.AttributeLongStringValue attributel3_
on attribalia1_.Id=attributel3_.AttributeId left outer join dbo.AttributeStringValue attributes2_ on
attribalia1_.Id=attributes2_.AttributeId inner join dbo.Node node14_ on this_.NodeId=node14_.Id left outer
join dbo.[AttributeDefinitionGroup] node14_1_ on node14_.Id=node14_1_.NodeId left outer join dbo.[AttributeSchemaDefinition]
node14_2_ on node14_.Id=node14_2_.NodeId WHERE this_.Id in (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8,
@p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26, @p27,
@p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, @p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46,
@p47, @p48, @p49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62, @p63, @p64, @p65,
@p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, @p76, @p77, @p78, @p79, @p80, @p81, @p82, @p83, @p84,
@p85, @p86, @p87, @p88, @p89, @p90, @p91, @p92, @p93, @p94, @p95, @p96, @p97, @p98, @p99, @p100, @p101, @p102, @p103,
@p104, @p105, @p106, @p107, @p108, @p109, @p110, @p111, @p112, @p113, @p114, @p115, @p116, @p117, @p118, @p119, @p120,
@p121, @p122, @p123, @p124, @p125, @p126, @p127, @p128, @p129, @p130, @p131, @p132, @p133, @p134, @p135, @p136, @p137,
... &lt;snip: some 700 other parameters&gt; ...
@p882, @p883, @p884, @p885, @p886, @p887, @p888, @p889, @p890, @p891, @p892, @p893, @p894, @p895, @p896, @p897, @p898,
@p899, @p900, @p901, @p902, @p903, @p904, @p905, @p906, @p907, @p908, @p909, @p910, @p911, @p912, @p913, @p914, @p915,
@p916, @p917, @p918, @p919, @p920, @p921, @p922, @p923, @p924, @p925, @p926, @p927, @p928, @p929, @p930, @p931, @p932,
@p933, @p934, @p935, @p936, @p937, @p938, @p939, @p940, @p941, @p942, @p943, @p944, @p945, @p946, @p947, @p948, @p949,
@p950, @p951, @p952, @p953, @p954, @p955, @p956) and this_.Id in (SELECT this_0_.Id as y0_ FROM dbo.NodeVersion this_0_ WHERE this_0_.NodeId = @p957)</pre>

<p>It’s clearly obvious we’re dealing with a serious N+1 problem, made worse by a lack of set based operations as evidenced by the above query. At the same time this query is a ticking time bomb – as soon as it hits the 2100 parameter limit, problems will arise unless they’re handled. The culprit seems to be the fact that the database is queried through a LINQ provider on top of Umbracos own Hive layer, on top of NHibernate. The core team themselves have voiced that NHibernate might be exacerbating the problem as they haven’t tamed the beast completely. I <a href="http://our.umbraco.org/forum/core/umbraco-5-general-discussion/28565-Umbraco-5-Performance-issues?p=14" target="_blank">voiced my own concerns and suggestions</a> on the architecture in the main performance thread. Currently the core team seems to be working on a band aid solution; adding a Lucene based cache to the site to improve performance. In my opinion the only way to really solve the issue is to fix the underlying problem – the N+1 one.</p>

<p>Back in January the Umbraco team posted the following: <a href="http://umbraco.com/follow-us/blog-archive/2012/1/4/umbraco-5-on-performance-and-the-perils-of-premature-optimisation.aspx" target="_blank">Umbraco 5: On performance and the perils of premature optimization</a>. While I completely agree with the sentiment, avoiding N+1 issues is not premature optimization, that’s a requirement before releasing an RTM product.</p>

<p>The Umbraco team does deserve big kudos on owning up to the problem. They’re painfully aware of the issues people are dealing with, being unable to deploy due to crippling performance. I’m sure they’ll be improving on performance, I just hope it happens sooner than later. I did talk to Niels Hartvig and offered my help (regarding the database layer), should they want it. I’ve also had Alex Norcliffe look at my logs over email – a big thanks goes to the team, helping out even though they’re in a pinch themselves.</p>

<h2>Band aid solutions while waiting for 5.2</h2>

<p>As I had to get the website up and running for a trade show, I had no choice but to spin up a High-CPU Extra Large Instance on Amazon EC2. While this costs a minor fortune (compared to what hosting the site should’ve required), it gave me a temporary solution for the trade show. Startup times were still terrible but at least requesting pages went reasonably fast, even though some pages did hang for 5+ seconds, depending on the content shown.</p>

<p>Once the trade show was over, I downgraded the EC2 instance to an m1.large instance. It’s still expensive, but it’s a tad cheaper for development. However, there’s a bigger problem looming on the horizon – the site has to go live in a week or two.</p>

<p>The Umbraco team have said they expect a 5.2 performance release sometime during June, and 5.x being on par with 4.7 by the end of 2012. Unfortunately I don’t have the luxury of waiting for that.</p>

<p>What I’ve now done, to prepare for the launch, was to increase the output cache timeout to 24 hours by modifying web.config like so:</p>

<pre lang="xml" escaped="true">&lt;caching&gt;
  &lt;outputCacheSettings&gt;
    &lt;outputCacheProfiles&gt;
      &lt;add name="umbraco-default" duration="86400" varyByParam="*" location="ServerAndClient"/&gt;
    &lt;/outputCacheProfiles&gt;
  &lt;/outputCacheSettings&gt;
&lt;/caching&gt;</pre>

<p>This essentially turns the website into a statically cached copy. Doing this results in each page being cached for 24 hours after it’s been visited last. While this is great, it still means those first visitors (for each page on the website) will be suffering from long waits. To fix that, I turn to <a href="http://home.snafu.de/tilman/xenulink.html" target="_blank">Xenu’s Link Sleuth</a>. Given the hostname, Xenu will crawl each page on the website, checking for broken links. As a side effect, every page on the site will be visited and thereby cached. By default, Xenu will use 30 concurrent threads to crawl the site. On my EC2 instance, that resulted in loads of timeouts as the instance simply couldn’t handle it:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/05/image_10.png"><img class="alignnone size-full wp-image-2285" alt="image_10" src="http://improve.dk/wp-content/uploads/2012/05/image_10.png" width="783" height="554" /></a></div></div>

<p>Pressing Ctrl+R forces Xenu to retry all the failed links, eventually resulting in all the links being visited successfully:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/05/image_8.png"><img class="alignnone size-full wp-image-2286" alt="image_8" src="http://improve.dk/wp-content/uploads/2012/05/image_8.png" width="768" height="536" /></a></div></div>

<p>(Sorry for distorting the images – the site isn’t supposed to go completely public yet). For Xenu to find all the links on the site, you’ll have to make sure you’re using &lt;a href /&gt; tags. I had to replace a couple of:</p>

<pre lang="xml" escaped="true">&lt;div onclick="window.open('http://xyz.com')"&gt;</pre>

<p>With corresponding &lt;a href /&gt; implementations, otherwise Xenu blissfully ignored them.</p>

<p>Obviously fixing the performance issue like this comes with a severe cost – memory usage on the server as well as being unable to update the site from the back office. For now I can live with that as the main priority is getting the site live. When I update I’ll have to manually cycle the app pool as well as rerunning Xenu. Currently the site takes up about 500 megs of memory fully cached, so I’ve got some room to spare.</p>

<p>Thankfully there are no protected parts of the site so user-specific caching is not an issue – <a href="http://en.wiktionary.org/wiki/YMMV" target="_blank">YMMV</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1407</wp:post_id>
		<wp:post_date>2012-05-14 14:35:26</wp:post_date>
		<wp:post_date_gmt>2012-05-14 12:35:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>in-the-nick-of-time-band-aid-solution-for-umbraco</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="category" nicename="umbraco"><![CDATA[Umbraco]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[in-the-nick-of-time-band-aid-solution-for-umbraco-5-1-performance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[In the Nick of Time: Band Aid Solution for Umbraco 5.1 Performance]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>143270</wp:comment_id>
			<wp:comment_author><![CDATA[vivienne westwood jewellery]]></wp:comment_author>
			<wp:comment_author_email>eehdhxshn@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.apneaworld.com/script/v19.html</wp:comment_author_url>
			<wp:comment_author_IP>186.225.183.150</wp:comment_author_IP>
			<wp:comment_date>2013-11-11 05:07:57</wp:comment_date>
			<wp:comment_date_gmt>2013-11-11 04:07:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384142877.450398921966552734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>2012 NT Konferenca Slides + Demos</title>
		<link>http://improve.dk/2012-nt-konferenca-slides-demos/</link>
		<pubDate>Fri, 01 Jun 2012 20:04:07 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/05/31/2012-nt-konferenca-slides-demos.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I presented two sessions at this years <a href="http://www.ntk.si/" target="_blank">NT Konferenca</a>. It was my first NTK, and what an NTK it was! I’m really hoping I’ll be back to present again – I’ve been to Slovenia many times before on non-technical visits, and now I’ve been able to confirm that they sure know how to run their conferences and cater for the attendees and speakers :)</p>

<p><a href="http://improve.dk/wp-content/uploads/2012/05/2012-05-24-NTK-Optimizing-Storage-and-Performance-Using-Page-and-Row-Compression-60-minutes.rar">Optimizing Storage and Performance Using Page and Row Compression.rar - Slides &amp; demos</a></p>

<p><a href="http://improve.dk/wp-content/uploads/2012/05/2012-05-24-NTK-Storing-Character-Data-Optimally-60-minutes.rar">Storing Character Data Optimally.rar - Slides &amp; demos
</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1408</wp:post_id>
		<wp:post_date>2012-06-01 22:04:07</wp:post_date>
		<wp:post_date_gmt>2012-06-01 20:04:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2012-nt-konferenca-slides-demos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="ntk"><![CDATA[NTK]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Video From NDC 2012: Revealing the SQL Server Magic</title>
		<link>http://improve.dk/video-from-ndc-2012-revealing-the-sql-server-magic/</link>
		<pubDate>Tue, 19 Jun 2012 17:21:56 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/06/18/video-from-ndc-2012-revealing-the-sql-server-magic.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’m really lagging behind on my blogging – life is busy as the moment! Just a couple of weeks ago I presented my Revealing the Magic session at the Norwegian Developers Conference in Oslo. I was quite excited to give my SQL Server oriented session to a crowd of developers – a 500 level session, at SQL Server events that is.</p>

<p>I just got the feedback today – 0 reds, 3 yellows and 15 greens – very happy with that, especially when taking the audience into account. To those of you who haven’t seen my session before, here it is:</p>

<iframe src="http://player.vimeo.com/video/43659054" height="281" width="500" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p><a href="http://vimeo.com/43659054">Mark S. Rasmussen - Revealing the SQL Server Magic</a> from <a href="http://vimeo.com/ndcoslo">NDCOslo</a> on <a href="http://vimeo.com">Vimeo</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1409</wp:post_id>
		<wp:post_date>2012-06-19 19:21:56</wp:post_date>
		<wp:post_date_gmt>2012-06-19 17:21:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>video-from-ndc-2012-revealing-the-sql-server-magic</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="ndc"><![CDATA[NDC]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Video From NDC 2012: Revealing the SQL Server Magic]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Presenting at SQLSaturday #162 in Cambridge</title>
		<link>http://improve.dk/presenting-at-sqlsaturday-162-in-cambridge/</link>
		<pubDate>Wed, 18 Jul 2012 07:22:55 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/07/18/presenting-at-sqlsaturday-162-in-cambridge.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/07/image_4.png"><img class=" wp-image-2275 alignright" alt="image_4" src="http://improve.dk/wp-content/uploads/2012/07/image_4.png" width="445" height="249" /></a></div></div>

<p>The official announcement was made a couple of days ago and I’m embarassingly late to follow up myself. “Unfortunately” this is what I’m doing right now, and I must say that achieving a proper 3G connection in the middle of the <a href="http://en.wikipedia.org/wiki/Dolomites" target="_blank">Dolomites</a> has proven rather difficult...</p>

<p>Anyways, I’m happy and honored to say that I’ll be presenting my <em>A Deep-Dive into the depths of the SQL Server storage engine and MDF file format  </em>precon at SQLSaturday #162 in Cambridge. I’ll be presenting my precon alongside SQL Server authorities like Jen Stirrup and Buck Woody, not to mention all of the regular session speakers, which have yet to be announced.</p>

<p>Allow me to present some of the feedback I got on my <em>Revealing the Magic</em> session, which is a 1-hour version of my precon, at the last SQLBits:</p>

<blockquote>It was perhaps too much detail to cram into a 1 hour session.</blockquote>

<blockquote>A bit rushed. I can say it is probably the first time I felt my knowledge was not
enough to keep up with mark's content.</blockquote>

<blockquote>Great pace of session - very fast, no messing about - excellent - more sessions
should get on with it, like this. Loved the session and very technical - exactly
what the benefit of having this stuff delivered face-to-face.</blockquote>

<blockquote>I know he said it at the beginning. but at times it was just too fast. Maybe let the
people digest what was said.</blockquote>

<p>I love receiving constructive feedback, and this is so spot on! I definitely need to weed out a bit of content from my 1-hour session as there’s simply too much to go through in just one hour. Having a full day to present the same content is a much more fitting format, and it will allow me to go at a somewhat more normal pace, as well as leaving plenty of time for Q&amp;A during the presentation.</p>

<p>I will however still warn you that this is a level 500 precon. I will go very in depth and there will be plenty of bits and bytes to show – documented as well as undocumented.</p>

<p>Please check out the <a href="http://sqlcambs.org.uk/" target="_blank">Cambridgeshire SQL Server User Group page</a> for more information on mine, Jen Stirrup and Buck Woodys precons. Make sure to register, if not for mine then for one of the other excellent precons!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1410</wp:post_id>
		<wp:post_date>2012-07-18 09:22:55</wp:post_date>
		<wp:post_date_gmt>2012-07-18 07:22:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-at-sqlsaturday-162-in-cambridge</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cambridge"><![CDATA[Cambridge]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="sqlsaturday"><![CDATA[SQLSaturday]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1163</wp:comment_id>
			<wp:comment_author><![CDATA[Pavan]]></wp:comment_author>
			<wp:comment_author_email>dba_pkashyap@yahoo.co.in</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-20 09:54:55</wp:comment_date>
			<wp:comment_date_gmt>2012-07-20 09:54:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,<br /><br />Will the content be same as the one we had in SQL Bits or will it be different.<br /><br />How much duration will the session be?<br /><br />Kind Regards,<br />Pavan.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1164</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-20 21:40:47</wp:comment_date>
			<wp:comment_date_gmt>2012-07-20 21:40:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pavan,<br /><br />Assuming you're referring to the the 1-hour &quot;Revealing the Magic&quot; session I presented at SQLBits X (and not the precon I presented at SQLBits IX), the content will cover the same, though in much more depth, as well as many other areas. Basically the session I presented at SQLBits X was a 1-hour cooked down version of my precon, where I have to skip a lot of details and content to make it fit.<br /><br />The precon will allow for me to go through a lot more details and scenarios as well as for allowing a better Q&amp;A format where I actually have time to take questions in during the presentation.<br /><br />While the format hasn't been finalized in regards to breaks and such (should be announced on the website soon), it'll be a full-day session meaning usually around 5-6 hours of content + breaks.<br /><br />- Mark]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1165</wp:comment_id>
			<wp:comment_author><![CDATA[Pavan]]></wp:comment_author>
			<wp:comment_author_email>dba_pkashyap@yahoo.co.in</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-07-23 13:18:32</wp:comment_date>
			<wp:comment_date_gmt>2012-07-23 13:18:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's great thanks Mark, I was referring to SQLBits X only. <br /><br />Hoping to see you on that day.<br /><br />Kind Regards,<br />Pavan.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Where Does SQL Server Store the Source for Stored Procedures?</title>
		<link>http://improve.dk/where-does-sql-server-store-the-source-for-stored-procedures/</link>
		<pubDate>Mon, 27 Aug 2012 01:18:52 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/08/26/where-does-sql-server-store-the-source-for-stored-procedures.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>At the moment I’m working on extending <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF Studio</a> to not only list base tables, DMVs and tables, but also stored procedures. That’s easy enough, we just need to query sys.procedures – or that is, the sys.sysschobjs base table, since the sys.procedures DMV isn’t available when SQL Server isn’t running.</p>

<p>However, I don’t want to just list the stored procedures, I also want to present the source code in them. That brings up a new task – retrieving said source code. Where is it stored? I wasn’t able to find anything on Google, so let’s take a look for ourselves!</p>

<p>I’ve created a new empty database with a data file of three megabytes. In this database, I’ve created a single stored procedure like so:</p>

<pre lang="tsql" escaped="true">SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		
-- Create date: 
-- Description:	
-- =============================================
CREATE PROCEDURE XYZ
	AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT 'AABBCC' AS Output
END</pre>

<p>Now when I select from sys.procedures, we can see that the procedure has object ID 2105058535:</p>

<pre lang="tsql" escaped="true">select * from sys.procedures</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_2.png"><img class="alignnone size-full wp-image-2262" alt="image_2" src="http://improve.dk/wp-content/uploads/2012/08/image_2.png" width="349" height="64" /></a></div></div>

<p>So far so good. We can then retrieve the definition itself as an nvarchar(MAX) by querying sys.sql_modules like so:</p>

<pre lang="tsql" escaped="true">select * from sys.sql_modules where object_id = 2105058535</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_4.png"><img class="alignnone size-full wp-image-2263" alt="image_4" src="http://improve.dk/wp-content/uploads/2012/08/image_4.png" width="563" height="65" /></a></div></div>

<p>And there you have it, the source code for the XYZ procedure! But hold on a moment, while I’ve gotten the object ID for the procedure by querying the sys.sysschobjs base table, I don’t have access to sys.sql_modules yet, as that’s a view and not a base table. Let’s take a look at where sys.sql_modules gets the definition from:</p>

<pre lang="tsql" escaped="true">select object_definition(object_id('sys.sql_modules'))</pre>

<pre lang="tsql" escaped="true">SELECT
	object_id = o.id,
	definition = Object_definition(o.id),
	uses_ansi_nulls = Sysconv(bit, o.status &amp; 0x40000), -- OBJMOD_ANSINULLS
	uses_quoted_identifier = sysconv(bit, o.status &amp; 0x80000),   -- OBJMOD_QUOTEDIDENT
	is_schema_bound = sysconv(bit, o.status &amp; 0x20000),    -- OBJMOD_SCHEMABOUND
	uses_database_collation = sysconv(bit, o.status &amp; 0x100000),  -- OBJMOD_USESDBCOLL
	is_recompiled = sysconv(bit, o.status &amp; 0x400000),     -- OBJMOD_NOCACHE
	null_on_null_input = sysconv(bit, o.status &amp; 0x200000),   -- OBJMOD_NULLONNULL
	execute_as_principal_id = x.indepid
FROM
	sys.sysschobjs o
LEFT JOIN
	sys.syssingleobjrefs x ON x.depid = o.id AND x.class = 22 AND x.depsubid = 0 -- SRC_OBJEXECASOWNER
WHERE
	o.pclass &lt;&gt; 100 AND
	(
		(o.type = 'TR' AND has_access('TR', o.id, o.pid, o.nsclass) = 1) OR
		(type IN ('P','V','FN','IF','TF','RF','IS') AND has_access('CO', o.id) = 1) OR
		(type IN ('R','D') AND o.pid = 0)
	)</pre>

<p>Hmmm, so sys.sql_modules gets the source by using the object_definition system function. Unfortunately, the following doesn’t work:</p>

<pre lang="tsql" escaped="true">select object_definition(object_id('object_definition'))</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_6.png"><img class="alignnone size-full wp-image-2264" alt="image_6" src="http://improve.dk/wp-content/uploads/2012/08/image_6.png" width="154" height="73" /></a></div></div>

<p>I happen to remember that sys.sql_modules is a replacement for the, now deprecated, sys.syscomments legacy view. Let’s take a look at where that one gets the source from:</p>

<pre lang="tsql" escaped="true">select object_definition(object_id('sys.syscomments'))</pre>

<pre lang="tsql" escaped="true">SELECT
	o.id AS id,  
	convert(smallint, case when o.type in ('P', 'RF') then 1 else 0 end) AS number,  
	s.colid,
	s.status,  
	convert(varbinary(8000), s.text) AS ctext,  
	convert(smallint, 2 + 4 * (s.status &amp; 1)) AS texttype,  
	convert(smallint, 0) AS language,  
	sysconv(bit, s.status &amp; 1) AS encrypted,  
	sysconv(bit, 0) AS compressed,  
	s.text  
FROM
	sys.sysschobjs o
CROSS APPLY
	OpenRowset(TABLE SQLSRC, o.id, 0) s  
WHERE
	o.nsclass = 0 AND
	o.pclass = 1 AND
	o.type IN ('C','D','P','R','V','X','FN','IF','TF','RF','IS','TR') AND
	has_access('CO', o.id) = 1  

UNION ALL  

SELECT
	c.object_id AS id,  
	convert(smallint, c.column_id) AS number,  
	s.colid,
	s.status,  
	convert(varbinary(8000), s.text) AS ctext,  
	convert(smallint, 2 + 4 * (s.status &amp; 1)) AS texttype,  
	convert(smallint, 0) AS language,  
	sysconv(bit, s.status &amp; 1) AS encrypted,  
	sysconv(bit, 0) AS compressed,  
	s.text  
FROM
	sys.computed_columns c
CROSS APPLY
	OpenRowset(TABLE SQLSRC, c.object_id, c.column_id) s  

UNION ALL  

SELECT
	p.object_id AS id,  
	convert(smallint, p.procedure_number) AS number,  
	s.colid,
	s.status,  
	convert(varbinary(8000), s.text) AS ctext,  
	convert(smallint, 2 + 4 * (s.status &amp; 1)) AS texttype,  
	convert(smallint, 0) AS language,  
	sysconv(bit, s.status &amp; 1) AS encrypted,  
	sysconv(bit, 0) AS compressed,  
	s.text  
FROM
	sys.numbered_procedures p
CROSS APPLY
	OpenRowset(TABLE SQLSRC, p.object_id, p.procedure_number) s  

UNION ALL  

SELECT
	o.id AS id,  
	convert(smallint, case when o.type in ('P', 'RF') then 1 else 0 end) AS number,  
	s.colid,
	s.status,  
	convert(varbinary(8000), s.text) AS ctext,  
	convert(smallint, 2) AS texttype,  
	convert(smallint, 0) AS language,  
	sysconv(bit, 0) AS encrypted,  
	sysconv(bit, 0) AS compressed,  
	s.text  
FROM
	sys.sysobjrdb o
CROSS APPLY
	OpenRowset(TABLE SQLSRC, o.id, 0) s  
WHERE
	db_id() = 1 AND 
	o.type IN ('P','V','X','FN','IF','TF')</pre>

<p>Bummer. It doesn’t use object_definition, but instead another internal function in the form of OpenRowset(TABLE SQLSRC, o.id, 0). I’m not one to give up easily though – I’ve previously <a href="http://improve.dk/archive/2011/07/13/exploring-the-sys-system_internals_partition_columns-ti-field.aspx" target="_blank">reverse engineered the OpenRowset(TABLE RSCPROP)</a> function.</p>

<p>Let’s take a different approach to the problem. Everything in SQL Server is stored on 8KB pages in a fixed format. As the procedures aren’t encrypted, they must be stored in clear text somewhere in the database – we just don’t know where. Let’s detach the database and crack open a hex editor (I highly recommend HxD):</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_10.png"><img class="alignnone size-full wp-image-2265" alt="image_10" src="http://improve.dk/wp-content/uploads/2012/08/image_10.png" width="655" height="592" /></a></div></div>

<p>Now let’s see if we can find the procedure. On purpose I made it return “SELECT ‘AABBCC’ AS Output” as that would be easy to search for:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_12.png"><img class="alignnone size-full wp-image-2266" alt="image_12" src="http://improve.dk/wp-content/uploads/2012/08/image_12.png" width="361" height="230" /></a></div></div>

<p>And whadda ya know, there it is:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_14.png"><img class="alignnone size-full wp-image-2267" alt="image_14" src="http://improve.dk/wp-content/uploads/2012/08/image_14.png" width="655" height="592" /></a></div></div>

<p>OK, so now we know that the source is stored in the database, just not where specifically. The data is stored at offset 0x00101AF0 in the data file. In decimal, that’s offset 01055472. As each data page is exactly 8KB, we can calculate the ID of the data page that this is stored on (using integer math):</p>

<p>01055472 / 8192 = 128</p>

<p>Aha! At this point we know that the source is stored on page 128 – how about we take a look at that page using DBCC PAGE? After reattaching the database, run:</p>

<pre lang="tsql" escaped="true">dbcc traceon (3604)
dbcc page(Test2, 1, 128, 0)</pre>

<p>Note that I’m using style 0 for the DBCC PAGE command. At this point, I just want to see the header – there just might be something interesting in there:</p>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_22.png"><img class="alignnone size-full wp-image-2268" alt="image_22" src="http://improve.dk/wp-content/uploads/2012/08/image_22.png" width="548" height="142" /></a></div></div>

<p>As expected, it’s a normal data page, as indicated by the m_type field having a value of 1 (which is the internal page type ID for a data page). More interesting though, we can see that the page belongs to object ID 60! Let’s have a look at what lies behind that object ID:</p>

<pre lang="tsql" escaped="true">select * from sys.sysobjects where id = 60</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_24.png"><img class="alignnone size-full wp-image-2269" alt="image_24" src="http://improve.dk/wp-content/uploads/2012/08/image_24.png" width="367" height="78" /></a></div></div>

<p>And all of a sudden, the hunt is on! Let’s have a look at the contents of sys.sysobjvalues. Note that before you can select from this table, you’ll have to connect using a <a href="http://msdn.microsoft.com/en-us/library/ms189595.aspx" target="_blank">dedicated administrator connection</a>, seeing as it’s an internal base table:</p>

<pre lang="tsql" escaped="true">select * from sys.sysobjvalues</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_28.png"><img class="alignnone size-full wp-image-2270" alt="image_28" src="http://improve.dk/wp-content/uploads/2012/08/image_28.png" width="517" height="223" /></a></div></div>

<p>There’s obviously a lot of stuff in here we don’t care about, but let’s try and filter that objid column down to the object ID of our procedure – 2105058535:</p>

<pre lang="tsql" escaped="true">select * from sys.sysobjvalues where objid = 2105058535</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_30.png"><img class="alignnone size-full wp-image-2271" alt="image_30" src="http://improve.dk/wp-content/uploads/2012/08/image_30.png" width="536" height="79" /></a></div></div>

<p>I wonder what that imageval column contains, if I remember correctly 0x2D2D would be “--“ in ASCII, which reminds me quite a lot of the beginning of the XYZ procedure. Let’s try and convert that column into human:</p>

<pre lang="tsql" escaped="true">select convert(varchar(max), imageval) from sys.sysobjvalues where objid = 2105058535</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_32.png"><img class="alignnone size-full wp-image-2272" alt="image_32" src="http://improve.dk/wp-content/uploads/2012/08/image_32.png" width="593" height="67" /></a></div></div>

<p>And there you have it my dear reader; the source code for the XYZ stored procedure, as stored in the sys.sysobjvalues base table. As a final example, here’s how you’d retrieve a list of user stored procedures with their source code, without using neither object_definition nor sys.sql_modules:</p>

<pre lang="tsql" escaped="true">select
	p.name,
	cast(v.imageval as varchar(MAX))
from
	sys.procedures p
inner join
	sys.sysobjvalues v on p.object_id = v.objid</pre>

<div class="imgwrapper"><div><a href="http://improve.dk/wp-content/uploads/2012/08/image_34.png"><img class="alignnone size-full wp-image-2273" alt="image_34" src="http://improve.dk/wp-content/uploads/2012/08/image_34.png" width="500" height="69" /></a></div></div>

<p>Want to see more stuff like this? Don't miss my <a href="http://improve.dk/archive/2012/07/18/presenting-at-sqlsaturday-162-in-cambridge.aspx" target="_blank">full-day precon at SQL Saturday #162 in Cambridge, UK</a> (Friday, September 7th), or my <a href="http://improve.dk/archive/2012/08/26/presenting-at-bleeding-edge-in-slovenia.aspx" target="_blank">Revealing the Magic session at Bleeding Edge 2012</a> in Laško, Slovenia (October 23-24th)!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1411</wp:post_id>
		<wp:post_date>2012-08-27 03:18:52</wp:post_date>
		<wp:post_date_gmt>2012-08-27 01:18:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>where-does-sql-server-store-the-source-for-stored-procedures</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dmv"><![CDATA[DMV]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="stored-procedures"><![CDATA[Stored procedures]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Where Does SQL Server Store the Source for Stored Procedures?]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1166</wp:comment_id>
			<wp:comment_author><![CDATA[Arvind Ravish]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-10-08 14:47:31</wp:comment_date>
			<wp:comment_date_gmt>2012-10-08 14:47:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just amazing display of expertise!!! excellent.<br /><br />Thank for this article]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1167</wp:comment_id>
			<wp:comment_author><![CDATA[Dattatrey Sindol (Datta)]]></wp:comment_author>
			<wp:comment_author_email>dattatreysindol@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://dattatreysindol.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-04 06:32:55</wp:comment_date>
			<wp:comment_date_gmt>2012-09-04 06:32:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent article!!!<br />Very clearly and neatly tracked the underlying system table holding the actual SP definition.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1168</wp:comment_id>
			<wp:comment_author><![CDATA[Bharath]]></wp:comment_author>
			<wp:comment_author_email>bharathkumar.pammiramesh@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-09-04 06:49:20</wp:comment_date>
			<wp:comment_date_gmt>2012-09-04 06:49:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice article to understand where the sp's reside.<br />]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79269</wp:comment_id>
			<wp:comment_author><![CDATA[Ajay]]></wp:comment_author>
			<wp:comment_author_email>garga1@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>64.245.52.2</wp:comment_author_IP>
			<wp:comment_date>2013-08-02 22:19:18</wp:comment_date>
			<wp:comment_date_gmt>2013-08-02 20:19:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good work hunting it down. But how does it help? You need DAC to use this. I can simply lookup the code in sys.sql_modules. We have a monthly process which creates a new table and I have a job setup which alters a view definition automatically every time it detects a new table to be queried. I use sys.sql_modules and it has been working nice for the past 5 years.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375474758.7071650028228759765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39708</wp:comment_id>
			<wp:comment_author><![CDATA[Ash]]></wp:comment_author>
			<wp:comment_author_email>ash.c3po@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>65.51.7.254</wp:comment_author_IP>
			<wp:comment_date>2013-05-15 15:01:36</wp:comment_date>
			<wp:comment_date_gmt>2013-05-15 13:01:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good find, but Microsoft must have changed the internal storage in sql server 2008.  The table, sys.sysobjvalues does not exist.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368622896.294106960296630859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39713</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>5.179.93.132</wp:comment_author_IP>
			<wp:comment_date>2013-05-15 15:04:20</wp:comment_date>
			<wp:comment_date_gmt>2013-05-15 13:04:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Ash
According to this link, sys.sysobjvalues was present in 2005 as well: http://msdn.microsoft.com/en-us/library/ms179503(v=sql.90).aspx

Make sure you're connected using the DAC, otherwise SQL Server will tell you the object doesn't exist.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1368623060.7007310390472412109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79829</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-08-04 00:03:15</wp:comment_date>
			<wp:comment_date_gmt>2013-08-03 22:03:15</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[@Ajay
Thanks! While sys.sql_modules definitely is way simpler for querying, it won't work for my purposes. In OrcaMDF I'm parsing raw .MDF files without the help of SQL Server, and since sys.sql_modules is a view, it's not persisted on disk anywhere. As such, I need to get the source from the raw base table.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1375567395.1507999897003173828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Presenting at Bleeding Edge in Slovenia</title>
		<link>http://improve.dk/presenting-at-bleeding-edge-in-slovenia/</link>
		<pubDate>Sun, 26 Aug 2012 16:04:50 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2012/08/26/presenting-at-bleeding-edge-in-slovenia.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I’ve been to Slovenia many times, though only recently in a professional context, as I presented at <a href="http://improve.dk/archive/2012/06/01/2012-nt-konferenca-slides-demos.aspx" target="_blank">NT Konferenca earlier this year</a>. Several times, and from multiple people, I’ve heard about a local conference named Bleeding Edge, and how it was put together with nothing but level 400+ content with top quality speakers.</p>

<p>This summer, I happened to drop by Ljubljana to visit some friends of mine, as I was in the area on vacation. At some point in the evening, the talk turned to Bleeding Edge again, and before I knew it, <a href="http://weblogs.sqlteam.com/mladenp/default.aspx" target="_blank">Mladen Prajdić</a> said he’d introduce me to one of the organizers, <a href="http://milambda.blogspot.dk/" target="_blank">Matija Lah</a>.</p>

<p>Today, I’m excited to announce that I’ll be presenting my <a href="http://www.bleedingedge.si/Conference/Predavanja#rasmussen" target="_blank">Revealing the Magic</a> session at <a href="http://www.bleedingedge.si/Conference" target="_blank">Bleeding Edge 2012</a> on the 23-24th of October in Laško, Slovenia.</p>

<p>I’ve presented the session before at other venues, and this one will follow the usual fast and furious format. There are 10 hours of content compressed into just one hour. I will be showing the latest <a href="https://github.com/improvedk/OrcaMDF" target="_blank">OrcaMDF</a> bits during the session and my usual warning goes: This session is not meant to teach as much as it’s meant to inspire you. Inspire you to realize how simple SQL Server really is at its core, once you master the immediate complexity. For a full description of the session, I recommend you go to the <a href="http://www.bleedingedge.si/Conference/Predavanja#rasmussen" target="_blank">Bleeding Edge site</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1412</wp:post_id>
		<wp:post_date>2012-08-26 18:04:50</wp:post_date>
		<wp:post_date_gmt>2012-08-26 16:04:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-at-bleeding-edge-in-slovenia</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bleeding-edge"><![CDATA[Bleeding Edge]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>And Thus I Lost My Introduction</title>
		<link>http://improve.dk/and-thus-i-lost-my-introduction/</link>
		<pubDate>Tue, 01 Jan 2013 19:20:28 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2013/01/01/and-thus-i-lost-my-introduction.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Seeing as most of my presentations are rather technical, I like to start by pointing out the fact that I have no finished higher education (though in progress), no major certifications or recognitions/awards. This leaves a perfect opportunity for me to explain, from the ground up, why I still feel qualified to be standing in front of the audience.</p>

<p>Today I can no longer use that introduction, as I’ve been awarded as a Microsoft MVP (SQL Server) for 2013. I’m honored to receive the award, but mostly, I’m thankful to my friends in the SQL Family.</p>

<p>The last couple of years have been busy, 2012 definitely taking the cake, by my standards. Through my SQL Server engagement I’ve made countless of friends across the world - The Netherlands, Slovenia, Denmark, Germany, Austria, Sweden, all over the US, South Africa, UK, and many more. I remember how my parents worried about how you couldn’t make friends through the computer… While generally being right, on this point, they were not.</p>

<p>As 2012 neared its end, I also promised myself that I would slow down a tad in 2013. I will still try to keep that promise. I simply cannot afford to travel around as much as I did last year, and I really want to trade just a bit of conference travel for pure leisure travel time. However, this doesn’t mean I’ll go into hibernation for the duration of 2012. Currently I’m scheduled to be presenting at the <a href="http://warmcrocconf.net/" target="_blank">Warm Crocodile</a> conference in Copenhagen on January 17th and I know I’ll do my utmost to attend the PASS Summit this year, having missed it in 2012. What else 2013 will bring, time will tell :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1413</wp:post_id>
		<wp:post_date>2013-01-01 19:20:28</wp:post_date>
		<wp:post_date_gmt>2013-01-01 19:20:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>and-thus-i-lost-my-introduction</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="misc"><![CDATA[Misc]]></category>
		<category domain="post_tag" nicename="mvp"><![CDATA[MVP]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1190</wp:comment_id>
			<wp:comment_author><![CDATA[Ewald Cress]]></wp:comment_author>
			<wp:comment_author_email>ewaldcress@rocketmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.167.72.33</wp:comment_author_IP>
			<wp:comment_date>2013-02-18 22:02:18</wp:comment_date>
			<wp:comment_date_gmt>2013-02-18 21:02:18</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bit late in catching up, but wow, congratulations on the MVP! You have certainly done your bit to deserve it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361221338.4740359783172607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Top X SQL Server Developer Mistakes</title>
		<link>http://improve.dk/top-x-sql-server-developer-mistakes/</link>
		<pubDate>Thu, 17 Jan 2013 21:05:42 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/archive/2013/01/17/top-x-sql-server-developer-mistakes.aspx</guid>
		<description></description>
		<content:encoded><![CDATA[<p>It's been a long day, and I'm finally on my way home from Copenhagen to Aarhus. Unfortunately I wasn't able to attend the first day of the Warm Crocodile conference yesterday. Thankfully I was able to attend today, and even better, I got a chance to present my "Top X SQL Server Developer Mistakes" session today, and I'd like to thank everybody who showed up and helped fill the room to its limit. I got a lot of excellent questions during, as well as after, the session. If I missed yours, please do <a href="mailto:mark@improve.dk">get in touch</a>.</p>

<p>Both slides, demos and source samples are available on Github:<br />
<a href="https://github.com/improvedk/Presentation-TopXSQLServerDeveloperMIstakes" target="_blank">https://github.com/improvedk/Presentation-TopXSQLServerDeveloperMIstakes</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1414</wp:post_id>
		<wp:post_date>2013-01-17 22:05:42</wp:post_date>
		<wp:post_date_gmt>2013-01-17 21:05:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>top-x-sql-server-developer-mistakes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="warm-crocodile"><![CDATA[Warm Crocodile]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SQL Server developer mistakes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Blog Revamp</title>
		<link>http://improve.dk/blog-revamp/</link>
		<pubDate>Wed, 20 Feb 2013 10:13:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3139</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having been at it for almost 11 years, I've been through a number of blog revamps through the time. And here we are, once again.</p>

<p><a href="http://web.archive.org/web/20020929133654/http://www.improve.dk/">I first launched the blog back in 2002</a>, though it was in Danish back then. In 2006 I decided to start over, removed all my Danish content and began blogging in English - at that time, I wrote my own blog engine in a couple of days on a couch in Henderson, Nevada, anxiously waiting to turn 21 so I could participate in the World Series of Poker.</a></p>

<p>Back in 2011 I chose to migrate all my content onto <a href="http://subtextproject.com/">Subtext</a>. What I failed to notice was that the project was pretty much dead, so it was a migration doomed to be still born. It did however allow me access to <a href="http://en.wikipedia.org/wiki/Windows_Live_Writer">Windows Live Writer</a> which served its purpose - it got me blogging again due to its simplicity in use. However, I quickly started to struggle with Subtext as templating was beyond difficult and I had to resort to ugly hacks to make it work the best I could.</p>

<div class='imgwrapper right'><div><a href="http://improve.dk/wp-content/uploads/2013/02/wp-blue-640x9601.png"><img src="http://improve.dk/wp-content/uploads/2013/02/wp-blue-640x9601-133x200.png" alt="wp-blue-640x960" width="133" height="200" class="alignnone size-small wp-image-3151" /></a></div></div>

<p>And so it was time for yet another revamp, this time, hopefully the last. Converting everything into Wordpress ought to be a simple task, if it wasn't for the fact that I had almost 250 posts and 700 comments. Most of them stemming from my homebrewed system, later haphazardly migrated to Subtext, and now lying before Wordpress. I had to write a custom exporter to get most of my content from Subtext into the <a href="http://ipggi.wordpress.com/2011/03/16/the-wordpress-extended-rss-wxr-exportimport-xml-document-format-decoded-and-explained/">Wordpress WXR format</a>. Dealing with attachments, encoding and comments was a major pain. Once I had everything into Wordpress, I had to go through each and every post and manually format the contents - having seven years of legacy left little to no structure, making it impossible to style.</p>

<p>At this point, all I needed to do was to find a good theme and I was up and running. Unfortunately I tend to be quite picky, so I couldn't find anything I really liked. In the end, I ended up writing my own theme, <a href="https://github.com/improvedk/improve.dk">which I've just published to Github</a>. My main priority has been to create a very simplistic theme that worked great across devices, while allowing me to post easily readable code snippets. If you have any suggestions for improvements, I'd love to hear them!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3139</wp:post_id>
		<wp:post_date>2013-02-20 11:13:45</wp:post_date>
		<wp:post_date_gmt>2013-02-20 10:13:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog-revamp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="blog"><![CDATA[Blog]]></category>
		<category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
		<category domain="category" nicename="life"><![CDATA[Life]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="subtext"><![CDATA[Subtext]]></category>
		<category domain="post_tag" nicename="theme"><![CDATA[Theme]]></category>
		<category domain="post_tag" nicename="windows-live-writer"><![CDATA[Windows Live Writer]]></category>
		<category domain="post_tag" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="post_tag" nicename="wxr"><![CDATA[WXR]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1540</wp:comment_id>
			<wp:comment_author><![CDATA[John Sansom]]></wp:comment_author>
			<wp:comment_author_email>john@johnsansom.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.johnsansom.com</wp:comment_author_url>
			<wp:comment_author_IP>90.207.206.198</wp:comment_author_IP>
			<wp:comment_date>2013-02-21 19:32:56</wp:comment_date>
			<wp:comment_date_gmt>2013-02-21 18:32:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic effort producing your own theme, I think it looks great!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1361471576.0578510761260986328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SQLSaturday #196 - Presenting a Precon</title>
		<link>http://improve.dk/sqlsaturday-196-presenting-a-precon/</link>
		<pubDate>Thu, 21 Feb 2013 10:11:51 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3159</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Seeing SQLSaturday events sprawling up all over the world makes me all warm and fuzzy inside. Long have I been considering whether one might happen in Denmark, but to be honest, I didn't think the audience would be big enough. I'm biased though as I've mainly attended events outside of Denmark, and thus most of my acquaintances have been non-Danish. But lo and behold, Régis Baccaro just announced that <a href="http://www.sqlsaturday.com/196/eventhome.aspx">SQLSaturday #196</a> now has <a href="https://twitter.com/regbac/status/304320528095793154">101 registered attendees</a>! And best of all, it's held in Copenhagen on the 20th of April.</p>

<div class='imgwrapper right'><div><a href="http://improve.dk/wp-content/uploads/2013/02/logo.png"><img src="http://improve.dk/wp-content/uploads/2013/02/logo.png" alt="logo" width="236" height="115" class="alignnone size-full wp-image-3164" /></a></div></div>

<p>Having just about 100 people attend my <a href="http://warmcrocconf.net/Marksr.aspx">Top X SQL Server Developer Mistakes session at Warm Crocodile</a> recently made me realize just how popular SQL Server really is. Nosql might be the hype, but when it comes to business, quite a lot of developers are "stuck" with SQL Server on a daily basis. For the same reason, I absolutely cannot recommend going to SQLSaturday #196 enough! It's free, it's an excellent networking opportunity and it's sure to be full of great speakers and content. Go ahead - <a href="http://www.sqlsaturday.com/196/register.aspx">register here</a>!</p>

<div class='imgwrapper right'><div><a href="http://improve.dk/wp-content/uploads/2013/02/392531_496414643720736_540150277_n.jpg" title="Presenting the precon at SQLSaturday #162 in Cambridge"><img src="http://improve.dk/wp-content/uploads/2013/02/392531_496414643720736_540150277_n-250x166.jpg" alt="392531_496414643720736_540150277_n" width="250" height="166" class="alignnone size-small wp-image-3168" /></a></div></div>

<p>I'll have the pleasure and honor of presenting my <a href="http://sqlsat196precon.eventbrite.com/">A Deep Dive Into the Depths of the SQL Server Storage Engine and MDF File Format</a> precon on the 19th of April, the day before the SQLSaturday event itself. It's not the first time I'm presenting this precon, in fact, this'll be my fifth time. This means I've now had a number of chances to test my content and optimize the format to ensure you get maximum value out of the day. If you're planning on attending and have any special requests or questions regarding the content, please do let me know in the comments here!</p>

<p>If storage internals isn't your thing, there are two other top notch presenters - <a href="http://www.jenstirrup.com/">Jen Stirrup</a> and <a href="http://itknowledgeexchange.techtarget.com/sql-server/">Denny Cherry</a>. Jen will be presenting a <a href="http://sqlsat196precon.eventbrite.com/">Data Visualisation Deep-Dive using SQL Server 2012</a> while Denny will present on <a href="http://sqlsat196precon.eventbrite.com/">SQL Server 2012 in a Highly Available World</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3159</wp:post_id>
		<wp:post_date>2013-02-21 11:11:51</wp:post_date>
		<wp:post_date_gmt>2013-02-21 10:11:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sqlsaturday-196-presenting-a-precon</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="denmark"><![CDATA[Denmark]]></category>
		<category domain="post_tag" nicename="precon"><![CDATA[Precon]]></category>
		<category domain="post_tag" nicename="presenting"><![CDATA[Presenting]]></category>
		<category domain="post_tag" nicename="sqlsaturday"><![CDATA[SQLSaturday]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Native Chrome Flash Player Disabled by Itself All of a Sudden</title>
		<link>http://improve.dk/native-chrome-flash-player-disabled-by-itself/</link>
		<pubDate>Wed, 27 Feb 2013 14:52:25 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3178</guid>
		<description></description>
		<content:encoded><![CDATA[<p>At my job we've got a product that relies heavily on Flash. The last couple of days I've had a number of users complain that, all of a sudden, they couldn't view Flash content any more. Common for all of them were their browser - Chrome. It would seem that, somehow, the native Chrome Flash player got disabled by itself all of a sudden.</p>

<p>What's especially unusual about this is that Chrome has a built-in Flash player, so if anyone, Chrome users should be able to view Flash content. Digging deeper I found that the built-in Flash player extension had been disabled. To check if that's the case, see here:</p>

<pre lang="tsql">Chrome Settings => Show advanced settings... => Privacy => Content settings... => Plug-ins => Disable individual plug-ins...</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/02/Flash.png"><img src="http://improve.dk/wp-content/uploads/2013/02/Flash.png" alt="Flash" width="545" height="255" class="alignnone size-full wp-image-3181" /></a></div></div>

<p>By just clicking "Enable", everything is working again. But how did it get disabled? This is such a convoluted place to find that I know the users haven't done so themselves. Looking at Twitter, it seems we're not alone in seeing this:</p>

https://twitter.com/AnandaWoW/status/306751670258388992

https://twitter.com/RachofSuburbia/status/306426446438617088

https://twitter.com/linnysvault/status/306420799550660608

https://twitter.com/Astracius/status/306351364710219776

https://twitter.com/junctionette/status/306230350131130370

https://twitter.com/envyonthetoast/status/306210978201219073

<p>... I think you get the picture. It seems that all of our users had just had their Flash player auto update itself. I'm wondering, could the Internet Explorer Flash plugin perhaps updated itself and, by mistake, disabled the Chrome plugin? If the built-in Chrome Flash player is disabled, Chrome will try to use the regular Flash plugin. However, the Internet Explorer version won't work in Chrome, so that won't work.</p>

<p>Anyone else experienced this? Any tips on what's causing it? The fix is simple, but I'd really like to understand what's causing this, as well as knowing how widespread the issue is.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3178</wp:post_id>
		<wp:post_date>2013-02-27 15:52:25</wp:post_date>
		<wp:post_date_gmt>2013-02-27 14:52:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>native-chrome-flash-player-disabled-by-itself</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="chrome"><![CDATA[Chrome]]></category>
		<category domain="post_tag" nicename="flash"><![CDATA[Flash]]></category>
		<category domain="post_tag" nicename="internet-explorer"><![CDATA[Internet Explorer]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="plugin"><![CDATA[Plugin]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_3ec504316ee06748ca5904182f6ea995</wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" width="500" lang="da"><p>but sorted it out :3 stupid chrome had adobe flash player listed as 'disabled' -.- which is stupid cause flash player runs everything D:</p>&mdash; BazingaofSuburbia (@RachofSuburbia) <a href="https://twitter.com/RachofSuburbia/status/306426446438617088">26. feb. 2013</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0e0e58dddba41ff2cad335d7739f708c</wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" width="500" lang="da"><p>I wonder why my Chrome Flash Player plugin suddenly disabled itself whilst I was listening to the radio; very odd. Enabled &amp; all seems fine.</p>&mdash; Gill (@AnandaWoW) <a href="https://twitter.com/AnandaWoW/status/306751670258388992">27. feb. 2013</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e67f87346bfbe0af1efd2c5f3ec249d0</wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" width="500" lang="da"><p>Who the fuck went on the computer and disabled Flash on Google Chrome? Why would someone do that? That was annoying.</p>&mdash; Nathan. (@envyonthetoast) <a href="https://twitter.com/envyonthetoast/status/306210978201219073">26. feb. 2013</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_d896682e54b43eb90ef93d98b9050773</wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" width="500" lang="da"><p>@<a href="https://twitter.com/kevinmenzel">kevinmenzel</a> nah, just realized flash somehow got disabled in google chrome. but thank you</p>&mdash; junctionette (@junctionette) <a href="https://twitter.com/junctionette/status/306230350131130370">26. feb. 2013</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_0712b354a68cd0fe2292996336ac9eee</wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" width="500" lang="da"><p>@<a href="https://twitter.com/astracius">astracius</a> And all sorted thanks to Chrome being awesome (no idea how Flash was disabled though).</p>&mdash; David Wilson (@Astracius) <a href="https://twitter.com/Astracius/status/306351364710219776">26. feb. 2013</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_a7170676b648d24fb87929e37bd74bac</wp:meta_key>
			<wp:meta_value><![CDATA[<blockquote class="twitter-tweet" width="500" lang="da"><p>Crisis averted. Turns out the flash player in Chrome had been disabled. Video watching can now commence :)</p>&mdash; Lin (@linnysvault) <a href="https://twitter.com/linnysvault/status/306420799550660608">26. feb. 2013</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[While Flash usually works great in Chrome, it would seem that the native Chrome flash player disabled itself all of a sudden.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Native Chrome Flash Player Disabled by Itself All of a Sudden]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2467</wp:comment_id>
			<wp:comment_author><![CDATA[David Yuan]]></wp:comment_author>
			<wp:comment_author_email>dyyuan@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>38.112.59.2</wp:comment_author_IP>
			<wp:comment_date>2013-02-28 17:35:04</wp:comment_date>
			<wp:comment_date_gmt>2013-02-28 16:35:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[yep, saw the same a day ago, just for some random users.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362069304.7128880023956298828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2475</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>80.167.72.33</wp:comment_author_IP>
			<wp:comment_date>2013-02-28 18:05:39</wp:comment_date>
			<wp:comment_date_gmt>2013-02-28 17:05:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Did you by any chance notice if the users had updated their Flash installs recently?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362071139.7618739604949951171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2612</wp:comment_id>
			<wp:comment_author><![CDATA[foo]]></wp:comment_author>
			<wp:comment_author_email>foo@notmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.108.73.85</wp:comment_author_IP>
			<wp:comment_date>2013-03-01 12:54:57</wp:comment_date>
			<wp:comment_date_gmt>2013-03-01 11:54:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[happend to me too]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362138897.315032958984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>2741</wp:comment_id>
			<wp:comment_author><![CDATA[daves]]></wp:comment_author>
			<wp:comment_author_email>info@daylight-design.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>86.0.144.67</wp:comment_author_IP>
			<wp:comment_date>2013-03-02 11:58:29</wp:comment_date>
			<wp:comment_date_gmt>2013-03-02 10:58:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My Chrome vs of Flash went belly up about a week ago, and it took me a while to remember It was about the tine I tried to update Adobe AIR (to try to get BBC iPlayer Desktop to run - with no success). At least got Flash back.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1362221909.924716949462890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>117191</wp:comment_id>
			<wp:comment_author><![CDATA[Nita]]></wp:comment_author>
			<wp:comment_author_email>blog.nita@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://palmistryforyou.com/</wp:comment_author_url>
			<wp:comment_author_IP>120.61.15.254</wp:comment_author_IP>
			<wp:comment_date>2013-09-19 05:58:09</wp:comment_date>
			<wp:comment_date_gmt>2013-09-19 03:58:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This happened to me. Took me awhile to figure out why I couldn't flash content anymore. Easy fix, but still annoying.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379563089.4912550449371337890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>117192</wp:comment_id>
			<wp:comment_author><![CDATA[Nita]]></wp:comment_author>
			<wp:comment_author_email>blog.nita@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://palmistryforyou.com/</wp:comment_author_url>
			<wp:comment_author_IP>120.61.15.254</wp:comment_author_IP>
			<wp:comment_date>2013-09-19 05:58:51</wp:comment_date>
			<wp:comment_date_gmt>2013-09-19 03:58:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry, typo. I meant "why I couldn't view flash content anymore."]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1379563131.5377089977264404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Partial DNS Forwarding Using Individual Windows DNS Zones</title>
		<link>http://improve.dk/partial-dns-forwarding-using-individual-windows-dns-zones/</link>
		<pubDate>Tue, 21 May 2013 13:52:50 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3205</guid>
		<description></description>
		<content:encoded><![CDATA[<p>At our office, all machines are using a local Windows DNS server for their outgoing DNS queries. This allows us to make internal zones like .ipaperlan that points to all of our internal systems, while setting up the DNS server to forward all unknown queries to Google DNS. One feature I'm missing in the standard Windows DNS server is the option to partially forward individual zones. However, there is a workaround that will allow you to setup partial DNS forwarding using individual Windows DNS zones.</p>

<h2>The Scenario</h2>

<p>Imagine you have a domain <i>improve.dk</i> that already has a number of public DNS records like the following.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/Capture.png"><img src="http://improve.dk/wp-content/uploads/2013/03/Capture.png" alt="Capture" width="730" height="85" class="alignnone size-full wp-image-3207" /></a></div></div>

</p>In this case all I want to do is to add a record on our internal network, <i>jira.improve.dk</i>. As this record should only be made available internally, we can't just add it to the public DNS records for the domain.</p>

<p>I could make a new DNS zone for the improve.dk domain in our local DNS server, but that would result in all DNS queries for improve.dk being answered by our local DNS server, rather than being forwarded. As long as I recreate all public DNS records in our local DNS server, this would work fine, but it's not a viable solution as I'd now have to keep the two DNS setups in sync manually.</p>

<h2>The Solution</h2>

<p>Instead of creating a zone for the whole improve.dk domain, you can make a zone specifically for just the record you need to add. First right click "Forward Lookup Zones" and select "New Zone..." and then follow these steps (pretty much all defaults):</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/1.png"><img src="http://improve.dk/wp-content/uploads/2013/03/1.png" alt="1" width="500" height="381" class="alignnone size-full wp-image-3208" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/2.png"><img src="http://improve.dk/wp-content/uploads/2013/03/2.png" alt="2" width="502" height="384" class="alignnone size-full wp-image-3209" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/3.png"><img src="http://improve.dk/wp-content/uploads/2013/03/3.png" alt="3" width="496" height="381" class="alignnone size-full wp-image-3210" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/4.png"><img src="http://improve.dk/wp-content/uploads/2013/03/4.png" alt="4" width="499" height="380" class="alignnone size-full wp-image-3211" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/5.png"><img src="http://improve.dk/wp-content/uploads/2013/03/5.png" alt="5" width="504" height="385" class="alignnone size-full wp-image-3212" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/6.png"><img src="http://improve.dk/wp-content/uploads/2013/03/6.png" alt="6" width="496" height="384" class="alignnone size-full wp-image-3213" /></a></div></div>

<p>Now that the zone has been created, simply right click it and choose "New Host (A or AAAA)...". In the dialog, leave the Name blank as that'll affect the record itself, while entering the desired IP like so:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/6_b.png"><img src="http://improve.dk/wp-content/uploads/2013/03/6_b.png" alt="6_b" width="293" height="203" class="alignnone size-full wp-image-3214" /></a></div></div>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/03/7.png"><img src="http://improve.dk/wp-content/uploads/2013/03/7.png" alt="7" width="340" height="346" class="alignnone size-full wp-image-3215" /></a></div></div>

<p>And just like that, DNS lookups for jira.improve.dk will now be answered locally while all other requests will be forwarded to whatever DNS server is set up as the forwarding server.</p>

<p><b>One word of warning</b> - You might not want to do this on Active Directory domain servers as they're somewhat more finicky about their DNS setup. I'm honestly not aware of what complications might arise, so I'd advice you to be careful or perhaps find another solution.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3205</wp:post_id>
		<wp:post_date>2013-05-21 15:52:50</wp:post_date>
		<wp:post_date_gmt>2013-05-21 13:52:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>partial-dns-forwarding-using-individual-windows-dns-zones</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="dns"><![CDATA[DNS]]></category>
		<category domain="post_tag" nicename="forwarding"><![CDATA[Forwarding]]></category>
		<category domain="category" nicename="windows"><![CDATA[Windows]]></category>
		<category domain="post_tag" nicename="windows"><![CDATA[Windows]]></category>
		<category domain="post_tag" nicename="zone"><![CDATA[Zone]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Running your own Windows DNS server? In this post I'll show how to setup partial DNS forwarding using individual Windows DNS zones.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Partial DNS Forwarding Using Individual Windows DNS Zones]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[83]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>120570</wp:comment_id>
			<wp:comment_author><![CDATA[Tribunus]]></wp:comment_author>
			<wp:comment_author_email>tribunus@xs4all.nl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.97.129.154</wp:comment_author_IP>
			<wp:comment_date>2013-09-24 12:46:43</wp:comment_date>
			<wp:comment_date_gmt>2013-09-24 10:46:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can confirm that this also works on Active Directory 2008 (at least, our setup)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1380019604.0223610401153564453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>164804</wp:comment_id>
			<wp:comment_author><![CDATA[M. Mayer]]></wp:comment_author>
			<wp:comment_author_email>michael.mayer@m2-i.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.8.244.209</wp:comment_author_IP>
			<wp:comment_date>2014-01-29 19:38:29</wp:comment_date>
			<wp:comment_date_gmt>2014-01-29 18:38:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Perfect solution, thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391020709.854012012481689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166004</wp:comment_id>
			<wp:comment_author><![CDATA[J&amp;B]]></wp:comment_author>
			<wp:comment_author_email>jordi@bartrina.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.bartrina.net</wp:comment_author_url>
			<wp:comment_author_IP>81.61.178.75</wp:comment_author_IP>
			<wp:comment_date>2014-02-26 16:32:37</wp:comment_date>
			<wp:comment_date_gmt>2014-02-26 15:32:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great! entire weekend with this and now seems easy. Thx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57375</wp:comment_id>
			<wp:comment_author><![CDATA[Niels]]></wp:comment_author>
			<wp:comment_author_email>info@hollatz.nl</wp:comment_author_email>
			<wp:comment_author_url>http://www.crystal-networks.com</wp:comment_author_url>
			<wp:comment_author_IP>81.28.92.226</wp:comment_author_IP>
			<wp:comment_date>2013-06-18 14:15:45</wp:comment_date>
			<wp:comment_date_gmt>2013-06-18 12:15:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for posting this solution,

Just what i needed :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1371557745.5845530033111572265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Debugging in Production Part 1 - Analyzing 100% CPU Usage Using Windbg</title>
		<link>http://improve.dk/debugging-in-production-part-1-analyzing-100-cpu-usage-using-windbg/</link>
		<pubDate>Mon, 08 Apr 2013 09:24:09 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3222</guid>
		<description></description>
		<content:encoded><![CDATA[<p>This is the story of how a simple oversight resulted in a tough to catch bug. As is often the case, it worked on my machine and only manifested itself in production on a live site. In this series we will look at analyzing 100% CPU usage using Windbg.</p>


<h2>The Symptom</h2>

<p>Some HTTP requests were being rejected by one of our servers with status 503 indicating that the request queue limit had been reached. Looking at the CPU usage, it was clear why this was happening.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/CPU-Usage.png"><img src="http://improve.dk/wp-content/uploads/2013/04/CPU-Usage.png" alt="CPU Usage" width="801" height="222" class="alignnone size-full wp-image-3223" /></a></div></div>

<p>Initially I <i>fixed</i> the issue by issuing an iisreset, clearing the queue and getting back to normal. But when this started occurring on multiple servers at random times, I knew there was something odd going on.</p>


<h2>Isolating the Server and Creating a Dump</h2>

<p>To analyze what's happening, I needed to debug the process on the server while it was going on. So I sat around and waited for the next server to act up, and sure enough, within a couple of hours another one of our servers seemed to be stuck at 100% CPU. Immediately I pulled it out of our load balancers so it wasn't being served any new requests, allowing me to do my work without causing trouble for the end users.</p>

<p>In server 2008 it's quite easy to create a dump file. Simply fire up the task manager, right click the process and choose "Create Dump File".</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Task-Manager.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Task-Manager.png" alt="Task Manager" width="666" height="520" class="alignnone size-full wp-image-3225" /></a></div></div>

<p>Do note that task manager comes in both an x64 and an x86 version. If you run the x64 version and make a dump of an x86 process, it'll still create an x64 dump, making it unusable. As such, make sure you use whatever task manager that matches the architecture of the process you want to dump. On an x64 machine (with Windows on the C: drive) you can find the x86 task manager here: C:\Windows\SysWOW64\taskmgr.exe. Note that you can't run both at the same time, so make sure to close the x64 taskmgr.exe process before starting the x86 one.</p>

<p>Once the dump has been created, a message will tell you the location of the .DMP file. This is roughly twice the size of the process at the time of the dump, so make sure you have enough space on your C: drive.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Dump.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Dump.png" alt="Dump" width="784" height="305" class="alignnone size-full wp-image-3226" /></a></div></div>


<h2>Finding the Root Cause Using Windbg</h2>

<p>Now that we have the dump, we can open it up in Windbg and look around. You'll need to have Windbg installed in the correct version (it comes in both x86 and x64 versions). While Windbg can only officially be installed as part of the whole Windows SDK, Windbg itself is xcopy deploy-able, and is <a href="http://www.windbg.org/">available for download here</a>.</p>

<p>To make things simple, I just run Windbg on the server itself. That way I won't run into issues with differing CLR versions being installed on the machine, making debugging quite difficult.</p>

<p>Once Windbg is running, press Ctrl+D and open the .DMP file.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg1.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg1.png" alt="Windbg1" width="1024" height="728" class="alignnone size-full wp-image-3229" /></a></div></div>

<p>The first command you'll want to execute is this:</p>

<pre>!loadby sos clr</pre>

<p>This loads in the <a href="http://msdn.microsoft.com/en-us/library/bb190764.aspx">Son of Strike extension</a> that contains a lot of useful methods for debugging .NET code.</p>


<h3>Identifying Runaway Threads</h3>

<p>As we seem to have a runaway code issue, let's start out by issuing the following command:</p>

<pre>!runaway</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg2.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg2.png" alt="Windbg2" width="1024" height="728" class="alignnone size-full wp-image-3231" /></a></div></div>

<p>This lists all the threads as well as the time spent executing user mode code. When dealing with a 100% CPU issue, you'll generally see  some threads chugging away all the time. In this case it's easy to see that looking at just the top four threads, we've already spent over 20 (effective) minutes executing user mode code - these threads would probably be worth investigating.</p>


<h3>Analyzing CLR Stacks</h3>

<p>Now that we've identified some of the most interesting threads, we can select them one by one like so:<p>

<pre>~Xs</pre>

<p>Switching X out with a thread number (e.g. 234, 232, 238, 259, 328, etc.) allows us to <i>select</i> the thread. Notice how the lower left corner indicates the currently selected thread:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg3.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg3.png" alt="Windbg3" width="1024" height="728" class="alignnone size-full wp-image-3234" /></a></div></div>

<p>Once selected, we can see what the thread is currently doing by executing the following command:</p>

<pre>!CLRStack</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg4.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg4.png" alt="Windbg4" width="1024" height="728" class="alignnone size-full wp-image-3235" /></a></div></div>

<p>Looking at the top frame in the call stack, it seems the thread is stuck in the BCL Dictionary.FindEntry() method:</p>

<pre lang="csharp">System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].FindEntry(Int16)</pre>

<p>Tracing back just a few more frames, this seems to be invoked from the following user function:</p>

<pre lang="csharp">iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.GetAllDescriptions()</pre>

<p>Performing the same act for the top five threads yields a rather clear unanimous picture:</p>

<pre lang="csharp">234:
System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].FindEntry(Int16)
...
iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.GetAllDescriptions(iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig)

232:
System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].Insert(Int16, System.__Canon, Boolean)
...
iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.init(iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig)

238:
System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].FindEntry(Int16)
...
iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.GetAllDescriptions(iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig)

259:
System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].FindEntry(Int16)
...
iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.GetAllDescriptions(iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig)

328:
System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].FindEntry(Int16)
...
iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.GetAllDescriptionsAsDictionary(iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig)</pre>

<p>Interestingly, all of the threads are stuck inside internal methods in the base class library Dictionary class. All of them are invoked from the user SettingDescriptionCache class, though from different methods.</p>

<p>Stay tuned for <a href="/debugging-in-production-part-2-latent-race-condition-bugs/">part 2 where we'll dive into the user code and determine what's happening</a>!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3222</wp:post_id>
		<wp:post_date>2013-04-08 11:24:09</wp:post_date>
		<wp:post_date_gmt>2013-04-08 09:24:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debugging-in-production-part-1-analyzing-100-cpu-usage-using-windbg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="cpu-usage"><![CDATA[CPU Usage]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="post_tag" nicename="dump"><![CDATA[Dump]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-2"><![CDATA[iis]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<category domain="post_tag" nicename="windbg"><![CDATA[Windbg]]></category>
		<category domain="category" nicename="windbg"><![CDATA[Windbg]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[A common debugging scenario is for the w3wp process to get stuck at 100% CPU Usage. In this post we will look at analyzing 100% CPU usage using Windbg.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Debugging in Production Part 1 - Analyzing 100% CPU Usage Using Windbg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Analyzing 100% CPU Usage Using Windbg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>161455</wp:comment_id>
			<wp:comment_author><![CDATA[Another .Net Developer]]></wp:comment_author>
			<wp:comment_author_email>biejk3@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>23.31.67.145</wp:comment_author_IP>
			<wp:comment_date>2013-12-17 19:29:47</wp:comment_date>
			<wp:comment_date_gmt>2013-12-17 18:29:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Mark,

Very useful information! This helped me immensely with a high CPU issue I was trying to resolve. In our case, it was multiple threads attempting to access an static XmlDocument object.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1387304987.7191679477691650390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Debugging in Production Part 2 - Latent Race Condition Bugs</title>
		<link>http://improve.dk/debugging-in-production-part-2-latent-race-condition-bugs/</link>
		<pubDate>Mon, 15 Apr 2013 09:31:41 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3248</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Having <a href="/debugging-in-production-part-1-analyzing-100-cpu-usage-using-windbg">analyzed the process dump in part 1</a>, let's take a look at the code we suspect of causing the issue, in particular how race condition bugs can be avoided.</p>


<h2>Looking at the User Code</h2>

<p>There were three methods in action, all of them in the SettingDescriptionCache class: GetAllDescriptions, init and GetAllDescriptionsAsDictionary. GetAllDescriptions and GetAllDescriptionsAsDictionary are for all intents and purposes identical and both implement a pattern like this:</p>

<pre lang="csharp">public static IEnumerable<SettingDescriptionContainer> GetAllDescriptions(IPartnerConfig partnerConfig)
{
	// Optimistic return. If it fails we'll populate the cache and return it.
	try
	{
		return cache[partnerConfig.PartnerID].Values;
	}
	catch (KeyNotFoundException)
	{
		init(partnerConfig);
	}

	return cache[partnerConfig.PartnerID].Values;
}</pre>

<p>Both methods access a static variable defined in the class like so:</p>

<pre lang="csharp">private static readonly Dictionary<short, Dictionary<SettingDescription, SettingDescriptionContainer>> cache =
	new Dictionary<short, Dictionary<SettingDescription, SettingDescriptionContainer>>();</pre>

<p>As this code is being called quite a lot, it's written using an optimistic pattern that assumes the cache is populated. This is faster than checking if the cache is populated beforehand, or performing a TryGet(). I've previously blogged about <a href="http://improve.dk/defending-against-the-improbable/">why you shouldn't defend against the improbable</a>.</p>


<h2>Dictionaries are Not Thread Safe</h2>

<p>Looking up the <a href="http://msdn.microsoft.com/en-us/library/dd997305.aspx">MSDN article on thread-safe collections</a>, you'll notice the following paragraph describes how the standard Dictionary collections are not thread-safe:</p>

<blockquote>The collection classes introduced in the .NET Framework 2.0 are found in the System.Collections.Generic namespace. These include List<T>, Dictionary<TKey, TValue>, and so on. These classes provide improved type safety and performance compared to the .NET Framework 1.0 classes. However, the .NET Framework 2.0 collection classes do not provide any thread synchronization; user code must provide all synchronization when items are added or removed on multiple threads concurrently.</blockquote>

<p>But is this the issue we're running into? As there are two dictionaries in action, either one of them could potentially be the culprit. If the partnerConfig.PartnerID value was the same there would be a somewhat higher chance of this really being the issue - but how can find out what PartnerID values were being passed in to the methods?


<h2>Analyzing Method Parameters Using Windbg</h2>

<p>Back in Windbg, for each of the threads we can run the !CLRStack command once again, but with the -p parameter. This doesn't just list the stack trace, but also all of the parameters for each frame.</p>

<pre lang="csharp">~232s
!CLRStack -p</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg5.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg5.png" alt="Windbg5" width="1024" height="728" class="alignnone size-full wp-image-3251" /></a></div></div>

<p>In the fifth frame, there's a value for the IPartnerConfig parameter:</p>

<pre lang="csharp">iPaper.BL.Backend.Modules.Paper.Settings.SettingDescriptionCache.GetAllDescriptions(iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig)
	PARAMETERS:
		partnerConfig (0x00000000543ac650) = 0x0000000260a7bd98</pre>

<p>The left side value is the local memory address of the pointer itself whilst the right side is the memory location where the actual PartnerConfig instance is stored. By issuing the do (dump object) command, we can inspect the value itself:</p>

<pre lang="csharp">!do 0x0000000260a7bd98</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg6.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg6.png" alt="Windbg6" width="1024" height="728" class="alignnone size-full wp-image-3252" /></a></div></div>

<p>If you look under the Name column then you'll be able to pinpoint the individual fields in the PartnerConfiguration instance. In the Value column you can see that the PartnerID field has a value of 230. Doing this for the other four threads yields the same result - all of them are trying to access the cache value belonging to the PartnerID value of 230!</p>

<p>At this point I can quite confidently say that I'm sure this is a threading issue related to the non thread-safe Dictionary usage. I would've expected hard failures like like KeyNotFoundException, NullReferenceException and so on. But apparently, under the exact right race conditions, the dictionaries may get stuck at 100% CPU usage.</p>

<p>Stay tuned for part 3 where I'll show how to use the Dictionaries in a safe way that avoids issues like these!</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3248</wp:post_id>
		<wp:post_date>2013-04-15 11:31:41</wp:post_date>
		<wp:post_date_gmt>2013-04-15 09:31:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debugging-in-production-part-2-latent-race-condition-bugs</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="dump"><![CDATA[Dump]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-2"><![CDATA[iis]]></category>
		<category domain="post_tag" nicename="locking"><![CDATA[Locking]]></category>
		<category domain="post_tag" nicename="race-condition"><![CDATA[Race condition]]></category>
		<category domain="post_tag" nicename="threading"><![CDATA[Threading]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<category domain="post_tag" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<category domain="post_tag" nicename="windbg"><![CDATA[Windbg]]></category>
		<category domain="category" nicename="windbg"><![CDATA[Windbg]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Wrong usage of the non-thread-safe Dictionary objects can cause race condition bugs. In this post we will look at how to diagnose and avoid them.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Race Condition Bugs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>165065</wp:comment_id>
			<wp:comment_author><![CDATA[Jakub]]></wp:comment_author>
			<wp:comment_author_email>kleckajakub@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.144.130.232</wp:comment_author_IP>
			<wp:comment_date>2014-02-05 23:13:21</wp:comment_date>
			<wp:comment_date_gmt>2014-02-05 22:13:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you very much for these posts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391638401.247992038726806640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Debugging in Production Part 3 - Thread-Safe Dictionaries</title>
		<link>http://improve.dk/debugging-in-production-part-3-thread-safe-dictionaries/</link>
		<pubDate>Tue, 30 Apr 2013 11:13:08 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3260</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="/debugging-in-production-part-2-latent-race-condition-bugs">In part 2 we found out that the concurrent access to a generic dictionary triggered a race condition bug</a> that caused threads to get stuck at 100% CPU usage. In this part, I'll show how easy it is to rewrite the code, using the new thread-safe dictionaries in .NET 4.0, so it's protected from race condition bugs like the one I encountered.</p>


<h2>Enter ConcurrentDictionary</h2>

<p>The problem can be solved by changing just two lines of code. Instead of using a generic Dictionary, we'll change it to a generic ConcurrentDictionary like so:</p>

<pre lang="csharp">private static readonly ConcurrentDictionary<short, ConcurrentDictionary<SettingDescription, SettingDescriptionContainer>> cache =
	new ConcurrentDictionary<short, ConcurrentDictionary<SettingDescription, SettingDescriptionContainer>>();</pre>

<p>As described by this <a href="http://msdn.microsoft.com/en-us/library/dd997369.aspx">MSDN article on adding and removing items from a ConcurrentDictionary</a>, it's fully thread-safe:</p>

<blockquote>ConcurrentDictionary<TKey, TValue> is designed for multithreaded scenarios. You do not have to use locks in your code to add or remove items from the collection.</blockquote>

<p>Performance wise ConcurrentDictionary is about 50% slower (anecdotally) than the regular Dictionary type but even if this code is run very often, that is absolutely negligible compared to making just a single database access call.</p>

<p>Besides switching the Dictionary out with a ConcurrentDictionary, we also need to modify the init function since the ConcurrentDictionary way of adding items is slightly different:</p>

<pre lang="csharp">private static object syncRoot = new object();

private static void init(IPartnerConfig partnerConfig)
{
	// We only want one inside the init method at a time
	lock (syncRoot)
	{
		if (cache.ContainsKey(partnerConfig.PartnerID))
			return;

		var dict = new ConcurrentDictionary<SettingDescription, SettingDescriptionContainer>();

		... // Populate the dict variable with data from the database

		cache.AddOrUpdate(partnerConfig.PartnerID, dict, (k, ov) => dict);
	}
}</pre>

<p>The syncRoot lock ensures that only one initialization is going on at the same time. While not necessary in regards of avoiding the race condition, this will avoid hitting the database multiple times if the init method is being called concurrently. This could be optimized in that there could be a syncRoot object per PartnerID to allow concurrently initializing the cache for each PartneriD. But, alas, I opt to keep it simple as the init method is only called once in the lifetime of the application.</p>

<p>Instead of just adding an item to the cache, we have to use the AddOrUpdate() signature that takes in the key, value and a lambda that returns a new value, in case the key already exists in the dictionary. In this case, no matter if the key exists or not, we want to set it to the new value, so the lambda just returns the same value as passed in the second parameter.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3260</wp:post_id>
		<wp:post_date>2013-04-30 13:13:08</wp:post_date>
		<wp:post_date_gmt>2013-04-30 11:13:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debugging-in-production-part-3-thread-safe-dictionaries</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="concurrentdictionary"><![CDATA[ConcurrentDictionary]]></category>
		<category domain="post_tag" nicename="dictionary"><![CDATA[Dictionary]]></category>
		<category domain="post_tag" nicename="threading"><![CDATA[Threading]]></category>
		<category domain="category" nicename="windbg"><![CDATA[Windbg]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Writing thread-safe code that uses dictionaries is easy in .NET 4.0+. In this post I will show how to correctly use the thread-safe dictionaries.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Thread-Safe Dictionaries]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>165281</wp:comment_id>
			<wp:comment_author><![CDATA[Jeremypync]]></wp:comment_author>
			<wp:comment_author_email>jeremyrewin@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://ivanchay.net/</wp:comment_author_url>
			<wp:comment_author_IP>95.28.68.214</wp:comment_author_IP>
			<wp:comment_date>2014-02-10 11:11:58</wp:comment_date>
			<wp:comment_date_gmt>2014-02-10 10:11:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[http://ivanchay.net/images/information_items_12621.jpg 
Академик, профессор, доктор технических наук, 
лауреат Государственной премии 
Никитин Альберт Николаевич: 
 
«После нашего исследования Иван-чая выяснилось , что чай содержит от 69 до71 полезных микроэлемента в зависимости от местности. Это 2/3 таблицы Менделеева. И самое главное это непревзойденный антисептик. Просто потрясающий. Аналогов в растительном мире нету. Помимо антисептических свойств он обладает свойством очищения организма от «зашлакованности». Это когда клетка не может справляться со своими функциями. При употребления чая идет очистка всего организма и в течение 2х недель при регулярном употреблении , каждый день 3-4 раза в день, то вы почувствуете как организм начинает расцветать, полнота проходит, возникает покой. После приема 2х чашек чая снимается синдром похмелья. Иван чай заваривают 3-4 раза и с каждым разом он отдает свои свойства. В чае присутствуют около 17-18 аминокислот. Вот почему на сегодняшний день пить Иван чай очень важно. Мы пытались дать технологию в течение последних 10 лет, предлагали сотрудничество ряду губернаторов в тех старых регионах , где есть возможность внедрить технологию изготовления Иван чая. И что вы думаете? Безполезно… Это никому не интересно. В Россию гонится всякая труха под видом китайского, индийского чая». 
 
Полезные лечебные свойства Иван-чая: 
 
- Оказывает профилактическое воздействие на злокачественные и доброкачественные новообразования; 
- Эффективен при заболеваниях мочеполовой системы и профилактики простатита; 
- Усиливает потенцию; 
- Рубцует язвы желудка и двенадцатиперстной кишки; 
- Повышает иммунитет и сопротивляемость различным инфекциям; 
- Благотворно влияет на иммунную и эндокринную системы; 
- Является отличным средством для профилактики кариеса; 
- Улучшает состав крови (ощелачивает кровь); 
- Укрепляет кровеносные сосуды; 
- Показан при различных формах неврозов и неврозоподобных состояниях при посттравматических стрессорных расстройствах; 
- Уменьшает интоксикацию организма, в т.ч. от радиационного загрязнения; 
- Оказывает жаропонижающее воздействие; 
- Связывает и выводит тяжелые металлы; 
- Обладает противовоспалительным действием (самое высокое белковое число из всех известных растений 1:400); 
- Снимает пищевые и алкогольные отравления; 
- Восстанавливает силы при усталости, утомлении, истощении; 
- Эффективен при камнях в печени, почках и болезнях селезенки; 
- Укрепляет корни волос; 
- Устраняет головную боль; 
- Нормализует давление 
- И просто является вкусным и лечебным чаем. 
<a href="http://vk.com/chayivan" rel="nofollow">Читать далее об Иван-чае</a> 
 
Отрывок передачи об Иван-чае "Живая Тема - Пища Богов!" 
http://www.youtube.com/watch?v=h7tHwlKdNOk]]></wp:comment_content>
			<wp:comment_approved>0</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1392027118.6618430614471435546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>How to Identify Which Request Caused a Runaway Thread, Using Windbg</title>
		<link>http://improve.dk/how-to-identify-which-request-caused-a-runaway-thread-using-windbg/</link>
		<pubDate>Tue, 07 May 2013 09:26:28 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3289</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When your w3wp process is stuck at 100% like, <a href="/debugging-in-production-part-1-analyzing-100-cpu-usage-using-windbg/">like when I used a non-thread-safe Dictionary concurrently</a>, you may want to identify what request the runaway thread is actually serving. Let me show you how to identify which request caused a runaway thread, using windbg.</p>

<p>First you'll want to identify the process ID (PID) of the w3wp process. In my case, that's <b>102600</b>:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Taskmgr.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Taskmgr.png" alt="Taskmgr" width="544" height="235" class="alignnone size-full wp-image-3291" /></a></div></div>

<p>Next you'll want to start up Windbg (make sure to use the correct bitness (x86 vs x64) that corresponds to the bitness of your process). Once started, press <b>F6</b> to open up the <i>Attach to Process</i> dialog. Once open, enter your process ID and click OK.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Attach-to-Process.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Attach-to-Process.png" alt="Attach to Process" width="391" height="534" class="alignnone size-full wp-image-3292" /></a></div></div>

<p>Doing so should bring up the Command window, ready for your command:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Windbg11.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Windbg11.png" alt="Windbg1" width="913" height="625" class="alignnone size-full wp-image-3293" /></a></div></div>

<p>As the first thing, start out by loading the <a href="http://msdn.microsoft.com/en-us/library/bb190764.aspx">Son of Strike</a> extension, allowing us to debug managed code.</p>

<pre lang="csharp">0:039> .loadby sos clr</pre>

<p>Then continue by running the !runaway command to get a list of runaway (basically threads using lots of CPU) threads:</p>

<pre lang="csharp">0:039> !runaway

 User Mode Time
  Thread       Time
  20:14930      0 days 0:21:44.261
  21:15204      0 days 0:21:00.878
  27:19d48      0 days 0:04:23.860
  32:18748      0 days 0:02:59.260
  31:18bcc      0 days 0:02:19.277
  30:19d80      0 days 0:01:44.083
  25:19ec0      0 days 0:01:32.446
  24:16534      0 days 0:01:31.135
  29:19a80      0 days 0:01:08.297
  23:19110      0 days 0:00:30.591
   6:19b40      0 days 0:00:00.109
  26:18a14      0 days 0:00:00.015
   0:19dcc      0 days 0:00:00.015
  39:16fa8      0 days 0:00:00.000
  ...</pre>

<p>Threads 20 & 21 seem to be the interesting ones. Let's start out by selecting thread #20 as the active thread:</p>

<pre lang="csharp">0:039> ~20s

000007fe`913a15d9 3bc5            cmp     eax,ebp</pre>

<p>Once selected, we can analyze the stack and its parameters by running the !CLRStack command with the -p parameter:</p>

<pre lang="csharp">0:020> !CLRStack -p

OS Thread Id: 0x14930 (20)
        Child SP               IP Call Site
000000000dccdb00 000007fe913a15d9 System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].FindEntry(Int16)
    PARAMETERS:
        this = <no data>
        key = <no data>

000000000dccdb50 000007fe913a14c0 System.Collections.Generic.Dictionary`2[[System.Int16, mscorlib],[System.__Canon, mscorlib]].get_Item(Int16)
    PARAMETERS:
        this = <no data>
        key = <no data>

000000000dccdb80 000007fe91421cbb iPaper.BL.Backend.Modules.Languages.LanguageCache.GetLanguageByID(Int32, iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig) [e:\iPaperCMS\BL\Backend\Modules\Languages\LanguageCache.cs @ 44]
    PARAMETERS:
        languageID (0x000000000dccdc20) = 0x0000000000000001
        partnerConfig (0x000000000dccdc28) = 0x00000000fffc3e50

000000000dccdc20 000007fe91421dfa iPaper.BL.Backend.Modules.Languages.Language.GetFontFileForLanguage(Int32, iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig) [e:\iPaperCMS\BL\Backend\Modules\Languages\Language.cs @ 37]
    PARAMETERS:
        languageID (0x000000000dccdc70) = 0x0000000000000001
        partnerConfig (0x000000000dccdc78) = 0x00000000fffc3e50

000000000dccdc70 000007fe91417400 iPaper.Web.FlexFrontend.BL.Common.CachedUrlInformation.GetFromUrlDirectoryPath(System.String, System.String, iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig) [e:\iPaperCMS\Frontend\BL\Common\CachedUrlInformation.cs @ 89]
    PARAMETERS:
        url (0x000000000dccde80) = 0x00000003fff27e30
        host (0x000000000dccde88) = 0x00000003fff29618
        partnerConfig (0x000000000dccde90) = 0x00000000fffc3e50

000000000dccde80 000007fe91417576 iPaper.Web.FlexFrontend.BL.Common.CachedUrlInformation.GetFromHttpContext(System.String, System.Web.HttpContext, iPaper.BL.Backend.Infrastructure.PartnerConfiguration.IPartnerConfig) [e:\iPaperCMS\Frontend\BL\Common\CachedUrlInformation.cs @ 122]
    PARAMETERS:
        paperPath (0x000000000dcce010) = 0x00000003fff27e30
        context (0x000000000dcce018) = 0x00000000fffa6040
        partnerConfig (0x000000000dcce020) = 0x00000000fffc3e50

000000000dcce010 000007fe91415529 iPaper.Web.FlexFrontend.BL.RequestHandler.RequestHandler.loadFrontendContext(System.String) [e:\iPaperCMS\Frontend\BL\RequestHandler\RequestHandler.cs @ 469]
    PARAMETERS:
        this (0x000000000dcce260) = 0x00000000fffa9590
        paperPath (0x000000000dcce268) = 0x00000003fff27e30

000000000dcce260 000007fe91414b73 iPaper.Web.FlexFrontend.BL.RequestHandler.RequestHandler.context_PostAcquireRequestState(System.Object, System.EventArgs) [e:\iPaperCMS\Frontend\BL\RequestHandler\RequestHandler.cs @ 95]
    PARAMETERS:
        this (0x000000000dcce5f0) = 0x00000000fffa9590
        sender (0x000000000dcce5f8) = 0x00000000fffa8a50
        e (0x000000000dcce600) = 0x00000000fffaebb0

000000000dcce5f0 000007fedb72c520 System.Web.HttpApplication+SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute()
    PARAMETERS:
        this = <no data>

000000000dcce650 000007fedb70b745 System.Web.HttpApplication.ExecuteStep(IExecutionStep, Boolean ByRef)
    PARAMETERS:
        this (0x000000000dcce6f0) = 0x00000000fffa8a50
        step (0x000000000dcce6f8) = 0x00000000fffabc28
        completedSynchronously (0x000000000dcce700) = 0x000000000dcce77a

000000000dcce6f0 000007fedb72a4e1 System.Web.HttpApplication+PipelineStepManager.ResumeSteps(System.Exception)
    PARAMETERS:
        this (0x000000000dcce7d0) = 0x00000000fffac718
        error = <no data>

000000000dcce7d0 000007fedb70b960 System.Web.HttpApplication.BeginProcessRequestNotification(System.Web.HttpContext, System.AsyncCallback)
    PARAMETERS:
        this = <no data>
        context = <no data>
        cb = <no data>

000000000dcce820 000007fedb704c8e System.Web.HttpRuntime.ProcessRequestNotificationPrivate(System.Web.Hosting.IIS7WorkerRequest, System.Web.HttpContext)
    PARAMETERS:
        this (0x000000000dcce8c0) = 0x00000000fff3fb20
        wr (0x000000000dcce8c8) = 0x00000000fffa5eb0
        context (0x000000000dcce8d0) = 0x00000000fffa6040

000000000dcce8c0 000007fedb70e771 System.Web.Hosting.PipelineRuntime.ProcessRequestNotificationHelper(IntPtr, IntPtr, IntPtr, Int32)
    PARAMETERS:
        rootedObjectsPointer = <no data>
        nativeRequestContext (0x000000000dccea58) = 0x0000000000ccccc0
        moduleData = <no data>
        flags = <no data>

000000000dccea50 000007fedb70e2c2 System.Web.Hosting.PipelineRuntime.ProcessRequestNotification(IntPtr, IntPtr, IntPtr, Int32)
    PARAMETERS:
        rootedObjectsPointer = <no data>
        nativeRequestContext = <no data>
        moduleData = <no data>
        flags = <no data>

000000000dcceaa0 000007fedbe6b461 DomainNeutralILStubClass.IL_STUB_ReversePInvoke(Int64, Int64, Int64, Int32)
    PARAMETERS:
        <no data>
        <no data>
        <no data>
        <no data>

000000000dccf298 000007fef0a9334e [InlinedCallFrame: 000000000dccf298] System.Web.Hosting.UnsafeIISMethods.MgdIndicateCompletion(IntPtr, System.Web.RequestNotificationStatus ByRef)
000000000dccf298 000007fedb7b9c4b [InlinedCallFrame: 000000000dccf298] System.Web.Hosting.UnsafeIISMethods.MgdIndicateCompletion(IntPtr, System.Web.RequestNotificationStatus ByRef)
000000000dccf270 000007fedb7b9c4b DomainNeutralILStubClass.IL_STUB_PInvoke(IntPtr, System.Web.RequestNotificationStatus ByRef)
    PARAMETERS:
        <no data>
        <no data>

000000000dccf340 000007fedb70e923 System.Web.Hosting.PipelineRuntime.ProcessRequestNotificationHelper(IntPtr, IntPtr, IntPtr, Int32)
    PARAMETERS:
        rootedObjectsPointer = <no data>
        nativeRequestContext = <no data>
        moduleData = <no data>
        flags = <no data>

000000000dccf4d0 000007fedb70e2c2 System.Web.Hosting.PipelineRuntime.ProcessRequestNotification(IntPtr, IntPtr, IntPtr, Int32)
    PARAMETERS:
        rootedObjectsPointer = <no data>
        nativeRequestContext = <no data>
        moduleData = <no data>
        flags = <no data>

000000000dccf520 000007fedbe6b461 DomainNeutralILStubClass.IL_STUB_ReversePInvoke(Int64, Int64, Int64, Int32)
    PARAMETERS:
        <no data>
        <no data>
        <no data>
        <no data>

000000000dccf768 000007fef0a935a3 [ContextTransitionFrame: 000000000dccf768]</pre>

<p>This returns the full stack with a lot of frames that we're not really interested in. What we're looking for is the first instance of an HttpContext. If we start from the bottom and work our way up, this seems to be the first time an HttpContext is present:</p>

<pre lang="csharp">000000000dcce820 000007fedb704c8e System.Web.HttpRuntime.ProcessRequestNotificationPrivate(System.Web.Hosting.IIS7WorkerRequest, System.Web.HttpContext)
    PARAMETERS:
        this (0x000000000dcce8c0) = 0x00000000fff3fb20
        wr (0x000000000dcce8c8) = 0x00000000fffa5eb0
        context (0x000000000dcce8d0) = 0x00000000fffa6040</pre>

<p>Knowing that the HttpContext contains a reference to an HttpRequest, and that HttpRequest contains the RawUrl string value, we'll start digging in. Start out by dumping the HttpContext object using the !do command:</p>

<pre lang="csharp">0:020> !do 0x00000000fffa6040

Name:        System.Web.HttpContext
MethodTable: 000007fedb896398
EEClass:     000007fedb4882e0
Size:        416(0x1a0) bytes
File:        C:\Windows\Microsoft.Net\assembly\GAC_64\System.Web\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.dll
Fields:
              MT    Field   Offset                 Type VT     Attr            Value Name
000007fedb897c80  40010a3        8 ...IHttpAsyncHandler  0 instance 0000000000000000 _asyncAppHandler
000007fedb88e618  40010a4      158         System.Int32  1 instance                0 _asyncPreloadModeFlags
000007feef9fdc30  40010a5      168       System.Boolean  1 instance                0 _asyncPreloadModeFlagsSet
000007fedb895610  40010a6       10 ...b.HttpApplication  0 instance 00000000fffa8a50 _appInstance
000007fedb897ce8  40010a7       18 ....Web.IHttpHandler  0 instance 00000003fff28c20 _handler
000007fedb898170  40010a8       20 ...m.Web.HttpRequest  0 instance 00000000fffa61f8 _request
000007fedb898550  40010a9       28 ....Web.HttpResponse  0 instance 00000000fffa6378 _response
000007fedb893cb0  40010aa       30 ...HttpServerUtility  0 instance 00000003fff27ed8 _server
000007feefa05ac0  40010ab       38 ...Collections.Stack  0 instance 0000000000000000 _traceContextStack
000007fedb8a41d8  40010ac       40 ....Web.TraceContext  0 instance 0000000000000000 _topTraceContext
000007feefa00548  40010ad       48 ...ections.Hashtable  0 instance 00000000fffab198 _items
000007feef9f85e0  40010ae       50 ...ections.ArrayList  0 instance 0000000000000000 _errors
000007feef9fc588  40010af       58     System.Exception  0 instance 0000000000000000 _tempError
...</pre>

<p>This contains a lot of fields (some of which I've snipped out). The interesting part however, is this line:</p>

<pre lang="csharp">000007fedb898170  40010a8       20 ...m.Web.HttpRequest  0 instance 00000000fffa61f8 _request</pre>

<p>This contains a pointer to the HttpRequest instance. Let's try dumping that one:</p>

<pre lang="csharp">0:020> !do 00000000fffa61f8 

Name:        System.Web.HttpRequest
MethodTable: 000007fedb898170
EEClass:     000007fedb488c00
Size:        384(0x180) bytes
File:        C:\Windows\Microsoft.Net\assembly\GAC_64\System.Web\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Web.dll
Fields:
              MT    Field   Offset                 Type VT     Attr            Value Name
000007fedb89aa30  4001150        8 ...HttpWorkerRequest  0 instance 00000000fffa5eb0 _wr
000007fedb896398  4001151       10 ...m.Web.HttpContext  0 instance 00000000fffa6040 _context
...
000007fee6e1dc48  4001165       90           System.Uri  0 instance 00000003fff29588 _url
000007fee6e1dc48  4001166       98           System.Uri  0 instance 0000000000000000 _referrer
000007fedb900718  4001167       a0 ...b.HttpInputStream  0 instance 0000000000000000 _inputStream
000007fedb8c43d0  4001168       a8 ...ClientCertificate  0 instance 0000000000000000 _clientCertificate
000007feefa07e90  4001169       b0 ...l.WindowsIdentity  0 instance 0000000000000000 _logonUserIdentity
000007fedb8d7fd0  400116a       b8 ...ng.RequestContext  0 instance 0000000000000000 _requestContext
000007feef9fc358  400116b       c0        System.String  0 instance 00000000fffa64f0 _rawUrl
000007feefa008b8  400116c       c8     System.IO.Stream  0 instance 0000000000000000 _readEntityBodyStream
000007fedb8d5ac8  400116d      160         System.Int32  1 instance                0 _readEntityBodyMode
000007fedb8bbcb0  400116e       d0 ...atedRequestValues  0 instance 00000003fff27fe8 _unvalidatedRequestValues
...</pre>

<p>Once again there are a lot of fields that we don't care about. The interesting one is this one:</p>

<pre lang="csharp">000007feef9fc358  400116b       c0        System.String  0 instance 00000000fffa64f0 _rawUrl</pre>

<p>Dumping the RawUrl property reveals the actual URL that made the request which eventually ended up causing a runaway thread:</p>

<pre lang="csharp">0:020> !do 00000000fffa64f0 

Name:        System.String
MethodTable: 000007feef9fc358
EEClass:     000007feef363720
Size:        150(0x96) bytes
File:        C:\Windows\Microsoft.Net\assembly\GAC_64\mscorlib\v4.0_4.0.0.0__b77a5c561934e089\mscorlib.dll
String:      /Catalogs/SomeClient/Uge45/Image.ashx?PageNumber=1&ImageType=Thumb
Fields:
              MT    Field   Offset                 Type VT     Attr            Value Name
000007feef9ff108  40000aa        8         System.Int32  1 instance               62 m_stringLength
000007feef9fd640  40000ab        c          System.Char  1 instance               2f m_firstChar
000007feef9fc358  40000ac       18        System.String  0   shared           static Empty
                                 >> Domain:Value  0000000001ec80e0:NotInit  0000000001f8e840:NotInit</pre>

<p>And there we go! The offending URL seems to be:</p>

<pre lang="csharp">/Catalogs/SomeClient/Uge45/Image.ashx?PageNumber=1&ImageType=Thumb</pre>

<p>If you want the complete URL, including hostname, you could dig your way into the _url field on the HttpRequest object and work your way from there. In just the same way you can dig into pretty much any object, whether it's in your code or in the IIS codebase.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3289</wp:post_id>
		<wp:post_date>2013-05-07 11:26:28</wp:post_date>
		<wp:post_date_gmt>2013-05-07 09:26:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>how-to-identify-which-request-caused-a-runaway-thread-using-windbg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="debugging"><![CDATA[Debugging]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-2"><![CDATA[iis]]></category>
		<category domain="post_tag" nicename="threading"><![CDATA[Threading]]></category>
		<category domain="post_tag" nicename="windbg"><![CDATA[Windbg]]></category>
		<category domain="category" nicename="windbg"><![CDATA[Windbg]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Is w3wp stuck at 100% CPU? In this post I will show how to identify which request caused a runaway thread, using windbg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[How to Identify Which Request Caused a Runaway Thread, Using Windbg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>87705</wp:comment_id>
			<wp:comment_author><![CDATA[Travis]]></wp:comment_author>
			<wp:comment_author_email>yates.travis@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.92.60.43</wp:comment_author_IP>
			<wp:comment_date>2013-08-14 07:04:47</wp:comment_date>
			<wp:comment_date_gmt>2013-08-14 05:04:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent post.  I had a .NET MVC application which was maxing out CPU cycles at (seemingly) random times, and I could not figure out what was causing it.  This lead me directly to my infinite loop.  Much appreciated!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1376456688.268497943878173828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Analyzing BSOD Minidump Files Using Windbg</title>
		<link>http://improve.dk/analyzing-bsod-minidump-files-using-windbg/</link>
		<pubDate>Tue, 04 Jun 2013 10:34:23 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3315</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Unfortunately, once in a while, computers fail. If you're running Windows you've probably witnessed the dreaded <a href="http://en.wikipedia.org/wiki/Blue_Screen_of_Death">Blue Screen of Death</a>, commonly referred to as a BSOD. Once the BSOD occurs, some machines will immediately restart, before you've got a chance to actually see what happened. Other times users will just report that the BSOD happened, without noting anything down about what the message actually said. In this post I'll show you how analyzing BSOD minidump files using <a href="http://en.wikipedia.org/wiki/WinDbg">Windbg</a> will enable you to find the cause of the BSOD after the fact.<p>


<h2>Enabling Dump Files</h2>

<p>By default, never Windows installs will automatically create minidump files once a BSOD occurs. Once restarted, you should be able to see a .dmp file here:</p>

<pre lang="csharp">C:\Windows\Minidump</pre>

<p>If you don't see any .dmp files there, or if the directory doesn't exist, you may have to tell Windows to create minidump files when the BSOD occurs. To do so, press the <b>Win+Break</b> keys to open up the System control panel. Now click <b>Advanced system settings</b> in the left menu. Once there, go to the <b>Advanced</b> tab and click the <b>Settings...</b> button under the <b>Startup and Recovery</b> section. Now make sure the <b>Write debugging information</b> setting is set to <b>anything but "none"</b>:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/04/Capture.png"><img src="http://improve.dk/wp-content/uploads/2013/04/Capture.png" alt="Capture" width="400" height="470" class="alignnone size-full wp-image-3316" /></a></div></div>


<h2>Analyzing BSOD Minidump Files Using Windbg</h2>

<p>Once a dump file has been created, you can analyze it using Windbg. Start by opening Windbg and pressing the <b>Ctrl+D</b> keys. Now select the .dmp file you want to analyze and click <b>Open</b>. This should yield something like this:</p>

<pre lang="csharp">
Microsoft (R) Windows Debugger Version 6.12.0002.633 AMD64
Copyright (c) Microsoft Corporation. All rights reserved.


Loading Dump File [C:\Windows\Minidump\040813-15974-01.dmp]
Mini Kernel Dump File: Only registers and stack trace are available

Symbol search path is: symsrv*symsrv.dll*c:\symbols*http://msdl.microsoft.com/download/symbols
Executable search path is: 
Windows 7 Kernel Version 7601 (Service Pack 1) MP (12 procs) Free x64
Product: WinNt, suite: TerminalServer SingleUserTS
Built by: 7601.18044.amd64fre.win7sp1_gdr.130104-1431
Machine Name:
Kernel base = 0xfffff800`0300c000 PsLoadedModuleList = 0xfffff800`03250670
Debug session time: Mon Apr  8 22:17:47.016 2013 (UTC + 2:00)
System Uptime: 0 days 1:36:19.860
Loading Kernel Symbols
...............................................................
................................................................
........................
Loading User Symbols
Loading unloaded module list
...............
*******************************************************************************
*                                                                             *
*                        Bugcheck Analysis                                    *
*                                                                             *
*******************************************************************************

Use !analyze -v to get detailed debugging information.

BugCheck FE, {4, fffffa803c3c89e0, fffffa803102e230, fffffa803e765010}

Probably caused by : FiioE17.sys ( FiioE17+1d21 )

Followup: MachineOwner</pre>

<p>Already this tells us a couple of things - your OS details, when exactly the problem occurred as well as what module probably caused the issue (FiioE17.sys in this case). Also, it tells you how to proceed:</p>

<blockquote>Use !analyze -v to get detailed debugging information.</blockquote>

<p>As suggested, let's try and run the !analyze -v command:</p>

<pre lang="csharp">11: kd> !analyze -v
*******************************************************************************
*                                                                             *
*                        Bugcheck Analysis                                    *
*                                                                             *
*******************************************************************************

BUGCODE_USB_DRIVER (fe)
USB Driver bugcheck, first parameter is USB bugcheck code.
Arguments:
Arg1: 0000000000000004, IRP_URB_DOUBLE_SUBMIT The caller has submitted an irp
	that is already pending in the USB bus driver.
Arg2: fffffa803c3c89e0, Address of IRP
Arg3: fffffa803102e230, Address of URB
Arg4: fffffa803e765010

Debugging Details:
------------------

CUSTOMER_CRASH_COUNT:  1

DEFAULT_BUCKET_ID:  VISTA_DRIVER_FAULT

BUGCHECK_STR:  0xFE

PROCESS_NAME:  audiodg.exe

CURRENT_IRQL:  2

LAST_CONTROL_TRANSFER:  from fffff88008326f4b to fffff80003081c40

STACK_TEXT:  
fffff880`0e482fd8 fffff880`08326f4b : 00000000`000000fe 00000000`00000004 fffffa80`3c3c89e0 fffffa80`3102e230 : nt!KeBugCheckEx
fffff880`0e482fe0 fffff880`0833244a : fffffa80`3ae97002 fffffa80`3b8caad0 00000000`00000000 fffffa80`3ae97050 : USBPORT!USBPORT_Core_DetectActiveUrb+0x127
fffff880`0e483030 fffff880`0833ae74 : fffffa80`3c3c89e0 fffffa80`3af7000a fffffa80`3c3c89e0 fffffa80`3102e230 : USBPORT!USBPORT_ProcessURB+0xad6
fffff880`0e4830e0 fffff880`08314af4 : 00000000`00000000 fffffa80`3af7b050 fffffa80`3e5d1720 fffffa80`3c3c89e0 : USBPORT!USBPORT_PdoInternalDeviceControlIrp+0x138
fffff880`0e483120 fffff880`00fa97a7 : fffffa80`3c3c89e0 fffffa80`31192040 fffffa80`3c3c89e0 fffffa80`3c3c89e0 : USBPORT!USBPORT_Dispatch+0x1dc
fffff880`0e483160 fffff880`00fb1789 : fffff880`00fcfb50 fffffa80`3d944ed1 fffffa80`3c3c8d38 fffffa80`3c3c8d38 : ACPI!ACPIDispatchForwardIrp+0x37
fffff880`0e483190 fffff880`00fa9a3f : fffff880`00fcfb50 fffffa80`316a7a90 fffffa80`3c3c89e0 fffffa80`3ab6c050 : ACPI!ACPIIrpDispatchDeviceControl+0x75
fffff880`0e4831c0 fffff880`088ca566 : 00000000`00000000 00000000`00000004 fffffa80`3ab6c050 fffffa80`3c2bd440 : ACPI!ACPIDispatchIrp+0x12b
fffff880`0e483240 fffff880`088fad8f : 00000000`00000000 00000000`00000000 fffffa80`3c2bd440 00000000`00000000 : usbhub!UsbhFdoUrbPdoFilter+0xde
fffff880`0e483270 fffff880`088c8fb7 : fffffa80`3c3c89e0 fffffa80`3a976ce0 fffffa80`3c3c89e0 fffffa80`3c3c89e0 : usbhub!UsbhPdoInternalDeviceControl+0x373
fffff880`0e4832c0 fffff880`00fa97a7 : fffffa80`3c3c89e0 fffff800`031b630d fffffa80`3b7be100 00000000`00000801 : usbhub!UsbhGenDispatch+0x57
fffff880`0e4832f0 fffff880`00fb1789 : fffff880`00fcfb50 00000000`00000001 fffffa80`3c393b58 fffffa80`3c3c8d38 : ACPI!ACPIDispatchForwardIrp+0x37
fffff880`0e483320 fffff880`00fa9a3f : fffff880`00fcfb50 fffffa80`316a8a90 fffffa80`3c3c89e0 fffffa80`3c393b58 : ACPI!ACPIIrpDispatchDeviceControl+0x75
fffff880`0e483350 fffff880`08c9bec4 : 00000000`00000000 fffffa80`3c326938 fffffa80`3c393b58 00000000`00000000 : ACPI!ACPIDispatchIrp+0x12b
fffff880`0e4833d0 fffff880`08c98812 : fffffa80`3c393b58 fffffa80`3c3c89e0 fffffa80`00000324 fffffa80`3c3c89e0 : usbccgp!UsbcForwardIrp+0x30
fffff880`0e483400 fffff880`08c98aba : fffffa80`3c326838 00000000`00220003 fffffa80`3c3c89e0 fffffa80`3c393b58 : usbccgp!DispatchPdoUrb+0xfa
fffff880`0e483440 fffff880`08c9672e : 00000000`0000000f fffffa80`3c393b50 fffffa80`3c393b58 fffffa80`3c3c89e0 : usbccgp!DispatchPdoInternalDeviceControl+0x17a
fffff880`0e483470 fffff880`08cb3d21 : fffffa80`3c393a00 fffffa80`3c3c8901 fffffa80`3c3c8900 00000000`00000000 : usbccgp!USBC_Dispatch+0x2de
fffff880`0e4834f0 fffffa80`3c393a00 : fffffa80`3c3c8901 fffffa80`3c3c8900 00000000`00000000 fffffa80`3c373010 : FiioE17+0x1d21
fffff880`0e4834f8 fffffa80`3c3c8901 : fffffa80`3c3c8900 00000000`00000000 fffffa80`3c373010 00000000`00000000 : 0xfffffa80`3c393a00
fffff880`0e483500 fffffa80`3c3c8900 : 00000000`00000000 fffffa80`3c373010 00000000`00000000 fffffa80`3c3b7f30 : 0xfffffa80`3c3c8901
fffff880`0e483508 00000000`00000000 : fffffa80`3c373010 00000000`00000000 fffffa80`3c3b7f30 fffff880`08cb47fd : 0xfffffa80`3c3c8900


STACK_COMMAND:  kb

FOLLOWUP_IP: 
FiioE17+1d21
fffff880`08cb3d21 ??              ???

SYMBOL_STACK_INDEX:  12

SYMBOL_NAME:  FiioE17+1d21

FOLLOWUP_NAME:  MachineOwner

MODULE_NAME: FiioE17

IMAGE_NAME:  FiioE17.sys

DEBUG_FLR_IMAGE_TIMESTAMP:  50b30686

FAILURE_BUCKET_ID:  X64_0xFE_FiioE17+1d21

BUCKET_ID:  X64_0xFE_FiioE17+1d21

Followup: MachineOwner</pre>

<p>This tells us a number of interesting things:</p>

<ul>
<li>The BSOD error was: <b>BUGCODE_USB_DRIVER</b></li>
<li>This is the error caused by the driver: IRP_URB_DOUBLE_SUBMIT <b>The caller has submitted an irp that is already pending in the USB bus driver</b>.</li>
<li>The process that invoked the error: <b>audiodg.exe</b></li>
<li>The stack trace of the active thread on which the error occurred. Note that Windbg can't find the right symbols as this is a proprietary driver with no public symbols. Even so, to the developer of said driver, the above details will help immensely.</li>
<li>The driver name: <b>FiioE17.sys</b></li>
</ul>

<p>With the above options, you've got a lot of details that can be sent to the developer, hopefully enabling him/her/them to fix the issue. For now, I'll have to unplug my <a href="http://www.amazon.com/FiiO-Headphone-Amplifier-Docking-Interface/dp/B0070UFMOW">Fiio E17 USB DAC</a> :(</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3315</wp:post_id>
		<wp:post_date>2013-06-04 12:34:23</wp:post_date>
		<wp:post_date_gmt>2013-06-04 10:34:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>analyzing-bsod-minidump-files-using-windbg</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bsod"><![CDATA[BSOD]]></category>
		<category domain="post_tag" nicename="driver"><![CDATA[Driver]]></category>
		<category domain="category" nicename="windbg"><![CDATA[Windbg]]></category>
		<category domain="post_tag" nicename="windows"><![CDATA[Windows]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Suffering from BSODs? In this post I will show you how analyzing BSOD minidump files using windbg can reveal the cause.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Analyzing BSOD Minidump Files Using Windbg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>148583</wp:comment_id>
			<wp:comment_author><![CDATA[Working with your Windows Box after your GPU hangs | Hot Cashew]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://hotcashew.com/2013/11/surviving-the-post-s3-sleep-0x116-tdr-bsod/</wp:comment_author_url>
			<wp:comment_author_IP>165.225.132.58</wp:comment_author_IP>
			<wp:comment_date>2013-11-22 04:12:45</wp:comment_date>
			<wp:comment_date_gmt>2013-11-22 03:12:45</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] You could also upload a minidump to this wonderful online analyzer built by OSRonline. Or if feeling particularly adventurous, perform manual WinDbg analysis with these guides): [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385089965.3070240020751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Last Chance to Register for SQLSaturday #196 in Copenhagen</title>
		<link>http://improve.dk/last-chance-to-register-for-sqlsaturday-196-in-copenhagen/</link>
		<pubDate>Tue, 09 Apr 2013 07:33:49 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3332</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In just a couple of weeks <a href="http://www.sqlsaturday.com/196/eventhome.aspx">SQLSaturday #196</a> will be happening on April 20th in Copenhagen, Denmark. This is a <b>free</b> day smack-filled with great speakers, many of them international! <a href="http://www.sqlsaturday.com/196/schedule.aspx">Just check out the schedule.</a></p>

<p>I cannot recommend attending SQLSaturdays enough, especially so if they're close to you. Whether you're a SQL Server or .NET developer, DBA or a BI person, there's relevant content for you. Looking beyond the schedule, SQLSaturdays are excellent networking opportunities where people from very different business areas meet and mingle.</p>

<p>If you want to go all in, there's even three precons on Friday the 19th of April - one of which I'm presenting, the other two by <a href="http://mrdenny.com/">Denny Cherry</a> and <a href="http://www.jenstirrup.com/">Jen Stirrup</a>. You can <a href="http://sqlsat196precon.eventbrite.com/">see the lineup and register here</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3332</wp:post_id>
		<wp:post_date>2013-04-09 09:33:49</wp:post_date>
		<wp:post_date_gmt>2013-04-09 07:33:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>last-chance-to-register-for-sqlsaturday-196-in-copenhagen</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="community"><![CDATA[Community]]></category>
		<category domain="post_tag" nicename="copenhagen"><![CDATA[Copenhagen]]></category>
		<category domain="post_tag" nicename="sqlsaturday"><![CDATA[SQLSaturday]]></category>
		<category domain="post_tag" nicename="sqlsaturday196"><![CDATA[SQLSaturday196]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OrcaMDF Is Now Available on NuGet</title>
		<link>http://improve.dk/orcamdf-is-now-available-on-nuget/</link>
		<pubDate>Mon, 13 May 2013 10:55:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3352</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Thanks to Justin Dearing (<a href="http://www.justaprogrammer.net/">b</a>|<a href="https://twitter.com/zippy1981">t</a>), OrcaMDF is now available on <a href="https://www.nuget.org/packages/OrcaMDF.Core">NuGet</a>!</p>

<p>OrcaMDF being on NuGet means the bar just got lowered even more if you want to try it out. Let me show you how easy it is to read the Adventureworks 2008 R2 Database using OrcaMDF:</p>

<p>To begin, let's create a vanilla .NET <i>Console Application</i>:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/05/1.png"><img src="http://improve.dk/wp-content/uploads/2013/05/1.png" alt="1" width="951" height="656" class="alignnone size-full wp-image-3353" /></a></div></div>

<p>Once the solution has been made, right click <i>References</i> and go to <i>Manage NuGet Packages</i>:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/05/2.png"><img src="http://improve.dk/wp-content/uploads/2013/05/2.png" alt="2" width="491" height="423" class="alignnone size-full wp-image-3355" /></a></div></div>

<p>Once the dialog opens, simply search for <i>OrcaMDF</i> and click the <i>Install</i> button for the OrcaMDF.Core package:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/05/3.png"><img src="http://improve.dk/wp-content/uploads/2013/05/3.png" alt="3" width="894" height="596" class="alignnone size-full wp-image-3356" /></a></div></div>

<p>When done, you should now see a small green checkmark next to the OrcaMDF.Core package:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/05/4.png"><img src="http://improve.dk/wp-content/uploads/2013/05/4.png" alt="4" width="894" height="595" class="alignnone size-full wp-image-3357" /></a></div></div>

<p>At this point the OrcaMDF.Core assembly will be available and all you have to do is start using it. For example you could print out all of the products along with their prices by modifying the Program.cs file like so (you'll have to alter the path to AdventureWorks2008R2_Data.mdf file so it points to a local copy (which must not be in use by SQL Server) on your machine):</p>

<pre lang="csharp">using System;
using OrcaMDF.Core.Engine;

namespace ConsoleApplication1
{
	class Program
	{
		static void Main()
		{
			using (var db = new Database(@"C:\AdventureWorks2008R2_Data.mdf"))
			{
				var scanner = new DataScanner(db);

				foreach (var row in scanner.ScanTable("Product"))
				{
					Console.WriteLine(row.Field<string>("Name"));
					Console.WriteLine("Price: " + row.Field<double>("ListPrice"));
					Console.WriteLine();
				}
			}
		}
	}
}</pre>

<p>And then just running the solution:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/05/5.png"><img src="http://improve.dk/wp-content/uploads/2013/05/5.png" alt="5" width="676" height="340" class="alignnone size-full wp-image-3359" /></a></div></div>

<p>And there you have it, in just a few quick short steps you've now fetched OrcaMDF and read the Products table, from the standard AdventureWorks 2008 R2 database, without even touching SQL Server.</p>

<p>With OrcaMDF now being available on NuGet as well as with <a href="http://improve.dk/orcamdf-studio-release-feature-recap/">a simple GUI</a>, it really doesn't get any simpler to take it for a spin :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3352</wp:post_id>
		<wp:post_date>2013-05-13 12:55:40</wp:post_date>
		<wp:post_date_gmt>2013-05-13 10:55:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-is-now-available-on-nuget</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="nuget"><![CDATA[NuGet]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Is Now Available on NuGet]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF is now available on NuGet! Let me show you how easy it is to use OrcaMDF by fetching it using NuGet.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Speaking at SQL PASS Summit 2013</title>
		<link>http://improve.dk/speaking-at-sql-pass-summit-2013/</link>
		<pubDate>Tue, 28 May 2013 10:25:45 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3375</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm delighted to announce that <a href="http://www.sqlpass.org/summit/2013/Sessions/SpeakerDetails.aspx?spid=245">I'll be speaking</a> at this years <a href="http://www.sqlpass.org/summit/2013/">SQL PASS Summit in Charlotte, North Carolina</a>. Having submitted several times before, unsuccessfully, I'm really happy to have made the cut this year. Looking at the <a href="http://www.sqlpass.org/summit/2013/Sessions.aspx">lineup of speakers</a>, I take great pride in being given the opportunity.</p>

<h2>My Sessions</h2>
<p>That's right, not just one session, but two! And as if that wasn't enough, the two selected sessions are my absolute favorite ones to perform! I've presented both several times before and thanks to great feedback from the audiences I've slowly fine tuned the format and content.</p>

<h2>Top Tricks and Best Practices for .NET SQL Server Developers</h2>
<p>This is a session chock-full of easy-to-use tips, tricks and gotchas that can be implemented immediately. If you're either a .NET developer yourself, or if you have .NET developers on your team, using SQL Server, this session is sure to be an eye opener with valuable lessons.</p>

<blockquote>Being the acting DBA while doing development and managing a team of .NET developers, I've learned a trick or two through the years. For this session, I've gathered my list of top tricks any .NET developer should know and use when dealing with SQL Server. We’ll cover how to use TransactionScopes without locking up the database, avoiding MSDTC escalation, using internal batching functions in the BCL through reflection, avoiding unnecessary round trips, and much more. These are tips, tricks, and best practices that I ensure all my developers are taught before they have a chance of committing code to our production systems.</blockquote>

<h2>Understanding Data Files at the Byte Level</h2>
<p>The best part about this session, for me, is watching heads explode only 15 minutes in when I make a live demonstration of how to reverse engineer SQL Server, to persuade it into describing its own data file format. In just 75 minutes I will give you not only a thorough tour of the MDF file format, but also a plethora of techniques on how to analyze your own databases internal storage as well. Using these techniques you'll be well armed when it comes to schema discussions, column type choice and for those rare events where you need to dive just a bit below the surface to discover what's really happening.</p>

<blockquote>This session won’t explain when to use a heap instead of an index, but you will learn how they work – and differ – behind the scenes. Demonstrations will show how data files are organized on the disk and how that organization allows SQL Server to effectively query the data. Knowing how data files are organized will in turn help immensely when it comes to optimizing databases for both performance and storage efficiency.</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3375</wp:post_id>
		<wp:post_date>2013-05-28 12:25:45</wp:post_date>
		<wp:post_date_gmt>2013-05-28 10:25:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>speaking-at-sql-pass-summit-2013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="pass-summit"><![CDATA[PASS Summit]]></category>
		<category domain="post_tag" nicename="presenting"><![CDATA[Presenting]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Speaking at SQL PASS Summit 2013]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[I'll be speaking at the SQL PASS Summit 2013. In this post I will introduce my sessions and what to expect of them.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>48001</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>83.94.237.149</wp:comment_author_IP>
			<wp:comment_date>2013-05-28 20:37:21</wp:comment_date>
			<wp:comment_date_gmt>2013-05-28 18:37:21</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Dan! Will you be coming this year? I promise I won't play part in luring you into some dodgy eastern European country like last time ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369766241.843924045562744140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47938</wp:comment_id>
			<wp:comment_author><![CDATA[Dan Lewandowski]]></wp:comment_author>
			<wp:comment_author_email>daniel@lewicool.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.70.39.45</wp:comment_author_IP>
			<wp:comment_date>2013-05-28 18:05:51</wp:comment_date>
			<wp:comment_date_gmt>2013-05-28 16:05:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Outstanding!   Congrats!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369757151.686582088470458984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47867</wp:comment_id>
			<wp:comment_author><![CDATA[Mark S. Rasmussen]]></wp:comment_author>
			<wp:comment_author_email>mark@improve.dk</wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk</wp:comment_author_url>
			<wp:comment_author_IP>5.179.93.132</wp:comment_author_IP>
			<wp:comment_date>2013-05-28 15:49:14</wp:comment_date>
			<wp:comment_date_gmt>2013-05-28 13:49:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Matt; likewise!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369748954.90085506439208984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:4:"orca";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47820</wp:comment_id>
			<wp:comment_author><![CDATA[Matt Velic]]></wp:comment_author>
			<wp:comment_author_email>mattvelic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://mattvelic.com</wp:comment_author_url>
			<wp:comment_author_IP>66.202.175.163</wp:comment_author_IP>
			<wp:comment_date>2013-05-28 13:38:06</wp:comment_date>
			<wp:comment_date_gmt>2013-05-28 11:38:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Congratulations, Mark! Hope to meet you there!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369741086.2237889766693115234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48435</wp:comment_id>
			<wp:comment_author><![CDATA[Dan Lewandowski]]></wp:comment_author>
			<wp:comment_author_email>daniel@lewicool.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>155.70.39.45</wp:comment_author_IP>
			<wp:comment_date>2013-05-29 16:08:20</wp:comment_date>
			<wp:comment_date_gmt>2013-05-29 14:08:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[First beer is on me; then straight into some good old fashioned N. Carolina moonshine...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1369836500.1816298961639404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Could Not Load Type &#039;NewRelic.Agent.Core.AgentApi&#039;</title>
		<link>http://improve.dk/could-not-load-type-newrelic-agent-core-agentapi/</link>
		<pubDate>Thu, 23 May 2013 09:00:50 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3392</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Recently I've begun using <a href="http://newrelic.com/">New Relic</a>, and so far it's been an excellent experience. About two weeks ago I started using their <a href="https://newrelic.com/docs/dotnet/the-net-agent-api">.NET Agent API</a> to customize some of the data reported by our application to their servers. This makes the data way more valuable to us as we can now selectively ignore certain parts of our application while getting better reporting from other, more critical, parts of the application.</p>

<h2>Random Outages</h2>
<p>Unfortunately, in the last couple of weeks, ever since introducing the .NET Agent API, we've had a number of outages (thankfully invisible to the customers due to a self-healing load-balancer setup shielding the individual application servers) where one of our applications servers would randomly start throwing the same exception on all requests:</p>

<pre lang="csharp">System.TypeLoadException: Could not load type 'NewRelic.Agent.Core.AgentApi' from assembly 'NewRelic.Api.Agent, Version=2.5.112.0, Culture=neutral, PublicKeyToken=06552fced0b33d87'. 
at NewRelic.Api.Agent.NewRelic.SetTransactionName(String category, String name) 
at System.Web.HttpApplication.SyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() 
at System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously)</pre>

<p>The error seemed to crop up randomly on all of our servers, though not at the same time and in with no predictable patterns - except it was always just after an application pool recycle. Once the error occurred it would continue happening until we either recycled the pool manually or it was recycled automatically according to its schedule.</p>

<h2>The Support Experience</h2>
<p>To make a long story short, I opened a support case with New Relic as I couldn't find anything in neither their docs, nor on Google, related to the specific exception. After about a week of going back and forth between their engineers and me they managed to track down the root cause:</p>

<blockquote>It appears that some of the caching we do is not being correctly invalidated. I have removed the caching code and you should see this fix in our next release.</blockquote>

<p>In the meantime I've had to stop using the .NET Agent API to avoid the issue from happening again. This doesn't mean we won't get any data; it's just not as well polished as before. I'm eagerly looking forward to the next agent release so we can get back to using the .NET Agent API again.</p>

<p>In conclusion I must say I'm impressed by the overall support experience. The responses have been quick and professional. Naturally I'd prefer not to have had any issues, but we all know they can happen, and in those cases it's a matter of having a solid triage process - and in this case I'm just happy to be able to assist in identifying the cause.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3392</wp:post_id>
		<wp:post_date>2013-05-23 11:00:50</wp:post_date>
		<wp:post_date_gmt>2013-05-23 09:00:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>could-not-load-type-newrelic-agent-core-agentapi</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="new-relic"><![CDATA[New Relic]]></category>
		<category domain="post_tag" nicename="typeloadexception"><![CDATA[TypeLoadException]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Could Not Load Type 'NewRelic.Agent.Core.AgentApi']]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[After begining to use the New Relic .NET Agent API, we began to receive the "Could Not Load Type 'NewRelic.Agent.Core.AgentApi'" error.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Verifying Mailgun Webhooks</title>
		<link>http://improve.dk/verifying-mailgun-webhooks/</link>
		<pubDate>Mon, 23 Sep 2013 13:30:25 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3421</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.mailgun.com/">Mailgun</a> has a very neat feature that enables you to basically convert incoming emails to a POST request to a URL of your choice, also known as a webhook. Using this, you can easily have your application respond to email events. However, as this URL/service needs to be publically available, verifying Mailgun webhooks is very important, ensuring requests actually come from Mailgun, and not someone impersonating Mailgun.</p>

<p>The code required for verifying Mailgun forwards is very simple and doesn't require much explanation:</p>

<pre lang="csharp">/// <summary>
/// Verifies that the signature matches the timestamp & token.
/// </summary>
/// <returns>True if the signature is valid, otherwise false.</returns>
public static bool VerifySignature(string key, int timestamp, string token, string signature)
{
	var encoding = Encoding.ASCII;
	var hmacSha256 = new HMACSHA256(encoding.GetBytes(key));
	var cleartext = encoding.GetBytes(timestamp + token);
	var hash = hmacSha256.ComputeHash(cleartext);
	var computedSignature = BitConverter.ToString(hash).Replace("-", "").ToLower();

	return computedSignature == signature;
}</pre>

<p>Use sample:</p>

<pre lang="csharp">// All these values are provided by the Mailgun request
var key = "key-x3ifab7xngqxep7923iuab251q5vhox0";
var timestamp = 1568491354;
var token = "asdoij2893dm98m2x0a9sdkf09k423cdm";
var signature = "AF038C73E912A830FFC830239ABFF";

// Verify if request is valid
bool isValid = VerifySignature(key, timestamp, token, signature);
</pre>

<p>As the <a href="http://documentation.mailgun.com/user_manual.html#securing-webhooks">manual says</a> you simply need to calculate a SHA256 HMAC of the concatenated timestamp and token values, after which you can verify that it matches the Mailgun provided signature. The key is the private API key, retrievable from the Mailgun control panel.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3421</wp:post_id>
		<wp:post_date>2013-09-23 15:30:25</wp:post_date>
		<wp:post_date_gmt>2013-09-23 13:30:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>verifying-mailgun-webhooks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="mailgun"><![CDATA[Mailgun]]></category>
		<category domain="post_tag" nicename="security"><![CDATA[Security]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Verifying Mailgun webhooks]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Verifying Mailgun webhooks is very simple. Here's a concise sample showing how to verify Mailgun webhooks using C#.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Optimizing Performance by Programmaticaly Setting ReadOnlySessionState</title>
		<link>http://improve.dk/optimizing-performance-programmatically-setting-readonlysessionstate/</link>
		<pubDate>Tue, 08 Oct 2013 08:18:25 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3438</guid>
		<description></description>
		<content:encoded><![CDATA[<p>One of the main culprits when it comes to ASP.NET concurrency is caused by the fact that default sesion state has been implemented using a pessimistic locking pattern. Basically, any standard handler, whether that be an ASPX page, a generic handler or an ASMX web service, goes through the following steps:</p>

<ul>
	<li>Retrieve & exclusively lock session</li>
	<li>Execute request handler</li>
	<li>Save & unlock updated session (whether updates have been made or not)</li>
</ul>

<p>What this means is that, for a given session, <i>only one request can execute concurrently</i>. Any other requests, from that same session, will block, waiting for the session to be released. For the remainder of this post I'll concentrate on generic HttpHandlers, but this problem & solution is common to for ASPX and ASMX pages as well.</p>

<h2>Disabling Session State</h2>

<p>If your handler doesn't require session state, all you have to do is to <i>not</i> implement the IRequiresSessionState interface, given that HttpHandlers by default do not have access to session state:</p>

<pre lang="csharp">public class MyHandler : IHttpHandler
{
	public void ProcessRequest(HttpContext context)
	{
		// Perform some task
	}
	
	public bool IsReusable { get { return false; } }
}</pre>

<p>By not enabling session state, no session will be locked and you can execute as many concurrent requsts as your server can handle.</p>

<h2>Enabling Session State</h2>

<p>If you <i>do</i> need session state, simply implement the IRequiresSessionState interface, like so:</p>

<pre lang="csharp">public class MyHandler : IHttpHandler, IRequiresSessionState
{
	public void ProcessRequest(HttpContext context)
	{
		// Perform some task
	}
	
	public bool IsReusable { get { return false; } }
}</pre>

<p>The IRequiresSessionState interface carries no functionality at all, it's simply a marker interface that tells the ASP.NET request pipeline to acquire session state for the given request. By implementing this interface you now have read+write access to the current session.</p>

<h2>Read-Only Session State</h2>

<p>If all you need is to read session state, while not having to be able to write it, you should implement the IReadOnlySessionState interface instead, like so:</p>

<pre lang="csharp">public class MyHandler : IHttpHandler, IReadOnlySessionState
{
	public void ProcessRequest(HttpContext context)
	{
		// Perform some task
	}
	
	public bool IsReusable { get { return false; } }
}</pre>

<p>Implementing this interface changes the steps performed by the page slightly:</p>

<ul>
	<li>Retrieve session, without locking</li>
	<li>Execute request handler</li>
	<li><del>Save & unlock updated session (whether updates have been made or not)</del></li>
</ul>

<p>While session is still read as usual, it's just not persisted back after the request is done. This means you can actually update the session, without causing any exceptions. However, as the session is never persisted, your changes won't be saved after the request is done. For read-only use this also saves the superfluous save operation which can be costly if you're using out-of-process session state like State or SQL Server.</p>

<h2>Switching Between Read+Write and Read-Only Session State Programmatically</h2>

<p>While this is great, we sometimes need something in between. Consider the following scenario:<7p>

<ul>
	<li>You've got a single handler that's heavily requested.</li>
	<li>On the first request you need to perform some expensive lookup to load some data that will be used in all further requests, but is session specific, and will thus be stored in session state.</li>
	<li>If you implement IRequiresSessionState, you can easily detect the first request (Session["MyData"] == null), load the data, store it in session and then reuse it in all subsequent requests. However, this ensures only one request may execute at a time, due to the session being exclusively locked while the handler executes.</li>
	<li>If you instead implement IReadOnlySessionState, you can execute as many handlers concurrently as you please, but you'll have to do that expensive data loading on each request, seeing as you can't store it in session.</li>
</ul>

<p>Imagine if you could dynamically decide whether to implement the full read+write enabled IRequiresSessionState or just the read enabled IReadOnlySession state. That way you could implement IRequiresSessionState for the first request and just implement IReadOnlySessionState for all of the subsequent requests, once a session has been established.</p>

<p>And guess what, from .NET 4.0 onwards, that's possible!</p>

<h2>Enter HttpContext.SetSessionStateBehavior</h2>

<p>Looking at the <a href="http://msdn.microsoft.com/En-US/library/bb470252.aspx">ASP.NET request pipeline</a>, session state is loaded in the "Acquire state" event. At any point, before this event, we can set the session behavior programmatically by calling HttpContext.SetSessionStateBehavior. Setting the session programmatically through HttpContext.SetSessionStateBehavior will override any interfaces implemented by the handler itself.</p>

<p>Here's a full example of an HttpModule that runs on each request. In the PostMapRequestHandler event (which fires just before the AcquireState event), we inspect the HttpHandler assigned to the request. If it implements the IPreferReadOnlySessionState interface (a custom marker interface), the SessionStateBehavior is set to ReadOnly, provided there already is an active session (which the presence of an ASP.NET_SessionId cookie indicates). If there is no session cookie present, or if the handler doesn't implement IPreferReadOnlySessionState, then it's left up to the handler default - that is, the implemented interface, to decide.</p>

<pre lang="csharp">public class RequestHandler : IHttpModule
{
	public void Init(HttpApplication context)
	{
		context.PostMapRequestHandler += context_PostMapRequestHandler;
	}
	
	void context_PostMapRequestHandler(object sender, EventArgs e)
	{
		var context = HttpContext.Current;
		
		if (context.Handler is IPreferReadOnlySessionState)
		{
			if (context.Request.Headers["Cookie"] != null && context.Request.Headers["Cookie"].Contains("ASP.NET_SessionId="))
				context.SetSessionStateBehavior(SessionStateBehavior.ReadOnly);
		}
	}
}</pre>

<p>Now all we need to do is to also implement the IPreferReadOnlySessionState interface in the handlers that can do with read-only sesion state, provided a session is already present:</p>

<pre lang="csharp">public interface IPreferReadOnlySessionState
{ }</pre>

<pre lang="csharp">public class MyHandler : IHttpHandler, IRequiresSessionState, IPreferReadOnlySessionState
{
	public void ProcessRequest(HttpContext context)
	{
		// Perform some task
	}
	
	public bool IsReusable { get { return false; } }
}</pre>

<p>And just like that, the first request has read+write access to the session state, while all subsequent requests only have read access, greatly increasing the concurrency of the handler.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3438</wp:post_id>
		<wp:post_date>2013-10-08 10:18:25</wp:post_date>
		<wp:post_date_gmt>2013-10-08 08:18:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>optimizing-performance-programmatically-setting-readonlysessionstate</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="concurrency"><![CDATA[Concurrency]]></category>
		<category domain="category" nicename="iis"><![CDATA[IIS]]></category>
		<category domain="post_tag" nicename="iis-2"><![CDATA[iis]]></category>
		<category domain="post_tag" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="category" nicename="performance"><![CDATA[Performance]]></category>
		<category domain="post_tag" nicename="session"><![CDATA[Session]]></category>
		<category domain="category" nicename="web"><![CDATA[Web]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[performance ireadonlysessionstate]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Optimizing Performance by Programmaticaly Setting ReadOnlySessionState]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Improve performance & concurrency by programmaticaly implementing IReadOnlySessionState when read-only session state is needed.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[optimizing-performance-dynamically-implementing-ireadonlysessionstate]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[optimizing-performance-programmatically-settingireadonlysessionstate]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Announcing Tribal SQL</title>
		<link>http://improve.dk/announcing-tribalsql/</link>
		<pubDate>Wed, 23 Oct 2013 11:16:54 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3465</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm slightly late to announce this, but better late than never!</p>

<p>Just a few weeks ago, the book <a href="http://www.amazon.com/Tribal-SQL-Tony-Davis/dp/1906434808/">Tribal SQL</a> went for sale! I authored a chapter on "Storage Internals 101" and alongside 14 other first-time authors, this is our first book to have published!</p>

<div style="text-align: center"><img src="http://improve.dk/wp-content/uploads/2013/10/tribalSQLcover.png" alt="tribalSQLcover" width="205" height="258" class="aligncenter size-full wp-image-3470" /></div>

<blockquote>Tribal SQL: New voices in SQL Server<br />
<br />
15 first-time authors answer the question: What makes you passionate about working with SQL Server?<br />
<br />
<a href="http://midnightdba.itbookworm.com/">MidnightDBA</a> and <a href="http://www.red-gate.com/">Red Gate</a> partnered to produce a book filled with community, Tribal, knowledge on SQL Server. The resulting book is a series of chapters on lessons learned, perhaps the hard way, which you won’t find in traditional training or technical guidance material.<br />
<br />
As a truly community-driven book, the authors are all generously donating 100% of their royalties to the charity <a href="http://www.computers4africa.org.uk/">Computers 4 Africa</a>.<br />
<br />
A DBA’s core responsibilities are constant. A DBA must have the hard skills necessary to maintain and enforce security mechanisms on the data, prepare effectively for disaster recovery, ensure the performance and availability of all the databases in their care.<br />
<br />
Side by side with these, our authors have also recognized the importance of communication skills to the business and their careers. We have chapters on the importance to a DBA of communicating clearly with their co-workers and business leaders, presenting data as useful information that the business can use to make decisions, and sound project management skills.<br />
<br />
The resulting book, <a href="http://www.amazon.com/Tribal-SQL-Tony-Davis/dp/1906434808">Tribal SQL</a>, is a reflection of how a DBA’s core and long-standing responsibilities and what it means to be a DBA in today’s businesses.</blockquote>

<p>If you want to get a <a href="https://www.simple-talk.com/sql/database-administration/sql-server-storage-internals-101/">sneak peek of my chapter</a>, it has been posted on <a href="https://www.simple-talk.com/sql/database-administration/sql-server-storage-internals-101/">Simple-Talk</a> as an extract of the complete book.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3465</wp:post_id>
		<wp:post_date>2013-10-23 13:16:54</wp:post_date>
		<wp:post_date_gmt>2013-10-23 11:16:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>announcing-tribalsql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="books"><![CDATA[Books]]></category>
		<category domain="category" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="red-gate"><![CDATA[Red Gate]]></category>
		<category domain="category" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<category domain="post_tag" nicename="tribal-sql"><![CDATA[Tribal SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PowerPad - Powerpoint Presenters View for Tablets &amp; Phones</title>
		<link>http://improve.dk/powerpad-powerpoint-presenters-view-for-tablets-phones/</link>
		<pubDate>Mon, 28 Oct 2013 14:36:40 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3482</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I love presenting, especially so when it's possible for me to do so alongside Powerpoints presenters view. Unfortunately I'm an even bigger fan of <a href="http://technet.microsoft.com/en-us/sysinternals/bb897434.aspx">ZoomIt</a> and I use it extensively when presenting. Why is that an issue? To use ZoomIt effectively, not just in demos but when showing slides as well, I need to duplicate my screen rather than extending it. Duplicating the screen means presenters view is not an option :(</p>

<h2>Introducing PowerPad</h2>
<p>Seeing <a href="http://improve.dk/keeping-track-of-time-while-presenting/">as I've already got my iPad next to me when presenting</a> it seems obvious to use that for the presenters view. However, even though I've scoured the app store for solutions, I have yet to find something that doesn't require me to install invasive clients on my computer or suffice with a fixed & lagging UI on the iPad. Even worse, most require me to pay up front, meaning I can't perform a meaningful trial.<p>

<p>And so I decided to <a href="https://github.com/improvedk/PowerPad">do something about it</a>. PowerPad is a simple console application that runs on your computer, detects when you run a presentation and automatically provides a "presenters view" served over HTTP. The overall goal for PowerPad is to provide a Powerpoint presenters view for tablets & phones.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/10/presentation_started.png"><img src="http://improve.dk/wp-content/uploads/2013/10/presentation_started.png" alt="presentation_started" width="677" height="342" class="aligncenter size-full wp-image-3483" /></a></div></div>

<p>As soon as you're running PowerPad, and a presentation, you'll now be able to access the host IP through any device with a browser. I personally use my iPad:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/10/screen_notes.png"><img src="http://improve.dk/wp-content/uploads/2013/10/screen_notes.png" alt="screen_notes" width="1024" height="768" class="aligncenter size-full wp-image-3484" /></a></div></div>

<p>And in a pinch I might even use my phone:</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/10/screen_mobile.png"><img src="http://improve.dk/wp-content/uploads/2013/10/screen_mobile.png" alt="screen_mobile" width="1280" height="720" class="aligncenter size-full wp-image-3485" /></a></div></div>

<h2>Getting Started</h2>
<p>PowerPad is open source and completely free to use, licensed under the MIT license. It currently supports Powerpoint 2013 and only requires you to have the .NET 2.0 Framework installed. As long as your devices are on the same network, you can hook up any number of secondary monitors to your presentation - even your attendees, should you want to.</p>

<p>For more screenshots as well as the code & downloads, please check out the <a href="https://github.com/improvedk/PowerPad">PowerPad page on Github</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3482</wp:post_id>
		<wp:post_date>2013-10-28 15:36:40</wp:post_date>
		<wp:post_date_gmt>2013-10-28 14:36:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>powerpad-powerpoint-presenters-view-for-tablets-phones</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="open-source"><![CDATA[Open Source]]></category>
		<category domain="post_tag" nicename="powerpoint"><![CDATA[Powerpoint]]></category>
		<category domain="post_tag" nicename="presenting"><![CDATA[Presenting]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Powerpoint presenters view for tablets & phones]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[PowerPad - Powerpoint Presenters View for Tablets & Phones]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[PowerPad - an open source & free solution that enables the Powerpoint presenters view for tablets & phones.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>OrcaMDF RawDatabase - A Swiss Army Knife for MDF Files</title>
		<link>http://improve.dk/orcamdf-rawdatabase-a-swiss-army-knife-for-mdf-files/</link>
		<pubDate>Mon, 04 Nov 2013 12:08:05 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3495</guid>
		<description></description>
		<content:encoded><![CDATA[<p>When I initially started working on <a href="http://improve.dk/introducing-orcamdf/">OrcaMDF</a> I had just one goal, to gain a deeper knowledge of MDF file internals than I could through most books available.</p>

<p>As time progressed, so did OrcaMDF. While I had no initial plans of doing so, OrcaMDF has ended up being capable of parsing base tables, metadata and even <a href="http://improve.dk/orcamdf-now-exposes-metadata-through-system-dmvs/">dynamically recreating common DMVs</a>. On top of this, I made a <a href="http://improve.dk/orcamdf-studio-release-feature-recap/">simple GUI</a>, just to make OrcaMDF easier to use.</p>

<p>While that's great, it comes at the price of extreme complexity. To be able to automatically parse table metadata like schemas, partitions, allocation units and more, not to mention abstracting away details like heaps and indexes, it takes a lot of code and it requires intimate knowledge of the database itself. Seeing as metadata changes between versions, OrcaMDF currently only supports SQL Server 2008 R2. While the data structures themselves are rather stable, there are minor differences in the way metadata is stored, the data exposed by DMVs and so forth. And on top of this, requiring all of the metadata to be perfect, for OrcaMDF to work, results in OrcaMDF being just as vulnerable to corruption as SQL Server is itself. Got a corrupt boot page? Neither SQL Server nor OrcaMDF will be able to parse the database.</p>

<h2>Say Hello to RawDatabase</h2>

<p>I tried to imagine the future of OrcaMDF and how to make it the most useful. I could march on make it support more and more of the same features that SQL Server does, eventually being able to parse 100% of an MDF file. But what would the value be? Sure, it would be a great learning opportunity, but the thing is, if you've got a working database, SQL Server does a pretty good job too. So what's the alternative?</p>

<p><i>RawDatabase</i>, in contrast to the <i>Database</i> class, doesn't try to parse anything besides what you tell it to. There's no automatic parsing of schemas. It doesn't know about base tables. It doesn't know about DMVs. It does however know about the SQL Server data structures and it gives you an interface for working with the MDF file directly. Letting RawDatabase parse nothing but the data structures means it's significantly less vulnerable to corruption or bad data.</p>

<h2>Examples</h2>

<p>It's still early in the development, but let me show some examples of what can be done using RawDatabase. While I'm running the code in <a href="http://www.linqpad.net/">LINQPad</a>, as that makes it easy to show the results, the result are just standard .NET objects. All examples are run against the AdventureWorks 2008R2 LT (Light Weight) database.</p>

<h3>Getting a Single Page</h3>

<p>In the most basic example, we'll parse just a single page.</p>

<pre lang="csharp">// Get page 197 in file 1
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.GetPage(1, 197).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A.png" alt="A" width="194" height="142" class="aligncenter size-full wp-image-3504" /></a></div></div>

<h3>Parsing the Page Header</h3>

<p>Now that we've got a page, how about we dump the header values?</p>

<pre lang="csharp">// Get the header of page 197 in file 1
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.GetPage(1, 197).Header.Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A1.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A1.png" alt="A" width="222" height="479" class="aligncenter size-full wp-image-3507" /></a></div></div>

<h3>Parsing the Slot Array</h3>

<p>Just as the header is available, you can also get the raw slot array entries.</p>

<pre lang="csharp">// Get the slot array entries of page 197 in file 1
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.GetPage(1, 197).SlotArray.Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A2.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A2.png" alt="A" width="66" height="193" class="aligncenter size-full wp-image-3509" /></a></div></div>

<h3>Parsing Records</h3>

<p>While getting the raw slot array entries can be useful, you'll usually want to look at the records themselves. Fortunately, that's easy to do too.</p>

<pre lang="csharp">// Get all records on page 197 in file 1
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.GetPage(1, 197).Records.Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A3.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A3.png" alt="A" width="1157" height="265" class="aligncenter size-full wp-image-3514" /></a></div></div>

<h3>Retrieving Data from Records</h3>

<p>Once you've got the records, you could now access the FixedLengthData or the VariableLengthOffsetValues properties to get the raw fixed length and variable length column values. However, what you'll typically want is to get the actually parsed values. To spare you the work, OrcaMDF can parse it for you, if you just provide it the schema.</p>

<pre lang="csharp">// Read the record contents of the first record on page 197 of file 1
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
RawPrimaryRecord firstRecord = (RawPrimaryRecord)db.GetPage(1, 197).Records.First();

var values = RawColumnParser.Parse(firstRecord, new IRawType[] {
	RawType.Int("AddressID"),
	RawType.NVarchar("AddressLine1"),
	RawType.NVarchar("AddressLine2"),
	RawType.NVarchar("City"),
	RawType.NVarchar("StateProvince"),
	RawType.NVarchar("CountryRegion"),
	RawType.NVarchar("PostalCode"),
	RawType.UniqueIdentifier("rowguid"),
	RawType.DateTime("ModifiedDate")
});
	
values.Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A4.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A4.png" alt="A" width="365" height="217" class="aligncenter size-full wp-image-3516" /></a></div></div>

<p>RawColumnParser.Parse will, given a schema, automatically convert the raw bytes into a Dictionary<string, object>, the key being the column name from the schema and the value being the actual type of the column, e.g. int, short, Guid, string, etc. By letting you, the user, specify the schema, OrcaMDF can get rid of a slew of dependencies on metadata, thus ignoring any possible corruption in metadata. Given the availability of the Next & PreviousPageID properties of the header, it would be simple to iterate through all linked pages, parsing all records of each page - basically performing a scan on a given allocation unit.</p>

<h3>Filtering Pages</h3>

<p>Besides retrieving a specific page, RawDatabase also has a Pages property that enumerates over all pages in a database. Using this you could, for example, get a list of all IAM pages in the database.</p>

<pre lang="csharp">// Get a list of all IAM pages in the database
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.Pages
	.Where(x => x.Header.Type == PageType.IAM)
	.Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A5.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A5.png" alt="A" width="434" height="262" class="aligncenter size-full wp-image-3519" /></a></div></div>

<p>And since this is powered by LINQ, it's easy to project just the properties you want. For example, you could get all index pages and their slot counts like this:</p>

<pre lang="csharp">// Get all index pages and their slot counts
var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.Pages
	.Where(x => x.Header.Type == PageType.Index)
	.Select(x => new {
		x.PageID,
		x.Header.SlotCnt
	}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A6.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A6.png" alt="A" width="121" height="263" class="aligncenter size-full wp-image-3520" /></a></div></div>

<p>Or let's say you wanted to get all data pages with at least one record and more than 7000 bytes of free space - with the page id, free count, record count and average record size as the output:</p>

<pre lang="csharp">var db = new RawDatabase(@"C:\AWLT2008R2.mdf");
db.Pages
	.Where(x => x.Header.FreeCnt > 7000)
	.Where(x => x.Header.SlotCnt >= 1)
	.Where(x => x.Header.Type == PageType.Data)
	.Select(x => new {
	    x.PageID,
		x.Header.FreeCnt,
		RecordCount = x.Records.Count(),
		RecordSize = (8096 - x.Header.FreeCnt) / x.Records.Count()
	}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A7.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A7.png" alt="A" width="267" height="198" class="aligncenter size-full wp-image-3523" /></a></div></div>

<p>And as a final example, imagine you've got just an MDF file but you seem to have forgotten what objects are stored inside of it. Fret not, we'll just get the data from the sysschobjs base table! Sysschobjs is the base table that stores all object data, and fortunately it has a static object ID of <i>34</i>. Using this, we can filter down to all of the data pages for object 34, get all the records and then parse just the two first columns of the schema (you may specify a partial schema, as long as you only omit columns at the end), ending up in us dumping just the names (we could of course have gotten the full schema, if we wanted to).</p>

<pre lang="csharp">var db = new RawDatabase(@"C:\AWLT2008R2.mdf");

var records = db.Pages
	.Where(x => x.Header.ObjectID == 34 && x.Header.Type == PageType.Data)
	.SelectMany(x => x.Records);
	
var rows = records.Select(x => RawColumnParser.Parse((RawPrimaryRecord)x, new IRawType[] {
	RawType.Int("id"),
	RawType.NVarchar("name")
}));

rows.Select(x => x["name"]).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A8.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A8.png" alt="A" width="509" height="393" class="aligncenter size-full wp-image-3531" /></a></div></div>

<h2>Compatibility</h2>

<p>Seeing as RawDatabase doesn't rely on metadata, it's much easier to support multiple SQL Server versions. Thus, I'm happy to say that RawDatabase fully supports SQL Server 2005, 2008, 2008R2 and 2012. It probably supports 2014 too, I just haven't tested that. Speaking of testing, all unit tests are automatically run against AdventureWorksLT for both 2005, 2008, 2008R2 and 2012 during testing. Right now there are tests demonstrating that OrcaMDF RawDatabase is able to parse the first record of each and every table in the AdventureWorks LT databases.</p>

<h2>Corruption</h2>

<p>One of the really interesting use cases for RawDatabase is in the case of corrupted databases. You could filter pages on the object id you're searching for and then brute-force parse each of them, retrieving whatever data is readable. If metadata is corrupted, you could ignore it, provide the schema manually and the just follow the linked lists of pages, or parse the IAM pages to read heaps. During the next couple of weeks I'll be blogging more on OrcaMDF RawDatabase to show various use case examples, including ones on corruption.</p>

<h2>Source & Feedback</h2>

<p>I'm really excited about the new RawDatabase addition to OrcaMDF and I hope I'm not the only one who can see the potential. If you try it out, have any ideas, suggestions or other kinds of feedback, I'd love to hear it.</p>

<p>If you want to try it out, head on over to the <a href="https://github.com/improvedk/OrcaMDF">OrcaMDF project on GitHub</a>. Once it's just a bit more polished, I'll make it available on NuGet as well. Just like the rest of OrcaMDF, the code is licensed under GPL v3.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3495</wp:post_id>
		<wp:post_date>2013-11-04 13:08:05</wp:post_date>
		<wp:post_date_gmt>2013-11-04 12:08:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>orcamdf-rawdatabase-a-swiss-army-knife-for-mdf-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="corruption"><![CDATA[Corruption]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="category" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<category domain="post_tag" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<category domain="category" nicename="tools-of-the-trade"><![CDATA[Tools of the Trade]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF RawDatabase is an open source low-level parser for SQL Server MDF files. Supports all newer versions of SQL Server.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>142665</wp:comment_id>
			<wp:comment_author><![CDATA[Greg Gonzalez]]></wp:comment_author>
			<wp:comment_author_email>ggonzalez@sqlsentry.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>24.224.83.151</wp:comment_author_IP>
			<wp:comment_date>2013-11-09 14:06:20</wp:comment_date>
			<wp:comment_date_gmt>2013-11-09 13:06:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Extremely cool, Mark, this will indeed be quite helpful. Thanks for sharing!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1384002380.1871540546417236328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140783</wp:comment_id>
			<wp:comment_author><![CDATA[Corrupting Databases on Purpose Using the OrcaMDF Corruptor]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/corrupting-databases-purpose-using-orcamdf-corruptor/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2013-11-05 12:15:55</wp:comment_date>
			<wp:comment_date_gmt>2013-11-05 11:15:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] give me more material to test the new RawDatabase functionality, I&#8217;ve now added a Corruptor class to OrcaMDF. Corruptor does more or less what [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383650155.4441759586334228515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Corrupting Databases on Purpose Using the OrcaMDF Corruptor</title>
		<link>http://improve.dk/corrupting-databases-purpose-using-orcamdf-corruptor/</link>
		<pubDate>Tue, 05 Nov 2013 11:15:50 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3538</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Sometimes you must first do evil, to do good. Such is the case when you want to hone your skills in corruption recovery of SQL Server databases.</p>

<p>To give me more material to test the new <a href="http://improve.dk/orcamdf-rawdatabase-a-swiss-army-knife-for-mdf-files/">RawDatabase</a> functionality, I've now added a <a href="https://github.com/improvedk/OrcaMDF/blob/master/src/OrcaMDF.Framework/Corruptor.cs">Corruptor class</a> to OrcaMDF. Corruptor does more or less what the name says - it corrupts database files on purpose.</p>

<p>The corruption itself is quite simple. Corruptor will choose a number of random pages and simply overwrite the page completely with all zeros. Depending on what pages are hit, this can be quite fatal.</p>

<p>I shouldn't have to say this, but just in case... Please do not use this on anything valuable. <b>It will fatally corrupt your data.</b></p>

<h2>Examples</h2>

<p>There are two overloads for the Corruptor.CorruptFile method, both of them return an IEnumerable of integers - a list of the page IDs that have been overwritten by zeros.</p>

<p>The following code will corrupt 5% of the pages in the AdventureWorks2008R2LT.mdf file, after which it will output each page ID that has been corrupted. You can specify the percentage of pages to corrupt by changing the second parameter.</p>

<pre lang="csharp">var corruptedPageIDs = Corruptor.CorruptFile(@"C:\AdventureWorks2008R2LT.mdf", 0.05);
Console.WriteLine(string.Join(", ", corruptedPageIDs));</pre>

<pre lang="xml">606, 516, 603, 521, 613, 621, 118, 47, 173, 579,
323, 217, 358, 515, 615, 271, 176, 596, 417, 379,
269, 409, 558, 103, 8, 636, 200, 361, 60, 486,
366, 99, 87</pre>

<p>To make the corruption hit even harder, you can also use the second overload of the CorruptFile method, allowing you to specify the exact number of pages to corrupt, within a certain range of page IDs. The following code will corrupt exactly 10 pages within the first 50 pages (zero-based), thus hitting mostly metadata.</p>

<pre lang="csharp">var corruptedPageIDs = Corruptor.CorruptFile(@"C:\AdventureWorks2008R2LT.mdf", 10, 0, 49);
Console.WriteLine(string.Join(", ", corruptedPageIDs));</pre>

<pre lang="xml">16, 4, 0, 32, 15, 14, 30, 2, 49, 9</pre>

<p>In the above case I was extraordinarily unlucky seeing as page 0 is the file header page, page 2 is the first GAM page, page 9 is the boot page and finally page 16 is the page that contains the allocation unit metadata. With corruption like this, you can be certain that DBCC CHECKDB will be giving up, leaving you with no other alternative than to restore from a backup.</p>

<p>Or... You could try to recover as much data as possible using <a href="http://improve.dk/orcamdf-rawdatabase-a-swiss-army-knife-for-mdf-files/">OrcaMDF RawDatabase</a>, but I'll get back to that later :)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3538</wp:post_id>
		<wp:post_date>2013-11-05 12:15:50</wp:post_date>
		<wp:post_date_gmt>2013-11-05 11:15:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corrupting-databases-purpose-using-orcamdf-corruptor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="corruption"><![CDATA[Corruption]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="category" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<category domain="post_tag" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[OrcaMDF Corruption]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[The OrcaMDF Corruptor class enables you to purposefully introduce corruption into your database files, allowing you to test your recovery methods.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>141271</wp:comment_id>
			<wp:comment_author><![CDATA[SQL Server Corruption Recovery - When All Else Fails]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/sql-server-corruption-recovery-when-all-else-fails/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2013-11-06 15:34:31</wp:comment_date>
			<wp:comment_date_gmt>2013-11-06 14:34:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] I don&#8217;t want to kill my disk drives just to introduce corruption, I&#8217;ll be using OrcaMDF&#8217;s Corruptor class instead. First up we need to shut down SQL [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383748471.4890239238739013671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SQL Server Corruption Recovery - When All Else Fails</title>
		<link>http://improve.dk/sql-server-corruption-recovery-when-all-else-fails/</link>
		<pubDate>Wed, 06 Nov 2013 14:34:23 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3552</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this post I want to walk through a number of SQL Server corruption recovery techniques for when you're out of luck, have no backups, and the usual methods don't work. I'll be using the <a href="http://msftdbprodsamples.codeplex.com/releases/view/93587">AdventureWorksLT2008R2 sample database</a> as my victim.</p>

<h2>A Clean Start</h2>

<p>To start out, I've attached the downloaded database and it's available on my SQL Server 2008 R2 instance, under the name of <b>AWLT2008R2</b>.</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A9.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A9.png" alt="A" width="276" height="166" class="aligncenter size-full wp-image-3553" /></a></div></div>

<p>To ensure we've got a clean start, I'll run DBCC CHECKDB with the DATA_PURITY flag set, just to make sure the database is OK.</p>

<pre lang="tsql">DBCC CHECKDB (AWLT2008R2) WITH ALL_ERRORMSGS, DATA_PURITY</pre>

<pre lang="text">DBCC results for 'AWLT2008R2'.
Service Broker Msg 9675, State 1: Message Types analyzed: 14.
Service Broker Msg 9676, State 1: Service Contracts analyzed: 6.
Service Broker Msg 9667, State 1: Services analyzed: 3.
Service Broker Msg 9668, State 1: Service Queues analyzed: 3.
Service Broker Msg 9669, State 1: Conversation Endpoints analyzed: 0.
Service Broker Msg 9674, State 1: Conversation Groups analyzed: 0.
Service Broker Msg 9670, State 1: Remote Service Bindings analyzed: 0.
Service Broker Msg 9605, State 1: Conversation Priorities analyzed: 0.
DBCC results for 'sys.sysrscols'.
There are 805 rows in 9 pages for object "sys.sysrscols".
DBCC results for 'sys.sysrowsets'.
There are 125 rows in 1 pages for object "sys.sysrowsets".
DBCC results for 'SalesLT.ProductDescription'.
There are 762 rows in 18 pages for object "SalesLT.ProductDescription".
...
CHECKDB found 0 allocation errors and 0 consistency errors in database 'AWLT2008R2'.
DBCC execution completed. If DBCC printed error messages, contact your system administrator.</pre>

<h2>Enter Corruption</h2>

<p>As I don't want to kill my disk drives just to introduce corruption, I'll be using <a href="http://improve.dk/corrupting-databases-purpose-using-orcamdf-corruptor/">OrcaMDF's Corruptor class</a> instead. First up we need to shut down SQL Server:</p>

<pre lang="tsql">SHUTDOWN WITH NOWAIT</pre>

<pre lang="text">Server shut down by NOWAIT request from login MSR\Mark S. Rasmussen.
SQL Server is terminating this process.</pre>

<p>Once the instance has been shut down, I've located my MDF file, stored at <b>D:\MSSQL Databases\AdventureWorksLT2008R2.mdf</b>. Knowing the path to the MDF file, I'll now intentially corrupt 5% of the pages in the database (at a database size of 5,312KB this will end up corrupting 33 random pages, out of a total of 664 pages).</p>

<pre lang="csharp">Corruptor.CorruptFile(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf", 0.05);</pre>

<p>At this point I have no idea about which pages were actually corrupted, I just know that 33 random pages just got overwritten by all zeros.</p>

<h2>Uh Oh</h2>

<p>After restarting the SQL Server instance and looking at the tree of databases, it's obvious we're in trouble...</p>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/A11.png"><img src="http://improve.dk/wp-content/uploads/2013/11/A11.png" alt="A" width="263" height="158" class="aligncenter size-full wp-image-3561" /></a></div></div>

<p>Running DBCC CHECKDB doesn't help much:</p>

<pre lang="tsql">DBCC CHECKDB (AWLT2008R2) WITH ALL_ERRORMSGS, DATA_PURITY</pre>

<pre lang="text">Msg 926, Level 14, State 1, Line 1
Database 'AWLT2008R2' cannot be opened. It has been marked SUSPECT by recovery.
See the SQL Server errorlog for more information.</pre>

<p>What does the errorlog say?</p>

<ul style="font-family: Consolas, 'Courier New'">
	<li>Starting up database 'AWLT2008R2'.</li>
	<li>1 transactions rolled forward in database 'AWLT2008R2' (13). This is an informational message only. No user action is required.</li>
	<li>Error: 824, Severity: 24, State: 2.</li>
	<li><b>SQL Server detected a logical consistency-based I/O error</b>: incorrect pageid (expected 1:2; actual 0:0). It occurred during a read of page (1:2) in database ID 13 at offset 0x00000000004000 in file 'D:\MSSQL Databases\AdventureWorksLT2008R2.mdf'.  Additional messages in the SQL Server error log or system event log may provide more detail. <b>This is a severe error condition that threatens database integrity and must be corrected immediately. Complete a full database consistency check (DBCC CHECKDB).</b> This error can be caused by many factors; for more information, see SQL Server Books Online.</li>
	<li>Error: 3414, Severity: 21, State: 1.</li>
	<li><b>An error occurred during recovery, preventing the database 'AWLT2008R2' (database ID 13) from restarting. Diagnose the recovery errors and fix them, or restore from a known good backup. If errors are not corrected or expected, contact Technical Support.</b></li>
	<li>CHECKDB for database 'AWLT2008R2' finished without errors on 2013-11-05 20:02:07.810 (local time). This is an informational message only; no user action is required.</li>
	<li>Recovery is complete. This is an informational message only. No user action is required.</li>
</ul>

<p>This is officially not good. Our database failed to recover and can't be put online at the moment, due to I/O consistency errors. We've also got our first hint:</p>

<pre lang="text">incorrect pageid (expected 1:2; actual 0:0)</pre>

<p>What this tells us is that the header of page 2 has been overwritten by zeros since SQL Server expected to find the value 1:2, but found 0:0 instead. Page 2 is the first GAM page in the database and is an essential part of the metadata.</p>

<p>SQL Server also wisely told us to either fix the errors or <b>restore from a known good backup</b>. And this is why you should always have a recovery strategy. If you ever end up in a situation like this, without a backup, you'll have to continue reading.</p>

<h2>DBCC CHECKDB</h2>

<p>SQL Server recommended that we run a <b>full database consistency check</b> using DBCC CHECKDB. Unfortunately, given the state of our database, DBCC CHECKDB is unable to run:</p>

<pre lang="tsql">DBCC CHECKDB (AWLT2008R2) WITH ALL_ERRORMSGS, DATA_PURITY</pre>

<pre lang="text">Msg 926, Level 14, State 1, Line 1
Database 'AWLT2008R2' cannot be opened. It has been marked SUSPECT by recovery.
See the SQL Server errorlog for more information.</pre>

<p>In some cases you may be able to force the database online, by putting it into <b>EMERGENCY</b> mode. If we could get the database into EMERGENCY mode, we might just be able to run DBCC CHECKDB.</p>

<pre lang="tsql">ALTER DATABASE AWLT2008R2 SET EMERGENCY</pre>

<pre lang="text">Msg 824, Level 24, State 2, Line 1
SQL Server detected a logical consistency-based I/O error: incorrect pageid
(expected 1:16; actual 0:0). It occurred during a read of page (1:16) in database
ID 13 at offset 0x00000000020000 in file 'D:\MSSQL Databases\AdventureWorksLT2008R2.mdf'.
Additional messages in the SQL Server error log or system event log may provide more
detail. This is a severe error condition that threatens database integrity and must
be corrected immediately. Complete a full database consistency check (DBCC CHECKDB).
This error can be caused by many factors; for more information, see SQL Server
Books Online.</pre>

<p>Even worse, it seems that page 16 has also been hit by corruption. Page 16 is the root page of the sysallocunits base table, holding all of the allocation unit storage metadata. Without page 16 there is no way for SQL Server to access any of its metadata. In short, there's no way we're getting this database online!</p>

<h2>Enter OrcaMDF</h2>

<p>The OrcaMDF Database class won't be able to open the database, seeing as it does not handle corruption very well. Even so, I want to try anyway, you never know. First off you'll have to shut down SQL Server to release the locks on the corrupt MDF file.</p>

<pre lang="tsql">SHUTDOWN WITH NOWAIT</pre>

<p>If you then try opening the database using the OrcaMDF Database class, you'll get a result like this:</pre>

<pre lang="csharp">var db = new Database(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture.png" alt="Capture" width="249" height="102" class="aligncenter size-full wp-image-3584" /></a></div></div>

<p>Interestingly the Database class didn't puke on the boot page (ID 9) itself, so we know that that one's OK, at least. But as soon as it hit page 16, things started to fall apart - and we already knew page 16 was corrupt.</p>

<h3>RawDatabase</h3>

<p>While the OrcaMDF <b>Database</b> class can't read the database file either, <b>RawDatabase</b> can. RawDatabase doesn't care about metadata, it doesn't read anything but what you tell it to, and as a result of that, it's much more resilient to corruption.</p>

<p>Given that we know the corruption has resulted in pages being zeroed out, we could easily gather a list of corrupted pages by just searching for pages whose logical page ID doesn't match the one in the header:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf")
db.Pages
  .Where(x => x.Header.PageID != x.PageID)
  .Select(x => x.PageID)
  .ToList()
  .ForEach(Console.WriteLine);</pre>

<pre lang="text">2
4
5
16
55
...
639
649
651
662
663</pre>

<p>This is only possible since we know the corruption caused pages to be zeroed out, so you'll rarely be this lucky. However, sometimes you may be able to detect the exact result of the corruption, thus enabling you to pinpoint the corrupted pages, just like we did here. However, this doesn't really help us much - all we have now is a list of some page ID's that are useless to us.</p>

<h3>Getting a List of Objects</h3>

<p>For this next part we'll need a working database, any database, on an instance running the same version that our corrupted database this. This could be the master database - literally any working database. First you'll want to connect to the database using the <a href="http://technet.microsoft.com/en-us/library/ms178068(v=sql.105).aspx">Dedicated Administrator Connection</a>. Connecting through the DAC allows us to query the base tables of the database.</p>

<p>The base table beneath sys.tables is called <b>sys.sysschobjs</b>, and if we can get to that, we can get a list of all the objects in the database, which might be a good start. Having connected to the working database, we can get the sys.sysschobjs details like so:</p>

<pre lang="tsql">SELECT * FROM sys.sysschobjs WHERE name = 'sysschobjs'</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture1.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture1.png" alt="Capture" width="686" height="37" class="aligncenter size-full wp-image-3590" /></a></div></div>

<p>The only thing I'm looking for here is the object id, provided by the <b>id</b> column. In contrast to all user tables, the system tables have their actual object id stored in the page header, which allows us to easily query for pages by their id. Knowing sys.sysschobjs has ID <b>34</b>, let's see if we can get a list of all the pages belonging to it (note that the .Dump() method is native to <a href="http://www.linqpad.net/">LinqPad</a> - all it does is to output the resulting objects as a table):</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
db.Pages
  .Where(x => x.Header.ObjectID == 34)
  .Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture2.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture2.png" alt="Capture" width="434" height="349" class="aligncenter size-full wp-image-3591" /></a></div></div>

<p>Now that we have a list of pages belonging to the sys.sysschobjs table, we need to retrieve the actual rows from there. Using <b>sp_help</b> on the working database, we can see the underlying schema of sys.sysschobjs:</p>

<pre lang="tsql">sp_help 'sys.sysschobjs'</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture3.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture3.png" alt="Capture" width="808" height="229" class="aligncenter size-full wp-image-3594" /></a></div></div>

<p>Once we have the schema of sys.sysschobjs, we can make RawDatabase parse the actual rows for us, after which we can filter it down to just the user tables, seeing as we don't care about procedures, views, indexes and so forth:</pre>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
var pages = db.Pages.Where(x => x.Header.ObjectID == 34 && x.Header.Type == PageType.Data);
var records = pages.SelectMany(x => x.Records).Select(x => (RawPrimaryRecord)x);
var rows = RawColumnParser.Parse(records, new IRawType[] {
	RawType.Int("id"),
	RawType.NVarchar("name"),
	RawType.Int("nsid"),
	RawType.TinyInt("nsclass"),
	RawType.Int("status"),
	RawType.Char("type", 2),
	RawType.Int("pid"),
	RawType.TinyInt("pclass"),
	RawType.Int("intprop"),
	RawType.DateTime("created"),
	RawType.DateTime("modified")
});

rows.Where(x => x["type"].ToString().Trim() == "U")
	.Select(x => new {
		ObjectID = (int)x["id"],
		Name = x["name"]
	}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture4.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture4.png" alt="Capture" width="320" height="281" class="aligncenter size-full wp-image-3596" /></a></div></div>

<p>We just went from a completely useless suspect database, with no knowledge of the schema, to now having a list of each user table name & object id. Sure, if one of the pages belonging to sys.syschobjs was corrupt, we'd be missing some of the tables without knowing it. Even so, this is a good start, and there are ways of detecting the missing pages (we could look for broken page header references, for example).</p>

<h3>Getting Schemas</h3>

<p>As we saw for sys.sysschobjs, if we are to parse any of the user table data, we need to know the schema of the tables. The schema happens to be stored in the <b>sys.syscolpars</b> base table, and if we lookup in sys.sysschobjs for 'sys.syscolpars', we'll get an object ID of <b>41</b>. As we did before, we can get a list of all pages belonging to sys.syscolpars:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
db.Pages
  .Where(x => x.Header.ObjectID == 41)
  .Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture5.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture5.png" alt="Capture" width="429" height="453" class="aligncenter size-full wp-image-3598" /></a></div></div>

<p>By looking up the schema of sys.syscolpars using sp_help, in the working database, we can parse the actual rows much the same way:</p>

<pre lang="csharp">// Parse sys.syscolpars
var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
var pages = db.Pages.Where(x => x.Header.ObjectID == 41 && x.Header.Type == PageType.Data);
var records = pages.SelectMany(x => x.Records).Select(x => (RawPrimaryRecord)x);
var rows = RawColumnParser.Parse(records, new IRawType[] {
	RawType.Int("id"),
	RawType.SmallInt("number"),
	RawType.Int("colid"),
	RawType.NVarchar("name"),
	RawType.TinyInt("xtype"),
	RawType.Int("utype"),
	RawType.SmallInt("length"),
	RawType.TinyInt("prec"),
	RawType.TinyInt("scale"),
	RawType.Int("collationid"),
	RawType.Int("status"),
	RawType.SmallInt("maxinrow"),
	RawType.Int("xmlns"),
	RawType.Int("dflt"),
	RawType.Int("chk"),
	RawType.VarBinary("idtval")
});

rows.Select(x => new {
	ObjectID = (int)x["id"],
	ColumnID = (int)x["colid"],
	Number = (short)x["number"],
	TypeID = (byte)x["xtype"],
	Length = (short)x["length"],
	Name = x["name"]
}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture6.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture6.png" alt="Capture" width="417" height="392" class="aligncenter size-full wp-image-3599" /></a></div></div>

<h3>Recovering the Customer Table Schema</h3>

<p>While there are 12 tables, none are probably more important than the <b>Customer</b> table. Based on parsing the sys.sysschobjs base table, we know that the customer table has an object ID of <b>117575457</b>. Let's try and filter down to just that object ID, using the code above:</p>

<pre lang="csharp">rows.Where(x => (int)x["id"] == 117575457).Select(x => new {
	ObjectID = (int)x["id"],
	ColumnID = (int)x["colid"],
	Number = (short)x["number"],
	TypeID = (byte)x["xtype"],
	Length = (short)x["length"],
	Name = x["name"]
}).OrderBy(x => x.Number).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture7.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture7.png" alt="Capture" width="394" height="345" class="aligncenter size-full wp-image-3601" /></a></div></div>

<p>Running the following query in any working database, we can correlate the TypeID values with the SQL Server type names:</p>

<pre lang="tsql">SELECT
	*
FROM
	sys.types
WHERE
	system_type_id IN (56, 104, 231, 167, 36, 61) AND
	system_type_id = user_type_id</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture8.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture8.png" alt="Capture" width="585" height="131" class="aligncenter size-full wp-image-3602" /></a></div></div>

<p>Using the output from syscolpars and the type names, we can now deduce the schema of the Customer table (note that the syscolpars lengths are physical, meaning a length of 16 for an nvarchar column means a logical length of 8):</p>

<pre lang="tsql">CREATE TABLE Customer (
	CustomerID int,
	NameStyle bit,
	Title nvarchar(8),
	FirstName nvarchar(50),
	MiddleName nvarchar(50),
	LastName nvarchar(50),
	Suffix nvarchar(10),
	CompanyName nvarchar(128),
	SalesPerson nvarchar(256),
	EmailAddress nvarchar(50),
	Phone nvarchar(25),
	PasswordHash varchar(128),
	PasswordSalt varchar(10),
	rowguid uniqueidentifier,
	ModifiedDate datetime
)</pre>

<p>All we need now is to find the pages belonging to the Customer table. That's slightly easier said than done however. While each object has an object ID, as can be verified using sys.sysschobjs, that object ID is not what's stored in the page headers, except for system objects. Thus we can't just query for all pages whose Header.ObjectID == 117575457, as the value 117575457 won't be stored in the header.</p>

<h3>Recovering the Customer Allocation Unit</h3>

<p>To find the pages belonging to the Customer table, we'll first need to find the allocation unit to which it belongs. Unfortunately we already know that page 16 is corrupt - the first page of the <b>sys.sysallocunits</b> table, containing all of the metadata. However, we might just be lucky enough for that first page to contain the allocation units for all of the internal tables, which we do not care about. Let's see if there are any other pages belonging to sys.sysallocunits:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
db.Pages
  .Where(x => x.Header.ObjectID == 7)
  .Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture9.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture9.png" alt="Capture" width="431" height="128" class="aligncenter size-full wp-image-3606" /></a></div></div>

<p>There are 5 other pages available. Let's try and parse them out so we have as much of the allocation unit data available, as possible. Once again we'll get the schema from the working database, using sp_help, after which we can parse the remaining rows using RawDatabase. By looking up 'sysallocunits' in sysschobjs, we know it has an object ID of 7:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
var pages = db.Pages.Where(x => x.Header.ObjectID == 7 && x.Header.Type == PageType.Data);
var records = pages.SelectMany(x => x.Records).Select(x => (RawPrimaryRecord)x);
var rows = RawColumnParser.Parse(records, new IRawType[] {
	RawType.BigInt("auid"),
	RawType.TinyInt("type"),
	RawType.BigInt("ownerid"),
	RawType.Int("status"),
	RawType.SmallInt("fgid"),
	RawType.Binary("pgfirst", 6),
	RawType.Binary("pgroot", 6),
	RawType.Binary("pgfirstiam", 6),
	RawType.BigInt("pcused"),
	RawType.BigInt("pcdata"),
	RawType.BigInt("pcreserved"),
	RawType.Int("dbfragid")
});

rows.Select(x => new {
	AllocationUnitID = (long)x["auid"],
	Type = (byte)x["type"],
	ContainerID = (long)x["ownerid"]
}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture10.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture10.png" alt="Capture" width="282" height="293" class="aligncenter size-full wp-image-3607" /></a></div></div>

<p>By itself, we can't use this data, but we'll need it in just a moment. First we need to get a hold of the Customer table partitions as well. We do so by looking up the schema of <b>sys.sysrowsets</b> using sp_help, after which we can parse it. Looking up 'sysrowsets' in sysschobjs, we know that sys.sysrowsets has an object ID of 5:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
var pages = db.Pages.Where(x => x.Header.ObjectID == 5 && x.Header.Type == PageType.Data);
var records = pages.SelectMany(x => x.Records).Select(x => (RawPrimaryRecord)x);
var rows = RawColumnParser.Parse(records, new IRawType[] {
	RawType.BigInt("rowsetid"),
	RawType.TinyInt("ownertype"),
	RawType.Int("idmajor"),
	RawType.Int("idminor"),
	RawType.Int("numpart"),
	RawType.Int("status"),
	RawType.SmallInt("fgidfs"),
	RawType.BigInt("rcrows"),
	RawType.TinyInt("cmprlevel"),
	RawType.TinyInt("fillfact"),
	RawType.SmallInt("maxnullbit"),
	RawType.Int("maxleaf"),
	RawType.SmallInt("maxint"),
	RawType.SmallInt("minleaf"),
	RawType.SmallInt("minint"),
	RawType.VarBinary("rsguid"),
	RawType.VarBinary("lockres"),
	RawType.Int("dbfragid")
});

rows.Where(x => (int)x["idmajor"] == 117575457).Select(x => new {
	RowsetID = (long)x["rowsetid"],
	ObjectID = (int)x["idmajor"],
	IndexID = (int)x["idminor"]
}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture11.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture11.png" alt="Capture" width="272" height="81" class="aligncenter size-full wp-image-3608" /></a></div></div>

<p>By filtering down to just the Customer table's object ID, we've now got the three partitions that belongs to the table - one for each allocation unit type - ROW_OVERFLOW_DATA (3), LOB_DATA (2) and IN_ROW_DATA (1). We don't care about LOB and SLOB for now, all we need is the IN_ROW_DATA partition - giving us a RowsetID value of <b>72057594039697408</b>.</p>

<p>Now that we have the RowsetID, let's lookup the allocation unit using the data we got from sys.sysallocunits earlier on:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
var pages = db.Pages.Where(x => x.Header.ObjectID == 7 && x.Header.Type == PageType.Data);
var records = pages.SelectMany(x => x.Records).Select(x => (RawPrimaryRecord)x);
var rows = RawColumnParser.Parse(records, new IRawType[] {
	RawType.BigInt("auid"),
	RawType.TinyInt("type"),
	RawType.BigInt("ownerid"),
	RawType.Int("status"),
	RawType.SmallInt("fgid"),
	RawType.Binary("pgfirst", 6),
	RawType.Binary("pgroot", 6),
	RawType.Binary("pgfirstiam", 6),
	RawType.BigInt("pcused"),
	RawType.BigInt("pcdata"),
	RawType.BigInt("pcreserved"),
	RawType.Int("dbfragid")
});

rows.Where(x => (long)x["ownerid"] == 72057594039697408).Select(x => new {
	AllocationUnitID = (long)x["auid"],
	Type = (byte)x["type"],
	ContainerID = (long)x["ownerid"]
}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture12.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture12.png" alt="Capture" width="312" height="39" class="aligncenter size-full wp-image-3609" /></a></div></div>

<h3>Recovering the Customers</h3>

<p>Now that we have the allocation unit ID, we can convert that into the object ID value, as stored in the page headers (big thanks goes out to <a href="http://www.sqlskills.com/blogs/paul/">Paul Randal</a> who was kind enough to blog about the <a href="http://www.sqlskills.com/blogs/paul/inside-the-storage-engine-how-are-allocation-unit-ids-calculated/">relationship between the allocation unit ID and the page header m_objId and m_indexId fields</a>):</p>

<pre lang="csharp">var allocationUnitID = 72057594041270272;
var indexID = allocationUnitID >> 48;
var objectID = (allocationUnitID - (indexID << 48)) >> 16;

Console.WriteLine("IndexID: " + indexID);
Console.WriteLine("ObjectID: " + objectID);</pre>

<pre lang="text">IndexID: 256
ObjectID: 51</pre>

<p>Now that we have not only the object ID, but also the index ID, we can easily get a list of all the pages belonging to the Customer table:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
db.Pages
  .Where(x => x.Header.ObjectID == 51 && x.Header.IndexID == 256)
  .Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture13.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture13.png" alt="Capture" width="430" height="298" class="aligncenter size-full wp-image-3612" /></a></div></div>

<p>And since we already know the schema for the Customer table, it's a simple matter of making RawDatabase parse the actual rows:</p>

<pre lang="csharp">var db = new RawDatabase(@"D:\MSSQL Databases\AdventureWorksLT2008R2.mdf");
var pages = db.Pages.Where(x => x.Header.ObjectID == 51 && x.Header.IndexID == 256 && x.Header.Type == PageType.Data);
var records = pages.SelectMany(x => x.Records).Select(x => (RawPrimaryRecord)x);
var rows = RawColumnParser.Parse(records, new IRawType[] {
	RawType.Int("CustomerID"),
	RawType.Bit("NameStyle"),
	RawType.NVarchar("Title"),
	RawType.NVarchar("FirstName"),
	RawType.NVarchar("MiddleName"),
	RawType.NVarchar("LastName"),
	RawType.NVarchar("Suffix"),
	RawType.NVarchar("CompanyName"),
	RawType.NVarchar("SalesPerson"),
	RawType.NVarchar("EmailAddress"),
	RawType.NVarchar("Phone"),
	RawType.Varchar("PasswordHash"),
	RawType.Varchar("PasswordSalt"),
	RawType.UniqueIdentifier("rowguid"),
	RawType.DateTime("ModifiedDate")
});

rows.Select(x => new {
	CustomerID = (int)x["CustomerID"],
	FirstName = (string)x["FirstName"],
	MiddleName = (string)x["MiddleName"],
	LastName = (string)x["LastName"],
	CompanyName = (string)x["CompanyName"],
	EmailAddress = (string)x["EmailAddress"]
}).Dump();</pre>

<div class='imgwrapper'><div><a href="http://improve.dk/wp-content/uploads/2013/11/Capture15.png"><img src="http://improve.dk/wp-content/uploads/2013/11/Capture15.png" alt="Capture" width="842" height="395" class="aligncenter size-full wp-image-3614" /></a></div></div>

<p>And there we have it. 795 customers were just recovered from an otherwise unrecoverable state. Now it's just a matter of repeating this process for the other tables as well.</p>

<h2>Summary</h2>

<p>As I've just shown, even though all hope seems lost, there are still options. If you know what you're doing, a tool like OrcaMDF, or another homebrewn solution, might come in as an invaluable out, during a disaster. This is not, and should never be, a replacement for a good recovery strategy. That being said, not a week goes by without someone posting on a forum somewhere about a corrupt database without any backups.</p>

<p>In this case we went from fatal corruption to recovering 795 customers from the Customer table. Looking at the database, before it was corrupted, there was originally 847 customers in the table. Thus 52 customers were lost due to the corruption. If the pages really are hit by corruption, nothing will get that data back, unless you have a backup. However, if you're unlucky and end up with metadata corruption, and/or a database that won't come online, this may be a viable solution.</p>

<p>Should you come across a situation where OrcaMDF might come in handy, I'd love to hear about it - nothing better to hear than success stories! If you don't feel like going through this process yourself, feel free to contact me; I may be able to help.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3552</wp:post_id>
		<wp:post_date>2013-11-06 15:34:23</wp:post_date>
		<wp:post_date_gmt>2013-11-06 14:34:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-server-corruption-recovery-when-all-else-fails</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="dotnet"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="net"><![CDATA[.NET]]></category>
		<category domain="post_tag" nicename="corruption"><![CDATA[Corruption]]></category>
		<category domain="post_tag" nicename="corruptor"><![CDATA[Corruptor]]></category>
		<category domain="category" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="post_tag" nicename="internals"><![CDATA[Internals]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="rawdatabase"><![CDATA[RawDatabase]]></category>
		<category domain="category" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<category domain="post_tag" nicename="sql-server"><![CDATA[SQL Server]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SQL Server Corruption Recovery]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[In this post I want to walk through a number of SQL Server corruption recovery techniques for when you have no backups, and the usual methods don't work.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-html-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>165025</wp:comment_id>
			<wp:comment_author><![CDATA[Presenting at SQL Saturday #275]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://improve.dk/presenting-sql-saturday-275/</wp:comment_author_url>
			<wp:comment_author_IP>217.116.232.208</wp:comment_author_IP>
			<wp:comment_date>2014-02-04 17:51:46</wp:comment_date>
			<wp:comment_date_gmt>2014-02-04 16:51:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] you want to be able to save the day when all other options are exhausted, you shouldn&#8217;t miss this [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1391532706.1634390354156494140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>142639</wp:comment_id>
			<wp:comment_author><![CDATA[wayne]]></wp:comment_author>
			<wp:comment_author_email>evans.wayne+improve_dk@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.13.43.229</wp:comment_author_IP>
			<wp:comment_date>2013-11-09 12:27:26</wp:comment_date>
			<wp:comment_date_gmt>2013-11-09 11:27:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent insite into how the structure works.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1383996446.3629949092864990234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143032</wp:comment_id>
			<wp:comment_author><![CDATA[My links of the week &#8211; November 10, 2013 | R4]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ruirib.net/blog/index.php/2013/11/my-links-of-the-week-november-10-2013/</wp:comment_author_url>
			<wp:comment_author_IP>67.18.207.212</wp:comment_author_IP>
			<wp:comment_date>2013-11-10 14:49:00</wp:comment_date>
			<wp:comment_date_gmt>2013-11-10 13:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] S. Rasmussen&#8217;s SQL Server Corruption Recovery – When All Else Fails presents some corruption recovery techniques, based on his own OrcaMDF, a C# MDF parser, [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Presenting at SQL Saturday #275</title>
		<link>http://improve.dk/presenting-sql-saturday-275/</link>
		<pubDate>Tue, 04 Feb 2014 16:51:39 +0000</pubDate>
		<dc:creator>orca</dc:creator>
		<guid isPermaLink="false">http://improve.dk/?p=3642</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm happy to announce that I'll be presenting at <a href="http://sqlsaturday.com/275/">SQLSaturday #275</a> in Copenhagen on March 29th!</p>

<p>I'll be presenting my <b>Recovering Data from Fatally Corrupt Databases</b> session:</p>

<blockquote>Imagine the worst case scenario: Your database won't come online. Lots of checksum errors logged. DBCC CheckDB won't even run on the database. And worst of all - you have no backups! Now what do you do with this 20GB binary blob of an MDF file? In this demo-rich session I will briefly introduce the internals of MDF files while primarly concentrating on how to manually extract data from corrupt databases. I will be using the OrcaMDF RawDatabase framework to do most of the parsing, which will also be explained during the session.</blockquote>

<p>If you want to be able to <a href="http://improve.dk/sql-server-corruption-recovery-when-all-else-fails/">save the day</a> when all other options are exhausted, you shouldn't miss this session.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3642</wp:post_id>
		<wp:post_date>2014-02-04 17:51:39</wp:post_date>
		<wp:post_date_gmt>2014-02-04 16:51:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>presenting-sql-saturday-275</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="community"><![CDATA[Community]]></category>
		<category domain="category" nicename="conferences"><![CDATA[Conferences &amp; Presenting]]></category>
		<category domain="post_tag" nicename="corruption"><![CDATA[Corruption]]></category>
		<category domain="category" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="orcamdf"><![CDATA[OrcaMDF]]></category>
		<category domain="post_tag" nicename="presenting"><![CDATA[Presenting]]></category>
		<category domain="post_tag" nicename="sqlsaturday"><![CDATA[SQLSaturday]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
